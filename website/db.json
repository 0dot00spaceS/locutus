{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/blank.gif","path":"vendor/fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_loading.gif","path":"vendor/fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_loading@2x.gif","path":"vendor/fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_overlay.png","path":"vendor/fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_sprite.png","path":"vendor/fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_sprite@2x.png","path":"vendor/fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.css","path":"vendor/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.js","path":"vendor/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.pack.js","path":"vendor/fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/styles.css","path":"vendor/open-sans/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/source-code-pro/styles.css","path":"vendor/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/fancybox_buttons.png","path":"vendor/fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","path":"vendor/fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-media.js","path":"vendor/fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","path":"vendor/fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/css/font-awesome.min.css","path":"vendor/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","path":"vendor/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/FontAwesome.otf","path":"vendor/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendor/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/jquery/2.1.3/jquery.min.js","path":"vendor/jquery/2.1.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","path":"vendor/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","path":"vendor/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/locutus-alpha.png","path":"css/images/locutus-alpha.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/favicon.png","path":"css/images/favicon.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/locutus.jpg","path":"css/images/locutus.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1462090269000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1462090269000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1462090269000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1462090269000},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1462090269000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1462090269000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1462090269000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1462090269000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1462090269000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1462090269000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1462090269000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1462090269000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1462090269000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1462090269000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1462090269000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1462090269000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1462090269000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1462090269000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462090269000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1462090269000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462090269000},{"_id":"source/_posts/_posts/2012-09-26-new-site.md","hash":"be73b63baf3e79925d8450c7e333e986c249820a","modified":1462089981000},{"_id":"source/_posts/_posts/2013-05-03-a-word-on-the-focus-of-php-dot-js.md","hash":"12d01929080b4e6999e99d0f6a2ae136665d0471","modified":1462089981000},{"_id":"source/_posts/_posts/2016-04-01-standard-coding-style.md","hash":"6b8f89bb3af1add78b575b1337443317f7e67f2b","modified":1462089981000},{"_id":"source/_posts/_posts/2013-05-04-coding-style.md","hash":"189ae21455bc2b1e29f243a13be9fd8035890d2c","modified":1462089981000},{"_id":"source/_posts/_posts/2016-04-02-jekyll.md","hash":"4f8ac5fca52be5451b5a8113aa01e3db50fe88aa","modified":1462089981000},{"_id":"source/_posts/_posts/2016-04-20-breaking-bc.md","hash":"0e128354bb484469cec540354b44b4f02c5eb0c8","modified":1462089981000},{"_id":"source/_posts/_posts/2016-04-21-announcing-locutus.md","hash":"d8ab4074b11aec3b645dbeb4996eb6254fea7834","modified":1462089981000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1462090269000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1462090269000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1462090269000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1462090269000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1462090269000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1462090269000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1462090269000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1462090269000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1462090269000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1462090269000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1462090269000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1462090269000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1462090269000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1462090269000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1462090269000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1462090269000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1462090269000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462090269000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1462090269000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1462090269000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1462090269000},{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1461361938000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1461361938000},{"_id":"themes/icarus/README.md","hash":"15684025b04e653ebbe049333301b9ef42172b0a","modified":1461361938000},{"_id":"themes/icarus/_config.yml","hash":"bae60a35256ce47d5bcf46c4f02d90c87db610fa","modified":1462095806000},{"_id":"themes/icarus/package.json","hash":"86b1c2fd3b168988ca0abe0768ce92eb81ed3fa2","modified":1461361938000},{"_id":"source/_posts/2012-09-26-new-site.md","hash":"c072377ed840e8e7a3049902bfe04b8a73af1365","modified":1462094922000},{"_id":"source/_posts/2013-05-04-coding-style.md","hash":"fd1b17de6979c4907f01e57fddd535daa38e9403","modified":1462094922000},{"_id":"source/_posts/2013-05-03-a-word-on-the-focus-of-php-dot-js.md","hash":"e7504c5b1d7d4102efb58671b4a3aabde4d61da7","modified":1462094922000},{"_id":"source/_posts/2016-04-01-standard-coding-style.md","hash":"de31c89552a3da7be435d507771f7b1648639199","modified":1462094922000},{"_id":"source/_posts/2016-04-02-jekyll.md","hash":"472aeacb72e24812a8768bd83fc3b9ef86b0715f","modified":1462094922000},{"_id":"source/_posts/2016-04-20-breaking-bc.md","hash":"b84d9d571b7e66b3ee3a652654732196bcaab2fb","modified":1462094922000},{"_id":"source/_posts/2016-04-21-announcing-locutus.md","hash":"c668ed53633e02f0e5da39d2cea6fad482cccfad","modified":1462093702000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"39e16ec438baa89a68ef5302dcbf535279c3d6d3","modified":1461361938000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1462090661000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1461361938000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1461361938000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1461361938000},{"_id":"themes/icarus/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1461361938000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1461361938000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1461361938000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1461361938000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1461361938000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1461361938000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"25a83ec0c8a2957dc7cad9c23f13eb82f2ddf595","modified":1461361938000},{"_id":"themes/icarus/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1461361938000},{"_id":"themes/icarus/layout/categories.ejs","hash":"23e4864cc2a8b149d8adc68e1175a7118e86745f","modified":1462095212000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1461361938000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1461361938000},{"_id":"themes/icarus/layout/layout.ejs","hash":"6f01b3d46d184a820297f9542497808b152bb09e","modified":1461361938000},{"_id":"themes/icarus/layout/page.ejs","hash":"2faced194438dbd8f9445fcc135df395e6697dab","modified":1462094667000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1461361938000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1461361938000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1461361938000},{"_id":"themes/icarus/scripts/fancybox.js","hash":"c1b01a9c2d96474cdd7e09657e522e4a03579413","modified":1461361938000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1461361938000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"1719b37aede4753bf41d51f26bfb4a82c9917347","modified":1461361938000},{"_id":"source/_posts/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1462090499000},{"_id":"themes/icarus/_source/about/index.md","hash":"309f1a70283035782c5338ec55ce2c5fe1b74e42","modified":1461361938000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1461361938000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1461361938000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"e109d3256b004b027d029bd5bd67feeb72dc5388","modified":1461361938000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"83158f5b00f95acf847524fd7ffeb5aab25add78","modified":1461361938000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1461361938000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"d45635e78a3fc40e424a401e983f2c8eef6ebcfd","modified":1461361938000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"8a9a20f72ba0923afa776396fb67d8c5d446a666","modified":1461361938000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1461361938000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"c9d031776426a33e0b355e37f66c64d29fc05355","modified":1461361938000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"cbfe560fcab445d42ceeb5d1beba5957d5be5eaa","modified":1461361938000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"015a88aafe690105f19c79678a499b734f40f549","modified":1461361938000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1461361938000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"f872f209e02a8be4b02c52684f0bd74a26895ec9","modified":1462095771000},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1461361938000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"6e80fa52d23c9c39bfa357a1e00c26fc8b851b82","modified":1461361938000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1461361938000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"6420e34e0332c9b6670011519f341340db989343","modified":1461361938000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1461361938000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1461361938000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"b2fbe815e7eb7513fd3f96eec573f151e3dd09e1","modified":1461361938000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1461361938000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1461361938000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1461361938000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1461361938000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1461361938000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1461361938000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1461361938000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1461361938000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1461361938000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1461361938000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1461361938000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1461361938000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1461361938000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"2ca923465275fb38a7ac7d67211d6e94a977e957","modified":1461361938000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1461361938000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1461361938000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"9a5c72663c0da1b32ecb6a75773a5ccfb8c467ca","modified":1461361938000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"e5dc1518b09e2378f10b6ddc07918c55b4dc3ef8","modified":1461361938000},{"_id":"themes/icarus/source/css/style.styl","hash":"865de42ad496af928252d5bcfa0e0bbb534b0df5","modified":1461361938000},{"_id":"themes/icarus/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1461361938000},{"_id":"themes/icarus/source/js/main.js","hash":"78310af1f302bfa1b1d704537ef40d868ead2dcf","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"c563098229ca4f6c522e77e6e38f5381c21f0af8","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1461361938000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"dd8329d75a8312785611b5ec422bd49afc628c1c","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"09c734ce100b4755c6deb4dcaf1e22fd794b04b8","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"1e351f741144135871a3373fe7e969dc961b65e7","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"0c95de07a73e1e7fd35800e409fcafb8641cca3a","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1461361938000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"a7c35f55255d2455eb7274dbc7ad9dd263899297","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1461361938000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1461361938000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1461361938000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1461361938000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1461361938000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1461361938000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.css","hash":"9673e160d32c4811bb7e930ba1e20c36b2997fe1","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1461361938000},{"_id":"themes/icarus/source/vendor/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1461361938000},{"_id":"themes/icarus/source/vendor/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/css/font-awesome.min.css","hash":"8c15c6bd82c71e9ef1bb11cf24e502fe07518ac5","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.eot","hash":"3e63fc9b3de4580f1f3bec0631436f755b80f167","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.woff2","hash":"1075231650f579955905bb2f6527148a8e2b4b16","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1461361938000},{"_id":"themes/icarus/source/vendor/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1461361938000},{"_id":"themes/icarus/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1461361938000},{"_id":"themes/icarus/source/vendor/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/FontAwesome.otf","hash":"cde9eb92c8a3ba23d648f76ea3931511f30813f4","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.ttf","hash":"9088143b19979779b2116cef38b661f72d982e19","modified":1461361938000},{"_id":"themes/icarus/source/vendor/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.woff","hash":"56ce13e71c2150d81bc972940584915181bd6081","modified":1461361938000},{"_id":"themes/icarus/source/vendor/font-awesome/fonts/fontawesome-webfont.svg","hash":"26bb1c5ef100a1cd71923f1d5dc29fc797ef4639","modified":1461361938000},{"_id":"themes/icarus/source/css/images/favicon.ico","hash":"f6cf73bb451ece5f5ca4acb3ea6b67c3609a8772","modified":1462091810000},{"_id":"themes/icarus/source/css/images/locutus.jpg","hash":"d0b6079e6a6140a24afe1ca8e8f6c2f966dd0388","modified":1462091810000},{"_id":"themes/icarus/source/css/images/locutus-alpha.png","hash":"b21a0104d1ea968ddbc470912b885159ec36aad4","modified":1462091810000},{"_id":"themes/icarus/source/css/images/favicon.png","hash":"35d426a558cd28f8583059d8e5cbd11466f1d741","modified":1462091810000},{"_id":"source/c/index.md","hash":"4fe46698ecb5ef89ef6e27e6497784688531d415","modified":1462093655000},{"_id":"source/layout/language.ejs","hash":"a4282a4df69af47832daa66dcc1952230936b3a4","modified":1462093501000},{"_id":"source/layout/page.ejs","hash":"e328a1a951b4dde4c313b7f48ab232855d973a06","modified":1462093610000},{"_id":"source/about.md","hash":"f3d24f701fc7ea873eb6ef5a1250a14ec422fa50","modified":1462095674000},{"_id":"source/c/index.html","hash":"f1984d5d4f438ef8f3788e7c62efae43b1641204","modified":1462096537000},{"_id":"source/c/math/abs.html","hash":"cddba6c154c5f7a59d97fa32acaccc6b36bf639b","modified":1462096537000},{"_id":"source/c/math/index.html","hash":"2f8ad8c5592f3405f755abbe92e336c8e9c22fde","modified":1462096537000},{"_id":"source/golang/index.html","hash":"6b7032b734ad1ab121f4116a26d87bf12ea0a551","modified":1462096537000},{"_id":"source/php/index.html","hash":"6419bc1892b3b304316f1c57443035e618f019a1","modified":1462096537000},{"_id":"source/python/index.html","hash":"f074e05408e8250889c06a5b474d7cabec1de20e","modified":1462096537000},{"_id":"source/ruby/index.html","hash":"10fef5e40d8c3c52ff48c563fa24fab8e0063fda","modified":1462096537000},{"_id":"source/golang/strings/Contains.html","hash":"a79ac761664745116113a47770a131f8c49b84cd","modified":1462096537000},{"_id":"source/golang/strings/Count.html","hash":"993f53dd48d9ea249b74c111e877c9b36ca0db92","modified":1462096537000},{"_id":"source/golang/strings/Index.html","hash":"f902cdc52593e5ea40cb126453358273d97b8dc6","modified":1462096537000},{"_id":"source/golang/strings/LastIndex.html","hash":"88fadb4037b7857adce796740a3b71644cd2c748","modified":1462096537000},{"_id":"source/php/_locutus_shared/index.html","hash":"ae3d630dd38e1e63d2300a52037060a754f65a84","modified":1462096537000},{"_id":"source/php/_locutus_shared/_locutus_shared_bc.html","hash":"a63d86509b5c516d72170bb4b8c7867096717807","modified":1462096537000},{"_id":"source/php/bc/bcadd.html","hash":"22b59182d5e641bb7c244080c5e74009dad06057","modified":1462096537000},{"_id":"source/php/bc/bccomp.html","hash":"c635f7e044aabc0baed254e5175da1ad9d0160b3","modified":1462096537000},{"_id":"source/php/bc/bcdiv.html","hash":"f80674d0680ec04e80bacc3357cf9135baabdd6b","modified":1462096537000},{"_id":"source/php/bc/bcmul.html","hash":"c120794be2ea8f76811513feb619efecc603dbfa","modified":1462096537000},{"_id":"source/php/bc/bcround.html","hash":"f00e39538f3be8e8cdf1cb794f6e7a89c21e771a","modified":1462096537000},{"_id":"source/php/bc/bcscale.html","hash":"5f8ed3b2a475ca242b570be16840f522b2c33157","modified":1462096537000},{"_id":"source/php/bc/bcsub.html","hash":"f4412c64097fb2f1160070edd1b32914751662bd","modified":1462096537000},{"_id":"source/php/bc/index.html","hash":"b70514960a64bc521ea2969e116255511fa76ee2","modified":1462096537000},{"_id":"source/php/array/array_change_key_case.html","hash":"d95bfdfc82d0d38e41f8f661401f49aa32ab216d","modified":1462096537000},{"_id":"source/php/array/array_chunk.html","hash":"b367713c9a88c79e7720098b9453c4d9e8e9d617","modified":1462096537000},{"_id":"source/php/array/array_combine.html","hash":"8a7ae460f4d11d19d3c183be5ba93bb1d8b6780f","modified":1462096537000},{"_id":"source/php/array/array_count_values.html","hash":"88d11cd1f2a089a80bd02cfafa1bc39c04933a77","modified":1462096537000},{"_id":"source/php/array/array_diff.html","hash":"832a1a14443c0fe5b0d010fe8308554b33529ea5","modified":1462096537000},{"_id":"source/php/array/array_diff_assoc.html","hash":"f0ca1fe68119f1de80292c292bb1505818524e0d","modified":1462096537000},{"_id":"source/php/array/array_diff_key.html","hash":"0a2e43a1f8a2f9e030ddb51a7e77a19860e96d19","modified":1462096537000},{"_id":"source/php/array/array_diff_uassoc.html","hash":"fe04063a629c20105977d791d209d9a8131d066f","modified":1462096537000},{"_id":"source/php/array/array_diff_ukey.html","hash":"1cf59aa918c47c53be31efa0bd6c178bfd62b7f4","modified":1462096537000},{"_id":"source/php/array/array_fill.html","hash":"0bb8e0b4cc6df57e45a6fd0e9ff4ae3558d94f9a","modified":1462096537000},{"_id":"source/php/array/array_fill_keys.html","hash":"3f0b3eee7478ddf8be6a800974f958b06f56c2ed","modified":1462096537000},{"_id":"source/php/array/array_filter.html","hash":"5ff466a457ccd5169a0697b25f06f097e3d52cdf","modified":1462096537000},{"_id":"source/php/array/array_flip.html","hash":"38f0da4422803e99be82df4ab4a067fe02cd14e4","modified":1462096537000},{"_id":"source/php/array/array_intersect.html","hash":"f96bbb9ca31bcf611035266662022e2d1a04a597","modified":1462096537000},{"_id":"source/php/array/array_intersect_assoc.html","hash":"7fe7e65093e9b0b9fa19271d1298dff0cffa4b5e","modified":1462096537000},{"_id":"source/php/array/array_intersect_key.html","hash":"5bd4310139859813924d148b35fdca7baf9f04aa","modified":1462096537000},{"_id":"source/php/array/array_intersect_uassoc.html","hash":"39e44b47bc91e52b0b2a4ae48375c57df55a1420","modified":1462096537000},{"_id":"source/php/array/array_intersect_ukey.html","hash":"7a2bf3b5177a95f933ac65765bed92665a00a52d","modified":1462096537000},{"_id":"source/php/array/array_key_exists.html","hash":"f1faa9244f0ef587cc58de75b7a89dcabc2acc8d","modified":1462096537000},{"_id":"source/php/array/array_keys.html","hash":"a4dceaa702be604b6766c298561790e7a80906fb","modified":1462096537000},{"_id":"source/php/array/array_map.html","hash":"1198047b2cbc4c051c21acbacd8fd3e34f1b5747","modified":1462096537000},{"_id":"source/php/array/array_merge.html","hash":"cb34d27fbb7f68a31a6dfd70bc8cc83b6e0bfb7a","modified":1462096537000},{"_id":"source/php/array/array_merge_recursive.html","hash":"16b5fb296c31c3be334e32b83009c67651c4aabf","modified":1462096537000},{"_id":"source/php/array/array_multisort.html","hash":"460bd26f0a1201c8959cad16d48dc1ced758d3ad","modified":1462096537000},{"_id":"source/php/array/array_pad.html","hash":"9f8a5e465cd3ea9a2defc5a9e169cae089ec3d82","modified":1462096537000},{"_id":"source/php/array/array_pop.html","hash":"5a112b0a28127d20f3b53a034d489760adfb147a","modified":1462096537000},{"_id":"source/php/array/array_product.html","hash":"2fe869729c3fc4893c5cea0fc45de16ed1057561","modified":1462096537000},{"_id":"source/php/array/array_push.html","hash":"52acf0dcd7e3bbe90b4642ebf845ea2858927fbd","modified":1462096537000},{"_id":"source/php/array/array_rand.html","hash":"61c9d3f42e9090c3c59fc033e0a0d01676d488d2","modified":1462096537000},{"_id":"source/php/array/array_reduce.html","hash":"eb5bf5e0c63afcd53c36998d2616a29723a2c488","modified":1462096537000},{"_id":"source/php/array/array_replace_recursive.html","hash":"42df76c9c1e175d0696050daed7b32aeb018d7b2","modified":1462096537000},{"_id":"source/php/array/array_replace.html","hash":"c6e7ffdd62c233709d27f8d6a0f450a840f797ed","modified":1462096537000},{"_id":"source/php/array/array_reverse.html","hash":"0e404f77c8128e4e7edc3229b88172e0aa283c1a","modified":1462096537000},{"_id":"source/php/array/array_search.html","hash":"4749a8dc0c4966b422dcad70dd4fbdc8b38a9061","modified":1462096537000},{"_id":"source/php/array/array_shift.html","hash":"5a8bf2d7c534c6cb2b2c4d1da399f0933cce74da","modified":1462096537000},{"_id":"source/php/array/array_splice.html","hash":"84d64ad4345ec586bfee86b8ff94949102b40f0e","modified":1462096537000},{"_id":"source/php/array/array_slice.html","hash":"afb3f752eaa580da78927f9ca8d37146cf522109","modified":1462096537000},{"_id":"source/php/array/array_sum.html","hash":"e54e731c3e7e30f9e0b55a8af840894095d3c882","modified":1462096537000},{"_id":"source/php/array/array_udiff.html","hash":"3083aeb7fbe743a0826fd304eac880e71243bd61","modified":1462096537000},{"_id":"source/php/array/array_udiff_assoc.html","hash":"7e390046ce20ad556f48383d7072c416843c21a4","modified":1462096537000},{"_id":"source/php/array/array_udiff_uassoc.html","hash":"56ecaae03b47a04d647d82653d4bc9c2f9930506","modified":1462096537000},{"_id":"source/php/array/array_uintersect.html","hash":"ad9ede80812b3db82e6ed806d3e67b811a80f214","modified":1462096537000},{"_id":"source/php/array/array_unique.html","hash":"5fea8425560abe6324b623c12fe297878c5e468e","modified":1462096537000},{"_id":"source/php/array/array_uintersect_uassoc.html","hash":"d7b22200535a5959431a05f56049a5e2b2f830d1","modified":1462096537000},{"_id":"source/php/array/array_unshift.html","hash":"48a22dfca76e954d1ea1bb304820614716a5bd9b","modified":1462096537000},{"_id":"source/php/array/array_values.html","hash":"9cd2a5f990a73f014406b381f3ada44916c8b4f0","modified":1462096537000},{"_id":"source/php/array/array_walk.html","hash":"02beec9ea7bb0091215e0dcc4e176d9b6d2521ea","modified":1462096537000},{"_id":"source/php/array/arsort.html","hash":"62e1a1e1a17fb459733d3472e9db50901f65f1bc","modified":1462096537000},{"_id":"source/php/array/asort.html","hash":"0f07c84b6a9b85c5e1714ee3b8f2f64f3e3b1788","modified":1462096537000},{"_id":"source/php/array/count.html","hash":"4467171bfb2401375b931bd632df39adda2765d5","modified":1462096537000},{"_id":"source/php/array/current.html","hash":"9289172731decbd36cf326ae25c09a97f5e9e3d8","modified":1462096537000},{"_id":"source/php/array/each.html","hash":"279a1982ae2ee374da221f69be7679218497b547","modified":1462096537000},{"_id":"source/php/array/end.html","hash":"af4c79079d5b08f34e69ce11e6c3e2b170db8dfe","modified":1462096537000},{"_id":"source/php/array/index.html","hash":"01a064b1bcc049cbac394d024d0b11fb524cccaa","modified":1462096537000},{"_id":"source/php/array/in_array.html","hash":"4ede9bc46d9dc94e36383225864ee8bcedd7545f","modified":1462096537000},{"_id":"source/php/array/key.html","hash":"dff931a82ddfe86e8b8bb9f6c5e1f970b2443edb","modified":1462096537000},{"_id":"source/php/array/krsort.html","hash":"673352b12ec506d7ee7b0e23419f7eefc290ca64","modified":1462096537000},{"_id":"source/php/array/ksort.html","hash":"267fb33613588dd20c9fd2ebbb4c0a6ef588f0de","modified":1462096537000},{"_id":"source/php/array/natcasesort.html","hash":"9e6f836927c4513226f29511ca0d3a03c6d141b3","modified":1462096537000},{"_id":"source/php/array/natsort.html","hash":"716ff1f811417d99103119220aa49470541cb033","modified":1462096537000},{"_id":"source/php/array/next.html","hash":"fbac48d6a7a491b7aedede33ba97724c50ad9f29","modified":1462096537000},{"_id":"source/php/array/pos.html","hash":"63eba44a04de1d6410f811a6751eeef292bfb757","modified":1462096537000},{"_id":"source/php/array/prev.html","hash":"e920608aa20de71d2e73537cd127b5d7051ad1ba","modified":1462096537000},{"_id":"source/php/array/range.html","hash":"db50af611c8b1674f5711cea95bc112b51af9542","modified":1462096537000},{"_id":"source/php/array/reset.html","hash":"b13cd81ff603ac558c930a738dad8e1525c1cd9b","modified":1462096537000},{"_id":"source/php/array/rsort.html","hash":"ddb9e6eb8077211605d256daeaf3e18c3cbac993","modified":1462096537000},{"_id":"source/php/array/shuffle.html","hash":"a819ec9eb75a2d668316bca97e32bb41c5e165ac","modified":1462096537000},{"_id":"source/php/array/sizeof.html","hash":"4f3d6933cde8833de0a25d5245d6a328d32337ff","modified":1462096537000},{"_id":"source/php/array/sort.html","hash":"b82302030748ede887ca6e379d6484cd1067e8b8","modified":1462096537000},{"_id":"source/php/array/uasort.html","hash":"e9b0341a9b5669f29429e2839c250b12f70c9bd8","modified":1462096537000},{"_id":"source/php/array/uksort.html","hash":"70c61091cbe4e37bbc81e696e14cbd90d5fe06bb","modified":1462096537000},{"_id":"source/php/array/usort.html","hash":"8505be77268d26369648b143b22cfebd72ab24f0","modified":1462096537000},{"_id":"source/php/ctype/ctype_alnum.html","hash":"bc454553c3c4a1bbc9682b2bec9de61b13c0f405","modified":1462096537000},{"_id":"source/php/ctype/ctype_alpha.html","hash":"861e6caf4c38bcf1f64101269bbbe65e03045e22","modified":1462096537000},{"_id":"source/php/ctype/ctype_cntrl.html","hash":"a6b5da52f9d097e9f0495493efd24d81b993268c","modified":1462096537000},{"_id":"source/php/ctype/ctype_digit.html","hash":"8091e5bb6e0b1f2a192a6a38c59f2f550b25c647","modified":1462096537000},{"_id":"source/php/ctype/ctype_graph.html","hash":"e76df569ff2d065262784f57c5b402a817767efa","modified":1462096537000},{"_id":"source/php/ctype/ctype_lower.html","hash":"b9154ed39e6d1c9bd639704dc167d25e1649d52f","modified":1462096537000},{"_id":"source/php/ctype/ctype_print.html","hash":"3d08040e789f50198d8669d23aaabb967fcf0df2","modified":1462096537000},{"_id":"source/php/ctype/ctype_punct.html","hash":"97da15f7a184ca9dc111d07175ec2463e524cedd","modified":1462096537000},{"_id":"source/php/ctype/ctype_space.html","hash":"421dfd270b37c631e7e2e232fa899410c9d520ff","modified":1462096537000},{"_id":"source/php/ctype/index.html","hash":"4fbd06eb01ce52421497e4a8d50bcfe46493edd6","modified":1462096537000},{"_id":"source/php/datetime/checkdate.html","hash":"b30832f5db267f3dc0e232302e40d684379dfdfb","modified":1462096537000},{"_id":"source/php/ctype/ctype_xdigit.html","hash":"59058021043a530752ddda2811a4efcc9cdb54f3","modified":1462096537000},{"_id":"source/php/ctype/ctype_upper.html","hash":"59220d4f881f79058a4ed4b908ae7ec583db982b","modified":1462096537000},{"_id":"source/php/datetime/date.html","hash":"7d4f3761ed8c0e7bec972f6ddb1a0159c75d3a80","modified":1462096537000},{"_id":"source/php/datetime/date_parse.html","hash":"8acc98dc25e2e83089c022d6f6f8d1e9e7176942","modified":1462096537000},{"_id":"source/php/datetime/getdate.html","hash":"b4d7cbb62f6a9f975bf6a913e103b82ac46a7acd","modified":1462096537000},{"_id":"source/php/datetime/gettimeofday.html","hash":"6fc0b76dcb0a8193bd07e04f0f695278904f3cef","modified":1462096537000},{"_id":"source/php/datetime/gmdate.html","hash":"e6a0fd783cecc56f3e0021224de4ef8b9312603c","modified":1462096537000},{"_id":"source/php/datetime/gmmktime.html","hash":"b29e4391925ceb6841fcf3f9268c0b83bdb8a41c","modified":1462096537000},{"_id":"source/php/datetime/gmstrftime.html","hash":"a95974bd31a9d91ef170f1ecc360785740b541eb","modified":1462096537000},{"_id":"source/php/datetime/idate.html","hash":"933e542110b90cdc14986503a43049a9b4afadbe","modified":1462096537000},{"_id":"source/php/datetime/index.html","hash":"b186840f612deb09677be575aa86f00655423c3e","modified":1462096537000},{"_id":"source/php/datetime/microtime.html","hash":"6adab946157733ba526ca057f841435dc737d1e4","modified":1462096537000},{"_id":"source/php/datetime/mktime.html","hash":"5fddfc2a1ec241d033847e8eea2f6b8e679e415c","modified":1462096537000},{"_id":"source/php/datetime/strftime.html","hash":"faf22d6eaf110001a9e5feaaeb898d1f32951eb4","modified":1462096537000},{"_id":"source/php/datetime/strptime.html","hash":"a66a1a1350365d450fd04396a2313b02780dfd2f","modified":1462096537000},{"_id":"source/php/datetime/strtotime.html","hash":"f5e5cbd392f1b5019813af8a2b569b0a308d52d4","modified":1462096537000},{"_id":"source/php/datetime/time.html","hash":"a3cfe4baeea5d28356fad2cd0551dc66834d7acd","modified":1462096537000},{"_id":"source/php/exec/escapeshellarg.html","hash":"a803dfc265597b75adc363a7820c78d0a965ffb9","modified":1462096537000},{"_id":"source/php/exec/index.html","hash":"ab98f196b848229c8ce075c0cd2a0419deea6882","modified":1462096537000},{"_id":"source/php/filesystem/basename.html","hash":"81ab6225e79f2747bdfc59b4582bba82403eddda","modified":1462096537000},{"_id":"source/php/filesystem/dirname.html","hash":"1cb449f5ad4fc75eaabb479efc5174b2ec660ac1","modified":1462096537000},{"_id":"source/php/filesystem/file_get_contents.html","hash":"3f7f1947bbed034a0ed30342f3e68e64e83f3812","modified":1462096537000},{"_id":"source/php/filesystem/index.html","hash":"8dccbdccc3cbefeab2a21fff70a55d75bfe0a689","modified":1462096537000},{"_id":"source/php/filesystem/pathinfo.html","hash":"55e8a18bc72031d68e00479b9da8969e60ad434a","modified":1462096537000},{"_id":"source/php/filesystem/realpath.html","hash":"e9e618ab56f237b97db7951e788f2ea7b83a18d6","modified":1462096537000},{"_id":"source/php/funchand/call_user_func.html","hash":"f282dca010d851498aa4049c015f9cc33965fb6f","modified":1462096537000},{"_id":"source/php/funchand/call_user_func_array.html","hash":"b92ae141d3bba5a287906b8b202b8fc8b9624e92","modified":1462096537000},{"_id":"source/php/funchand/create_function.html","hash":"e9213823188e411be169689015cb52430807c7d7","modified":1462096537000},{"_id":"source/php/funchand/function_exists.html","hash":"14e51c88b18a15fb10516c1f6a430fd5114d60f1","modified":1462096537000},{"_id":"source/php/funchand/get_defined_functions.html","hash":"0da31b674e1759c755bf111928995b496899769c","modified":1462096537000},{"_id":"source/php/funchand/index.html","hash":"a36e95085af0283024130445709316f909b3d3b3","modified":1462096537000},{"_id":"source/php/i18n/i18n_loc_get_default.html","hash":"a8b2d663d3578a3c0d5d07598a1c9841e43b53eb","modified":1462096537000},{"_id":"source/php/i18n/i18n_loc_set_default.html","hash":"c46422cc07bb0f508f6d97ef1b215469288c9fbd","modified":1462096537000},{"_id":"source/php/i18n/index.html","hash":"b467140f3ba082d865ec57fe1d00127f0d41338d","modified":1462096537000},{"_id":"source/php/info/assert_options.html","hash":"0fc4b1e606a5559fec3c64f73849ad5a0ff3a119","modified":1462096537000},{"_id":"source/php/info/getenv.html","hash":"171666baad5c2c124724db61d5b950b7ebb2ae8f","modified":1462096537000},{"_id":"source/php/info/index.html","hash":"016d98994adbeb062dd225f9d85f1604bec972bd","modified":1462096537000},{"_id":"source/php/info/ini_get.html","hash":"7c01061ec12e3bef47d618364a18d1989333ba9f","modified":1462096537000},{"_id":"source/php/info/ini_set.html","hash":"486e72fa887a1c068c5595bfb93b0bb290a6d05b","modified":1462096537000},{"_id":"source/php/info/set_time_limit.html","hash":"e0e3ff44b788ff533687b8d97da91b253c7a9cae","modified":1462096537000},{"_id":"source/php/info/version_compare.html","hash":"ef6cce8a73160518efc1697ba5e481a998e71715","modified":1462096537000},{"_id":"source/php/json/index.html","hash":"63c86f87ae30f01cd79668f8963a99e33ec5455a","modified":1462096537000},{"_id":"source/php/json/json_decode.html","hash":"1f830d75b78580dae52aea61302a450db887a2e6","modified":1462096537000},{"_id":"source/php/json/json_encode.html","hash":"5f16c03650d2fe335b681a08fff288eb75a3b8c2","modified":1462096537000},{"_id":"source/php/json/json_last_error.html","hash":"ba0dbfc6b92a14fcee13b34144ad36dbd4c35959","modified":1462096537000},{"_id":"source/php/misc/index.html","hash":"3402adfedc77cdba61e5ebb46a6f4bcf9263429b","modified":1462096537000},{"_id":"source/php/misc/pack.html","hash":"71d47eb643a1e7b1ad5a73785d1de63e25e91c2d","modified":1462096537000},{"_id":"source/php/misc/uniqid.html","hash":"9e3f6e158d40ae097845eeb362f4cb129739977f","modified":1462096537000},{"_id":"source/php/math/abs.html","hash":"5d2d529ab570cf06bd26eafe14914383f60ebaa3","modified":1462096537000},{"_id":"source/php/math/acos.html","hash":"8da0cce93a4f30e991f62ef09c2a009c20cdf153","modified":1462096537000},{"_id":"source/php/math/acosh.html","hash":"53c77c310b44235dfdb378a71e5a845b736a383a","modified":1462096537000},{"_id":"source/php/math/asin.html","hash":"017ab1379ee95982dbc1b52bd5155be87b00b6ac","modified":1462096537000},{"_id":"source/php/math/asinh.html","hash":"bc79017a227f3365ddca4675f0b367cd06717503","modified":1462096537000},{"_id":"source/php/math/atan.html","hash":"883f8120a4e3d13af841a3c5b47b63b778e60302","modified":1462096537000},{"_id":"source/php/math/atan2.html","hash":"35784ba3d98144fbd99a4ac3dfa3fb58593e2904","modified":1462096537000},{"_id":"source/php/math/atanh.html","hash":"6e51cac6847332d0d45219613f8ce8d8eeccb7e1","modified":1462096537000},{"_id":"source/php/math/base_convert.html","hash":"54ef1b65f1ff73b2a843dcbab31f4eed4e1d0b0e","modified":1462096537000},{"_id":"source/php/math/bindec.html","hash":"65bea3125d722ef2048b61c5ee5c3ba51d25abf3","modified":1462096537000},{"_id":"source/php/math/ceil.html","hash":"5f0d1b2286e410fa7124c973e1f70a11d9c23117","modified":1462096537000},{"_id":"source/php/math/cos.html","hash":"041d1b5136049c68f76215d4d1357bf29d5ca136","modified":1462096537000},{"_id":"source/php/math/cosh.html","hash":"c40495acea496ccc5c9e073194ceb3667280b81e","modified":1462096537000},{"_id":"source/php/math/decbin.html","hash":"00c50e199fb79d0303787b9fb9447b7bae22a077","modified":1462096537000},{"_id":"source/php/math/dechex.html","hash":"94a2df5cd33c072f35f85be4548241ee49c5adef","modified":1462096537000},{"_id":"source/php/math/decoct.html","hash":"91c4e0bb6526fbaa9d4d046751a49abd5d34c6b7","modified":1462096537000},{"_id":"source/php/math/deg2rad.html","hash":"375f3d819531147eb26bbee86df5d8c1750af7c4","modified":1462096537000},{"_id":"source/php/math/exp.html","hash":"87561f3c4bf58d265847160121a8d68f4f182ef6","modified":1462096537000},{"_id":"source/php/math/expm1.html","hash":"d8f16bf5ae77f1691f1e5ac73459928956c1f7de","modified":1462096537000},{"_id":"source/php/math/floor.html","hash":"5c30d06299e391e20403b10967ef58ab42328ab7","modified":1462096537000},{"_id":"source/php/math/fmod.html","hash":"9a05678cd7a83a9e69b7af5667bd0701174f21d8","modified":1462096537000},{"_id":"source/php/math/getrandmax.html","hash":"adfee6fb90761a9cc2a7511fa2de53a80bc81c59","modified":1462096537000},{"_id":"source/php/math/hexdec.html","hash":"bed237de8b64abe5b4345aa2c2d4edbbcf8dabc6","modified":1462096537000},{"_id":"source/php/math/hypot.html","hash":"aee22331fbc163ae5eb89ca2775a4505f65f5a7a","modified":1462096537000},{"_id":"source/php/math/index.html","hash":"ce9d5e3c77018defab1f61a082473df4c287e13d","modified":1462096537000},{"_id":"source/php/math/is_finite.html","hash":"1e53a6f3b230fcc648e97d453b4908631b9ce018","modified":1462096537000},{"_id":"source/php/math/is_infinite.html","hash":"109bc1d993c47a40b56223d454f5b17be7236cfb","modified":1462096537000},{"_id":"source/php/math/is_nan.html","hash":"074a5155ed0fdb3e211352bcdecc6b8b2a432492","modified":1462096537000},{"_id":"source/php/math/lcg_value.html","hash":"c2c29800cb80260c6072e1072aceb04151ada3bd","modified":1462096537000},{"_id":"source/php/math/log.html","hash":"835114b4ce9e4b15a9879ca009549bec10823550","modified":1462096537000},{"_id":"source/php/math/log10.html","hash":"568154d9ba37bc30e0b260e3851fbf40bfd3c3da","modified":1462096537000},{"_id":"source/php/math/log1p.html","hash":"57285b16a40a3eb52da952aa2b33d417f36ba362","modified":1462096537000},{"_id":"source/php/math/max.html","hash":"6e6ff5a0febee57ac8e4e0e77d6e5344f45ddbed","modified":1462096537000},{"_id":"source/php/math/min.html","hash":"f8487e190ac647294fd4023abeddb19f5285fe34","modified":1462096537000},{"_id":"source/php/math/mt_getrandmax.html","hash":"eec723446737326a9591c879602d2defb92158f9","modified":1462096537000},{"_id":"source/php/math/mt_rand.html","hash":"6dccfff2af393ce705132357ec3656eb104fa3e8","modified":1462096537000},{"_id":"source/php/math/octdec.html","hash":"644df5937ad1e46a04f5de3a29eb5ef05461341a","modified":1462096537000},{"_id":"source/php/math/pi.html","hash":"f888416b7d57a272b11174394ece63e7d08b7ec2","modified":1462096537000},{"_id":"source/php/math/pow.html","hash":"9e2bdf8362823c52700f093e83ea51e1d4a3a6c6","modified":1462096537000},{"_id":"source/php/math/rad2deg.html","hash":"78ba1b7568aff28adc7538bc26b59b23c4c20b65","modified":1462096537000},{"_id":"source/php/math/rand.html","hash":"6493c69a5167598fa0299130f35dfa3c189be538","modified":1462096537000},{"_id":"source/php/math/round.html","hash":"70535024830e18b3a245eb8106ddd48e234e8c88","modified":1462096537000},{"_id":"source/php/math/sin.html","hash":"bba4ceeec3e62923d947eabbef421de31db51521","modified":1462096537000},{"_id":"source/php/math/sinh.html","hash":"a7b48c7a6acafd6097ca5a3e6c07fd6d248b2e7e","modified":1462096537000},{"_id":"source/php/math/sqrt.html","hash":"a7737162db0ce240d0adbda7bb126a07182faa66","modified":1462096537000},{"_id":"source/php/math/tan.html","hash":"5f4c35a65d56caabd985f72b47984f8de44b8f28","modified":1462096537000},{"_id":"source/php/math/tanh.html","hash":"b5de58185bcf62cc7150bb9f56ceb0b9876a068c","modified":1462096537000},{"_id":"source/php/net-gopher/gopher_parsedir.html","hash":"11adf3a877fce844810b4ac0d108090a1408c81e","modified":1462096537000},{"_id":"source/php/net-gopher/index.html","hash":"600268740ffc9f4e7878073a4839eb02df65d9e2","modified":1462096537000},{"_id":"source/php/network/index.html","hash":"f365140ca7acf10a933b9fb324e2bd9a4da377e1","modified":1462096537000},{"_id":"source/php/network/inet_ntop.html","hash":"2cfe8c9a5263e69bb16ac61b9627374ddb4c5e5c","modified":1462096537000},{"_id":"source/php/network/inet_pton.html","hash":"fbb7f724d06593af320ab17898094d0e088caaa7","modified":1462096537000},{"_id":"source/php/network/ip2long.html","hash":"9f975f1cfed6d042e407208368c4078c578523bf","modified":1462096537000},{"_id":"source/php/network/long2ip.html","hash":"2f88a5f76b771f7bcbcb67c748cb65baea688bb9","modified":1462096537000},{"_id":"source/php/network/setcookie.html","hash":"07070d02e987c1e7b1f28ca67cfcf767d9a0f11e","modified":1462096537000},{"_id":"source/php/network/setrawcookie.html","hash":"f4e8a53f61aa5422e7741b2b3b693bd0dad30c28","modified":1462096537000},{"_id":"source/php/pcre/index.html","hash":"e274c75fbca21186d236775948f93fe1961412d4","modified":1462096537000},{"_id":"source/php/pcre/preg_quote.html","hash":"e50d3dea9ab49a247a4ef9258a595b22ee08049f","modified":1462096537000},{"_id":"source/php/pcre/sql_regcase.html","hash":"30386e6418abb0994fe5d3cd8caed4f207d6a7b3","modified":1462096537000},{"_id":"source/php/strings/addcslashes.html","hash":"7ee6bd35f0fd48d71a338423ca7b25c434356d47","modified":1462096537000},{"_id":"source/php/strings/addslashes.html","hash":"c02772eb132954ea8fe2289ceb0077289b6717bc","modified":1462096537000},{"_id":"source/php/strings/bin2hex.html","hash":"8ef29cf7f418192a9ad7b23b24142448ebda776e","modified":1462096537000},{"_id":"source/php/strings/chop.html","hash":"2dd91b7abb3afa90c31d32aa3aacb28722552f73","modified":1462096537000},{"_id":"source/php/strings/chr.html","hash":"dceb13572ebcc9338d9d4e35bcf3fe4807de2c98","modified":1462096537000},{"_id":"source/php/strings/chunk_split.html","hash":"2e3a673ebf14d289559ddde4d0cc3c4b52d971e9","modified":1462096537000},{"_id":"source/php/strings/convert_cyr_string.html","hash":"1e58668d1fd2655df4362a7c508d546a910ed07b","modified":1462096537000},{"_id":"source/php/strings/convert_uuencode.html","hash":"e6bb8db7ad09b1756e63ff9e941ed64384aa02ab","modified":1462096537000},{"_id":"source/php/strings/count_chars.html","hash":"77a73990216f94fbc72eeedfa86eee28aecc1b43","modified":1462096537000},{"_id":"source/php/strings/crc32.html","hash":"eac05b436fcb0bd997e1fa0234cc21c58053e882","modified":1462096537000},{"_id":"source/php/strings/echo.html","hash":"a862116e965caa30f21ba39714e0925496b5a746","modified":1462096537000},{"_id":"source/php/strings/explode.html","hash":"21a32516ed3bc67397a4e97f21bb956c6b6a429d","modified":1462096537000},{"_id":"source/php/strings/get_html_translation_table.html","hash":"b4f9a5b3623baaafb9f831e9e6271342d99e2235","modified":1462096537000},{"_id":"source/php/strings/hex2bin.html","hash":"99737c3c848b8ef8a88c707babc29ce4caca61af","modified":1462096537000},{"_id":"source/php/strings/html_entity_decode.html","hash":"d16a5ff6779263f24fe0b4cd043d190e87e83213","modified":1462096537000},{"_id":"source/php/strings/htmlentities.html","hash":"6a591e81c23713054458e5025966a7224ff88f6a","modified":1462096537000},{"_id":"source/php/strings/htmlspecialchars.html","hash":"036b004a07a1768bf766e10c8ca5c9fcffc22c27","modified":1462096537000},{"_id":"source/php/strings/htmlspecialchars_decode.html","hash":"faaa9caa907e2b10e416e5917dcab6c975aafea2","modified":1462096537000},{"_id":"source/php/strings/implode.html","hash":"92f4c6ac398f7d567c1a6c1d2b6501434b104026","modified":1462096537000},{"_id":"source/php/strings/index.html","hash":"b4f07971b00b397a9aefd42e08dbd8344ae97e7a","modified":1462096537000},{"_id":"source/php/strings/join.html","hash":"35a497d841f0d2d0a3c1be0c33f5d5254d1e7b82","modified":1462096537000},{"_id":"source/php/strings/lcfirst.html","hash":"c65aea7fc4f839a3a292ee63692caa3b7cd18d68","modified":1462096537000},{"_id":"source/php/strings/levenshtein.html","hash":"d1edd22d462df76380e7d932867eac616953a806","modified":1462096537000},{"_id":"source/php/strings/localeconv.html","hash":"43495ec16df130afd4ab81c843ca9ad8ccd4df5d","modified":1462096537000},{"_id":"source/php/strings/ltrim.html","hash":"350be9a7f9b12ef704a0d3b862eacc74433d02d8","modified":1462096537000},{"_id":"source/php/strings/md5.html","hash":"5468dd90b37737d2eb0e92925764f4830a6a2446","modified":1462096537000},{"_id":"source/php/strings/md5_file.html","hash":"d193fb53787e7e94add5eaf7f7d7666ed5cfc2eb","modified":1462096537000},{"_id":"source/php/strings/metaphone.html","hash":"d67c98372bbf888cf8efd4a84dda57c2d957227b","modified":1462096537000},{"_id":"source/php/strings/money_format.html","hash":"f2b826a88164bb8fc62370a05a61db950717575b","modified":1462096537000},{"_id":"source/php/strings/nl2br.html","hash":"e1323bfcaf2d135a9e12421e78d2622d57ec2430","modified":1462096537000},{"_id":"source/php/strings/nl_langinfo.html","hash":"6603c4cf6cb10de87bcf3d189f5fb0373bbfcf80","modified":1462096537000},{"_id":"source/php/strings/number_format.html","hash":"eb70ee1ef78983ec15e5cb6976a120579c2d0811","modified":1462096537000},{"_id":"source/php/strings/ord.html","hash":"e16551b652c7e6407b611461a6ca7567cb0622db","modified":1462096537000},{"_id":"source/php/strings/parse_str.html","hash":"0872673599c88cb7f5b3ad4b17cb4301043e4701","modified":1462096537000},{"_id":"source/php/strings/printf.html","hash":"d4c588d099119523c0bf69d8312a0f7daf6d2291","modified":1462096537000},{"_id":"source/php/strings/quoted_printable_decode.html","hash":"2f3ce4e4d7822f87a6daaf130f05c4ec61527b11","modified":1462096537000},{"_id":"source/php/strings/quotemeta.html","hash":"4b08e84d58fb3494c49c21a220a3b8f90846badc","modified":1462096537000},{"_id":"source/php/strings/quoted_printable_encode.html","hash":"50feac12c504564f2cef234226233935f4e3fbf9","modified":1462096537000},{"_id":"source/php/strings/rtrim.html","hash":"3e3c759a45f5372f52a9db300738d00ad72f1cd9","modified":1462096537000},{"_id":"source/php/strings/setlocale.html","hash":"6f3c0deb0465998c8bb3e60bf2b0fbf5688b5251","modified":1462096537000},{"_id":"source/php/strings/sha1.html","hash":"958bf9f35c65496ae417301cece67087e87c0a43","modified":1462096537000},{"_id":"source/php/strings/sha1_file.html","hash":"7c376b8c8921f5d6536f4ecb45e0f21602650a10","modified":1462096537000},{"_id":"source/php/strings/similar_text.html","hash":"edd6916bb266ae964385b53b8e66cc7c2aeee88b","modified":1462096537000},{"_id":"source/php/strings/soundex.html","hash":"eb3a139a83ee290425dac9d1fd832c2094a6dbee","modified":1462096537000},{"_id":"source/php/strings/split.html","hash":"d93a2c75b47bd58fd3dec468299bd5a904ccea0b","modified":1462096537000},{"_id":"source/php/strings/sprintf.html","hash":"821abbba39cfb02c0d1134c7d174fbb88c23a838","modified":1462096537000},{"_id":"source/php/strings/sscanf.html","hash":"561b9d5e34a35d797ebf44b8a190d126c7404bd9","modified":1462096537000},{"_id":"source/php/strings/str_getcsv.html","hash":"0281bf2f9b5b2a9f7f0de8b38840c4ec63b47305","modified":1462096537000},{"_id":"source/php/strings/str_ireplace.html","hash":"dc87f0afd704fbfb2c515573026ff9a815709748","modified":1462096537000},{"_id":"source/php/strings/str_pad.html","hash":"1d53572a41850838a618668da8654eb82fb62aca","modified":1462096537000},{"_id":"source/php/strings/str_repeat.html","hash":"5de0690fa109e46c9f1ce99ceddd30111a264ce1","modified":1462096537000},{"_id":"source/php/strings/str_replace.html","hash":"ee2c75ff479136356961677737f4a772fc9950b1","modified":1462096537000},{"_id":"source/php/strings/str_rot13.html","hash":"0f56dc7d06e520f20ea8f6111e0f33d583415db3","modified":1462096537000},{"_id":"source/php/strings/str_shuffle.html","hash":"87dab3b4dd384166a21029a42470127a89ef21d5","modified":1462096537000},{"_id":"source/php/strings/str_split.html","hash":"78ec7c97c126d3ab5138380f8e2efb420d6b2bec","modified":1462096537000},{"_id":"source/php/strings/str_word_count.html","hash":"5db222e497514dc606c59992ac27cc1efff84988","modified":1462096537000},{"_id":"source/php/strings/strcasecmp.html","hash":"c0f3b70de9b9b2ff2f800fe03ba54a627ddb3cb5","modified":1462096537000},{"_id":"source/php/strings/strchr.html","hash":"432a95ff71b6d42f6f45fc3190adb9737a64c5ce","modified":1462096537000},{"_id":"source/php/strings/strcmp.html","hash":"0a3a2d539da0448067ac19a876cb3196940a50f7","modified":1462096537000},{"_id":"source/php/strings/strcoll.html","hash":"48b51620f2581e1daf1cc88f5442a52da7662660","modified":1462096537000},{"_id":"source/php/strings/strcspn.html","hash":"40c73e16c31958c9d57659954ca0f3cb4716e1d6","modified":1462096537000},{"_id":"source/php/strings/strip_tags.html","hash":"d7247d8ce40198bc7ab055a6686933e44d63db4f","modified":1462096537000},{"_id":"source/php/strings/stripos.html","hash":"223d05ecc82cc69a2abcaed3f263cf81952eb18c","modified":1462096537000},{"_id":"source/php/strings/stripslashes.html","hash":"380ddfe733e125c01abf8f46c4bf3f76bbdd03c5","modified":1462096537000},{"_id":"source/php/strings/stristr.html","hash":"9d2e9e5dd49181fbe6fabfb8a1494d620ec9d738","modified":1462096537000},{"_id":"source/php/strings/strlen.html","hash":"6b634acb52b70325763af870e921cbf4f07625d1","modified":1462096537000},{"_id":"source/php/strings/strnatcasecmp.html","hash":"6e6352591317b35b752d4baa567bd4a8630adbe6","modified":1462096537000},{"_id":"source/php/strings/strnatcmp.html","hash":"b9f2bddf7c5907879dec1d3c6386d96b38cc8a53","modified":1462096537000},{"_id":"source/php/strings/strncasecmp.html","hash":"a7d02ed955108cd56d08a10bd4373f71ac9e37a5","modified":1462096537000},{"_id":"source/php/strings/strncmp.html","hash":"32c15b19e07529ebe829bf5295bcbf323bbf8ae2","modified":1462096537000},{"_id":"source/php/strings/strpbrk.html","hash":"0b3fa77eab00e1c8cb9a28754854e69ea8e23611","modified":1462096537000},{"_id":"source/php/strings/strpos.html","hash":"e582047733f1ea54815c72dd7d4f119e0d13bff8","modified":1462096537000},{"_id":"source/php/strings/strrchr.html","hash":"5609beb8063b403e1ca326faf77497019f7aac2b","modified":1462096537000},{"_id":"source/php/strings/strrev.html","hash":"e98fdb7a7689c4cbbd0a875f3a50b4e364fed4bd","modified":1462096537000},{"_id":"source/php/strings/strripos.html","hash":"533533a8c15791bb0193dacea658f8316d34efb2","modified":1462096537000},{"_id":"source/php/strings/strrpos.html","hash":"911eba4cbc747d639847be8293b6a11c913c3fa8","modified":1462096537000},{"_id":"source/php/strings/strspn.html","hash":"5b02177df704409b05866956412e4d1fb2a2b089","modified":1462096537000},{"_id":"source/php/strings/strstr.html","hash":"4124ebe24b926ad2bd14111abb94a1d7e38b7f36","modified":1462096537000},{"_id":"source/php/strings/strtok.html","hash":"27a01746ff0b97c67060be3cd67a0b0aaa8fab79","modified":1462096537000},{"_id":"source/php/strings/strtolower.html","hash":"e4521afaccf5577b6f8cd9c0350ef5d2f247fc04","modified":1462096537000},{"_id":"source/php/strings/strtoupper.html","hash":"8ac58e00152cf049632a5cd3cf57fc18fb76cd6b","modified":1462096537000},{"_id":"source/php/strings/strtr.html","hash":"ebc8a73c8bc71bd515c909db940cd1e2cd384dd1","modified":1462096537000},{"_id":"source/php/strings/substr.html","hash":"8cc83ad34d62aea51651104efb285d363c46a2e9","modified":1462096537000},{"_id":"source/php/strings/substr_compare.html","hash":"169e14e1a53fca30acf13a00684658acb11fb27b","modified":1462096537000},{"_id":"source/php/strings/substr_count.html","hash":"de6dd8026f5d62034c5e6f06ada59021523706b4","modified":1462096537000},{"_id":"source/php/strings/substr_replace.html","hash":"260b7ae1f6a34f023b31ca59a55eb328598e7fdc","modified":1462096537000},{"_id":"source/php/strings/trim.html","hash":"cb56ed26433be8b9f511ade4711d3a020024692e","modified":1462096537000},{"_id":"source/php/strings/ucfirst.html","hash":"2812bafb7def02ac7c33497bd917a9f70ff0fe47","modified":1462096537000},{"_id":"source/php/strings/ucwords.html","hash":"c1b654fd642d9fe98e7e7986205a72b0fcc67d2b","modified":1462096537000},{"_id":"source/php/strings/vprintf.html","hash":"17a75e8197462ceaa7b33b1433d6456890a25518","modified":1462096537000},{"_id":"source/php/strings/vsprintf.html","hash":"2921a5068bcb99572823aaad2589e12d8c7ee093","modified":1462096537000},{"_id":"source/php/strings/wordwrap.html","hash":"58c7b3fb6508360058e6122b9350551261f31985","modified":1462096537000},{"_id":"source/php/url/base64_encode.html","hash":"bc7e46260326aeabe8affbe5157905e4e887aebf","modified":1462096537000},{"_id":"source/php/url/base64_decode.html","hash":"0e41afb531e9f92eed775a2a382fbe5f95ba747c","modified":1462096537000},{"_id":"source/php/url/http_build_query.html","hash":"013a3089dd4b367841875738fb1b0b40030541f3","modified":1462096537000},{"_id":"source/php/url/index.html","hash":"ccd404cdf479a930d7ebaaa389053458660234c0","modified":1462096537000},{"_id":"source/php/url/parse_url.html","hash":"342edaaf7cb0516a18f28ab2b746d976f182cf13","modified":1462096537000},{"_id":"source/php/url/rawurldecode.html","hash":"5ca09aa3f7a2bd408200d49366ba0c50f7ba21f1","modified":1462096537000},{"_id":"source/php/url/rawurlencode.html","hash":"9825fa7acd6b85d22d0a9b50b0c7716467fab432","modified":1462096537000},{"_id":"source/php/url/urldecode.html","hash":"df9d32aff8df2b962885a976a7a5814a62ac3fb4","modified":1462096537000},{"_id":"source/php/url/urlencode.html","hash":"ca8a5bc3c22b756856d09d2fd284fd80e5b7f1b7","modified":1462096537000},{"_id":"source/php/var/doubleval.html","hash":"318fa12a93a00c6950396d5076ca1bc9ceaadce5","modified":1462096537000},{"_id":"source/php/var/empty.html","hash":"e42b69c17738abb3e1956aca8f02469af5dc0dd6","modified":1462096537000},{"_id":"source/php/var/floatval.html","hash":"6728cfffae91eaf308eb3b423047099b3101a1ff","modified":1462096537000},{"_id":"source/php/var/gettype.html","hash":"eeb572ebba6a30cb1fcc53ab5e7c13b6b5b326c0","modified":1462096537000},{"_id":"source/php/var/index.html","hash":"bc2aa272698d80d4fe789cd5e9387ba16099b21e","modified":1462096537000},{"_id":"source/php/var/intval.html","hash":"8dc49204d62f025cf07b232e2310192bc128b8f6","modified":1462096537000},{"_id":"source/php/var/is_array.html","hash":"06f1e0b3f33c1bc41d2c62b1137e8a0061a8a3b7","modified":1462096537000},{"_id":"source/php/var/is_binary.html","hash":"95b60d862781bedabb5cda4f03e678cb7158b648","modified":1462096537000},{"_id":"source/php/var/is_bool.html","hash":"8e97c8672eb2727c0b022f1a63bab6a462977169","modified":1462096537000},{"_id":"source/php/var/is_buffer.html","hash":"b481d88be5b1d3e2e339c75298e3427f3b3da52b","modified":1462096537000},{"_id":"source/php/var/is_callable.html","hash":"0f7b1a86fa7fe02d1548d37e590ec53d5a48109a","modified":1462096537000},{"_id":"source/php/var/is_double.html","hash":"2096a34427a3cef6891daee2164b48fcf33cc941","modified":1462096537000},{"_id":"source/php/var/is_float.html","hash":"e13a07c8b3527711a667a2408993dbf6d537e88d","modified":1462096537000},{"_id":"source/php/var/is_int.html","hash":"72e84ed6e132aae1613b492e95070721043a4c60","modified":1462096537000},{"_id":"source/php/var/is_integer.html","hash":"45cb9f73514ce67cf5444a13824bf104ed38e52b","modified":1462096537000},{"_id":"source/php/var/is_long.html","hash":"ed7577c27c5d7feaa72a2ea3594e99630e1fdea9","modified":1462096537000},{"_id":"source/php/var/is_null.html","hash":"50472e2cc7f3f7a3463c1a2c09654e7a7523627c","modified":1462096537000},{"_id":"source/php/var/is_numeric.html","hash":"36033ab44a12a94db703c2c107befd742c40f524","modified":1462096537000},{"_id":"source/php/var/is_object.html","hash":"b3ee52774f06f7d8919dd9c29327967d4c8068fe","modified":1462096537000},{"_id":"source/php/var/is_real.html","hash":"a534f30e9768246a67438fb57a24be98cf620c73","modified":1462096537000},{"_id":"source/php/var/is_scalar.html","hash":"5b3fba4992651d07bce532da6323d1da8405ccb6","modified":1462096537000},{"_id":"source/php/var/is_string.html","hash":"a5a9e8c7ecc1f47fe1d0a093f3270618f5e9c6c7","modified":1462096537000},{"_id":"source/php/var/is_unicode.html","hash":"833a6d20cc5863e0c8c08b39351bbb6bd8bfde63","modified":1462096537000},{"_id":"source/php/var/isset.html","hash":"75ce005b1e50f02c8f5c6c97f053a9b61c04bc54","modified":1462096537000},{"_id":"source/php/var/print_r.html","hash":"74bbb910fa8c9abda32a327567b4716fc5ec7d6e","modified":1462096537000},{"_id":"source/php/var/serialize.html","hash":"a4f334d158ac759406e5a7e27f50361a4f62582f","modified":1462096537000},{"_id":"source/php/var/strval.html","hash":"3a8762f2993a913945f2a4c96da30ea0f2b2e5a5","modified":1462096537000},{"_id":"source/php/var/unserialize.html","hash":"462a8dfd8c37fd1b5bcae7d915a8a192d08cba01","modified":1462096537000},{"_id":"source/php/var/var_dump.html","hash":"836728abdbd27ce2340ec0ef597587368ba51e79","modified":1462096537000},{"_id":"source/php/var/var_export.html","hash":"86bd1e0ecd77fce8f36c63884c06ece0116dc64f","modified":1462096537000},{"_id":"source/php/xdiff/index.html","hash":"319d2515930a11aac4bd31d23f58df9490c3a823","modified":1462096537000},{"_id":"source/php/xml/index.html","hash":"14295475727a1245945d3835820c290622bb1b73","modified":1462096537000},{"_id":"source/php/xml/utf8_decode.html","hash":"4bbab9ed77e419d5ecf4fa1eb8fa5a6775e932ca","modified":1462096537000},{"_id":"source/php/xdiff/xdiff_string_patch.html","hash":"151c5d248c71ecb83dff53b63aa7d23b1f048d2f","modified":1462096537000},{"_id":"source/php/xdiff/xdiff_string_diff.html","hash":"f32d9d09467ab081c92f0c98cf069c4472a797e1","modified":1462096537000},{"_id":"source/php/xml/utf8_encode.html","hash":"90a0c200ccf49f87fbeeed7511b2387a680cd00d","modified":1462096537000},{"_id":"source/python/string/capwords.html","hash":"062dad1992be449b1861277439212619f8546456","modified":1462096537000},{"_id":"source/python/string/index.html","hash":"f83f42870f64f0cd69b1d9326483beae7a600925","modified":1462096537000},{"_id":"source/ruby/Math/acos.html","hash":"2e827fe34e9dd22a2425b87af35652592ecd8fc1","modified":1462096537000},{"_id":"source/ruby/Math/index.html","hash":"80a4c1c73275ed4138c9787c95d8ea83cbf6e31e","modified":1462096537000}],"Category":[{"name":"website","_id":"cinoaxk5n0003h39ylkzcgme7"},{"name":"focus","_id":"cinoaxk5s0007h39ynirhdsxj"},{"name":"coding style","_id":"cinoaxk5v0009h39ylsc8tp7y"},{"name":"octopress","parent":"cinoaxk5n0003h39ylkzcgme7","_id":"cinoaxk5y000ch39ym6qsxncy"},{"name":"future","_id":"cinoaxk5z000eh39ym7zrh34s"},{"name":"convention","parent":"cinoaxk5v0009h39ylsc8tp7y","_id":"cinoaxk60000fh39yngy60dl6"},{"name":"future","parent":"cinoaxk5y000ch39ym6qsxncy","_id":"cinoaxk63000jh39yaczh2hfg"},{"name":"jekyll","parent":"cinoaxk5y000ch39ym6qsxncy","_id":"cinoaxk65000mh39y4gtng5e0"},{"name":"future","parent":"cinoaxk65000mh39y4gtng5e0","_id":"cinoaxk67000qh39yfdxxi13l"},{"name":"js","parent":"cinoaxk5z000eh39ym7zrh34s","_id":"cinoaxk6e000xh39yjc4vwi3a"},{"name":"golang","parent":"cinoaxk6e000xh39yjc4vwi3a","_id":"cinoaxk6f000yh39yhfsh2vik"},{"name":"python","parent":"cinoaxk6f000yh39yhfsh2vik","_id":"cinoaxk6f000zh39y38yr22wz"},{"name":"ruby","parent":"cinoaxk6f000zh39y38yr22wz","_id":"cinoaxk6g0010h39y5wpavz0e"},{"name":"php","parent":"cinoaxk6g0010h39y5wpavz0e","_id":"cinoaxk6h0011h39yw7rhp14q"},{"name":"c","parent":"cinoaxk6h0011h39yw7rhp14q","_id":"cinoaxk6j0012h39yqat26yuj"}],"Data":[],"Page":[{"type":"language","language":"c","title":"C","_content":"","source":"c/index.html","raw":"---\ntype: language\nlanguage: c\ntitle: C\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"c/index.html","_id":"cinocx602000zqi9y4m5jp059","comments":1,"layout":"page","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["abs(4.2)","abs(-4.2)","abs(-5)","abs('_argos')"],"estarget":"es5","returns":["4.2","4.2","5","0"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"],"improved by":["Karol Kowalski","Kevin van Zonneveld (http://kvz.io)","Jonas Raoni Soares Silva (http://www.jsfromhell.com)"]},"notes":[],"layout":"function","title":"c'smath.abs in JavaScript","function":"abs","category":"math","language":"c","alias":["/functions/c/abs/","/functions/math/abs/","/c/abs/"],"_content":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/c/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","source":"c/math/abs.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - abs(4.2)\n  - abs(-4.2)\n  - abs(-5)\n  - abs('_argos')\nestarget: es5\nreturns:\n  - '4.2'\n  - '4.2'\n  - '5'\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n  improved by:\n    - Karol Kowalski\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\nnotes: []\nlayout: function\ntitle: c'smath.abs in JavaScript\nfunction: abs\ncategory: math\nlanguage: c\npermalink: c/math/abs/\nalias:\n  - /functions/c/abs/\n  - /functions/math/abs/\n  - /c/abs/\n---\nmodule.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/c/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"c/math/abs/index.html","_id":"cinocxol80010qi9yrsjqhv43","comments":1,"content":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/c/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","excerpt":"","more":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/c/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n"},{"type":"category","language":"c","category":"math","title":"math","_content":"","source":"c/math/index.html","raw":"---\ntype: category\nlanguage: c\ncategory: math\ntitle: math\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"c/math/index.html","_id":"cinod2gzl0011qi9y5wh11o9a","comments":1,"layout":"page","content":"","excerpt":"","more":""},{"layout":"page","title":"About Locutus","date":"2012-09-26T17:18:00.000Z","comments":1,"alias":["/pages/contact/"],"_content":"\n{{site.description}}\n\n**Why?**\n\n - to see if we can\n - as a rainy Sunday afternoon pastime, porting a function can be rewarding and deepen your understanding of languages, not unlike solving a crossword puzzle : )\n - to profit from interoperable functions (useful when you app involves more than one programming language), as well as a few useful higher level functions such as:\n[number_format](/php/number_format/),\n[sprintf](/php/sprintf/), and\n[strtotime](/php/strtotime/),\nthat do not exist in JavaScript's standard library.\n\nJavaScript is wide-spread but lacking an exhaustive \nstandard library, developers coming from other languages are often wondering how\nto achieve common tasks, like [formatting dates](/php/strftime/), \nor [generating a hashes](/php/sha1/).\n\nLocutus aims to show developers coming from other programming languages\nthese high-level things could be achieved in JavaScript. \n\nWe're also porting low-level functions like Go's [string.Index](/golang/strings/Index/)\neven though it has a perfectly good (and more performant) native JavaScript equivalent by means of [String.indexOf](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/indexOf).\n\nWe're going the extra mile in writing wrappers around these to show newcomers by example how the behavior differs (or not) across languages.\n\nInitially we also had the idea that if enough parts of a language were ported, you might even be able to run entire programs written in other languages in JavaScript. While it was fun to try and we had some success in doing this for PHP, we let this goal go as it drove us to write many hacks, while we would never be able to get it to work well, anyway. Projects like [GopherJS](https://github.com/gopherjs/gopherjs) or [Emscripten](http://kripken.github.io/emscripten-site/) offer better routes to that end.\n\n## What we're not\n\nEven though Locutus is porting standard libraries from other languages, \nwe don't see ourselves as drop in standard library for JavaScript. \n\nIf you're interested in something like that, we recommend taking a look at [lodash](https://lodash.com/), which in comparison is more lightweight, focussed, mature. \n\nThat being said, there are good bits to be found in this repo already, and Locutus makes it easy to require and bundle just a single function that you do deem worthy of entering your project.\n\n## What we're not porting\n\nAs mentioned we're sticking to raw functions and steering clear of global environment, language constructs or data-types. While this would be possible to varying degrees, we decided this is outside of Locutus' scope and welcome other projects to take a stab at this.\n\n## A community effort\n\nNot unlike Wikipedia, Locutus is an ongoing community effort. We're going however by [The McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d), meaning that many of these functions are a first iteration, or otherwise have issues still.\n\nIf you know a better way, we'd love to see your improvements.\n\n## Contributing\n\nWe use [GitHub](http://github.com/kvz/locutus) for collaboration. There are a few guidelines in our [CONTRIBUTING.md](http://github.com/kvz/locutus/CONTRIBUTING.md) document. It would be helpful to glance over them before submitting your work, as to avoid unnecessary back and forth, and avoid potential disappointment.\n\n## Licensing\n\nLocutus is licensed under the MIT licenses.\n\n[The MIT license](https://github.com/kvz/locutus/blob/master/LICENSE) allows you to use the library as you see fit (even in commercial projects) as long as you redistribute original the license with it. You're not obligated to share your improvements, but obviously that would be greatly appreciated and also ensure you won't lose your changes after you upgrade.\n","source":"about.md","raw":"---\nlayout: page\ntitle: \"About Locutus\"\ndate: 2012-09-26 17:18\ncomments: true\npermalink: /about\nalias:\n- /pages/contact/\n---\n\n{{site.description}}\n\n**Why?**\n\n - to see if we can\n - as a rainy Sunday afternoon pastime, porting a function can be rewarding and deepen your understanding of languages, not unlike solving a crossword puzzle : )\n - to profit from interoperable functions (useful when you app involves more than one programming language), as well as a few useful higher level functions such as:\n[number_format](/php/number_format/),\n[sprintf](/php/sprintf/), and\n[strtotime](/php/strtotime/),\nthat do not exist in JavaScript's standard library.\n\nJavaScript is wide-spread but lacking an exhaustive \nstandard library, developers coming from other languages are often wondering how\nto achieve common tasks, like [formatting dates](/php/strftime/), \nor [generating a hashes](/php/sha1/).\n\nLocutus aims to show developers coming from other programming languages\nthese high-level things could be achieved in JavaScript. \n\nWe're also porting low-level functions like Go's [string.Index](/golang/strings/Index/)\neven though it has a perfectly good (and more performant) native JavaScript equivalent by means of [String.indexOf](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/indexOf).\n\nWe're going the extra mile in writing wrappers around these to show newcomers by example how the behavior differs (or not) across languages.\n\nInitially we also had the idea that if enough parts of a language were ported, you might even be able to run entire programs written in other languages in JavaScript. While it was fun to try and we had some success in doing this for PHP, we let this goal go as it drove us to write many hacks, while we would never be able to get it to work well, anyway. Projects like [GopherJS](https://github.com/gopherjs/gopherjs) or [Emscripten](http://kripken.github.io/emscripten-site/) offer better routes to that end.\n\n## What we're not\n\nEven though Locutus is porting standard libraries from other languages, \nwe don't see ourselves as drop in standard library for JavaScript. \n\nIf you're interested in something like that, we recommend taking a look at [lodash](https://lodash.com/), which in comparison is more lightweight, focussed, mature. \n\nThat being said, there are good bits to be found in this repo already, and Locutus makes it easy to require and bundle just a single function that you do deem worthy of entering your project.\n\n## What we're not porting\n\nAs mentioned we're sticking to raw functions and steering clear of global environment, language constructs or data-types. While this would be possible to varying degrees, we decided this is outside of Locutus' scope and welcome other projects to take a stab at this.\n\n## A community effort\n\nNot unlike Wikipedia, Locutus is an ongoing community effort. We're going however by [The McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d), meaning that many of these functions are a first iteration, or otherwise have issues still.\n\nIf you know a better way, we'd love to see your improvements.\n\n## Contributing\n\nWe use [GitHub](http://github.com/kvz/locutus) for collaboration. There are a few guidelines in our [CONTRIBUTING.md](http://github.com/kvz/locutus/CONTRIBUTING.md) document. It would be helpful to glance over them before submitting your work, as to avoid unnecessary back and forth, and avoid potential disappointment.\n\n## Licensing\n\nLocutus is licensed under the MIT licenses.\n\n[The MIT license](https://github.com/kvz/locutus/blob/master/LICENSE) allows you to use the library as you see fit (even in commercial projects) as long as you redistribute original the license with it. You're not obligated to share your improvements, but obviously that would be greatly appreciated and also ensure you won't lose your changes after you upgrade.\n","updated":"2016-05-01T09:41:14.000Z","path":"/about.html","_id":"cinodhz8w0012qi9yzsbwceix","content":"\n<p><strong>Why?</strong></p>\n<ul>\n<li>to see if we can</li>\n<li>as a rainy Sunday afternoon pastime, porting a function can be rewarding and deepen your understanding of languages, not unlike solving a crossword puzzle : )</li>\n<li>to profit from interoperable functions (useful when you app involves more than one programming language), as well as a few useful higher level functions such as:<br><a href=\"/php/number_format/\">number_format</a>,<br><a href=\"/php/sprintf/\">sprintf</a>, and<br><a href=\"/php/strtotime/\">strtotime</a>,<br>that do not exist in JavaScript’s standard library.</li>\n</ul>\n<p>JavaScript is wide-spread but lacking an exhaustive<br>standard library, developers coming from other languages are often wondering how<br>to achieve common tasks, like <a href=\"/php/strftime/\">formatting dates</a>,<br>or <a href=\"/php/sha1/\">generating a hashes</a>.</p>\n<p>Locutus aims to show developers coming from other programming languages<br>these high-level things could be achieved in JavaScript. </p>\n<p>We’re also porting low-level functions like Go’s <a href=\"/golang/strings/Index/\">string.Index</a><br>even though it has a perfectly good (and more performant) native JavaScript equivalent by means of <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/indexOf\" target=\"_blank\" rel=\"external\">String.indexOf</a>.</p>\n<p>We’re going the extra mile in writing wrappers around these to show newcomers by example how the behavior differs (or not) across languages.</p>\n<p>Initially we also had the idea that if enough parts of a language were ported, you might even be able to run entire programs written in other languages in JavaScript. While it was fun to try and we had some success in doing this for PHP, we let this goal go as it drove us to write many hacks, while we would never be able to get it to work well, anyway. Projects like <a href=\"https://github.com/gopherjs/gopherjs\" target=\"_blank\" rel=\"external\">GopherJS</a> or <a href=\"http://kripken.github.io/emscripten-site/\" target=\"_blank\" rel=\"external\">Emscripten</a> offer better routes to that end.</p>\n<h2 id=\"What-we’re-not\"><a href=\"#What-we’re-not\" class=\"headerlink\" title=\"What we’re not\"></a>What we’re not</h2><p>Even though Locutus is porting standard libraries from other languages,<br>we don’t see ourselves as drop in standard library for JavaScript. </p>\n<p>If you’re interested in something like that, we recommend taking a look at <a href=\"https://lodash.com/\" target=\"_blank\" rel=\"external\">lodash</a>, which in comparison is more lightweight, focussed, mature. </p>\n<p>That being said, there are good bits to be found in this repo already, and Locutus makes it easy to require and bundle just a single function that you do deem worthy of entering your project.</p>\n<h2 id=\"What-we’re-not-porting\"><a href=\"#What-we’re-not-porting\" class=\"headerlink\" title=\"What we’re not porting\"></a>What we’re not porting</h2><p>As mentioned we’re sticking to raw functions and steering clear of global environment, language constructs or data-types. While this would be possible to varying degrees, we decided this is outside of Locutus’ scope and welcome other projects to take a stab at this.</p>\n<h2 id=\"A-community-effort\"><a href=\"#A-community-effort\" class=\"headerlink\" title=\"A community effort\"></a>A community effort</h2><p>Not unlike Wikipedia, Locutus is an ongoing community effort. We’re going however by <a href=\"https://medium.com/what-i-learned-building/9216e1c9da7d\" target=\"_blank\" rel=\"external\">The McDonald’s Theory</a>, meaning that many of these functions are a first iteration, or otherwise have issues still.</p>\n<p>If you know a better way, we’d love to see your improvements.</p>\n<h2 id=\"Contributing\"><a href=\"#Contributing\" class=\"headerlink\" title=\"Contributing\"></a>Contributing</h2><p>We use <a href=\"http://github.com/kvz/locutus\" target=\"_blank\" rel=\"external\">GitHub</a> for collaboration. There are a few guidelines in our <a href=\"http://github.com/kvz/locutus/CONTRIBUTING.md\" target=\"_blank\" rel=\"external\">CONTRIBUTING.md</a> document. It would be helpful to glance over them before submitting your work, as to avoid unnecessary back and forth, and avoid potential disappointment.</p>\n<h2 id=\"Licensing\"><a href=\"#Licensing\" class=\"headerlink\" title=\"Licensing\"></a>Licensing</h2><p>Locutus is licensed under the MIT licenses.</p>\n<p><a href=\"https://github.com/kvz/locutus/blob/master/LICENSE\" target=\"_blank\" rel=\"external\">The MIT license</a> allows you to use the library as you see fit (even in commercial projects) as long as you redistribute original the license with it. You’re not obligated to share your improvements, but obviously that would be greatly appreciated and also ensure you won’t lose your changes after you upgrade.</p>\n","excerpt":"","more":"\n<p><strong>Why?</strong></p>\n<ul>\n<li>to see if we can</li>\n<li>as a rainy Sunday afternoon pastime, porting a function can be rewarding and deepen your understanding of languages, not unlike solving a crossword puzzle : )</li>\n<li>to profit from interoperable functions (useful when you app involves more than one programming language), as well as a few useful higher level functions such as:<br><a href=\"/php/number_format/\">number_format</a>,<br><a href=\"/php/sprintf/\">sprintf</a>, and<br><a href=\"/php/strtotime/\">strtotime</a>,<br>that do not exist in JavaScript’s standard library.</li>\n</ul>\n<p>JavaScript is wide-spread but lacking an exhaustive<br>standard library, developers coming from other languages are often wondering how<br>to achieve common tasks, like <a href=\"/php/strftime/\">formatting dates</a>,<br>or <a href=\"/php/sha1/\">generating a hashes</a>.</p>\n<p>Locutus aims to show developers coming from other programming languages<br>these high-level things could be achieved in JavaScript. </p>\n<p>We’re also porting low-level functions like Go’s <a href=\"/golang/strings/Index/\">string.Index</a><br>even though it has a perfectly good (and more performant) native JavaScript equivalent by means of <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/indexOf\">String.indexOf</a>.</p>\n<p>We’re going the extra mile in writing wrappers around these to show newcomers by example how the behavior differs (or not) across languages.</p>\n<p>Initially we also had the idea that if enough parts of a language were ported, you might even be able to run entire programs written in other languages in JavaScript. While it was fun to try and we had some success in doing this for PHP, we let this goal go as it drove us to write many hacks, while we would never be able to get it to work well, anyway. Projects like <a href=\"https://github.com/gopherjs/gopherjs\">GopherJS</a> or <a href=\"http://kripken.github.io/emscripten-site/\">Emscripten</a> offer better routes to that end.</p>\n<h2 id=\"What-we’re-not\"><a href=\"#What-we’re-not\" class=\"headerlink\" title=\"What we’re not\"></a>What we’re not</h2><p>Even though Locutus is porting standard libraries from other languages,<br>we don’t see ourselves as drop in standard library for JavaScript. </p>\n<p>If you’re interested in something like that, we recommend taking a look at <a href=\"https://lodash.com/\">lodash</a>, which in comparison is more lightweight, focussed, mature. </p>\n<p>That being said, there are good bits to be found in this repo already, and Locutus makes it easy to require and bundle just a single function that you do deem worthy of entering your project.</p>\n<h2 id=\"What-we’re-not-porting\"><a href=\"#What-we’re-not-porting\" class=\"headerlink\" title=\"What we’re not porting\"></a>What we’re not porting</h2><p>As mentioned we’re sticking to raw functions and steering clear of global environment, language constructs or data-types. While this would be possible to varying degrees, we decided this is outside of Locutus’ scope and welcome other projects to take a stab at this.</p>\n<h2 id=\"A-community-effort\"><a href=\"#A-community-effort\" class=\"headerlink\" title=\"A community effort\"></a>A community effort</h2><p>Not unlike Wikipedia, Locutus is an ongoing community effort. We’re going however by <a href=\"https://medium.com/what-i-learned-building/9216e1c9da7d\">The McDonald’s Theory</a>, meaning that many of these functions are a first iteration, or otherwise have issues still.</p>\n<p>If you know a better way, we’d love to see your improvements.</p>\n<h2 id=\"Contributing\"><a href=\"#Contributing\" class=\"headerlink\" title=\"Contributing\"></a>Contributing</h2><p>We use <a href=\"http://github.com/kvz/locutus\">GitHub</a> for collaboration. There are a few guidelines in our <a href=\"http://github.com/kvz/locutus/CONTRIBUTING.md\">CONTRIBUTING.md</a> document. It would be helpful to glance over them before submitting your work, as to avoid unnecessary back and forth, and avoid potential disappointment.</p>\n<h2 id=\"Licensing\"><a href=\"#Licensing\" class=\"headerlink\" title=\"Licensing\"></a>Licensing</h2><p>Locutus is licensed under the MIT licenses.</p>\n<p><a href=\"https://github.com/kvz/locutus/blob/master/LICENSE\">The MIT license</a> allows you to use the library as you see fit (even in commercial projects) as long as you redistribute original the license with it. You’re not obligated to share your improvements, but obviously that would be greatly appreciated and also ensure you won’t lose your changes after you upgrade.</p>\n"},{"type":"language","language":"golang","title":"Go","_content":"","source":"golang/index.html","raw":"---\ntype: language\nlanguage: golang\ntitle: Go\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"golang/index.html","comments":1,"layout":"page","_id":"cinoej9vh0000ou9y51do7zdc","content":"","excerpt":"","more":""},{"type":"language","language":"python","title":"Python","_content":"","source":"python/index.html","raw":"---\ntype: language\nlanguage: python\ntitle: Python\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"python/index.html","comments":1,"layout":"page","_id":"cinoej9vi0001ou9yqy7fiwzf","content":"","excerpt":"","more":""},{"type":"language","language":"php","title":"PHP","_content":"","source":"php/index.html","raw":"---\ntype: language\nlanguage: php\ntitle: PHP\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/index.html","comments":1,"layout":"page","_id":"cinoej9vj0002ou9yto8ymtlw","content":"","excerpt":"","more":""},{"type":"language","language":"ruby","title":"Ruby","_content":"","source":"ruby/index.html","raw":"---\ntype: language\nlanguage: ruby\ntitle: Ruby\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"ruby/index.html","comments":1,"layout":"page","_id":"cinoej9vj0003ou9ygwws9q3r","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["Contains('Kevin', 'K')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"golang'sstrings.Contains in JavaScript","function":"Contains","category":"strings","language":"golang","alias":["/functions/golang/Contains/","/functions/strings/Contains/","/golang/Contains/"],"_content":"module.exports = function Contains (s, substr) {\n  //  discuss at: http://locutusjs.io/golang/strings/Contains\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: Contains('Kevin', 'K')\n  //   returns 1: true\n\n  return (s + '').indexOf(substr) !== -1\n}\n","source":"golang/strings/Contains.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'Contains(''Kevin'', ''K'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: golang'sstrings.Contains in JavaScript\nfunction: Contains\ncategory: strings\nlanguage: golang\npermalink: golang/strings/Contains/\nalias:\n  - /functions/golang/Contains/\n  - /functions/strings/Contains/\n  - /golang/Contains/\n---\nmodule.exports = function Contains (s, substr) {\n  //  discuss at: http://locutusjs.io/golang/strings/Contains\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: Contains('Kevin', 'K')\n  //   returns 1: true\n\n  return (s + '').indexOf(substr) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"golang/strings/Contains/index.html","comments":1,"_id":"cinoej9y10004ou9ys5wnjme0","content":"module.exports = function Contains (s, substr) {\n  //  discuss at: http://locutusjs.io/golang/strings/Contains\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: Contains('Kevin', 'K')\n  //   returns 1: true\n\n  return (s + '').indexOf(substr) !== -1\n}\n","excerpt":"","more":"module.exports = function Contains (s, substr) {\n  //  discuss at: http://locutusjs.io/golang/strings/Contains\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: Contains('Kevin', 'K')\n  //   returns 1: true\n\n  return (s + '').indexOf(substr) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["Count(\"cheese\", \"e\")","Count(\"five\", \"\") // before & after each rune"],"estarget":"es5","returns":["3","5"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["GopherJS (http://www.gopherjs.org/)"]},"notes":[],"layout":"function","title":"golang'sstrings.Count in JavaScript","function":"Count","category":"strings","language":"golang","alias":["/functions/golang/Count/","/functions/strings/Count/","/golang/Count/"],"_content":"module.exports = function Count (s, sep) {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: Count(\"cheese\", \"e\")\n  //   returns 1: 3\n  //   example 2: Count(\"five\", \"\") // before & after each rune\n  //   returns 2: 5\n\n  var Index = require('../strings/Index2')\n\n  var pos\n  var n = 0\n\n  if ((sep.length === 0)) {\n    return s.split(sep).length + 1\n  } else if (sep.length > s.length) {\n    return 0\n  } else if ((sep.length === s.length)) {\n    if (sep === s) {\n      return 1\n    }\n    return 0\n  }\n  while (true) {\n    pos = Index(s, sep)\n    if (pos === -1) {\n      break\n    }\n    n = n + (1) >> 0\n    s = s.substring((pos + sep.length >> 0))\n  }\n  return n\n}\n","source":"golang/strings/Count.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'Count(\"cheese\", \"e\")'\n  - 'Count(\"five\", \"\") // before & after each rune'\nestarget: es5\nreturns:\n  - '3'\n  - '5'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'GopherJS (http://www.gopherjs.org/)'\nnotes: []\nlayout: function\ntitle: golang'sstrings.Count in JavaScript\nfunction: Count\ncategory: strings\nlanguage: golang\npermalink: golang/strings/Count/\nalias:\n  - /functions/golang/Count/\n  - /functions/strings/Count/\n  - /golang/Count/\n---\nmodule.exports = function Count (s, sep) {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: Count(\"cheese\", \"e\")\n  //   returns 1: 3\n  //   example 2: Count(\"five\", \"\") // before & after each rune\n  //   returns 2: 5\n\n  var Index = require('../strings/Index2')\n\n  var pos\n  var n = 0\n\n  if ((sep.length === 0)) {\n    return s.split(sep).length + 1\n  } else if (sep.length > s.length) {\n    return 0\n  } else if ((sep.length === s.length)) {\n    if (sep === s) {\n      return 1\n    }\n    return 0\n  }\n  while (true) {\n    pos = Index(s, sep)\n    if (pos === -1) {\n      break\n    }\n    n = n + (1) >> 0\n    s = s.substring((pos + sep.length >> 0))\n  }\n  return n\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"golang/strings/Count/index.html","comments":1,"_id":"cinoej9y60005ou9ycvedxxck","content":"module.exports = function Count (s, sep) {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: Count(\"cheese\", \"e\")\n  //   returns 1: 3\n  //   example 2: Count(\"five\", \"\") // before & after each rune\n  //   returns 2: 5\n\n  var Index = require('../strings/Index2')\n\n  var pos\n  var n = 0\n\n  if ((sep.length === 0)) {\n    return s.split(sep).length + 1\n  } else if (sep.length > s.length) {\n    return 0\n  } else if ((sep.length === s.length)) {\n    if (sep === s) {\n      return 1\n    }\n    return 0\n  }\n  while (true) {\n    pos = Index(s, sep)\n    if (pos === -1) {\n      break\n    }\n    n = n + (1) >> 0\n    s = s.substring((pos + sep.length >> 0))\n  }\n  return n\n}\n","excerpt":"","more":"module.exports = function Count (s, sep) {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: Count(\"cheese\", \"e\")\n  //   returns 1: 3\n  //   example 2: Count(\"five\", \"\") // before & after each rune\n  //   returns 2: 5\n\n  var Index = require('../strings/Index2')\n\n  var pos\n  var n = 0\n\n  if ((sep.length === 0)) {\n    return s.split(sep).length + 1\n  } else if (sep.length > s.length) {\n    return 0\n  } else if ((sep.length === s.length)) {\n    if (sep === s) {\n      return 1\n    }\n    return 0\n  }\n  while (true) {\n    pos = Index(s, sep)\n    if (pos === -1) {\n      break\n    }\n    n = n + (1) >> 0\n    s = s.substring((pos + sep.length >> 0))\n  }\n  return n\n}\n"},{"type":"category","language":"golang","category":"strings","title":"strings","_content":"","source":"golang/strings/Index.html","raw":"---\ntype: category\nlanguage: golang\ncategory: strings\ntitle: strings\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"golang/strings/Index.html","comments":1,"layout":"page","_id":"cinoej9y80006ou9yja4itvat","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["LastIndex('go gopher', 'go')","LastIndex('go gopher', 'rodent')"],"estarget":"es5","returns":["3","-1"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["GopherJS (http://www.gopherjs.org/)"]},"notes":[],"layout":"function","title":"golang'sstrings.LastIndex in JavaScript","function":"LastIndex","category":"strings","language":"golang","alias":["/functions/golang/LastIndex/","/functions/strings/LastIndex/","/golang/LastIndex/"],"_content":"module.exports = function LastIndex (s, sep) {\n  //  discuss at: http://locutusjs.io/golang/strings/LastIndex\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: LastIndex('go gopher', 'go')\n  //   returns 1: 3\n  //   example 2: LastIndex('go gopher', 'rodent')\n  //   returns 2: -1\n\n  return parseInt(s.lastIndexOf(sep), 10) >> 0\n}\n","source":"golang/strings/LastIndex.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'LastIndex(''go gopher'', ''go'')'\n  - 'LastIndex(''go gopher'', ''rodent'')'\nestarget: es5\nreturns:\n  - '3'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'GopherJS (http://www.gopherjs.org/)'\nnotes: []\nlayout: function\ntitle: golang'sstrings.LastIndex in JavaScript\nfunction: LastIndex\ncategory: strings\nlanguage: golang\npermalink: golang/strings/LastIndex/\nalias:\n  - /functions/golang/LastIndex/\n  - /functions/strings/LastIndex/\n  - /golang/LastIndex/\n---\nmodule.exports = function LastIndex (s, sep) {\n  //  discuss at: http://locutusjs.io/golang/strings/LastIndex\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: LastIndex('go gopher', 'go')\n  //   returns 1: 3\n  //   example 2: LastIndex('go gopher', 'rodent')\n  //   returns 2: -1\n\n  return parseInt(s.lastIndexOf(sep), 10) >> 0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"golang/strings/LastIndex/index.html","comments":1,"_id":"cinoej9y90007ou9ykt5c660r","content":"module.exports = function LastIndex (s, sep) {\n  //  discuss at: http://locutusjs.io/golang/strings/LastIndex\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: LastIndex('go gopher', 'go')\n  //   returns 1: 3\n  //   example 2: LastIndex('go gopher', 'rodent')\n  //   returns 2: -1\n\n  return parseInt(s.lastIndexOf(sep), 10) >> 0\n}\n","excerpt":"","more":"module.exports = function LastIndex (s, sep) {\n  //  discuss at: http://locutusjs.io/golang/strings/LastIndex\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: GopherJS (http://www.gopherjs.org/)\n  //   example 1: LastIndex('go gopher', 'go')\n  //   returns 1: 3\n  //   example 2: LastIndex('go gopher', 'rodent')\n  //   returns 2: -1\n\n  return parseInt(s.lastIndexOf(sep), 10) >> 0\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcadd(1, 2)"],"estarget":"es5","returns":["'3'"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcadd in JavaScript","function":"bcadd","category":"bc","language":"php","alias":["/functions/php/bcadd/","/functions/bc/bcadd/","/php/bcadd/","/functions/bcadd/"],"_content":"module.exports = function bcadd (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcadd/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcadd(1, 2)\n  //   returns 1: '3'\n  // @todo: implement these testcases\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_add(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","source":"php/bc/bcadd.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bcadd(1, 2)'\nestarget: es5\nreturns:\n  - '''3'''\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcadd in JavaScript\nfunction: bcadd\ncategory: bc\nlanguage: php\npermalink: php/bc/bcadd/\nalias:\n  - /functions/php/bcadd/\n  - /functions/bc/bcadd/\n  - /php/bcadd/\n  - /functions/bcadd/\n---\nmodule.exports = function bcadd (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcadd/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcadd(1, 2)\n  //   returns 1: '3'\n  // @todo: implement these testcases\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_add(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcadd/index.html","comments":1,"_id":"cinoej9ya0008ou9yvw8vdpaa","content":"module.exports = function bcadd (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcadd/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcadd(1, 2)\n  //   returns 1: '3'\n  // @todo: implement these testcases\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_add(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","excerpt":"","more":"module.exports = function bcadd (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcadd/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcadd(1, 2)\n  //   returns 1: '3'\n  // @todo: implement these testcases\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_add(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bccomp(1, 2)"],"estarget":"es5","returns":["-1"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbccomp in JavaScript","function":"bccomp","category":"bc","language":"php","alias":["/functions/php/bccomp/","/functions/bc/bccomp/","/php/bccomp/","/functions/bccomp/"],"_content":"module.exports = function bccomp (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bccomp/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bccomp(1, 2)\n  //   returns 1: -1\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  // bc_num\n  var first, second\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n\n  // note bc_ not php_str2num\n  first = libbcmath.bc_str2num(leftOperand.toString(), scale)\n  // note bc_ not php_str2num\n  second = libbcmath.bc_str2num(rightOperand.toString(), scale)\n  return libbcmath.bc_compare(first, second, scale)\n}\n","source":"php/bc/bccomp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bccomp(1, 2)'\nestarget: es5\nreturns:\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbccomp in JavaScript\nfunction: bccomp\ncategory: bc\nlanguage: php\npermalink: php/bc/bccomp/\nalias:\n  - /functions/php/bccomp/\n  - /functions/bc/bccomp/\n  - /php/bccomp/\n  - /functions/bccomp/\n---\nmodule.exports = function bccomp (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bccomp/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bccomp(1, 2)\n  //   returns 1: -1\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  // bc_num\n  var first, second\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n\n  // note bc_ not php_str2num\n  first = libbcmath.bc_str2num(leftOperand.toString(), scale)\n  // note bc_ not php_str2num\n  second = libbcmath.bc_str2num(rightOperand.toString(), scale)\n  return libbcmath.bc_compare(first, second, scale)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bccomp/index.html","comments":1,"_id":"cinoej9yb0009ou9yqievr1xu","content":"module.exports = function bccomp (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bccomp/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bccomp(1, 2)\n  //   returns 1: -1\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  // bc_num\n  var first, second\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n\n  // note bc_ not php_str2num\n  first = libbcmath.bc_str2num(leftOperand.toString(), scale)\n  // note bc_ not php_str2num\n  second = libbcmath.bc_str2num(rightOperand.toString(), scale)\n  return libbcmath.bc_compare(first, second, scale)\n}\n","excerpt":"","more":"module.exports = function bccomp (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bccomp/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bccomp(1, 2)\n  //   returns 1: -1\n\n  var bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = bc()\n\n  // bc_num\n  var first, second\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n\n  // note bc_ not php_str2num\n  first = libbcmath.bc_str2num(leftOperand.toString(), scale)\n  // note bc_ not php_str2num\n  second = libbcmath.bc_str2num(rightOperand.toString(), scale)\n  return libbcmath.bc_compare(first, second, scale)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcdiv(1, 2)"],"estarget":"es5","returns":["'0'"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcdiv in JavaScript","function":"bcdiv","category":"bc","language":"php","alias":["/functions/php/bcdiv/","/functions/bc/bcdiv/","/php/bcdiv/","/functions/bcdiv/"],"_content":"module.exports = function bcdiv (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcdiv/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcdiv(1, 2)\n  //   returns 1: '0'\n  // @todo: implement these testcases\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_divide(first, second, scale)\n  if (result === -1) {\n    // error\n    throw new Error(11, '(BC) Division by zero')\n  }\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","source":"php/bc/bcdiv.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bcdiv(1, 2)'\nestarget: es5\nreturns:\n  - '''0'''\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcdiv in JavaScript\nfunction: bcdiv\ncategory: bc\nlanguage: php\npermalink: php/bc/bcdiv/\nalias:\n  - /functions/php/bcdiv/\n  - /functions/bc/bcdiv/\n  - /php/bcdiv/\n  - /functions/bcdiv/\n---\nmodule.exports = function bcdiv (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcdiv/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcdiv(1, 2)\n  //   returns 1: '0'\n  // @todo: implement these testcases\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_divide(first, second, scale)\n  if (result === -1) {\n    // error\n    throw new Error(11, '(BC) Division by zero')\n  }\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcdiv/index.html","comments":1,"_id":"cinoej9yd000aou9ynwhmbsun","content":"module.exports = function bcdiv (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcdiv/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcdiv(1, 2)\n  //   returns 1: '0'\n  // @todo: implement these testcases\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_divide(first, second, scale)\n  if (result === -1) {\n    // error\n    throw new Error(11, '(BC) Division by zero')\n  }\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","excerpt":"","more":"module.exports = function bcdiv (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcdiv/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcdiv(1, 2)\n  //   returns 1: '0'\n  // @todo: implement these testcases\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_divide(first, second, scale)\n  if (result === -1) {\n    // error\n    throw new Error(11, '(BC) Division by zero')\n  }\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcmul(1, 2)"],"estarget":"es5","returns":["'2'"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcmul in JavaScript","function":"bcmul","category":"bc","language":"php","alias":["/functions/php/bcmul/","/functions/bc/bcmul/","/php/bcmul/","/functions/bcmul/"],"_content":"module.exports = function bcmul (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcmul/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcmul(1, 2)\n  //   returns 1: '2'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_multiply(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n  return result.toString()\n}\n","source":"php/bc/bcmul.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bcmul(1, 2)'\nestarget: es5\nreturns:\n  - '''2'''\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcmul in JavaScript\nfunction: bcmul\ncategory: bc\nlanguage: php\npermalink: php/bc/bcmul/\nalias:\n  - /functions/php/bcmul/\n  - /functions/bc/bcmul/\n  - /php/bcmul/\n  - /functions/bcmul/\n---\nmodule.exports = function bcmul (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcmul/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcmul(1, 2)\n  //   returns 1: '2'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_multiply(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n  return result.toString()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcmul/index.html","comments":1,"_id":"cinoej9ye000bou9yhyoqno0j","content":"module.exports = function bcmul (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcmul/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcmul(1, 2)\n  //   returns 1: '2'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_multiply(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n  return result.toString()\n}\n","excerpt":"","more":"module.exports = function bcmul (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcmul/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcmul(1, 2)\n  //   returns 1: '2'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_multiply(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n  return result.toString()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcround(1, 2)"],"estarget":"es5","returns":["'1.00'"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcround in JavaScript","function":"bcround","category":"bc","language":"php","alias":["/functions/php/bcround/","/functions/bc/bcround/","/php/bcround/","/functions/bcround/"],"_content":"module.exports = function bcround (val, precision) {\n  //  discuss at: http://locutusjs.io/php/bcround/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcround(1, 2)\n  //   returns 1: '1.00'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var temp, result, digit\n  var rightOperand\n\n  // create number\n  temp = libbcmath.bc_init_num()\n  temp = libbcmath.php_str2num(val.toString())\n\n  // check if any rounding needs\n  if (precision >= temp.n_scale) {\n    // nothing to round, just add the zeros.\n    while (temp.n_scale < precision) {\n      temp.n_value[temp.n_len + temp.n_scale] = 0\n      temp.n_scale++\n    }\n    return temp.toString()\n  }\n\n  // get the digit we are checking (1 after the precision)\n  // loop through digits after the precision marker\n  digit = temp.n_value[temp.n_len + precision]\n\n  rightOperand = libbcmath.bc_init_num()\n  rightOperand = libbcmath.bc_new_num(1, precision)\n\n  if (digit >= 5) {\n    // round away from zero by adding 1 (or -1) at the \"precision\"..\n    // ie 1.44999 @ 3dp = (1.44999 + 0.001).toString().substr(0,5)\n    rightOperand.n_value[rightOperand.n_len + rightOperand.n_scale - 1] = 1\n    if (temp.n_sign === libbcmath.MINUS) {\n      // round down\n      rightOperand.n_sign = libbcmath.MINUS\n    }\n    result = libbcmath.bc_add(temp, rightOperand, precision)\n  } else {\n    // leave-as-is.. just truncate it.\n    result = temp\n  }\n\n  if (result.n_scale > precision) {\n    result.n_scale = precision\n  }\n\n  return result.toString()\n}\n","source":"php/bc/bcround.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bcround(1, 2)'\nestarget: es5\nreturns:\n  - '''1.00'''\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcround in JavaScript\nfunction: bcround\ncategory: bc\nlanguage: php\npermalink: php/bc/bcround/\nalias:\n  - /functions/php/bcround/\n  - /functions/bc/bcround/\n  - /php/bcround/\n  - /functions/bcround/\n---\nmodule.exports = function bcround (val, precision) {\n  //  discuss at: http://locutusjs.io/php/bcround/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcround(1, 2)\n  //   returns 1: '1.00'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var temp, result, digit\n  var rightOperand\n\n  // create number\n  temp = libbcmath.bc_init_num()\n  temp = libbcmath.php_str2num(val.toString())\n\n  // check if any rounding needs\n  if (precision >= temp.n_scale) {\n    // nothing to round, just add the zeros.\n    while (temp.n_scale < precision) {\n      temp.n_value[temp.n_len + temp.n_scale] = 0\n      temp.n_scale++\n    }\n    return temp.toString()\n  }\n\n  // get the digit we are checking (1 after the precision)\n  // loop through digits after the precision marker\n  digit = temp.n_value[temp.n_len + precision]\n\n  rightOperand = libbcmath.bc_init_num()\n  rightOperand = libbcmath.bc_new_num(1, precision)\n\n  if (digit >= 5) {\n    // round away from zero by adding 1 (or -1) at the \"precision\"..\n    // ie 1.44999 @ 3dp = (1.44999 + 0.001).toString().substr(0,5)\n    rightOperand.n_value[rightOperand.n_len + rightOperand.n_scale - 1] = 1\n    if (temp.n_sign === libbcmath.MINUS) {\n      // round down\n      rightOperand.n_sign = libbcmath.MINUS\n    }\n    result = libbcmath.bc_add(temp, rightOperand, precision)\n  } else {\n    // leave-as-is.. just truncate it.\n    result = temp\n  }\n\n  if (result.n_scale > precision) {\n    result.n_scale = precision\n  }\n\n  return result.toString()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcround/index.html","comments":1,"_id":"cinoej9yf000cou9y8eqanmao","content":"module.exports = function bcround (val, precision) {\n  //  discuss at: http://locutusjs.io/php/bcround/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcround(1, 2)\n  //   returns 1: '1.00'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var temp, result, digit\n  var rightOperand\n\n  // create number\n  temp = libbcmath.bc_init_num()\n  temp = libbcmath.php_str2num(val.toString())\n\n  // check if any rounding needs\n  if (precision >= temp.n_scale) {\n    // nothing to round, just add the zeros.\n    while (temp.n_scale < precision) {\n      temp.n_value[temp.n_len + temp.n_scale] = 0\n      temp.n_scale++\n    }\n    return temp.toString()\n  }\n\n  // get the digit we are checking (1 after the precision)\n  // loop through digits after the precision marker\n  digit = temp.n_value[temp.n_len + precision]\n\n  rightOperand = libbcmath.bc_init_num()\n  rightOperand = libbcmath.bc_new_num(1, precision)\n\n  if (digit >= 5) {\n    // round away from zero by adding 1 (or -1) at the \"precision\"..\n    // ie 1.44999 @ 3dp = (1.44999 + 0.001).toString().substr(0,5)\n    rightOperand.n_value[rightOperand.n_len + rightOperand.n_scale - 1] = 1\n    if (temp.n_sign === libbcmath.MINUS) {\n      // round down\n      rightOperand.n_sign = libbcmath.MINUS\n    }\n    result = libbcmath.bc_add(temp, rightOperand, precision)\n  } else {\n    // leave-as-is.. just truncate it.\n    result = temp\n  }\n\n  if (result.n_scale > precision) {\n    result.n_scale = precision\n  }\n\n  return result.toString()\n}\n","excerpt":"","more":"module.exports = function bcround (val, precision) {\n  //  discuss at: http://locutusjs.io/php/bcround/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcround(1, 2)\n  //   returns 1: '1.00'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var temp, result, digit\n  var rightOperand\n\n  // create number\n  temp = libbcmath.bc_init_num()\n  temp = libbcmath.php_str2num(val.toString())\n\n  // check if any rounding needs\n  if (precision >= temp.n_scale) {\n    // nothing to round, just add the zeros.\n    while (temp.n_scale < precision) {\n      temp.n_value[temp.n_len + temp.n_scale] = 0\n      temp.n_scale++\n    }\n    return temp.toString()\n  }\n\n  // get the digit we are checking (1 after the precision)\n  // loop through digits after the precision marker\n  digit = temp.n_value[temp.n_len + precision]\n\n  rightOperand = libbcmath.bc_init_num()\n  rightOperand = libbcmath.bc_new_num(1, precision)\n\n  if (digit >= 5) {\n    // round away from zero by adding 1 (or -1) at the \"precision\"..\n    // ie 1.44999 @ 3dp = (1.44999 + 0.001).toString().substr(0,5)\n    rightOperand.n_value[rightOperand.n_len + rightOperand.n_scale - 1] = 1\n    if (temp.n_sign === libbcmath.MINUS) {\n      // round down\n      rightOperand.n_sign = libbcmath.MINUS\n    }\n    result = libbcmath.bc_add(temp, rightOperand, precision)\n  } else {\n    // leave-as-is.. just truncate it.\n    result = temp\n  }\n\n  if (result.n_scale > precision) {\n    result.n_scale = precision\n  }\n\n  return result.toString()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcscale(1)"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcscale in JavaScript","function":"bcscale","category":"bc","language":"php","alias":["/functions/php/bcscale/","/functions/bc/bcscale/","/php/bcscale/","/functions/bcscale/"],"_content":"module.exports = function bcscale (scale) {\n  //  discuss at: http://locutusjs.io/php/bcscale/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcscale(1)\n  //   returns 1: true\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  scale = parseInt(scale, 10)\n  if (isNaN(scale)) {\n    return false\n  }\n  if (scale < 0) {\n    return false\n  }\n  libbcmath.scale = scale\n\n  return true\n}\n","source":"php/bc/bcscale.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - bcscale(1)\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcscale in JavaScript\nfunction: bcscale\ncategory: bc\nlanguage: php\npermalink: php/bc/bcscale/\nalias:\n  - /functions/php/bcscale/\n  - /functions/bc/bcscale/\n  - /php/bcscale/\n  - /functions/bcscale/\n---\nmodule.exports = function bcscale (scale) {\n  //  discuss at: http://locutusjs.io/php/bcscale/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcscale(1)\n  //   returns 1: true\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  scale = parseInt(scale, 10)\n  if (isNaN(scale)) {\n    return false\n  }\n  if (scale < 0) {\n    return false\n  }\n  libbcmath.scale = scale\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcscale/index.html","comments":1,"_id":"cinoej9yg000dou9y8486khm6","content":"module.exports = function bcscale (scale) {\n  //  discuss at: http://locutusjs.io/php/bcscale/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcscale(1)\n  //   returns 1: true\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  scale = parseInt(scale, 10)\n  if (isNaN(scale)) {\n    return false\n  }\n  if (scale < 0) {\n    return false\n  }\n  libbcmath.scale = scale\n\n  return true\n}\n","excerpt":"","more":"module.exports = function bcscale (scale) {\n  //  discuss at: http://locutusjs.io/php/bcscale/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcscale(1)\n  //   returns 1: true\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  scale = parseInt(scale, 10)\n  if (isNaN(scale)) {\n    return false\n  }\n  if (scale < 0) {\n    return false\n  }\n  libbcmath.scale = scale\n\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bcsub(1, 2)"],"estarget":"es5","returns":["'-1'"],"dependencies":[],"authors":{"original by":["lmeyrick (https://sourceforge.net/projects/bcmath-js/)"]},"notes":[],"layout":"function","title":"php'sbcsub in JavaScript","function":"bcsub","category":"bc","language":"php","alias":["/functions/php/bcsub/","/functions/bc/bcsub/","/php/bcsub/","/functions/bcsub/"],"_content":"module.exports = function bcsub (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcsub/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcsub(1, 2)\n  //   returns 1: '-1'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_sub(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","source":"php/bc/bcsub.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'bcsub(1, 2)'\nestarget: es5\nreturns:\n  - '''-1'''\ndependencies: []\nauthors:\n  original by:\n    - 'lmeyrick (https://sourceforge.net/projects/bcmath-js/)'\nnotes: []\nlayout: function\ntitle: php'sbcsub in JavaScript\nfunction: bcsub\ncategory: bc\nlanguage: php\npermalink: php/bc/bcsub/\nalias:\n  - /functions/php/bcsub/\n  - /functions/bc/bcsub/\n  - /php/bcsub/\n  - /functions/bcsub/\n---\nmodule.exports = function bcsub (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcsub/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcsub(1, 2)\n  //   returns 1: '-1'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_sub(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/bcsub/index.html","comments":1,"_id":"cinoej9yg000eou9ym1s41b56","content":"module.exports = function bcsub (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcsub/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcsub(1, 2)\n  //   returns 1: '-1'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_sub(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n","excerpt":"","more":"module.exports = function bcsub (leftOperand, rightOperand, scale) {\n  //  discuss at: http://locutusjs.io/php/bcsub/\n  // original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)\n  //   example 1: bcsub(1, 2)\n  //   returns 1: '-1'\n\n  var _bc = require('../_locutus_shared/_locutus_shared_bc')\n  var libbcmath = _bc()\n\n  var first, second, result\n\n  if (typeof scale === 'undefined') {\n    scale = libbcmath.scale\n  }\n  scale = ((scale < 0) ? 0 : scale)\n\n  // create objects\n  first = libbcmath.bc_init_num()\n  second = libbcmath.bc_init_num()\n  result = libbcmath.bc_init_num()\n\n  first = libbcmath.php_str2num(leftOperand.toString())\n  second = libbcmath.php_str2num(rightOperand.toString())\n\n  result = libbcmath.bc_sub(first, second, scale)\n\n  if (result.n_scale > scale) {\n    result.n_scale = scale\n  }\n\n  return result.toString()\n}\n"},{"type":"category","language":"php","category":"bc","title":"bc","_content":"","source":"php/bc/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: bc\ntitle: bc\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/bc/index.html","comments":1,"layout":"page","_id":"cinoej9yh000fou9yrpqafowg","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_change_key_case(42)","array_change_key_case([ 3, 5 ])","array_change_key_case({ FuBaR: 42 })","array_change_key_case({ FuBaR: 42 }, 'CASE_LOWER')","array_change_key_case({ FuBaR: 42 }, 'CASE_UPPER')","array_change_key_case({ FuBaR: 42 }, 2)"],"estarget":"es5","returns":["false","[3, 5]","{\"fubar\": 42}","{\"fubar\": 42}","{\"FUBAR\": 42}","{\"FUBAR\": 42}"],"dependencies":[],"authors":{"original by":["Ates Goral (http://magnetiq.com)"],"improved by":["marrtins","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_change_key_case in JavaScript","function":"array_change_key_case","category":"array","language":"php","alias":["/functions/php/array_change_key_case/","/functions/array/array_change_key_case/","/php/array_change_key_case/","/functions/array_change_key_case/"],"_content":"module.exports = function array_change_key_case (array, cs) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_change_key_case/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_change_key_case(42)\n  //   returns 1: false\n  //   example 2: array_change_key_case([ 3, 5 ])\n  //   returns 2: [3, 5]\n  //   example 3: array_change_key_case({ FuBaR: 42 })\n  //   returns 3: {\"fubar\": 42}\n  //   example 4: array_change_key_case({ FuBaR: 42 }, 'CASE_LOWER')\n  //   returns 4: {\"fubar\": 42}\n  //   example 5: array_change_key_case({ FuBaR: 42 }, 'CASE_UPPER')\n  //   returns 5: {\"FUBAR\": 42}\n  //   example 6: array_change_key_case({ FuBaR: 42 }, 2)\n  //   returns 6: {\"FUBAR\": 42}\n\n  var caseFnc\n  var key\n  var tmpArr = {}\n\n  if (Object.prototype.toString.call(array) === '[object Array]') {\n    return array\n  }\n\n  if (array && typeof array === 'object') {\n    caseFnc = (!cs || cs === 'CASE_LOWER') ? 'toLowerCase' : 'toUpperCase'\n    for (key in array) {\n      tmpArr[key[caseFnc]()] = array[key]\n    }\n    return tmpArr\n  }\n\n  return false\n}\n","source":"php/array/array_change_key_case.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - array_change_key_case(42)\n  - 'array_change_key_case([ 3, 5 ])'\n  - 'array_change_key_case({ FuBaR: 42 })'\n  - 'array_change_key_case({ FuBaR: 42 }, ''CASE_LOWER'')'\n  - 'array_change_key_case({ FuBaR: 42 }, ''CASE_UPPER'')'\n  - 'array_change_key_case({ FuBaR: 42 }, 2)'\nestarget: es5\nreturns:\n  - 'false'\n  - '[3, 5]'\n  - '{\"fubar\": 42}'\n  - '{\"fubar\": 42}'\n  - '{\"FUBAR\": 42}'\n  - '{\"FUBAR\": 42}'\ndependencies: []\nauthors:\n  original by:\n    - 'Ates Goral (http://magnetiq.com)'\n  improved by:\n    - marrtins\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_change_key_case in JavaScript\nfunction: array_change_key_case\ncategory: array\nlanguage: php\npermalink: php/array/array_change_key_case/\nalias:\n  - /functions/php/array_change_key_case/\n  - /functions/array/array_change_key_case/\n  - /php/array_change_key_case/\n  - /functions/array_change_key_case/\n---\nmodule.exports = function array_change_key_case (array, cs) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_change_key_case/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_change_key_case(42)\n  //   returns 1: false\n  //   example 2: array_change_key_case([ 3, 5 ])\n  //   returns 2: [3, 5]\n  //   example 3: array_change_key_case({ FuBaR: 42 })\n  //   returns 3: {\"fubar\": 42}\n  //   example 4: array_change_key_case({ FuBaR: 42 }, 'CASE_LOWER')\n  //   returns 4: {\"fubar\": 42}\n  //   example 5: array_change_key_case({ FuBaR: 42 }, 'CASE_UPPER')\n  //   returns 5: {\"FUBAR\": 42}\n  //   example 6: array_change_key_case({ FuBaR: 42 }, 2)\n  //   returns 6: {\"FUBAR\": 42}\n\n  var caseFnc\n  var key\n  var tmpArr = {}\n\n  if (Object.prototype.toString.call(array) === '[object Array]') {\n    return array\n  }\n\n  if (array && typeof array === 'object') {\n    caseFnc = (!cs || cs === 'CASE_LOWER') ? 'toLowerCase' : 'toUpperCase'\n    for (key in array) {\n      tmpArr[key[caseFnc]()] = array[key]\n    }\n    return tmpArr\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_change_key_case/index.html","comments":1,"_id":"cinoej9yh000gou9ywdlq06rj","content":"module.exports = function array_change_key_case (array, cs) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_change_key_case/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_change_key_case(42)\n  //   returns 1: false\n  //   example 2: array_change_key_case([ 3, 5 ])\n  //   returns 2: [3, 5]\n  //   example 3: array_change_key_case({ FuBaR: 42 })\n  //   returns 3: {\"fubar\": 42}\n  //   example 4: array_change_key_case({ FuBaR: 42 }, 'CASE_LOWER')\n  //   returns 4: {\"fubar\": 42}\n  //   example 5: array_change_key_case({ FuBaR: 42 }, 'CASE_UPPER')\n  //   returns 5: {\"FUBAR\": 42}\n  //   example 6: array_change_key_case({ FuBaR: 42 }, 2)\n  //   returns 6: {\"FUBAR\": 42}\n\n  var caseFnc\n  var key\n  var tmpArr = {}\n\n  if (Object.prototype.toString.call(array) === '[object Array]') {\n    return array\n  }\n\n  if (array && typeof array === 'object') {\n    caseFnc = (!cs || cs === 'CASE_LOWER') ? 'toLowerCase' : 'toUpperCase'\n    for (key in array) {\n      tmpArr[key[caseFnc]()] = array[key]\n    }\n    return tmpArr\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function array_change_key_case (array, cs) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_change_key_case/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_change_key_case(42)\n  //   returns 1: false\n  //   example 2: array_change_key_case([ 3, 5 ])\n  //   returns 2: [3, 5]\n  //   example 3: array_change_key_case({ FuBaR: 42 })\n  //   returns 3: {\"fubar\": 42}\n  //   example 4: array_change_key_case({ FuBaR: 42 }, 'CASE_LOWER')\n  //   returns 4: {\"fubar\": 42}\n  //   example 5: array_change_key_case({ FuBaR: 42 }, 'CASE_UPPER')\n  //   returns 5: {\"FUBAR\": 42}\n  //   example 6: array_change_key_case({ FuBaR: 42 }, 2)\n  //   returns 6: {\"FUBAR\": 42}\n\n  var caseFnc\n  var key\n  var tmpArr = {}\n\n  if (Object.prototype.toString.call(array) === '[object Array]') {\n    return array\n  }\n\n  if (array && typeof array === 'object') {\n    caseFnc = (!cs || cs === 'CASE_LOWER') ? 'toLowerCase' : 'toUpperCase'\n    for (key in array) {\n      tmpArr[key[caseFnc]()] = array[key]\n    }\n    return tmpArr\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_chunk(['Kevin', 'van', 'Zonneveld'], 2)","array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)","array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)","array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)"],"estarget":"es5","returns":["[['Kevin', 'van'], ['Zonneveld']]","[{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]","[['Kevin', 'van'], ['Zonneveld']]","[{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]"],"dependencies":[],"authors":{"original by":["Carlos R. L. Rodrigues (http://www.jsfromhell.com)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Important note: Per the ECMAScript specification,\nobjects may not always iterate in a predictable order"],"layout":"function","title":"php'sarray_chunk in JavaScript","function":"array_chunk","category":"array","language":"php","alias":["/functions/php/array_chunk/","/functions/array/array_chunk/","/php/array_chunk/","/functions/array_chunk/"],"_content":"module.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n","source":"php/array/array_chunk.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_chunk([''Kevin'', ''van'', ''Zonneveld''], 2)'\n  - 'array_chunk([''Kevin'', ''van'', ''Zonneveld''], 2, true)'\n  - 'array_chunk({1:''Kevin'', 2:''van'', 3:''Zonneveld''}, 2)'\n  - 'array_chunk({1:''Kevin'', 2:''van'', 3:''Zonneveld''}, 2, true)'\nestarget: es5\nreturns:\n  - '[[''Kevin'', ''van''], [''Zonneveld'']]'\n  - '[{0:''Kevin'', 1:''van''}, {2: ''Zonneveld''}]'\n  - '[[''Kevin'', ''van''], [''Zonneveld'']]'\n  - '[{1: ''Kevin'', 2: ''van''}, {3: ''Zonneveld''}]'\ndependencies: []\nauthors:\n  original by:\n    - 'Carlos R. L. Rodrigues (http://www.jsfromhell.com)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    Important note: Per the ECMAScript specification,\n    objects may not always iterate in a predictable order\nlayout: function\ntitle: php'sarray_chunk in JavaScript\nfunction: array_chunk\ncategory: array\nlanguage: php\npermalink: php/array/array_chunk/\nalias:\n  - /functions/php/array_chunk/\n  - /functions/array/array_chunk/\n  - /php/array_chunk/\n  - /functions/array_chunk/\n---\nmodule.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_chunk/index.html","comments":1,"_id":"cinoej9yi000hou9yc4vlv2xk","content":"module.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n","excerpt":"","more":"module.exports = function array_chunk (input, size, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_chunk/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Important note: Per the ECMAScript specification,\n  //      note 1: objects may not always iterate in a predictable order\n  //   example 1: array_chunk(['Kevin', 'van', 'Zonneveld'], 2)\n  //   returns 1: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 2: array_chunk(['Kevin', 'van', 'Zonneveld'], 2, true)\n  //   returns 2: [{0:'Kevin', 1:'van'}, {2: 'Zonneveld'}]\n  //   example 3: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2)\n  //   returns 3: [['Kevin', 'van'], ['Zonneveld']]\n  //   example 4: array_chunk({1:'Kevin', 2:'van', 3:'Zonneveld'}, 2, true)\n  //   returns 4: [{1: 'Kevin', 2: 'van'}, {3: 'Zonneveld'}]\n\n  var x\n  var p = ''\n  var i = 0\n  var c = -1\n  var l = input.length || 0\n  var n = []\n\n  if (size < 1) {\n    return null\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]') {\n    if (preserveKeys) {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][i] = input[i]\n          : n[++c] = {}; n[c][i] = input[i]\n        i++\n      }\n    } else {\n      while (i < l) {\n        (x = i % size)\n          ? n[c][x] = input[i]\n          : n[++c] = [input[i]]\n        i++\n      }\n    }\n  } else {\n    if (preserveKeys) {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][p] = input[p]\n            : n[++c] = {}; n[c][p] = input[p]\n          i++\n        }\n      }\n    } else {\n      for (p in input) {\n        if (input.hasOwnProperty(p)) {\n          (x = i % size)\n            ? n[c][x] = input[p]\n            : n[++c] = [input[p]]\n          i++\n        }\n      }\n    }\n  }\n\n  return n\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_combine([0,1,2], ['kevin','van','zonneveld'])"],"estarget":"es5","returns":["{0: 'kevin', 1: 'van', 2: 'zonneveld'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_combine in JavaScript","function":"array_combine","category":"array","language":"php","alias":["/functions/php/array_combine/","/functions/array/array_combine/","/php/array_combine/","/functions/array_combine/"],"_content":"module.exports = function array_combine (keys, values) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_combine/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_combine([0,1,2], ['kevin','van','zonneveld'])\n  //   returns 1: {0: 'kevin', 1: 'van', 2: 'zonneveld'}\n\n  var newArray = {}\n  var i = 0\n\n  // input sanitation\n  // Only accept arrays or array-like objects\n  // Require arrays to have a count\n  if (typeof keys !== 'object') {\n    return false\n  }\n  if (typeof values !== 'object') {\n    return false\n  }\n  if (typeof keys.length !== 'number') {\n    return false\n  }\n  if (typeof values.length !== 'number') {\n    return false\n  }\n  if (!keys.length) {\n    return false\n  }\n\n  // number of elements does not match\n  if (keys.length !== values.length) {\n    return false\n  }\n\n  for (i = 0; i < keys.length; i++) {\n    newArray[keys[i]] = values[i]\n  }\n\n  return newArray\n}\n","source":"php/array/array_combine.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_combine([0,1,2], [''kevin'',''van'',''zonneveld''])'\nestarget: es5\nreturns:\n  - '{0: ''kevin'', 1: ''van'', 2: ''zonneveld''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_combine in JavaScript\nfunction: array_combine\ncategory: array\nlanguage: php\npermalink: php/array/array_combine/\nalias:\n  - /functions/php/array_combine/\n  - /functions/array/array_combine/\n  - /php/array_combine/\n  - /functions/array_combine/\n---\nmodule.exports = function array_combine (keys, values) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_combine/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_combine([0,1,2], ['kevin','van','zonneveld'])\n  //   returns 1: {0: 'kevin', 1: 'van', 2: 'zonneveld'}\n\n  var newArray = {}\n  var i = 0\n\n  // input sanitation\n  // Only accept arrays or array-like objects\n  // Require arrays to have a count\n  if (typeof keys !== 'object') {\n    return false\n  }\n  if (typeof values !== 'object') {\n    return false\n  }\n  if (typeof keys.length !== 'number') {\n    return false\n  }\n  if (typeof values.length !== 'number') {\n    return false\n  }\n  if (!keys.length) {\n    return false\n  }\n\n  // number of elements does not match\n  if (keys.length !== values.length) {\n    return false\n  }\n\n  for (i = 0; i < keys.length; i++) {\n    newArray[keys[i]] = values[i]\n  }\n\n  return newArray\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_combine/index.html","comments":1,"_id":"cinoej9yr000iou9ypcuyv5wf","content":"module.exports = function array_combine (keys, values) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_combine/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_combine([0,1,2], ['kevin','van','zonneveld'])\n  //   returns 1: {0: 'kevin', 1: 'van', 2: 'zonneveld'}\n\n  var newArray = {}\n  var i = 0\n\n  // input sanitation\n  // Only accept arrays or array-like objects\n  // Require arrays to have a count\n  if (typeof keys !== 'object') {\n    return false\n  }\n  if (typeof values !== 'object') {\n    return false\n  }\n  if (typeof keys.length !== 'number') {\n    return false\n  }\n  if (typeof values.length !== 'number') {\n    return false\n  }\n  if (!keys.length) {\n    return false\n  }\n\n  // number of elements does not match\n  if (keys.length !== values.length) {\n    return false\n  }\n\n  for (i = 0; i < keys.length; i++) {\n    newArray[keys[i]] = values[i]\n  }\n\n  return newArray\n}\n","excerpt":"","more":"module.exports = function array_combine (keys, values) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_combine/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_combine([0,1,2], ['kevin','van','zonneveld'])\n  //   returns 1: {0: 'kevin', 1: 'van', 2: 'zonneveld'}\n\n  var newArray = {}\n  var i = 0\n\n  // input sanitation\n  // Only accept arrays or array-like objects\n  // Require arrays to have a count\n  if (typeof keys !== 'object') {\n    return false\n  }\n  if (typeof values !== 'object') {\n    return false\n  }\n  if (typeof keys.length !== 'number') {\n    return false\n  }\n  if (typeof values.length !== 'number') {\n    return false\n  }\n  if (!keys.length) {\n    return false\n  }\n\n  // number of elements does not match\n  if (keys.length !== values.length) {\n    return false\n  }\n\n  for (i = 0; i < keys.length; i++) {\n    newArray[keys[i]] = values[i]\n  }\n\n  return newArray\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])","array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })","array_count_values([ true, 4.2, 42, \"fubar\" ])"],"estarget":"es5","returns":["{3:2, 5:1, \"foo\":2, \"bar\":1}","{3:2, 5:1, \"foo\":2, \"bar\":1}","{42:1, \"fubar\":1}"],"dependencies":[],"authors":{"original by":["Ates Goral (http://magnetiq.com)"],"improved by":["Michael White (http://getsprink.com)","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["sankai","Shingo"]},"notes":[],"layout":"function","title":"php'sarray_count_values in JavaScript","function":"array_count_values","category":"array","language":"php","alias":["/functions/php/array_count_values/","/functions/array/array_count_values/","/php/array_count_values/","/functions/array_count_values/"],"_content":"module.exports = function array_count_values (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_count_values/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: sankai\n  //    input by: Shingo\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])\n  //   returns 1: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 2: array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })\n  //   returns 2: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 3: array_count_values([ true, 4.2, 42, \"fubar\" ])\n  //   returns 3: {42:1, \"fubar\":1}\n\n  var tmpArr = {}\n  var key = ''\n  var t = ''\n\n  var _getType = function (obj) {\n    // Objects are php associative arrays.\n    var t = typeof obj\n    t = t.toLowerCase()\n    if (t === 'object') {\n      t = 'array'\n    }\n    return t\n  }\n\n  var _countValue = function (tmpArr, value) {\n    if (typeof value === 'number') {\n      if (Math.floor(value) !== value) {\n        return\n      }\n    } else if (typeof value !== 'string') {\n      return\n    }\n\n    if (value in tmpArr && tmpArr.hasOwnProperty(value)) {\n      ++tmpArr[value]\n    } else {\n      tmpArr[value] = 1\n    }\n  }\n\n  t = _getType(array)\n  if (t === 'array') {\n    for (key in array) {\n      if (array.hasOwnProperty(key)) {\n        _countValue.call(this, tmpArr, array[key])\n      }\n    }\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_count_values.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])'\n  - 'array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })'\n  - 'array_count_values([ true, 4.2, 42, \"fubar\" ])'\nestarget: es5\nreturns:\n  - '{3:2, 5:1, \"foo\":2, \"bar\":1}'\n  - '{3:2, 5:1, \"foo\":2, \"bar\":1}'\n  - '{42:1, \"fubar\":1}'\ndependencies: []\nauthors:\n  original by:\n    - 'Ates Goral (http://magnetiq.com)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - sankai\n    - Shingo\nnotes: []\nlayout: function\ntitle: php'sarray_count_values in JavaScript\nfunction: array_count_values\ncategory: array\nlanguage: php\npermalink: php/array/array_count_values/\nalias:\n  - /functions/php/array_count_values/\n  - /functions/array/array_count_values/\n  - /php/array_count_values/\n  - /functions/array_count_values/\n---\nmodule.exports = function array_count_values (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_count_values/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: sankai\n  //    input by: Shingo\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])\n  //   returns 1: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 2: array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })\n  //   returns 2: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 3: array_count_values([ true, 4.2, 42, \"fubar\" ])\n  //   returns 3: {42:1, \"fubar\":1}\n\n  var tmpArr = {}\n  var key = ''\n  var t = ''\n\n  var _getType = function (obj) {\n    // Objects are php associative arrays.\n    var t = typeof obj\n    t = t.toLowerCase()\n    if (t === 'object') {\n      t = 'array'\n    }\n    return t\n  }\n\n  var _countValue = function (tmpArr, value) {\n    if (typeof value === 'number') {\n      if (Math.floor(value) !== value) {\n        return\n      }\n    } else if (typeof value !== 'string') {\n      return\n    }\n\n    if (value in tmpArr && tmpArr.hasOwnProperty(value)) {\n      ++tmpArr[value]\n    } else {\n      tmpArr[value] = 1\n    }\n  }\n\n  t = _getType(array)\n  if (t === 'array') {\n    for (key in array) {\n      if (array.hasOwnProperty(key)) {\n        _countValue.call(this, tmpArr, array[key])\n      }\n    }\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_count_values/index.html","comments":1,"_id":"cinoej9yw000jou9y2mckte48","content":"module.exports = function array_count_values (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_count_values/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: sankai\n  //    input by: Shingo\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])\n  //   returns 1: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 2: array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })\n  //   returns 2: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 3: array_count_values([ true, 4.2, 42, \"fubar\" ])\n  //   returns 3: {42:1, \"fubar\":1}\n\n  var tmpArr = {}\n  var key = ''\n  var t = ''\n\n  var _getType = function (obj) {\n    // Objects are php associative arrays.\n    var t = typeof obj\n    t = t.toLowerCase()\n    if (t === 'object') {\n      t = 'array'\n    }\n    return t\n  }\n\n  var _countValue = function (tmpArr, value) {\n    if (typeof value === 'number') {\n      if (Math.floor(value) !== value) {\n        return\n      }\n    } else if (typeof value !== 'string') {\n      return\n    }\n\n    if (value in tmpArr && tmpArr.hasOwnProperty(value)) {\n      ++tmpArr[value]\n    } else {\n      tmpArr[value] = 1\n    }\n  }\n\n  t = _getType(array)\n  if (t === 'array') {\n    for (key in array) {\n      if (array.hasOwnProperty(key)) {\n        _countValue.call(this, tmpArr, array[key])\n      }\n    }\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_count_values (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_count_values/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: sankai\n  //    input by: Shingo\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_count_values([ 3, 5, 3, \"foo\", \"bar\", \"foo\" ])\n  //   returns 1: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 2: array_count_values({ p1: 3, p2: 5, p3: 3, p4: \"foo\", p5: \"bar\", p6: \"foo\" })\n  //   returns 2: {3:2, 5:1, \"foo\":2, \"bar\":1}\n  //   example 3: array_count_values([ true, 4.2, 42, \"fubar\" ])\n  //   returns 3: {42:1, \"fubar\":1}\n\n  var tmpArr = {}\n  var key = ''\n  var t = ''\n\n  var _getType = function (obj) {\n    // Objects are php associative arrays.\n    var t = typeof obj\n    t = t.toLowerCase()\n    if (t === 'object') {\n      t = 'array'\n    }\n    return t\n  }\n\n  var _countValue = function (tmpArr, value) {\n    if (typeof value === 'number') {\n      if (Math.floor(value) !== value) {\n        return\n      }\n    } else if (typeof value !== 'string') {\n      return\n    }\n\n    if (value in tmpArr && tmpArr.hasOwnProperty(value)) {\n      ++tmpArr[value]\n    } else {\n      tmpArr[value] = 1\n    }\n  }\n\n  t = _getType(array)\n  if (t === 'array') {\n    for (key in array) {\n      if (array.hasOwnProperty(key)) {\n        _countValue.call(this, tmpArr, array[key])\n      }\n    }\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])"],"estarget":"es5","returns":["{0:'Kevin'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Sanjoy Roy"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_diff in JavaScript","function":"array_diff","category":"array","language":"php","alias":["/functions/php/array_diff/","/functions/array/array_diff/","/php/array_diff/","/functions/array_diff/"],"_content":"module.exports = function array_diff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sanjoy Roy\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])\n  //   returns 1: {0:'Kevin'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_diff.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_diff([''Kevin'', ''van'', ''Zonneveld''], [''van'', ''Zonneveld''])'\nestarget: es5\nreturns:\n  - '{0:''Kevin''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Sanjoy Roy\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_diff in JavaScript\nfunction: array_diff\ncategory: array\nlanguage: php\npermalink: php/array/array_diff/\nalias:\n  - /functions/php/array_diff/\n  - /functions/array/array_diff/\n  - /php/array_diff/\n  - /functions/array_diff/\n---\nmodule.exports = function array_diff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sanjoy Roy\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])\n  //   returns 1: {0:'Kevin'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_diff/index.html","comments":1,"_id":"cinoej9yx000kou9ydhxtdgwp","content":"module.exports = function array_diff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sanjoy Roy\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])\n  //   returns 1: {0:'Kevin'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_diff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sanjoy Roy\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld'])\n  //   returns 1: {0:'Kevin'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'})"],"estarget":"es5","returns":["{1: 'van', 2: 'Zonneveld'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["0m3r"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_diff_assoc in JavaScript","function":"array_diff_assoc","category":"array","language":"php","alias":["/functions/php/array_diff_assoc/","/functions/array/array_diff_assoc/","/php/array_diff_assoc/","/functions/array_diff_assoc/"],"_content":"module.exports = function array_diff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_assoc/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: 0m3r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_diff_assoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4:\n    'van', 5: 'Zonneveld'})\nestarget: es5\nreturns:\n  - '{1: ''van'', 2: ''Zonneveld''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 0m3r\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_diff_assoc in JavaScript\nfunction: array_diff_assoc\ncategory: array\nlanguage: php\npermalink: php/array/array_diff_assoc/\nalias:\n  - /functions/php/array_diff_assoc/\n  - /functions/array/array_diff_assoc/\n  - /php/array_diff_assoc/\n  - /functions/array_diff_assoc/\n---\nmodule.exports = function array_diff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_assoc/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: 0m3r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_diff_assoc/index.html","comments":1,"_id":"cinoej9yx000lou9yy2voapkj","content":"module.exports = function array_diff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_assoc/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: 0m3r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_diff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_assoc/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: 0m3r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_diff_assoc({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})","array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})"],"estarget":"es5","returns":["{\"green\":2, \"blue\":3, \"white\":4}","{\"green\":2, \"blue\":3, \"white\":4}"],"dependencies":[],"authors":{"original by":["Ates Goral (http://magnetiq.com)"],"revised by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Everlasto"]},"notes":[],"layout":"function","title":"php'sarray_diff_key in JavaScript","function":"array_diff_key","category":"array","language":"php","alias":["/functions/php/array_diff_key/","/functions/array/array_diff_key/","/php/array_diff_key/","/functions/array_diff_key/"],"_content":"module.exports = function array_diff_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_key/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Everlasto\n  //   example 1: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})\n  //   returns 1: {\"green\":2, \"blue\":3, \"white\":4}\n  //   example 2: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})\n  //   returns 2: {\"green\":2, \"blue\":3, \"white\":4}\n\n  var argl = arguments.length\n  var retArr = {}\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_diff_key.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})'\n  - 'array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})'\nestarget: es5\nreturns:\n  - '{\"green\":2, \"blue\":3, \"white\":4}'\n  - '{\"green\":2, \"blue\":3, \"white\":4}'\ndependencies: []\nauthors:\n  original by:\n    - 'Ates Goral (http://magnetiq.com)'\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Everlasto\nnotes: []\nlayout: function\ntitle: php'sarray_diff_key in JavaScript\nfunction: array_diff_key\ncategory: array\nlanguage: php\npermalink: php/array/array_diff_key/\nalias:\n  - /functions/php/array_diff_key/\n  - /functions/array/array_diff_key/\n  - /php/array_diff_key/\n  - /functions/array_diff_key/\n---\nmodule.exports = function array_diff_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_key/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Everlasto\n  //   example 1: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})\n  //   returns 1: {\"green\":2, \"blue\":3, \"white\":4}\n  //   example 2: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})\n  //   returns 2: {\"green\":2, \"blue\":3, \"white\":4}\n\n  var argl = arguments.length\n  var retArr = {}\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_diff_key/index.html","comments":1,"_id":"cinoej9yy000mou9y72lfxakd","content":"module.exports = function array_diff_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_key/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Everlasto\n  //   example 1: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})\n  //   returns 1: {\"green\":2, \"blue\":3, \"white\":4}\n  //   example 2: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})\n  //   returns 2: {\"green\":2, \"blue\":3, \"white\":4}\n\n  var argl = arguments.length\n  var retArr = {}\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_diff_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_key/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Everlasto\n  //   example 1: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5})\n  //   returns 1: {\"green\":2, \"blue\":3, \"white\":4}\n  //   example 2: array_diff_key({red: 1, green: 2, blue: 3, white: 4}, {red: 5}, {red: 5})\n  //   returns 2: {\"green\":2, \"blue\":3, \"white\":4}\n\n  var argl = arguments.length\n  var retArr = {}\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < argl; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)) })"],"estarget":"es5","returns":["{b: 'brown', c: 'blue', 0: 'red'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_diff_uassoc in JavaScript","function":"array_diff_uassoc","category":"array","language":"php","alias":["/functions/php/array_diff_uassoc/","/functions/array/array_diff_uassoc/","/php/array_diff_uassoc/","/functions/array_diff_uassoc/"],"_content":"module.exports = function array_diff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)) })\n  //   returns 1: {b: 'brown', c: 'blue', 0: 'red'}\n  //        test: skip-1\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_diff_uassoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 ===\n    key2 ? 0 : (key1 > key2 ? 1 : -1)) })\nestarget: es5\nreturns:\n  - '{b: ''brown'', c: ''blue'', 0: ''red''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_diff_uassoc in JavaScript\nfunction: array_diff_uassoc\ncategory: array\nlanguage: php\npermalink: php/array/array_diff_uassoc/\nalias:\n  - /functions/php/array_diff_uassoc/\n  - /functions/array/array_diff_uassoc/\n  - /php/array_diff_uassoc/\n  - /functions/array_diff_uassoc/\n---\nmodule.exports = function array_diff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)) })\n  //   returns 1: {b: 'brown', c: 'blue', 0: 'red'}\n  //        test: skip-1\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_diff_uassoc/index.html","comments":1,"_id":"cinoej9yy000nou9ya675krie","content":"module.exports = function array_diff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)) })\n  //   returns 1: {b: 'brown', c: 'blue', 0: 'red'}\n  //        test: skip-1\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_diff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_diff_uassoc($array1, $array2, function (key1, key2) { return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)) })\n  //   returns 1: {b: 'brown', c: 'blue', 0: 'red'}\n  //        test: skip-1\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\nvar $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\narray_diff_ukey($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })"],"estarget":"es5","returns":["{red: 2, purple: 4}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_diff_ukey in JavaScript","function":"array_diff_ukey","category":"array","language":"php","alias":["/functions/php/array_diff_ukey/","/functions/array/array_diff_ukey/","/php/array_diff_ukey/","/functions/array_diff_ukey/"],"_content":"module.exports = function array_diff_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_diff_ukey($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {red: 2, purple: 4}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  // var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_diff_ukey.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n\n    var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n\n    array_diff_ukey($array1, $array2, function (key1, key2){ return (key1 ===\n    key2 ? 0 : (key1 > key2 ? 1 : -1)); })\nestarget: es5\nreturns:\n  - '{red: 2, purple: 4}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_diff_ukey in JavaScript\nfunction: array_diff_ukey\ncategory: array\nlanguage: php\npermalink: php/array/array_diff_ukey/\nalias:\n  - /functions/php/array_diff_ukey/\n  - /functions/array/array_diff_ukey/\n  - /php/array_diff_ukey/\n  - /functions/array_diff_ukey/\n---\nmodule.exports = function array_diff_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_diff_ukey($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {red: 2, purple: 4}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  // var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_diff_ukey/index.html","comments":1,"_id":"cinoej9yz000oou9yglttwx0m","content":"module.exports = function array_diff_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_diff_ukey($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {red: 2, purple: 4}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  // var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_diff_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_diff_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_diff_ukey($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {red: 2, purple: 4}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  // var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_fill(5, 6, 'banana')"],"estarget":"es5","returns":["{ 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10: 'banana' }"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'sarray_fill in JavaScript","function":"array_fill","category":"array","language":"php","alias":["/functions/php/array_fill/","/functions/array/array_fill/","/php/array_fill/","/functions/array_fill/"],"_content":"module.exports = function array_fill (startIndex, num, mixedVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_fill(5, 6, 'banana')\n  //   returns 1: { 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10: 'banana' }\n\n  var key\n  var tmpArr = {}\n\n  if (!isNaN(startIndex) && !isNaN(num)) {\n    for (key = 0; key < num; key++) {\n      tmpArr[(key + startIndex)] = mixedVal\n    }\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_fill.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_fill(5, 6, ''banana'')'\nestarget: es5\nreturns:\n  - >-\n    { 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10:\n    'banana' }\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'sarray_fill in JavaScript\nfunction: array_fill\ncategory: array\nlanguage: php\npermalink: php/array/array_fill/\nalias:\n  - /functions/php/array_fill/\n  - /functions/array/array_fill/\n  - /php/array_fill/\n  - /functions/array_fill/\n---\nmodule.exports = function array_fill (startIndex, num, mixedVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_fill(5, 6, 'banana')\n  //   returns 1: { 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10: 'banana' }\n\n  var key\n  var tmpArr = {}\n\n  if (!isNaN(startIndex) && !isNaN(num)) {\n    for (key = 0; key < num; key++) {\n      tmpArr[(key + startIndex)] = mixedVal\n    }\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_fill/index.html","comments":1,"_id":"cinoej9z0000pou9ywfo5qylk","content":"module.exports = function array_fill (startIndex, num, mixedVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_fill(5, 6, 'banana')\n  //   returns 1: { 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10: 'banana' }\n\n  var key\n  var tmpArr = {}\n\n  if (!isNaN(startIndex) && !isNaN(num)) {\n    for (key = 0; key < num; key++) {\n      tmpArr[(key + startIndex)] = mixedVal\n    }\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_fill (startIndex, num, mixedVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_fill(5, 6, 'banana')\n  //   returns 1: { 5: 'banana', 6: 'banana', 7: 'banana', 8: 'banana', 9: 'banana', 10: 'banana' }\n\n  var key\n  var tmpArr = {}\n\n  if (!isNaN(startIndex) && !isNaN(num)) {\n    for (key = 0; key < num; key++) {\n      tmpArr[(key + startIndex)] = mixedVal\n    }\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\narray_fill_keys($keys, 'banana')"],"estarget":"es5","returns":["{\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_fill_keys in JavaScript","function":"array_fill_keys","category":"array","language":"php","alias":["/functions/php/array_fill_keys/","/functions/array/array_fill_keys/","/php/array_fill_keys/","/functions/array_fill_keys/"],"_content":"module.exports = function array_fill_keys (keys, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill_keys/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\n  //   example 1: array_fill_keys($keys, 'banana')\n  //   returns 1: {\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}\n\n  var retObj = {}\n  var key = ''\n\n  for (key in keys) {\n    retObj[keys[key]] = value\n  }\n\n  return retObj\n}\n","source":"php/array/array_fill_keys.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\n    array_fill_keys($keys, 'banana')\nestarget: es5\nreturns:\n  - '{\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_fill_keys in JavaScript\nfunction: array_fill_keys\ncategory: array\nlanguage: php\npermalink: php/array/array_fill_keys/\nalias:\n  - /functions/php/array_fill_keys/\n  - /functions/array/array_fill_keys/\n  - /php/array_fill_keys/\n  - /functions/array_fill_keys/\n---\nmodule.exports = function array_fill_keys (keys, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill_keys/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\n  //   example 1: array_fill_keys($keys, 'banana')\n  //   returns 1: {\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}\n\n  var retObj = {}\n  var key = ''\n\n  for (key in keys) {\n    retObj[keys[key]] = value\n  }\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_fill_keys/index.html","comments":1,"_id":"cinoej9z0000qou9y7q67zjgd","content":"module.exports = function array_fill_keys (keys, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill_keys/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\n  //   example 1: array_fill_keys($keys, 'banana')\n  //   returns 1: {\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}\n\n  var retObj = {}\n  var key = ''\n\n  for (key in keys) {\n    retObj[keys[key]] = value\n  }\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function array_fill_keys (keys, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_fill_keys/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $keys = {'a': 'foo', 2: 5, 3: 10, 4: 'bar'}\n  //   example 1: array_fill_keys($keys, 'banana')\n  //   returns 1: {\"foo\": \"banana\", 5: \"banana\", 10: \"banana\", \"bar\": \"banana\"}\n\n  var retObj = {}\n  var key = ''\n\n  for (key in keys) {\n    retObj[keys[key]] = value\n  }\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var odd = function (num) {return (num & 1);}\narray_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)","var even = function (num) {return (!(num & 1));}\narray_filter([6, 7, 8, 9, 10, 11, 12], even)","array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'', \"g\":undefined})"],"estarget":"es5","returns":["{\"a\": 1, \"c\": 3, \"e\": 5}","[ 6, , 8, , 10, , 12 ]","{\"a\":1, \"c\":-1}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"input by":["max4ever"]},"notes":["Takes a function as an argument, not a function's name"],"layout":"function","title":"php'sarray_filter in JavaScript","function":"array_filter","category":"array","language":"php","alias":["/functions/php/array_filter/","/functions/array/array_filter/","/php/array_filter/","/functions/array_filter/"],"_content":"module.exports = function array_filter (arr, func) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_filter/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: max4ever\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: var odd = function (num) {return (num & 1);}\n  //   example 1: array_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)\n  //   returns 1: {\"a\": 1, \"c\": 3, \"e\": 5}\n  //   example 2: var even = function (num) {return (!(num & 1));}\n  //   example 2: array_filter([6, 7, 8, 9, 10, 11, 12], even)\n  //   returns 2: [ 6, , 8, , 10, , 12 ]\n  //   example 3: array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'', \"g\":undefined})\n  //   returns 3: {\"a\":1, \"c\":-1}\n\n  var retObj = {}\n  var k\n\n  func = func || function (v) {\n    return v\n  }\n\n  // @todo: Issue #73\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n  }\n\n  for (k in arr) {\n    if (func(arr[k])) {\n      retObj[k] = arr[k]\n    }\n  }\n\n  return retObj\n}\n","source":"php/array/array_filter.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var odd = function (num) {return (num & 1);}\n    array_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)\n  - |-\n    var even = function (num) {return (!(num & 1));}\n    array_filter([6, 7, 8, 9, 10, 11, 12], even)\n  - >-\n    array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'',\n    \"g\":undefined})\nestarget: es5\nreturns:\n  - '{\"a\": 1, \"c\": 3, \"e\": 5}'\n  - '[ 6, , 8, , 10, , 12 ]'\n  - '{\"a\":1, \"c\":-1}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - max4ever\nnotes:\n  - 'Takes a function as an argument, not a function''s name'\nlayout: function\ntitle: php'sarray_filter in JavaScript\nfunction: array_filter\ncategory: array\nlanguage: php\npermalink: php/array/array_filter/\nalias:\n  - /functions/php/array_filter/\n  - /functions/array/array_filter/\n  - /php/array_filter/\n  - /functions/array_filter/\n---\nmodule.exports = function array_filter (arr, func) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_filter/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: max4ever\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: var odd = function (num) {return (num & 1);}\n  //   example 1: array_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)\n  //   returns 1: {\"a\": 1, \"c\": 3, \"e\": 5}\n  //   example 2: var even = function (num) {return (!(num & 1));}\n  //   example 2: array_filter([6, 7, 8, 9, 10, 11, 12], even)\n  //   returns 2: [ 6, , 8, , 10, , 12 ]\n  //   example 3: array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'', \"g\":undefined})\n  //   returns 3: {\"a\":1, \"c\":-1}\n\n  var retObj = {}\n  var k\n\n  func = func || function (v) {\n    return v\n  }\n\n  // @todo: Issue #73\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n  }\n\n  for (k in arr) {\n    if (func(arr[k])) {\n      retObj[k] = arr[k]\n    }\n  }\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_filter/index.html","comments":1,"_id":"cinoej9z1000rou9ysbx4dlcl","content":"module.exports = function array_filter (arr, func) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_filter/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: max4ever\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: var odd = function (num) {return (num & 1);}\n  //   example 1: array_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)\n  //   returns 1: {\"a\": 1, \"c\": 3, \"e\": 5}\n  //   example 2: var even = function (num) {return (!(num & 1));}\n  //   example 2: array_filter([6, 7, 8, 9, 10, 11, 12], even)\n  //   returns 2: [ 6, , 8, , 10, , 12 ]\n  //   example 3: array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'', \"g\":undefined})\n  //   returns 3: {\"a\":1, \"c\":-1}\n\n  var retObj = {}\n  var k\n\n  func = func || function (v) {\n    return v\n  }\n\n  // @todo: Issue #73\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n  }\n\n  for (k in arr) {\n    if (func(arr[k])) {\n      retObj[k] = arr[k]\n    }\n  }\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function array_filter (arr, func) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_filter/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: max4ever\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: var odd = function (num) {return (num & 1);}\n  //   example 1: array_filter({\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5}, odd)\n  //   returns 1: {\"a\": 1, \"c\": 3, \"e\": 5}\n  //   example 2: var even = function (num) {return (!(num & 1));}\n  //   example 2: array_filter([6, 7, 8, 9, 10, 11, 12], even)\n  //   returns 2: [ 6, , 8, , 10, , 12 ]\n  //   example 3: array_filter({\"a\": 1, \"b\": false, \"c\": -1, \"d\": 0, \"e\": null, \"f\":'', \"g\":undefined})\n  //   returns 3: {\"a\":1, \"c\":-1}\n\n  var retObj = {}\n  var k\n\n  func = func || function (v) {\n    return v\n  }\n\n  // @todo: Issue #73\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n  }\n\n  for (k in arr) {\n    if (func(arr[k])) {\n      retObj[k] = arr[k]\n    }\n  }\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_flip( {a: 1, b: 1, c: 2} )"],"estarget":"es5","returns":["{1: 'b', 2: 'c'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Pier Paolo Ramon (http://www.mastersoup.com/)","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_flip in JavaScript","function":"array_flip","category":"array","language":"php","alias":["/functions/php/array_flip/","/functions/array/array_flip/","/php/array_flip/","/functions/array_flip/"],"_content":"module.exports = function array_flip (trans) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_flip/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pier Paolo Ramon (http://www.mastersoup.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_flip( {a: 1, b: 1, c: 2} )\n  //   returns 1: {1: 'b', 2: 'c'}\n\n  var key\n  var tmpArr = {}\n\n  for (key in trans) {\n    if (!trans.hasOwnProperty(key)) {\n      continue\n    }\n    tmpArr[trans[key]] = key\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_flip.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_flip( {a: 1, b: 1, c: 2} )'\nestarget: es5\nreturns:\n  - '{1: ''b'', 2: ''c''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Pier Paolo Ramon (http://www.mastersoup.com/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_flip in JavaScript\nfunction: array_flip\ncategory: array\nlanguage: php\npermalink: php/array/array_flip/\nalias:\n  - /functions/php/array_flip/\n  - /functions/array/array_flip/\n  - /php/array_flip/\n  - /functions/array_flip/\n---\nmodule.exports = function array_flip (trans) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_flip/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pier Paolo Ramon (http://www.mastersoup.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_flip( {a: 1, b: 1, c: 2} )\n  //   returns 1: {1: 'b', 2: 'c'}\n\n  var key\n  var tmpArr = {}\n\n  for (key in trans) {\n    if (!trans.hasOwnProperty(key)) {\n      continue\n    }\n    tmpArr[trans[key]] = key\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_flip/index.html","comments":1,"_id":"cinoej9z2000sou9yyllztzxi","content":"module.exports = function array_flip (trans) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_flip/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pier Paolo Ramon (http://www.mastersoup.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_flip( {a: 1, b: 1, c: 2} )\n  //   returns 1: {1: 'b', 2: 'c'}\n\n  var key\n  var tmpArr = {}\n\n  for (key in trans) {\n    if (!trans.hasOwnProperty(key)) {\n      continue\n    }\n    tmpArr[trans[key]] = key\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_flip (trans) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_flip/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pier Paolo Ramon (http://www.mastersoup.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_flip( {a: 1, b: 1, c: 2} )\n  //   returns 1: {1: 'b', 2: 'c'}\n\n  var key\n  var tmpArr = {}\n\n  for (key in trans) {\n    if (!trans.hasOwnProperty(key)) {\n      continue\n    }\n    tmpArr[trans[key]] = key\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\nvar $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\nvar $array3 = ['green', 'red']\nvar $result = array_intersect($array1, $array2, $array3)"],"estarget":"es5","returns":["{0: 'red', a: 'green'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["These only output associative arrays (would need to be\nall numeric and counting from zero to be numeric)"],"layout":"function","title":"php'sarray_intersect in JavaScript","function":"array_intersect","category":"array","language":"php","alias":["/functions/php/array_intersect/","/functions/array/array_intersect/","/php/array_intersect/","/functions/array_intersect/"],"_content":"module.exports = function array_intersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\n  //   example 1: var $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\n  //   example 1: var $array3 = ['green', 'red']\n  //   example 1: var $result = array_intersect($array1, $array2, $array3)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs// eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys// eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_intersect.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\n    var $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\n    var $array3 = ['green', 'red']\n    var $result = array_intersect($array1, $array2, $array3)\nestarget: es5\nreturns:\n  - '{0: ''red'', a: ''green''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    These only output associative arrays (would need to be\n    all numeric and counting from zero to be numeric)\nlayout: function\ntitle: php'sarray_intersect in JavaScript\nfunction: array_intersect\ncategory: array\nlanguage: php\npermalink: php/array/array_intersect/\nalias:\n  - /functions/php/array_intersect/\n  - /functions/array/array_intersect/\n  - /php/array_intersect/\n  - /functions/array_intersect/\n---\nmodule.exports = function array_intersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\n  //   example 1: var $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\n  //   example 1: var $array3 = ['green', 'red']\n  //   example 1: var $result = array_intersect($array1, $array2, $array3)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs// eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys// eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_intersect/index.html","comments":1,"_id":"cinoej9z4000tou9y2lmfmm7m","content":"module.exports = function array_intersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\n  //   example 1: var $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\n  //   example 1: var $array3 = ['green', 'red']\n  //   example 1: var $result = array_intersect($array1, $array2, $array3)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs// eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys// eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_intersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {'a' : 'green', 0:'red', 1: 'blue'}\n  //   example 1: var $array2 = {'b' : 'green', 0:'yellow', 1:'red'}\n  //   example 1: var $array3 = ['green', 'red']\n  //   example 1: var $result = array_intersect($array1, $array2, $array3)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1]) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs// eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys// eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\narray_intersect_assoc($array1, $array2)"],"estarget":"es5","returns":["{a: 'green'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["These only output associative arrays (would need to be\nall numeric and counting from zero to be numeric)"],"layout":"function","title":"php'sarray_intersect_assoc in JavaScript","function":"array_intersect_assoc","category":"array","language":"php","alias":["/functions/php/array_intersect_assoc/","/functions/array/array_intersect_assoc/","/php/array_intersect_assoc/","/functions/array_intersect_assoc/"],"_content":"module.exports = function array_intersect_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_assoc($array1, $array2)\n  //   returns 1: {a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_intersect_assoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n    var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n    array_intersect_assoc($array1, $array2)\nestarget: es5\nreturns:\n  - '{a: ''green''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    These only output associative arrays (would need to be\n    all numeric and counting from zero to be numeric)\nlayout: function\ntitle: php'sarray_intersect_assoc in JavaScript\nfunction: array_intersect_assoc\ncategory: array\nlanguage: php\npermalink: php/array/array_intersect_assoc/\nalias:\n  - /functions/php/array_intersect_assoc/\n  - /functions/array/array_intersect_assoc/\n  - /php/array_intersect_assoc/\n  - /functions/array_intersect_assoc/\n---\nmodule.exports = function array_intersect_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_assoc($array1, $array2)\n  //   returns 1: {a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_intersect_assoc/index.html","comments":1,"_id":"cinoej9z4000uou9y3ef952bf","content":"module.exports = function array_intersect_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_assoc($array1, $array2)\n  //   returns 1: {a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_intersect_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_assoc($array1, $array2)\n  //   returns 1: {a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\narray_intersect_key($array1, $array2)"],"estarget":"es5","returns":["{0: 'red', a: 'green'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["These only output associative arrays (would need to be\nall numeric and counting from zero to be numeric)"],"layout":"function","title":"php'sarray_intersect_key in JavaScript","function":"array_intersect_key","category":"array","language":"php","alias":["/functions/php/array_intersect_key/","/functions/array/array_intersect_key/","/php/array_intersect_key/","/functions/array_intersect_key/"],"_content":"module.exports = function array_intersect_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_key($array1, $array2)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    if (!arr1.hasOwnProperty(k1)) {\n      continue\n    }\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (!arr.hasOwnProperty(k)) {\n          continue\n        }\n        if (k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_intersect_key.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n    var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n    array_intersect_key($array1, $array2)\nestarget: es5\nreturns:\n  - '{0: ''red'', a: ''green''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    These only output associative arrays (would need to be\n    all numeric and counting from zero to be numeric)\nlayout: function\ntitle: php'sarray_intersect_key in JavaScript\nfunction: array_intersect_key\ncategory: array\nlanguage: php\npermalink: php/array/array_intersect_key/\nalias:\n  - /functions/php/array_intersect_key/\n  - /functions/array/array_intersect_key/\n  - /php/array_intersect_key/\n  - /functions/array_intersect_key/\n---\nmodule.exports = function array_intersect_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_key($array1, $array2)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    if (!arr1.hasOwnProperty(k1)) {\n      continue\n    }\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (!arr.hasOwnProperty(k)) {\n          continue\n        }\n        if (k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_intersect_key/index.html","comments":1,"_id":"cinoej9z4000vou9ybiu559ne","content":"module.exports = function array_intersect_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_key($array1, $array2)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    if (!arr1.hasOwnProperty(k1)) {\n      continue\n    }\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (!arr.hasOwnProperty(k)) {\n          continue\n        }\n        if (k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_intersect_key (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: These only output associative arrays (would need to be\n  //      note 1: all numeric and counting from zero to be numeric)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'green', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_key($array1, $array2)\n  //   returns 1: {0: 'red', a: 'green'}\n\n  var retArr = {}\n  var argl = arguments.length\n  var arglm1 = argl - 1\n  var k1 = ''\n  var arr = {}\n  var i = 0\n  var k = ''\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    if (!arr1.hasOwnProperty(k1)) {\n      continue\n    }\n    arrs: for (i = 1; i < argl; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (!arr.hasOwnProperty(k)) {\n          continue\n        }\n        if (k === k1) {\n          if (i === arglm1) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{b: 'brown'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_intersect_uassoc in JavaScript","function":"array_intersect_uassoc","category":"array","language":"php","alias":["/functions/php/array_intersect_uassoc/","/functions/array/array_intersect_uassoc/","/php/array_intersect_uassoc/","/functions/array_intersect_uassoc/"],"_content":"module.exports = function array_intersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_intersect_uassoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var\n    string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;})\nestarget: es5\nreturns:\n  - '{b: ''brown''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_intersect_uassoc in JavaScript\nfunction: array_intersect_uassoc\ncategory: array\nlanguage: php\npermalink: php/array/array_intersect_uassoc/\nalias:\n  - /functions/php/array_intersect_uassoc/\n  - /functions/array/array_intersect_uassoc/\n  - /php/array_intersect_uassoc/\n  - /functions/array_intersect_uassoc/\n---\nmodule.exports = function array_intersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_intersect_uassoc/index.html","comments":1,"_id":"cinoej9z5000wou9yg7g3sbgx","content":"module.exports = function array_intersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_intersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_intersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (arr[k] === arr1[k1] && cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_key_exists('kevin', {'kevin': 'van Zonneveld'})"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Felix Geisendoerfer (http://www.debuggable.com/felix)"]},"notes":[],"layout":"function","title":"php'sarray_key_exists in JavaScript","function":"array_key_exists","category":"array","language":"php","alias":["/functions/php/array_key_exists/","/functions/array/array_key_exists/","/php/array_key_exists/","/functions/array_key_exists/"],"_content":"module.exports = function array_key_exists (key, search) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_key_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  //   example 1: array_key_exists('kevin', {'kevin': 'van Zonneveld'})\n  //   returns 1: true\n\n  if (!search || (search.constructor !== Array && search.constructor !== Object)) {\n    return false\n  }\n\n  return key in search\n}\n","source":"php/array/array_key_exists.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_key_exists(''kevin'', {''kevin'': ''van Zonneveld''})'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Felix Geisendoerfer (http://www.debuggable.com/felix)'\nnotes: []\nlayout: function\ntitle: php'sarray_key_exists in JavaScript\nfunction: array_key_exists\ncategory: array\nlanguage: php\npermalink: php/array/array_key_exists/\nalias:\n  - /functions/php/array_key_exists/\n  - /functions/array/array_key_exists/\n  - /php/array_key_exists/\n  - /functions/array_key_exists/\n---\nmodule.exports = function array_key_exists (key, search) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_key_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  //   example 1: array_key_exists('kevin', {'kevin': 'van Zonneveld'})\n  //   returns 1: true\n\n  if (!search || (search.constructor !== Array && search.constructor !== Object)) {\n    return false\n  }\n\n  return key in search\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_key_exists/index.html","comments":1,"_id":"cinoej9z5000xou9ywh7j67z6","content":"module.exports = function array_key_exists (key, search) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_key_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  //   example 1: array_key_exists('kevin', {'kevin': 'van Zonneveld'})\n  //   returns 1: true\n\n  if (!search || (search.constructor !== Array && search.constructor !== Object)) {\n    return false\n  }\n\n  return key in search\n}\n","excerpt":"","more":"module.exports = function array_key_exists (key, search) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_key_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  //   example 1: array_key_exists('kevin', {'kevin': 'van Zonneveld'})\n  //   returns 1: true\n\n  if (!search || (search.constructor !== Array && search.constructor !== Object)) {\n    return false\n  }\n\n  return key in search\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\nvar $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\narray_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })"],"estarget":"es5","returns":["{blue: 1, green: 3}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_intersect_ukey in JavaScript","function":"array_intersect_ukey","category":"array","language":"php","alias":["/functions/php/array_intersect_ukey/","/functions/array/array_intersect_ukey/","/php/array_intersect_ukey/","/functions/array_intersect_ukey/"],"_content":"module.exports = function array_intersect_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {blue: 1, green: 3}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_intersect_ukey.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n\n    var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n\n    array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1\n    === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\nestarget: es5\nreturns:\n  - '{blue: 1, green: 3}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_intersect_ukey in JavaScript\nfunction: array_intersect_ukey\ncategory: array\nlanguage: php\npermalink: php/array/array_intersect_ukey/\nalias:\n  - /functions/php/array_intersect_ukey/\n  - /functions/array/array_intersect_ukey/\n  - /php/array_intersect_ukey/\n  - /functions/array_intersect_ukey/\n---\nmodule.exports = function array_intersect_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {blue: 1, green: 3}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_intersect_ukey/index.html","comments":1,"_id":"cinoej9z6000you9y7mafwm77","content":"module.exports = function array_intersect_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {blue: 1, green: 3}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_intersect_ukey (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_intersect_ukey/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {blue: 1, red: 2, green: 3, purple: 4}\n  //   example 1: var $array2 = {green: 5, blue: 6, yellow: 7, cyan: 8}\n  //   example 1: array_intersect_ukey ($array1, $array2, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   returns 1: {blue: 1, green: 3}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(k, k1) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} )"],"estarget":"es5","returns":["[ 'firstname', 'surname' ]"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["jd","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"input by":["Brett Zamir (http://brett-zamir.me)","P"]},"notes":[],"layout":"function","title":"php'sarray_keys in JavaScript","function":"array_keys","category":"array","language":"php","alias":["/functions/php/array_keys/","/functions/array/array_keys/","/php/array_keys/","/functions/array_keys/"],"_content":"module.exports = function array_keys (input, searchValue, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_keys/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: P\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: jd\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'firstname', 'surname' ]\n\n  var search = typeof searchValue !== 'undefined'\n  var tmpArr = []\n  var strict = !!argStrict\n  var include = true\n  var key = ''\n\n  for (key in input) {\n    if (input.hasOwnProperty(key)) {\n      include = true\n      if (search) {\n        if (strict && input[key] !== searchValue) {\n          include = false\n        } else if (input[key] !== searchValue) {\n          include = false\n        }\n      }\n\n      if (include) {\n        tmpArr[tmpArr.length] = key\n      }\n    }\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_keys.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_keys( {firstname: ''Kevin'', surname: ''van Zonneveld''} )'\nestarget: es5\nreturns:\n  - '[ ''firstname'', ''surname'' ]'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - jd\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - P\nnotes: []\nlayout: function\ntitle: php'sarray_keys in JavaScript\nfunction: array_keys\ncategory: array\nlanguage: php\npermalink: php/array/array_keys/\nalias:\n  - /functions/php/array_keys/\n  - /functions/array/array_keys/\n  - /php/array_keys/\n  - /functions/array_keys/\n---\nmodule.exports = function array_keys (input, searchValue, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_keys/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: P\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: jd\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'firstname', 'surname' ]\n\n  var search = typeof searchValue !== 'undefined'\n  var tmpArr = []\n  var strict = !!argStrict\n  var include = true\n  var key = ''\n\n  for (key in input) {\n    if (input.hasOwnProperty(key)) {\n      include = true\n      if (search) {\n        if (strict && input[key] !== searchValue) {\n          include = false\n        } else if (input[key] !== searchValue) {\n          include = false\n        }\n      }\n\n      if (include) {\n        tmpArr[tmpArr.length] = key\n      }\n    }\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_keys/index.html","comments":1,"_id":"cinoej9z6000zou9ycdn8zjwd","content":"module.exports = function array_keys (input, searchValue, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_keys/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: P\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: jd\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'firstname', 'surname' ]\n\n  var search = typeof searchValue !== 'undefined'\n  var tmpArr = []\n  var strict = !!argStrict\n  var include = true\n  var key = ''\n\n  for (key in input) {\n    if (input.hasOwnProperty(key)) {\n      include = true\n      if (search) {\n        if (strict && input[key] !== searchValue) {\n          include = false\n        } else if (input[key] !== searchValue) {\n          include = false\n        }\n      }\n\n      if (include) {\n        tmpArr[tmpArr.length] = key\n      }\n    }\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_keys (input, searchValue, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_keys/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: P\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: jd\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_keys( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'firstname', 'surname' ]\n\n  var search = typeof searchValue !== 'undefined'\n  var tmpArr = []\n  var strict = !!argStrict\n  var include = true\n  var key = ''\n\n  for (key in input) {\n    if (input.hasOwnProperty(key)) {\n      include = true\n      if (search) {\n        if (strict && input[key] !== searchValue) {\n          include = false\n        } else if (input[key] !== searchValue) {\n          include = false\n        }\n      }\n\n      if (include) {\n        tmpArr[tmpArr.length] = key\n      }\n    }\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )"],"estarget":"es5","returns":["[ 1, 8, 27, 64, 125 ]"],"dependencies":[],"authors":{"original by":["Andrea Giammarchi (http://webreflection.blogspot.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"input by":["thekid"]},"notes":["If the callback is a string (or object, if an array is supplied),\nit can only work if the function name is in the global context"],"layout":"function","title":"php'sarray_map in JavaScript","function":"array_map","category":"array","language":"php","alias":["/functions/php/array_map/","/functions/array/array_map/","/php/array_map/","/functions/array_map/"],"_content":"module.exports = function array_map (callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_map/\n  // original by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: thekid\n  //      note 1: If the callback is a string (or object, if an array is supplied),\n  //      note 1: it can only work if the function name is in the global context\n  //   example 1: array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )\n  //   returns 1: [ 1, 8, 27, 64, 125 ]\n\n  var argc = arguments.length\n  var argv = arguments\n  var obj = null\n  var cb = callback\n  var j = argv[1].length\n  var i = 0\n  var k = 1\n  var m = 0\n  var tmp = []\n  var tmpArr = []\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  while (i < j) {\n    while (k < argc) {\n      tmp[m++] = argv[k++][i]\n    }\n\n    m = 0\n    k = 1\n\n    if (callback) {\n      if (typeof callback === 'string') {\n        cb = $global[callback]\n      } else if (typeof callback === 'object' && callback.length) {\n        obj = typeof callback[0] === 'string' ? $global[callback[0]] : callback[0]\n        if (typeof obj === 'undefined') {\n          throw new Error('Object not found: ' + callback[0])\n        }\n        cb = typeof callback[1] === 'string' ? obj[callback[1]] : callback[1]\n      }\n      tmpArr[i++] = cb.apply(obj, tmp)\n    } else {\n      tmpArr[i++] = tmp\n    }\n\n    tmp = []\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_map.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )'\nestarget: es5\nreturns:\n  - '[ 1, 8, 27, 64, 125 ]'\ndependencies: []\nauthors:\n  original by:\n    - 'Andrea Giammarchi (http://webreflection.blogspot.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - thekid\nnotes:\n  - |-\n    If the callback is a string (or object, if an array is supplied),\n    it can only work if the function name is in the global context\nlayout: function\ntitle: php'sarray_map in JavaScript\nfunction: array_map\ncategory: array\nlanguage: php\npermalink: php/array/array_map/\nalias:\n  - /functions/php/array_map/\n  - /functions/array/array_map/\n  - /php/array_map/\n  - /functions/array_map/\n---\nmodule.exports = function array_map (callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_map/\n  // original by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: thekid\n  //      note 1: If the callback is a string (or object, if an array is supplied),\n  //      note 1: it can only work if the function name is in the global context\n  //   example 1: array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )\n  //   returns 1: [ 1, 8, 27, 64, 125 ]\n\n  var argc = arguments.length\n  var argv = arguments\n  var obj = null\n  var cb = callback\n  var j = argv[1].length\n  var i = 0\n  var k = 1\n  var m = 0\n  var tmp = []\n  var tmpArr = []\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  while (i < j) {\n    while (k < argc) {\n      tmp[m++] = argv[k++][i]\n    }\n\n    m = 0\n    k = 1\n\n    if (callback) {\n      if (typeof callback === 'string') {\n        cb = $global[callback]\n      } else if (typeof callback === 'object' && callback.length) {\n        obj = typeof callback[0] === 'string' ? $global[callback[0]] : callback[0]\n        if (typeof obj === 'undefined') {\n          throw new Error('Object not found: ' + callback[0])\n        }\n        cb = typeof callback[1] === 'string' ? obj[callback[1]] : callback[1]\n      }\n      tmpArr[i++] = cb.apply(obj, tmp)\n    } else {\n      tmpArr[i++] = tmp\n    }\n\n    tmp = []\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_map/index.html","comments":1,"_id":"cinoej9z70010ou9yvi42wauw","content":"module.exports = function array_map (callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_map/\n  // original by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: thekid\n  //      note 1: If the callback is a string (or object, if an array is supplied),\n  //      note 1: it can only work if the function name is in the global context\n  //   example 1: array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )\n  //   returns 1: [ 1, 8, 27, 64, 125 ]\n\n  var argc = arguments.length\n  var argv = arguments\n  var obj = null\n  var cb = callback\n  var j = argv[1].length\n  var i = 0\n  var k = 1\n  var m = 0\n  var tmp = []\n  var tmpArr = []\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  while (i < j) {\n    while (k < argc) {\n      tmp[m++] = argv[k++][i]\n    }\n\n    m = 0\n    k = 1\n\n    if (callback) {\n      if (typeof callback === 'string') {\n        cb = $global[callback]\n      } else if (typeof callback === 'object' && callback.length) {\n        obj = typeof callback[0] === 'string' ? $global[callback[0]] : callback[0]\n        if (typeof obj === 'undefined') {\n          throw new Error('Object not found: ' + callback[0])\n        }\n        cb = typeof callback[1] === 'string' ? obj[callback[1]] : callback[1]\n      }\n      tmpArr[i++] = cb.apply(obj, tmp)\n    } else {\n      tmpArr[i++] = tmp\n    }\n\n    tmp = []\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_map (callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_map/\n  // original by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: thekid\n  //      note 1: If the callback is a string (or object, if an array is supplied),\n  //      note 1: it can only work if the function name is in the global context\n  //   example 1: array_map( function (a){return (a * a * a)}, [1, 2, 3, 4, 5] )\n  //   returns 1: [ 1, 8, 27, 64, 125 ]\n\n  var argc = arguments.length\n  var argv = arguments\n  var obj = null\n  var cb = callback\n  var j = argv[1].length\n  var i = 0\n  var k = 1\n  var m = 0\n  var tmp = []\n  var tmpArr = []\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  while (i < j) {\n    while (k < argc) {\n      tmp[m++] = argv[k++][i]\n    }\n\n    m = 0\n    k = 1\n\n    if (callback) {\n      if (typeof callback === 'string') {\n        cb = $global[callback]\n      } else if (typeof callback === 'object' && callback.length) {\n        obj = typeof callback[0] === 'string' ? $global[callback[0]] : callback[0]\n        if (typeof obj === 'undefined') {\n          throw new Error('Object not found: ' + callback[0])\n        }\n        cb = typeof callback[1] === 'string' ? obj[callback[1]] : callback[1]\n      }\n      tmpArr[i++] = cb.apply(obj, tmp)\n    } else {\n      tmpArr[i++] = tmp\n    }\n\n    tmp = []\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\nvar $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\narray_merge($arr1, $arr2)","var $arr1 = []\nvar $arr2 = {1: \"data\"}\narray_merge($arr1, $arr2)"],"estarget":"es5","returns":["{\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}","{0: \"data\"}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Nate","Brett Zamir (http://brett-zamir.me)"],"input by":["josh"]},"notes":[],"layout":"function","title":"php'sarray_merge in JavaScript","function":"array_merge","category":"array","language":"php","alias":["/functions/php/array_merge/","/functions/array/array_merge/","/php/array_merge/","/functions/array_merge/"],"_content":"module.exports = function array_merge () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Nate\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: josh\n  //   example 1: var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n  //   example 1: var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n  //   example 1: array_merge($arr1, $arr2)\n  //   returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n  //   example 2: var $arr1 = []\n  //   example 2: var $arr2 = {1: \"data\"}\n  //   example 2: array_merge($arr1, $arr2)\n  //   returns 2: {0: \"data\"}\n\n  var args = Array.prototype.slice.call(arguments)\n  var argl = args.length\n  var arg\n  var retObj = {}\n  var k = ''\n  var argil = 0\n  var j = 0\n  var i = 0\n  var ct = 0\n  var toStr = Object.prototype.toString\n  var retArr = true\n\n  for (i = 0; i < argl; i++) {\n    if (toStr.call(args[i]) !== '[object Array]') {\n      retArr = false\n      break\n    }\n  }\n\n  if (retArr) {\n    retArr = []\n    for (i = 0; i < argl; i++) {\n      retArr = retArr.concat(args[i])\n    }\n    return retArr\n  }\n\n  for (i = 0, ct = 0; i < argl; i++) {\n    arg = args[i]\n    if (toStr.call(arg) === '[object Array]') {\n      for (j = 0, argil = arg.length; j < argil; j++) {\n        retObj[ct++] = arg[j]\n      }\n    } else {\n      for (k in arg) {\n        if (arg.hasOwnProperty(k)) {\n          if (parseInt(k, 10) + '' === k) {\n            retObj[ct++] = arg[k]\n          } else {\n            retObj[k] = arg[k]\n          }\n        }\n      }\n    }\n  }\n\n  return retObj\n}\n","source":"php/array/array_merge.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n    var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n    array_merge($arr1, $arr2)\n  - |-\n    var $arr1 = []\n    var $arr2 = {1: \"data\"}\n    array_merge($arr1, $arr2)\nestarget: es5\nreturns:\n  - '{\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}'\n  - '{0: \"data\"}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Nate\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - josh\nnotes: []\nlayout: function\ntitle: php'sarray_merge in JavaScript\nfunction: array_merge\ncategory: array\nlanguage: php\npermalink: php/array/array_merge/\nalias:\n  - /functions/php/array_merge/\n  - /functions/array/array_merge/\n  - /php/array_merge/\n  - /functions/array_merge/\n---\nmodule.exports = function array_merge () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Nate\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: josh\n  //   example 1: var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n  //   example 1: var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n  //   example 1: array_merge($arr1, $arr2)\n  //   returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n  //   example 2: var $arr1 = []\n  //   example 2: var $arr2 = {1: \"data\"}\n  //   example 2: array_merge($arr1, $arr2)\n  //   returns 2: {0: \"data\"}\n\n  var args = Array.prototype.slice.call(arguments)\n  var argl = args.length\n  var arg\n  var retObj = {}\n  var k = ''\n  var argil = 0\n  var j = 0\n  var i = 0\n  var ct = 0\n  var toStr = Object.prototype.toString\n  var retArr = true\n\n  for (i = 0; i < argl; i++) {\n    if (toStr.call(args[i]) !== '[object Array]') {\n      retArr = false\n      break\n    }\n  }\n\n  if (retArr) {\n    retArr = []\n    for (i = 0; i < argl; i++) {\n      retArr = retArr.concat(args[i])\n    }\n    return retArr\n  }\n\n  for (i = 0, ct = 0; i < argl; i++) {\n    arg = args[i]\n    if (toStr.call(arg) === '[object Array]') {\n      for (j = 0, argil = arg.length; j < argil; j++) {\n        retObj[ct++] = arg[j]\n      }\n    } else {\n      for (k in arg) {\n        if (arg.hasOwnProperty(k)) {\n          if (parseInt(k, 10) + '' === k) {\n            retObj[ct++] = arg[k]\n          } else {\n            retObj[k] = arg[k]\n          }\n        }\n      }\n    }\n  }\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_merge/index.html","comments":1,"_id":"cinoej9z80011ou9yvuw3li5c","content":"module.exports = function array_merge () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Nate\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: josh\n  //   example 1: var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n  //   example 1: var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n  //   example 1: array_merge($arr1, $arr2)\n  //   returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n  //   example 2: var $arr1 = []\n  //   example 2: var $arr2 = {1: \"data\"}\n  //   example 2: array_merge($arr1, $arr2)\n  //   returns 2: {0: \"data\"}\n\n  var args = Array.prototype.slice.call(arguments)\n  var argl = args.length\n  var arg\n  var retObj = {}\n  var k = ''\n  var argil = 0\n  var j = 0\n  var i = 0\n  var ct = 0\n  var toStr = Object.prototype.toString\n  var retArr = true\n\n  for (i = 0; i < argl; i++) {\n    if (toStr.call(args[i]) !== '[object Array]') {\n      retArr = false\n      break\n    }\n  }\n\n  if (retArr) {\n    retArr = []\n    for (i = 0; i < argl; i++) {\n      retArr = retArr.concat(args[i])\n    }\n    return retArr\n  }\n\n  for (i = 0, ct = 0; i < argl; i++) {\n    arg = args[i]\n    if (toStr.call(arg) === '[object Array]') {\n      for (j = 0, argil = arg.length; j < argil; j++) {\n        retObj[ct++] = arg[j]\n      }\n    } else {\n      for (k in arg) {\n        if (arg.hasOwnProperty(k)) {\n          if (parseInt(k, 10) + '' === k) {\n            retObj[ct++] = arg[k]\n          } else {\n            retObj[k] = arg[k]\n          }\n        }\n      }\n    }\n  }\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function array_merge () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Nate\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: josh\n  //   example 1: var $arr1 = {\"color\": \"red\", 0: 2, 1: 4}\n  //   example 1: var $arr2 = {0: \"a\", 1: \"b\", \"color\": \"green\", \"shape\": \"trapezoid\", 2: 4}\n  //   example 1: array_merge($arr1, $arr2)\n  //   returns 1: {\"color\": \"green\", 0: 2, 1: 4, 2: \"a\", 3: \"b\", \"shape\": \"trapezoid\", 4: 4}\n  //   example 2: var $arr1 = []\n  //   example 2: var $arr2 = {1: \"data\"}\n  //   example 2: array_merge($arr1, $arr2)\n  //   returns 2: {0: \"data\"}\n\n  var args = Array.prototype.slice.call(arguments)\n  var argl = args.length\n  var arg\n  var retObj = {}\n  var k = ''\n  var argil = 0\n  var j = 0\n  var i = 0\n  var ct = 0\n  var toStr = Object.prototype.toString\n  var retArr = true\n\n  for (i = 0; i < argl; i++) {\n    if (toStr.call(args[i]) !== '[object Array]') {\n      retArr = false\n      break\n    }\n  }\n\n  if (retArr) {\n    retArr = []\n    for (i = 0; i < argl; i++) {\n      retArr = retArr.concat(args[i])\n    }\n    return retArr\n  }\n\n  for (i = 0, ct = 0; i < argl; i++) {\n    arg = args[i]\n    if (toStr.call(arg) === '[object Array]') {\n      for (j = 0, argil = arg.length; j < argil; j++) {\n        retObj[ct++] = arg[j]\n      }\n    } else {\n      for (k in arg) {\n        if (arg.hasOwnProperty(k)) {\n          if (parseInt(k, 10) + '' === k) {\n            retObj[ct++] = arg[k]\n          } else {\n            retObj[k] = arg[k]\n          }\n        }\n      }\n    }\n  }\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\nvar $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\narray_merge_recursive($arr1, $arr2)"],"estarget":"es5","returns":["{'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}"],"dependencies":[],"authors":{"original by":["Subhasis Deb"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_merge_recursive in JavaScript","function":"array_merge_recursive","category":"array","language":"php","alias":["/functions/php/array_merge_recursive/","/functions/array/array_merge_recursive/","/php/array_merge_recursive/","/functions/array_merge_recursive/"],"_content":"module.exports = function array_merge_recursive (arr1, arr2) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge_recursive/\n  // original by: Subhasis Deb\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\n  //   example 1: var $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\n  //   example 1: array_merge_recursive($arr1, $arr2)\n  //   returns 1: {'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}\n  //        test: skip-1\n\n  var arrayMerge = require('../array/array_merge')\n  var idx = ''\n\n  if (arr1 && Object.prototype.toString.call(arr1) === '[object Array]' &&\n    arr2 && Object.prototype.toString.call(arr2) === '[object Array]') {\n    for (idx in arr2) {\n      arr1.push(arr2[idx])\n    }\n  } else if ((arr1 && (arr1 instanceof Object)) && (arr2 && (arr2 instanceof Object))) {\n    for (idx in arr2) {\n      if (idx in arr1) {\n        if (typeof arr1[idx] === 'object' && typeof arr2 === 'object') {\n          arr1[idx] = arrayMerge(arr1[idx], arr2[idx])\n        } else {\n          arr1[idx] = arr2[idx]\n        }\n      } else {\n        arr1[idx] = arr2[idx]\n      }\n    }\n  }\n\n  return arr1\n}\n","source":"php/array/array_merge_recursive.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\n    var $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\n    array_merge_recursive($arr1, $arr2)\nestarget: es5\nreturns:\n  - '{''color'': {''favorite'': {0: ''red'', 1: ''green''}, 0: ''blue''}, 1: 5, 1: 10}'\ndependencies: []\nauthors:\n  original by:\n    - Subhasis Deb\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_merge_recursive in JavaScript\nfunction: array_merge_recursive\ncategory: array\nlanguage: php\npermalink: php/array/array_merge_recursive/\nalias:\n  - /functions/php/array_merge_recursive/\n  - /functions/array/array_merge_recursive/\n  - /php/array_merge_recursive/\n  - /functions/array_merge_recursive/\n---\nmodule.exports = function array_merge_recursive (arr1, arr2) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge_recursive/\n  // original by: Subhasis Deb\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\n  //   example 1: var $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\n  //   example 1: array_merge_recursive($arr1, $arr2)\n  //   returns 1: {'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}\n  //        test: skip-1\n\n  var arrayMerge = require('../array/array_merge')\n  var idx = ''\n\n  if (arr1 && Object.prototype.toString.call(arr1) === '[object Array]' &&\n    arr2 && Object.prototype.toString.call(arr2) === '[object Array]') {\n    for (idx in arr2) {\n      arr1.push(arr2[idx])\n    }\n  } else if ((arr1 && (arr1 instanceof Object)) && (arr2 && (arr2 instanceof Object))) {\n    for (idx in arr2) {\n      if (idx in arr1) {\n        if (typeof arr1[idx] === 'object' && typeof arr2 === 'object') {\n          arr1[idx] = arrayMerge(arr1[idx], arr2[idx])\n        } else {\n          arr1[idx] = arr2[idx]\n        }\n      } else {\n        arr1[idx] = arr2[idx]\n      }\n    }\n  }\n\n  return arr1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_merge_recursive/index.html","comments":1,"_id":"cinoej9z90012ou9y7huk4dqg","content":"module.exports = function array_merge_recursive (arr1, arr2) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge_recursive/\n  // original by: Subhasis Deb\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\n  //   example 1: var $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\n  //   example 1: array_merge_recursive($arr1, $arr2)\n  //   returns 1: {'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}\n  //        test: skip-1\n\n  var arrayMerge = require('../array/array_merge')\n  var idx = ''\n\n  if (arr1 && Object.prototype.toString.call(arr1) === '[object Array]' &&\n    arr2 && Object.prototype.toString.call(arr2) === '[object Array]') {\n    for (idx in arr2) {\n      arr1.push(arr2[idx])\n    }\n  } else if ((arr1 && (arr1 instanceof Object)) && (arr2 && (arr2 instanceof Object))) {\n    for (idx in arr2) {\n      if (idx in arr1) {\n        if (typeof arr1[idx] === 'object' && typeof arr2 === 'object') {\n          arr1[idx] = arrayMerge(arr1[idx], arr2[idx])\n        } else {\n          arr1[idx] = arr2[idx]\n        }\n      } else {\n        arr1[idx] = arr2[idx]\n      }\n    }\n  }\n\n  return arr1\n}\n","excerpt":"","more":"module.exports = function array_merge_recursive (arr1, arr2) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_merge_recursive/\n  // original by: Subhasis Deb\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: var $arr1 = {'color': {'favorite': 'red'}, 0: 5}\n  //   example 1: var $arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}\n  //   example 1: array_merge_recursive($arr1, $arr2)\n  //   returns 1: {'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}\n  //        test: skip-1\n\n  var arrayMerge = require('../array/array_merge')\n  var idx = ''\n\n  if (arr1 && Object.prototype.toString.call(arr1) === '[object Array]' &&\n    arr2 && Object.prototype.toString.call(arr2) === '[object Array]') {\n    for (idx in arr2) {\n      arr1.push(arr2[idx])\n    }\n  } else if ((arr1 && (arr1 instanceof Object)) && (arr2 && (arr2 instanceof Object))) {\n    for (idx in arr2) {\n      if (idx in arr1) {\n        if (typeof arr1[idx] === 'object' && typeof arr2 === 'object') {\n          arr1[idx] = arrayMerge(arr1[idx], arr2[idx])\n        } else {\n          arr1[idx] = arr2[idx]\n        }\n      } else {\n        arr1[idx] = arr2[idx]\n      }\n    }\n  }\n\n  return arr1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])","var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\nvar $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\narray_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')","var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\nvar $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\nvar $president = [ 39, 6, 5, 10, 4, 35, 2 ]\narray_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')"],"estarget":"es5","returns":["true","true","true"],"dependencies":[],"authors":{"original by":["Theriault (https://github.com/Theriault)"]},"notes":["flags: Translation table for sort arguments.\nEach argument turns on certain bits in the flag byte through addition.\nbits: HGFE DCBA\nargs: Holds pointer to arguments for reassignment"],"layout":"function","title":"php'sarray_multisort in JavaScript","function":"array_multisort","category":"array","language":"php","alias":["/functions/php/array_multisort/","/functions/array/array_multisort/","/php/array_multisort/","/functions/array_multisort/"],"_content":"module.exports = function array_multisort (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_multisort/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])\n  //   returns 1: true\n  //   example 2: var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\n  //   example 2: var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n  //   example 2: array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')\n  //   returns 2: true\n  //   example 3: var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n  //   example 3: var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\n  //   example 3: var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n  //   example 3: array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\n  //   returns 3: true\n  //      note 1: flags: Translation table for sort arguments.\n  //      note 1: Each argument turns on certain bits in the flag byte through addition.\n  //      note 1: bits: HGFE DCBA\n  //      note 1: args: Holds pointer to arguments for reassignment\n\n  var g\n  var i\n  var j\n  var k\n  var l\n  var sal\n  var vkey\n  var elIndex\n  var lastSorts\n  var tmpArray\n  var zlast\n\n  var sortFlag = [0]\n  var thingsToSort = []\n  var nLastSort = []\n  var lastSort = []\n  // possibly redundant\n  var args = arguments\n\n  var flags = {\n    'SORT_REGULAR': 16,\n    'SORT_NUMERIC': 17,\n    'SORT_STRING': 18,\n    'SORT_ASC': 32,\n    'SORT_DESC': 40\n  }\n\n  var sortDuplicator = function (a, b) {\n    return nLastSort.shift()\n  }\n\n  var sortFunctions = [\n    [\n\n      function (a, b) {\n        lastSort.push(a > b ? 1 : (a < b ? -1 : 0))\n        return a > b ? 1 : (a < b ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push(b > a ? 1 : (b < a ? -1 : 0))\n        return b > a ? 1 : (b < a ? -1 : 0)\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push(a - b)\n        return a - b\n      },\n      function (a, b) {\n        lastSort.push(b - a)\n        return b - a\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push((a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0))\n        return (a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push((b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0))\n        return (b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0)\n      }\n    ]\n  ]\n\n  var sortArrs = [\n    []\n  ]\n\n  var sortKeys = [\n    []\n  ]\n\n  // Store first argument into sortArrs and sortKeys if an Object.\n  // First Argument should be either a Javascript Array or an Object,\n  // otherwise function would return FALSE like in PHP\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    sortArrs[0] = arr\n  } else if (arr && typeof arr === 'object') {\n    for (i in arr) {\n      if (arr.hasOwnProperty(i)) {\n        sortKeys[0].push(i)\n        sortArrs[0].push(arr[i])\n      }\n    }\n  } else {\n    return false\n  }\n\n  // arrMainLength: Holds the length of the first array.\n  // All other arrays must be of equal length, otherwise function would return FALSE like in PHP\n  // sortComponents: Holds 2 indexes per every section of the array\n  // that can be sorted. As this is the start, the whole array can be sorted.\n  var arrMainLength = sortArrs[0].length\n  var sortComponents = [0, arrMainLength]\n\n  // Loop through all other arguments, checking lengths and sort flags\n  // of arrays and adding them to the above variables.\n  var argl = arguments.length\n  for (j = 1; j < argl; j++) {\n    if (Object.prototype.toString.call(arguments[j]) === '[object Array]') {\n      sortArrs[j] = arguments[j]\n      sortFlag[j] = 0\n      if (arguments[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (arguments[j] && typeof arguments[j] === 'object') {\n      sortKeys[j] = []\n      sortArrs[j] = []\n      sortFlag[j] = 0\n      for (i in arguments[j]) {\n        if (arguments[j].hasOwnProperty(i)) {\n          sortKeys[j].push(i)\n          sortArrs[j].push(arguments[j][i])\n        }\n      }\n      if (sortArrs[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (typeof arguments[j] === 'string') {\n      var lFlag = sortFlag.pop()\n      // Keep extra parentheses around latter flags check\n      // to avoid minimization leading to CDATA closer\n      if (typeof flags[arguments[j]] === 'undefined' ||\n        ((((flags[arguments[j]]) >>> 4) & (lFlag >>> 4)) > 0)) {\n        return false\n      }\n      sortFlag.push(lFlag + flags[arguments[j]])\n    } else {\n      return false\n    }\n  }\n\n  for (i = 0; i !== arrMainLength; i++) {\n    thingsToSort.push(true)\n  }\n\n  // Sort all the arrays....\n  for (i in sortArrs) {\n    if (sortArrs.hasOwnProperty(i)) {\n      lastSorts = []\n      tmpArray = []\n      elIndex = 0\n      nLastSort = []\n      lastSort = []\n\n      // If there are no sortComponents, then no more sorting is neeeded.\n      // Copy the array back to the argument.\n      if (sortComponents.length === 0) {\n        if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n          args[i] = sortArrs[i]\n        } else {\n          for (k in arguments[i]) {\n            if (arguments[i].hasOwnProperty(k)) {\n              delete arguments[i][k]\n            }\n          }\n          sal = sortArrs[i].length\n          for (j = 0, vkey = 0; j < sal; j++) {\n            vkey = sortKeys[i][j]\n            args[i][vkey] = sortArrs[i][j]\n          }\n        }\n        delete sortArrs[i]\n        delete sortKeys[i]\n        continue\n      }\n\n      // Sort function for sorting. Either sorts asc or desc, regular/string or numeric.\n      var sFunction = sortFunctions[(sortFlag[i] & 3)][((sortFlag[i] & 8) > 0) ? 1 : 0]\n\n      // Sort current array.\n      for (l = 0; l !== sortComponents.length; l += 2) {\n        tmpArray = sortArrs[i].slice(sortComponents[l], sortComponents[l + 1] + 1)\n        tmpArray.sort(sFunction)\n        // Is there a better way to copy an array in Javascript?\n        lastSorts[l] = [].concat(lastSort)\n        elIndex = sortComponents[l]\n        for (g in tmpArray) {\n          if (tmpArray.hasOwnProperty(g)) {\n            sortArrs[i][elIndex] = tmpArray[g]\n            elIndex++\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on future arrays.\n      sFunction = sortDuplicator\n      for (j in sortArrs) {\n        if (sortArrs.hasOwnProperty(j)) {\n          if (sortArrs[j] === sortArrs[i]) {\n            continue\n          }\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortArrs[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            // alert(l + ':' + nLastSort);\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortArrs[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on array keys\n      for (j in sortKeys) {\n        if (sortKeys.hasOwnProperty(j)) {\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortKeys[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortKeys[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Generate the next sortComponents\n      zlast = null\n      sortComponents = []\n      for (j in sortArrs[i]) {\n        if (sortArrs[i].hasOwnProperty(j)) {\n          if (!thingsToSort[j]) {\n            if ((sortComponents.length & 1)) {\n              sortComponents.push(j - 1)\n            }\n            zlast = null\n            continue\n          }\n          if (!(sortComponents.length & 1)) {\n            if (zlast !== null) {\n              if (sortArrs[i][j] === zlast) {\n                sortComponents.push(j - 1)\n              } else {\n                thingsToSort[j] = false\n              }\n            }\n            zlast = sortArrs[i][j]\n          } else {\n            if (sortArrs[i][j] !== zlast) {\n              sortComponents.push(j - 1)\n              zlast = sortArrs[i][j]\n            }\n          }\n        }\n      }\n\n      if (sortComponents.length & 1) {\n        sortComponents.push(j)\n      }\n      if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n        args[i] = sortArrs[i]\n      } else {\n        for (j in arguments[i]) {\n          if (arguments[i].hasOwnProperty(j)) {\n            delete arguments[i][j]\n          }\n        }\n\n        sal = sortArrs[i].length\n        for (j = 0, vkey = 0; j < sal; j++) {\n          vkey = sortKeys[i][j]\n          args[i][vkey] = sortArrs[i][j]\n        }\n      }\n      delete sortArrs[i]\n      delete sortKeys[i]\n    }\n  }\n  return true\n}\n","source":"php/array/array_multisort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])'\n  - >-\n    var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E:\n    'Edward'}\n\n    var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n\n    array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC',\n    'SORT_STRING')\n  - >-\n    var $lastnames = [\n    'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n\n    var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',  \n    'John']\n\n    var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n\n    array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames,\n    'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - |-\n    flags: Translation table for sort arguments.\n    Each argument turns on certain bits in the flag byte through addition.\n    bits: HGFE DCBA\n    args: Holds pointer to arguments for reassignment\nlayout: function\ntitle: php'sarray_multisort in JavaScript\nfunction: array_multisort\ncategory: array\nlanguage: php\npermalink: php/array/array_multisort/\nalias:\n  - /functions/php/array_multisort/\n  - /functions/array/array_multisort/\n  - /php/array_multisort/\n  - /functions/array_multisort/\n---\nmodule.exports = function array_multisort (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_multisort/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])\n  //   returns 1: true\n  //   example 2: var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\n  //   example 2: var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n  //   example 2: array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')\n  //   returns 2: true\n  //   example 3: var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n  //   example 3: var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\n  //   example 3: var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n  //   example 3: array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\n  //   returns 3: true\n  //      note 1: flags: Translation table for sort arguments.\n  //      note 1: Each argument turns on certain bits in the flag byte through addition.\n  //      note 1: bits: HGFE DCBA\n  //      note 1: args: Holds pointer to arguments for reassignment\n\n  var g\n  var i\n  var j\n  var k\n  var l\n  var sal\n  var vkey\n  var elIndex\n  var lastSorts\n  var tmpArray\n  var zlast\n\n  var sortFlag = [0]\n  var thingsToSort = []\n  var nLastSort = []\n  var lastSort = []\n  // possibly redundant\n  var args = arguments\n\n  var flags = {\n    'SORT_REGULAR': 16,\n    'SORT_NUMERIC': 17,\n    'SORT_STRING': 18,\n    'SORT_ASC': 32,\n    'SORT_DESC': 40\n  }\n\n  var sortDuplicator = function (a, b) {\n    return nLastSort.shift()\n  }\n\n  var sortFunctions = [\n    [\n\n      function (a, b) {\n        lastSort.push(a > b ? 1 : (a < b ? -1 : 0))\n        return a > b ? 1 : (a < b ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push(b > a ? 1 : (b < a ? -1 : 0))\n        return b > a ? 1 : (b < a ? -1 : 0)\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push(a - b)\n        return a - b\n      },\n      function (a, b) {\n        lastSort.push(b - a)\n        return b - a\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push((a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0))\n        return (a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push((b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0))\n        return (b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0)\n      }\n    ]\n  ]\n\n  var sortArrs = [\n    []\n  ]\n\n  var sortKeys = [\n    []\n  ]\n\n  // Store first argument into sortArrs and sortKeys if an Object.\n  // First Argument should be either a Javascript Array or an Object,\n  // otherwise function would return FALSE like in PHP\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    sortArrs[0] = arr\n  } else if (arr && typeof arr === 'object') {\n    for (i in arr) {\n      if (arr.hasOwnProperty(i)) {\n        sortKeys[0].push(i)\n        sortArrs[0].push(arr[i])\n      }\n    }\n  } else {\n    return false\n  }\n\n  // arrMainLength: Holds the length of the first array.\n  // All other arrays must be of equal length, otherwise function would return FALSE like in PHP\n  // sortComponents: Holds 2 indexes per every section of the array\n  // that can be sorted. As this is the start, the whole array can be sorted.\n  var arrMainLength = sortArrs[0].length\n  var sortComponents = [0, arrMainLength]\n\n  // Loop through all other arguments, checking lengths and sort flags\n  // of arrays and adding them to the above variables.\n  var argl = arguments.length\n  for (j = 1; j < argl; j++) {\n    if (Object.prototype.toString.call(arguments[j]) === '[object Array]') {\n      sortArrs[j] = arguments[j]\n      sortFlag[j] = 0\n      if (arguments[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (arguments[j] && typeof arguments[j] === 'object') {\n      sortKeys[j] = []\n      sortArrs[j] = []\n      sortFlag[j] = 0\n      for (i in arguments[j]) {\n        if (arguments[j].hasOwnProperty(i)) {\n          sortKeys[j].push(i)\n          sortArrs[j].push(arguments[j][i])\n        }\n      }\n      if (sortArrs[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (typeof arguments[j] === 'string') {\n      var lFlag = sortFlag.pop()\n      // Keep extra parentheses around latter flags check\n      // to avoid minimization leading to CDATA closer\n      if (typeof flags[arguments[j]] === 'undefined' ||\n        ((((flags[arguments[j]]) >>> 4) & (lFlag >>> 4)) > 0)) {\n        return false\n      }\n      sortFlag.push(lFlag + flags[arguments[j]])\n    } else {\n      return false\n    }\n  }\n\n  for (i = 0; i !== arrMainLength; i++) {\n    thingsToSort.push(true)\n  }\n\n  // Sort all the arrays....\n  for (i in sortArrs) {\n    if (sortArrs.hasOwnProperty(i)) {\n      lastSorts = []\n      tmpArray = []\n      elIndex = 0\n      nLastSort = []\n      lastSort = []\n\n      // If there are no sortComponents, then no more sorting is neeeded.\n      // Copy the array back to the argument.\n      if (sortComponents.length === 0) {\n        if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n          args[i] = sortArrs[i]\n        } else {\n          for (k in arguments[i]) {\n            if (arguments[i].hasOwnProperty(k)) {\n              delete arguments[i][k]\n            }\n          }\n          sal = sortArrs[i].length\n          for (j = 0, vkey = 0; j < sal; j++) {\n            vkey = sortKeys[i][j]\n            args[i][vkey] = sortArrs[i][j]\n          }\n        }\n        delete sortArrs[i]\n        delete sortKeys[i]\n        continue\n      }\n\n      // Sort function for sorting. Either sorts asc or desc, regular/string or numeric.\n      var sFunction = sortFunctions[(sortFlag[i] & 3)][((sortFlag[i] & 8) > 0) ? 1 : 0]\n\n      // Sort current array.\n      for (l = 0; l !== sortComponents.length; l += 2) {\n        tmpArray = sortArrs[i].slice(sortComponents[l], sortComponents[l + 1] + 1)\n        tmpArray.sort(sFunction)\n        // Is there a better way to copy an array in Javascript?\n        lastSorts[l] = [].concat(lastSort)\n        elIndex = sortComponents[l]\n        for (g in tmpArray) {\n          if (tmpArray.hasOwnProperty(g)) {\n            sortArrs[i][elIndex] = tmpArray[g]\n            elIndex++\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on future arrays.\n      sFunction = sortDuplicator\n      for (j in sortArrs) {\n        if (sortArrs.hasOwnProperty(j)) {\n          if (sortArrs[j] === sortArrs[i]) {\n            continue\n          }\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortArrs[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            // alert(l + ':' + nLastSort);\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortArrs[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on array keys\n      for (j in sortKeys) {\n        if (sortKeys.hasOwnProperty(j)) {\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortKeys[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortKeys[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Generate the next sortComponents\n      zlast = null\n      sortComponents = []\n      for (j in sortArrs[i]) {\n        if (sortArrs[i].hasOwnProperty(j)) {\n          if (!thingsToSort[j]) {\n            if ((sortComponents.length & 1)) {\n              sortComponents.push(j - 1)\n            }\n            zlast = null\n            continue\n          }\n          if (!(sortComponents.length & 1)) {\n            if (zlast !== null) {\n              if (sortArrs[i][j] === zlast) {\n                sortComponents.push(j - 1)\n              } else {\n                thingsToSort[j] = false\n              }\n            }\n            zlast = sortArrs[i][j]\n          } else {\n            if (sortArrs[i][j] !== zlast) {\n              sortComponents.push(j - 1)\n              zlast = sortArrs[i][j]\n            }\n          }\n        }\n      }\n\n      if (sortComponents.length & 1) {\n        sortComponents.push(j)\n      }\n      if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n        args[i] = sortArrs[i]\n      } else {\n        for (j in arguments[i]) {\n          if (arguments[i].hasOwnProperty(j)) {\n            delete arguments[i][j]\n          }\n        }\n\n        sal = sortArrs[i].length\n        for (j = 0, vkey = 0; j < sal; j++) {\n          vkey = sortKeys[i][j]\n          args[i][vkey] = sortArrs[i][j]\n        }\n      }\n      delete sortArrs[i]\n      delete sortKeys[i]\n    }\n  }\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_multisort/index.html","comments":1,"_id":"cinoej9z90013ou9ydrdkos88","content":"module.exports = function array_multisort (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_multisort/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])\n  //   returns 1: true\n  //   example 2: var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\n  //   example 2: var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n  //   example 2: array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')\n  //   returns 2: true\n  //   example 3: var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n  //   example 3: var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\n  //   example 3: var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n  //   example 3: array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\n  //   returns 3: true\n  //      note 1: flags: Translation table for sort arguments.\n  //      note 1: Each argument turns on certain bits in the flag byte through addition.\n  //      note 1: bits: HGFE DCBA\n  //      note 1: args: Holds pointer to arguments for reassignment\n\n  var g\n  var i\n  var j\n  var k\n  var l\n  var sal\n  var vkey\n  var elIndex\n  var lastSorts\n  var tmpArray\n  var zlast\n\n  var sortFlag = [0]\n  var thingsToSort = []\n  var nLastSort = []\n  var lastSort = []\n  // possibly redundant\n  var args = arguments\n\n  var flags = {\n    'SORT_REGULAR': 16,\n    'SORT_NUMERIC': 17,\n    'SORT_STRING': 18,\n    'SORT_ASC': 32,\n    'SORT_DESC': 40\n  }\n\n  var sortDuplicator = function (a, b) {\n    return nLastSort.shift()\n  }\n\n  var sortFunctions = [\n    [\n\n      function (a, b) {\n        lastSort.push(a > b ? 1 : (a < b ? -1 : 0))\n        return a > b ? 1 : (a < b ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push(b > a ? 1 : (b < a ? -1 : 0))\n        return b > a ? 1 : (b < a ? -1 : 0)\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push(a - b)\n        return a - b\n      },\n      function (a, b) {\n        lastSort.push(b - a)\n        return b - a\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push((a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0))\n        return (a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push((b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0))\n        return (b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0)\n      }\n    ]\n  ]\n\n  var sortArrs = [\n    []\n  ]\n\n  var sortKeys = [\n    []\n  ]\n\n  // Store first argument into sortArrs and sortKeys if an Object.\n  // First Argument should be either a Javascript Array or an Object,\n  // otherwise function would return FALSE like in PHP\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    sortArrs[0] = arr\n  } else if (arr && typeof arr === 'object') {\n    for (i in arr) {\n      if (arr.hasOwnProperty(i)) {\n        sortKeys[0].push(i)\n        sortArrs[0].push(arr[i])\n      }\n    }\n  } else {\n    return false\n  }\n\n  // arrMainLength: Holds the length of the first array.\n  // All other arrays must be of equal length, otherwise function would return FALSE like in PHP\n  // sortComponents: Holds 2 indexes per every section of the array\n  // that can be sorted. As this is the start, the whole array can be sorted.\n  var arrMainLength = sortArrs[0].length\n  var sortComponents = [0, arrMainLength]\n\n  // Loop through all other arguments, checking lengths and sort flags\n  // of arrays and adding them to the above variables.\n  var argl = arguments.length\n  for (j = 1; j < argl; j++) {\n    if (Object.prototype.toString.call(arguments[j]) === '[object Array]') {\n      sortArrs[j] = arguments[j]\n      sortFlag[j] = 0\n      if (arguments[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (arguments[j] && typeof arguments[j] === 'object') {\n      sortKeys[j] = []\n      sortArrs[j] = []\n      sortFlag[j] = 0\n      for (i in arguments[j]) {\n        if (arguments[j].hasOwnProperty(i)) {\n          sortKeys[j].push(i)\n          sortArrs[j].push(arguments[j][i])\n        }\n      }\n      if (sortArrs[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (typeof arguments[j] === 'string') {\n      var lFlag = sortFlag.pop()\n      // Keep extra parentheses around latter flags check\n      // to avoid minimization leading to CDATA closer\n      if (typeof flags[arguments[j]] === 'undefined' ||\n        ((((flags[arguments[j]]) >>> 4) & (lFlag >>> 4)) > 0)) {\n        return false\n      }\n      sortFlag.push(lFlag + flags[arguments[j]])\n    } else {\n      return false\n    }\n  }\n\n  for (i = 0; i !== arrMainLength; i++) {\n    thingsToSort.push(true)\n  }\n\n  // Sort all the arrays....\n  for (i in sortArrs) {\n    if (sortArrs.hasOwnProperty(i)) {\n      lastSorts = []\n      tmpArray = []\n      elIndex = 0\n      nLastSort = []\n      lastSort = []\n\n      // If there are no sortComponents, then no more sorting is neeeded.\n      // Copy the array back to the argument.\n      if (sortComponents.length === 0) {\n        if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n          args[i] = sortArrs[i]\n        } else {\n          for (k in arguments[i]) {\n            if (arguments[i].hasOwnProperty(k)) {\n              delete arguments[i][k]\n            }\n          }\n          sal = sortArrs[i].length\n          for (j = 0, vkey = 0; j < sal; j++) {\n            vkey = sortKeys[i][j]\n            args[i][vkey] = sortArrs[i][j]\n          }\n        }\n        delete sortArrs[i]\n        delete sortKeys[i]\n        continue\n      }\n\n      // Sort function for sorting. Either sorts asc or desc, regular/string or numeric.\n      var sFunction = sortFunctions[(sortFlag[i] & 3)][((sortFlag[i] & 8) > 0) ? 1 : 0]\n\n      // Sort current array.\n      for (l = 0; l !== sortComponents.length; l += 2) {\n        tmpArray = sortArrs[i].slice(sortComponents[l], sortComponents[l + 1] + 1)\n        tmpArray.sort(sFunction)\n        // Is there a better way to copy an array in Javascript?\n        lastSorts[l] = [].concat(lastSort)\n        elIndex = sortComponents[l]\n        for (g in tmpArray) {\n          if (tmpArray.hasOwnProperty(g)) {\n            sortArrs[i][elIndex] = tmpArray[g]\n            elIndex++\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on future arrays.\n      sFunction = sortDuplicator\n      for (j in sortArrs) {\n        if (sortArrs.hasOwnProperty(j)) {\n          if (sortArrs[j] === sortArrs[i]) {\n            continue\n          }\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortArrs[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            // alert(l + ':' + nLastSort);\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortArrs[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on array keys\n      for (j in sortKeys) {\n        if (sortKeys.hasOwnProperty(j)) {\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortKeys[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortKeys[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Generate the next sortComponents\n      zlast = null\n      sortComponents = []\n      for (j in sortArrs[i]) {\n        if (sortArrs[i].hasOwnProperty(j)) {\n          if (!thingsToSort[j]) {\n            if ((sortComponents.length & 1)) {\n              sortComponents.push(j - 1)\n            }\n            zlast = null\n            continue\n          }\n          if (!(sortComponents.length & 1)) {\n            if (zlast !== null) {\n              if (sortArrs[i][j] === zlast) {\n                sortComponents.push(j - 1)\n              } else {\n                thingsToSort[j] = false\n              }\n            }\n            zlast = sortArrs[i][j]\n          } else {\n            if (sortArrs[i][j] !== zlast) {\n              sortComponents.push(j - 1)\n              zlast = sortArrs[i][j]\n            }\n          }\n        }\n      }\n\n      if (sortComponents.length & 1) {\n        sortComponents.push(j)\n      }\n      if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n        args[i] = sortArrs[i]\n      } else {\n        for (j in arguments[i]) {\n          if (arguments[i].hasOwnProperty(j)) {\n            delete arguments[i][j]\n          }\n        }\n\n        sal = sortArrs[i].length\n        for (j = 0, vkey = 0; j < sal; j++) {\n          vkey = sortKeys[i][j]\n          args[i][vkey] = sortArrs[i][j]\n        }\n      }\n      delete sortArrs[i]\n      delete sortKeys[i]\n    }\n  }\n  return true\n}\n","excerpt":"","more":"module.exports = function array_multisort (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_multisort/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: array_multisort([1, 2, 1, 2, 1, 2], [1, 2, 3, 4, 5, 6])\n  //   returns 1: true\n  //   example 2: var $characters = {A: 'Edward', B: 'Locke', C: 'Sabin', D: 'Terra', E: 'Edward'}\n  //   example 2: var $jobs = {A: 'Warrior', B: 'Thief', C: 'Monk', D: 'Mage', E: 'Knight'}\n  //   example 2: array_multisort($characters, 'SORT_DESC', 'SORT_STRING', $jobs, 'SORT_ASC', 'SORT_STRING')\n  //   returns 2: true\n  //   example 3: var $lastnames = [ 'Carter','Adams','Monroe','Tyler','Madison','Kennedy','Adams']\n  //   example 3: var $firstnames = ['James', 'John' ,'James', 'John', 'James',  'John',   'John']\n  //   example 3: var $president = [ 39, 6, 5, 10, 4, 35, 2 ]\n  //   example 3: array_multisort($firstnames, 'SORT_DESC', 'SORT_STRING', $lastnames, 'SORT_ASC', 'SORT_STRING', $president, 'SORT_NUMERIC')\n  //   returns 3: true\n  //      note 1: flags: Translation table for sort arguments.\n  //      note 1: Each argument turns on certain bits in the flag byte through addition.\n  //      note 1: bits: HGFE DCBA\n  //      note 1: args: Holds pointer to arguments for reassignment\n\n  var g\n  var i\n  var j\n  var k\n  var l\n  var sal\n  var vkey\n  var elIndex\n  var lastSorts\n  var tmpArray\n  var zlast\n\n  var sortFlag = [0]\n  var thingsToSort = []\n  var nLastSort = []\n  var lastSort = []\n  // possibly redundant\n  var args = arguments\n\n  var flags = {\n    'SORT_REGULAR': 16,\n    'SORT_NUMERIC': 17,\n    'SORT_STRING': 18,\n    'SORT_ASC': 32,\n    'SORT_DESC': 40\n  }\n\n  var sortDuplicator = function (a, b) {\n    return nLastSort.shift()\n  }\n\n  var sortFunctions = [\n    [\n\n      function (a, b) {\n        lastSort.push(a > b ? 1 : (a < b ? -1 : 0))\n        return a > b ? 1 : (a < b ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push(b > a ? 1 : (b < a ? -1 : 0))\n        return b > a ? 1 : (b < a ? -1 : 0)\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push(a - b)\n        return a - b\n      },\n      function (a, b) {\n        lastSort.push(b - a)\n        return b - a\n      }\n    ],\n    [\n\n      function (a, b) {\n        lastSort.push((a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0))\n        return (a + '') > (b + '') ? 1 : ((a + '') < (b + '') ? -1 : 0)\n      },\n      function (a, b) {\n        lastSort.push((b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0))\n        return (b + '') > (a + '') ? 1 : ((b + '') < (a + '') ? -1 : 0)\n      }\n    ]\n  ]\n\n  var sortArrs = [\n    []\n  ]\n\n  var sortKeys = [\n    []\n  ]\n\n  // Store first argument into sortArrs and sortKeys if an Object.\n  // First Argument should be either a Javascript Array or an Object,\n  // otherwise function would return FALSE like in PHP\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    sortArrs[0] = arr\n  } else if (arr && typeof arr === 'object') {\n    for (i in arr) {\n      if (arr.hasOwnProperty(i)) {\n        sortKeys[0].push(i)\n        sortArrs[0].push(arr[i])\n      }\n    }\n  } else {\n    return false\n  }\n\n  // arrMainLength: Holds the length of the first array.\n  // All other arrays must be of equal length, otherwise function would return FALSE like in PHP\n  // sortComponents: Holds 2 indexes per every section of the array\n  // that can be sorted. As this is the start, the whole array can be sorted.\n  var arrMainLength = sortArrs[0].length\n  var sortComponents = [0, arrMainLength]\n\n  // Loop through all other arguments, checking lengths and sort flags\n  // of arrays and adding them to the above variables.\n  var argl = arguments.length\n  for (j = 1; j < argl; j++) {\n    if (Object.prototype.toString.call(arguments[j]) === '[object Array]') {\n      sortArrs[j] = arguments[j]\n      sortFlag[j] = 0\n      if (arguments[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (arguments[j] && typeof arguments[j] === 'object') {\n      sortKeys[j] = []\n      sortArrs[j] = []\n      sortFlag[j] = 0\n      for (i in arguments[j]) {\n        if (arguments[j].hasOwnProperty(i)) {\n          sortKeys[j].push(i)\n          sortArrs[j].push(arguments[j][i])\n        }\n      }\n      if (sortArrs[j].length !== arrMainLength) {\n        return false\n      }\n    } else if (typeof arguments[j] === 'string') {\n      var lFlag = sortFlag.pop()\n      // Keep extra parentheses around latter flags check\n      // to avoid minimization leading to CDATA closer\n      if (typeof flags[arguments[j]] === 'undefined' ||\n        ((((flags[arguments[j]]) >>> 4) & (lFlag >>> 4)) > 0)) {\n        return false\n      }\n      sortFlag.push(lFlag + flags[arguments[j]])\n    } else {\n      return false\n    }\n  }\n\n  for (i = 0; i !== arrMainLength; i++) {\n    thingsToSort.push(true)\n  }\n\n  // Sort all the arrays....\n  for (i in sortArrs) {\n    if (sortArrs.hasOwnProperty(i)) {\n      lastSorts = []\n      tmpArray = []\n      elIndex = 0\n      nLastSort = []\n      lastSort = []\n\n      // If there are no sortComponents, then no more sorting is neeeded.\n      // Copy the array back to the argument.\n      if (sortComponents.length === 0) {\n        if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n          args[i] = sortArrs[i]\n        } else {\n          for (k in arguments[i]) {\n            if (arguments[i].hasOwnProperty(k)) {\n              delete arguments[i][k]\n            }\n          }\n          sal = sortArrs[i].length\n          for (j = 0, vkey = 0; j < sal; j++) {\n            vkey = sortKeys[i][j]\n            args[i][vkey] = sortArrs[i][j]\n          }\n        }\n        delete sortArrs[i]\n        delete sortKeys[i]\n        continue\n      }\n\n      // Sort function for sorting. Either sorts asc or desc, regular/string or numeric.\n      var sFunction = sortFunctions[(sortFlag[i] & 3)][((sortFlag[i] & 8) > 0) ? 1 : 0]\n\n      // Sort current array.\n      for (l = 0; l !== sortComponents.length; l += 2) {\n        tmpArray = sortArrs[i].slice(sortComponents[l], sortComponents[l + 1] + 1)\n        tmpArray.sort(sFunction)\n        // Is there a better way to copy an array in Javascript?\n        lastSorts[l] = [].concat(lastSort)\n        elIndex = sortComponents[l]\n        for (g in tmpArray) {\n          if (tmpArray.hasOwnProperty(g)) {\n            sortArrs[i][elIndex] = tmpArray[g]\n            elIndex++\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on future arrays.\n      sFunction = sortDuplicator\n      for (j in sortArrs) {\n        if (sortArrs.hasOwnProperty(j)) {\n          if (sortArrs[j] === sortArrs[i]) {\n            continue\n          }\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortArrs[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            // alert(l + ':' + nLastSort);\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortArrs[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Duplicate the sorting of the current array on array keys\n      for (j in sortKeys) {\n        if (sortKeys.hasOwnProperty(j)) {\n          for (l = 0; l !== sortComponents.length; l += 2) {\n            tmpArray = sortKeys[j].slice(sortComponents[l], sortComponents[l + 1] + 1)\n            nLastSort = [].concat(lastSorts[l])\n            tmpArray.sort(sFunction)\n            elIndex = sortComponents[l]\n            for (g in tmpArray) {\n              if (tmpArray.hasOwnProperty(g)) {\n                sortKeys[j][elIndex] = tmpArray[g]\n                elIndex++\n              }\n            }\n          }\n        }\n      }\n\n      // Generate the next sortComponents\n      zlast = null\n      sortComponents = []\n      for (j in sortArrs[i]) {\n        if (sortArrs[i].hasOwnProperty(j)) {\n          if (!thingsToSort[j]) {\n            if ((sortComponents.length & 1)) {\n              sortComponents.push(j - 1)\n            }\n            zlast = null\n            continue\n          }\n          if (!(sortComponents.length & 1)) {\n            if (zlast !== null) {\n              if (sortArrs[i][j] === zlast) {\n                sortComponents.push(j - 1)\n              } else {\n                thingsToSort[j] = false\n              }\n            }\n            zlast = sortArrs[i][j]\n          } else {\n            if (sortArrs[i][j] !== zlast) {\n              sortComponents.push(j - 1)\n              zlast = sortArrs[i][j]\n            }\n          }\n        }\n      }\n\n      if (sortComponents.length & 1) {\n        sortComponents.push(j)\n      }\n      if (Object.prototype.toString.call(arguments[i]) === '[object Array]') {\n        args[i] = sortArrs[i]\n      } else {\n        for (j in arguments[i]) {\n          if (arguments[i].hasOwnProperty(j)) {\n            delete arguments[i][j]\n          }\n        }\n\n        sal = sortArrs[i].length\n        for (j = 0, vkey = 0; j < sal; j++) {\n          vkey = sortKeys[i][j]\n          args[i][vkey] = sortArrs[i][j]\n        }\n      }\n      delete sortArrs[i]\n      delete sortKeys[i]\n    }\n  }\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_pad([ 7, 8, 9 ], 2, 'a')","array_pad([ 7, 8, 9 ], 5, 'a')","array_pad([ 7, 8, 9 ], 5, 2)","array_pad([ 7, 8, 9 ], -5, 'a')"],"estarget":"es5","returns":["[ 7, 8, 9]","[ 7, 8, 9, 'a', 'a']","[ 7, 8, 9, 2, 2]","[ 'a', 'a', 7, 8, 9 ]"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'sarray_pad in JavaScript","function":"array_pad","category":"array","language":"php","alias":["/functions/php/array_pad/","/functions/array/array_pad/","/php/array_pad/","/functions/array_pad/"],"_content":"module.exports = function array_pad (input, padSize, padValue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pad/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_pad([ 7, 8, 9 ], 2, 'a')\n  //   returns 1: [ 7, 8, 9]\n  //   example 2: array_pad([ 7, 8, 9 ], 5, 'a')\n  //   returns 2: [ 7, 8, 9, 'a', 'a']\n  //   example 3: array_pad([ 7, 8, 9 ], 5, 2)\n  //   returns 3: [ 7, 8, 9, 2, 2]\n  //   example 4: array_pad([ 7, 8, 9 ], -5, 'a')\n  //   returns 4: [ 'a', 'a', 7, 8, 9 ]\n\n  var pad = []\n  var newArray = []\n  var newLength\n  var diff = 0\n  var i = 0\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && !isNaN(padSize)) {\n    newLength = ((padSize < 0) ? (padSize * -1) : padSize)\n    diff = newLength - input.length\n\n    if (diff > 0) {\n      for (i = 0; i < diff; i++) {\n        newArray[i] = padValue\n      }\n      pad = ((padSize < 0) ? newArray.concat(input) : input.concat(newArray))\n    } else {\n      pad = input\n    }\n  }\n\n  return pad\n}\n","source":"php/array/array_pad.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_pad([ 7, 8, 9 ], 2, ''a'')'\n  - 'array_pad([ 7, 8, 9 ], 5, ''a'')'\n  - 'array_pad([ 7, 8, 9 ], 5, 2)'\n  - 'array_pad([ 7, 8, 9 ], -5, ''a'')'\nestarget: es5\nreturns:\n  - '[ 7, 8, 9]'\n  - '[ 7, 8, 9, ''a'', ''a'']'\n  - '[ 7, 8, 9, 2, 2]'\n  - '[ ''a'', ''a'', 7, 8, 9 ]'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'sarray_pad in JavaScript\nfunction: array_pad\ncategory: array\nlanguage: php\npermalink: php/array/array_pad/\nalias:\n  - /functions/php/array_pad/\n  - /functions/array/array_pad/\n  - /php/array_pad/\n  - /functions/array_pad/\n---\nmodule.exports = function array_pad (input, padSize, padValue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pad/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_pad([ 7, 8, 9 ], 2, 'a')\n  //   returns 1: [ 7, 8, 9]\n  //   example 2: array_pad([ 7, 8, 9 ], 5, 'a')\n  //   returns 2: [ 7, 8, 9, 'a', 'a']\n  //   example 3: array_pad([ 7, 8, 9 ], 5, 2)\n  //   returns 3: [ 7, 8, 9, 2, 2]\n  //   example 4: array_pad([ 7, 8, 9 ], -5, 'a')\n  //   returns 4: [ 'a', 'a', 7, 8, 9 ]\n\n  var pad = []\n  var newArray = []\n  var newLength\n  var diff = 0\n  var i = 0\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && !isNaN(padSize)) {\n    newLength = ((padSize < 0) ? (padSize * -1) : padSize)\n    diff = newLength - input.length\n\n    if (diff > 0) {\n      for (i = 0; i < diff; i++) {\n        newArray[i] = padValue\n      }\n      pad = ((padSize < 0) ? newArray.concat(input) : input.concat(newArray))\n    } else {\n      pad = input\n    }\n  }\n\n  return pad\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_pad/index.html","comments":1,"_id":"cinoej9za0014ou9yscebwc0u","content":"module.exports = function array_pad (input, padSize, padValue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pad/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_pad([ 7, 8, 9 ], 2, 'a')\n  //   returns 1: [ 7, 8, 9]\n  //   example 2: array_pad([ 7, 8, 9 ], 5, 'a')\n  //   returns 2: [ 7, 8, 9, 'a', 'a']\n  //   example 3: array_pad([ 7, 8, 9 ], 5, 2)\n  //   returns 3: [ 7, 8, 9, 2, 2]\n  //   example 4: array_pad([ 7, 8, 9 ], -5, 'a')\n  //   returns 4: [ 'a', 'a', 7, 8, 9 ]\n\n  var pad = []\n  var newArray = []\n  var newLength\n  var diff = 0\n  var i = 0\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && !isNaN(padSize)) {\n    newLength = ((padSize < 0) ? (padSize * -1) : padSize)\n    diff = newLength - input.length\n\n    if (diff > 0) {\n      for (i = 0; i < diff; i++) {\n        newArray[i] = padValue\n      }\n      pad = ((padSize < 0) ? newArray.concat(input) : input.concat(newArray))\n    } else {\n      pad = input\n    }\n  }\n\n  return pad\n}\n","excerpt":"","more":"module.exports = function array_pad (input, padSize, padValue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pad/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_pad([ 7, 8, 9 ], 2, 'a')\n  //   returns 1: [ 7, 8, 9]\n  //   example 2: array_pad([ 7, 8, 9 ], 5, 'a')\n  //   returns 2: [ 7, 8, 9, 'a', 'a']\n  //   example 3: array_pad([ 7, 8, 9 ], 5, 2)\n  //   returns 3: [ 7, 8, 9, 2, 2]\n  //   example 4: array_pad([ 7, 8, 9 ], -5, 'a')\n  //   returns 4: [ 'a', 'a', 7, 8, 9 ]\n\n  var pad = []\n  var newArray = []\n  var newLength\n  var diff = 0\n  var i = 0\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && !isNaN(padSize)) {\n    newLength = ((padSize < 0) ? (padSize * -1) : padSize)\n    diff = newLength - input.length\n\n    if (diff > 0) {\n      for (i = 0; i < diff; i++) {\n        newArray[i] = padValue\n      }\n      pad = ((padSize < 0) ? newArray.concat(input) : input.concat(newArray))\n    } else {\n      pad = input\n    }\n  }\n\n  return pad\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_pop([0,1,2])","var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\nvar $lastElem = array_pop($data)\nvar $result = $data"],"estarget":"es5","returns":["2","{firstName: 'Kevin'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"input by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":["While IE (and other browsers) support iterating an object's\nown properties in order, if one attempts to add back properties\nin IE, they may end up in their former position due to their position\nbeing retained. So use of this function with \"associative arrays\"\n(objects) may lead to unexpected behavior in an IE environment if\nyou add back properties with the same keys that you removed"],"layout":"function","title":"php'sarray_pop in JavaScript","function":"array_pop","category":"array","language":"php","alias":["/functions/php/array_pop/","/functions/array/array_pop/","/php/array_pop/","/functions/array_pop/"],"_content":"module.exports = function array_pop (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pop/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: While IE (and other browsers) support iterating an object's\n  //      note 1: own properties in order, if one attempts to add back properties\n  //      note 1: in IE, they may end up in their former position due to their position\n  //      note 1: being retained. So use of this function with \"associative arrays\"\n  //      note 1: (objects) may lead to unexpected behavior in an IE environment if\n  //      note 1: you add back properties with the same keys that you removed\n  //   example 1: array_pop([0,1,2])\n  //   returns 1: 2\n  //   example 2: var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\n  //   example 2: var $lastElem = array_pop($data)\n  //   example 2: var $result = $data\n  //   returns 2: {firstName: 'Kevin'}\n\n  var key = ''\n  var lastKey = ''\n\n  if (inputArr.hasOwnProperty('length')) {\n    // Indexed\n    if (!inputArr.length) {\n      // Done popping, are we?\n      return null\n    }\n    return inputArr.pop()\n  } else {\n    // Associative\n    for (key in inputArr) {\n      if (inputArr.hasOwnProperty(key)) {\n        lastKey = key\n      }\n    }\n    if (lastKey) {\n      var tmp = inputArr[lastKey]\n      delete (inputArr[lastKey])\n      return tmp\n    } else {\n      return null\n    }\n  }\n}\n","source":"php/array/array_pop.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_pop([0,1,2])'\n  - |-\n    var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\n    var $lastElem = array_pop($data)\n    var $result = $data\nestarget: es5\nreturns:\n  - '2'\n  - '{firstName: ''Kevin''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - |-\n    While IE (and other browsers) support iterating an object's\n    own properties in order, if one attempts to add back properties\n    in IE, they may end up in their former position due to their position\n    being retained. So use of this function with \"associative arrays\"\n    (objects) may lead to unexpected behavior in an IE environment if\n    you add back properties with the same keys that you removed\nlayout: function\ntitle: php'sarray_pop in JavaScript\nfunction: array_pop\ncategory: array\nlanguage: php\npermalink: php/array/array_pop/\nalias:\n  - /functions/php/array_pop/\n  - /functions/array/array_pop/\n  - /php/array_pop/\n  - /functions/array_pop/\n---\nmodule.exports = function array_pop (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pop/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: While IE (and other browsers) support iterating an object's\n  //      note 1: own properties in order, if one attempts to add back properties\n  //      note 1: in IE, they may end up in their former position due to their position\n  //      note 1: being retained. So use of this function with \"associative arrays\"\n  //      note 1: (objects) may lead to unexpected behavior in an IE environment if\n  //      note 1: you add back properties with the same keys that you removed\n  //   example 1: array_pop([0,1,2])\n  //   returns 1: 2\n  //   example 2: var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\n  //   example 2: var $lastElem = array_pop($data)\n  //   example 2: var $result = $data\n  //   returns 2: {firstName: 'Kevin'}\n\n  var key = ''\n  var lastKey = ''\n\n  if (inputArr.hasOwnProperty('length')) {\n    // Indexed\n    if (!inputArr.length) {\n      // Done popping, are we?\n      return null\n    }\n    return inputArr.pop()\n  } else {\n    // Associative\n    for (key in inputArr) {\n      if (inputArr.hasOwnProperty(key)) {\n        lastKey = key\n      }\n    }\n    if (lastKey) {\n      var tmp = inputArr[lastKey]\n      delete (inputArr[lastKey])\n      return tmp\n    } else {\n      return null\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_pop/index.html","comments":1,"_id":"cinoej9za0015ou9y3c2nh539","content":"module.exports = function array_pop (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pop/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: While IE (and other browsers) support iterating an object's\n  //      note 1: own properties in order, if one attempts to add back properties\n  //      note 1: in IE, they may end up in their former position due to their position\n  //      note 1: being retained. So use of this function with \"associative arrays\"\n  //      note 1: (objects) may lead to unexpected behavior in an IE environment if\n  //      note 1: you add back properties with the same keys that you removed\n  //   example 1: array_pop([0,1,2])\n  //   returns 1: 2\n  //   example 2: var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\n  //   example 2: var $lastElem = array_pop($data)\n  //   example 2: var $result = $data\n  //   returns 2: {firstName: 'Kevin'}\n\n  var key = ''\n  var lastKey = ''\n\n  if (inputArr.hasOwnProperty('length')) {\n    // Indexed\n    if (!inputArr.length) {\n      // Done popping, are we?\n      return null\n    }\n    return inputArr.pop()\n  } else {\n    // Associative\n    for (key in inputArr) {\n      if (inputArr.hasOwnProperty(key)) {\n        lastKey = key\n      }\n    }\n    if (lastKey) {\n      var tmp = inputArr[lastKey]\n      delete (inputArr[lastKey])\n      return tmp\n    } else {\n      return null\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function array_pop (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_pop/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: While IE (and other browsers) support iterating an object's\n  //      note 1: own properties in order, if one attempts to add back properties\n  //      note 1: in IE, they may end up in their former position due to their position\n  //      note 1: being retained. So use of this function with \"associative arrays\"\n  //      note 1: (objects) may lead to unexpected behavior in an IE environment if\n  //      note 1: you add back properties with the same keys that you removed\n  //   example 1: array_pop([0,1,2])\n  //   returns 1: 2\n  //   example 2: var $data = {firstName: 'Kevin', surName: 'van Zonneveld'}\n  //   example 2: var $lastElem = array_pop($data)\n  //   example 2: var $result = $data\n  //   returns 2: {firstName: 'Kevin'}\n\n  var key = ''\n  var lastKey = ''\n\n  if (inputArr.hasOwnProperty('length')) {\n    // Indexed\n    if (!inputArr.length) {\n      // Done popping, are we?\n      return null\n    }\n    return inputArr.pop()\n  } else {\n    // Associative\n    for (key in inputArr) {\n      if (inputArr.hasOwnProperty(key)) {\n        lastKey = key\n      }\n    }\n    if (lastKey) {\n      var tmp = inputArr[lastKey]\n      delete (inputArr[lastKey])\n      return tmp\n    } else {\n      return null\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_product([ 2, 4, 6, 8 ])"],"estarget":"es5","returns":["384"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'sarray_product in JavaScript","function":"array_product","category":"array","language":"php","alias":["/functions/php/array_product/","/functions/array/array_product/","/php/array_product/","/functions/array_product/"],"_content":"module.exports = function array_product (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_product/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_product([ 2, 4, 6, 8 ])\n  //   returns 1: 384\n\n  var idx = 0\n  var product = 1\n  var il = 0\n\n  if (Object.prototype.toString.call(input) !== '[object Array]') {\n    return null\n  }\n\n  il = input.length\n  while (idx < il) {\n    product *= (!isNaN(input[idx]) ? input[idx] : 0)\n    idx++\n  }\n\n  return product\n}\n","source":"php/array/array_product.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_product([ 2, 4, 6, 8 ])'\nestarget: es5\nreturns:\n  - '384'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'sarray_product in JavaScript\nfunction: array_product\ncategory: array\nlanguage: php\npermalink: php/array/array_product/\nalias:\n  - /functions/php/array_product/\n  - /functions/array/array_product/\n  - /php/array_product/\n  - /functions/array_product/\n---\nmodule.exports = function array_product (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_product/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_product([ 2, 4, 6, 8 ])\n  //   returns 1: 384\n\n  var idx = 0\n  var product = 1\n  var il = 0\n\n  if (Object.prototype.toString.call(input) !== '[object Array]') {\n    return null\n  }\n\n  il = input.length\n  while (idx < il) {\n    product *= (!isNaN(input[idx]) ? input[idx] : 0)\n    idx++\n  }\n\n  return product\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_product/index.html","comments":1,"_id":"cinoej9zb0016ou9yqsdsfpcj","content":"module.exports = function array_product (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_product/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_product([ 2, 4, 6, 8 ])\n  //   returns 1: 384\n\n  var idx = 0\n  var product = 1\n  var il = 0\n\n  if (Object.prototype.toString.call(input) !== '[object Array]') {\n    return null\n  }\n\n  il = input.length\n  while (idx < il) {\n    product *= (!isNaN(input[idx]) ? input[idx] : 0)\n    idx++\n  }\n\n  return product\n}\n","excerpt":"","more":"module.exports = function array_product (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_product/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_product([ 2, 4, 6, 8 ])\n  //   returns 1: 384\n\n  var idx = 0\n  var product = 1\n  var il = 0\n\n  if (Object.prototype.toString.call(input) !== '[object Array]') {\n    return null\n  }\n\n  il = input.length\n  while (idx < il) {\n    product *= (!isNaN(input[idx]) ? input[idx] : 0)\n    idx++\n  }\n\n  return product\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_rand( ['Kevin'], 1 )"],"estarget":"es5","returns":["0"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'sarray_rand in JavaScript","function":"array_rand","category":"array","language":"php","alias":["/functions/php/array_rand/","/functions/array/array_rand/","/php/array_rand/","/functions/array_rand/"],"_content":"module.exports = function array_rand (input, numReq) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_rand/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_rand( ['Kevin'], 1 )\n  //   returns 1: 0\n\n  var indexes = []\n  var ticks = numReq || 1\n  var checkDuplicate = function (input, value) {\n    var exist = false\n    var index = 0\n    var il = input.length\n    while (index < il) {\n      if (input[index] === value) {\n        exist = true\n        break\n      }\n      index++\n    }\n    return exist\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && ticks <= input.length) {\n    while (true) {\n      var rand = Math.floor((Math.random() * input.length))\n      if (indexes.length === ticks) {\n        break\n      }\n      if (!checkDuplicate(indexes, rand)) {\n        indexes.push(rand)\n      }\n    }\n  } else {\n    indexes = null\n  }\n\n  return ((ticks === 1) ? indexes[0] : indexes)\n}\n","source":"php/array/array_rand.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_rand( [''Kevin''], 1 )'\nestarget: es5\nreturns:\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'sarray_rand in JavaScript\nfunction: array_rand\ncategory: array\nlanguage: php\npermalink: php/array/array_rand/\nalias:\n  - /functions/php/array_rand/\n  - /functions/array/array_rand/\n  - /php/array_rand/\n  - /functions/array_rand/\n---\nmodule.exports = function array_rand (input, numReq) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_rand/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_rand( ['Kevin'], 1 )\n  //   returns 1: 0\n\n  var indexes = []\n  var ticks = numReq || 1\n  var checkDuplicate = function (input, value) {\n    var exist = false\n    var index = 0\n    var il = input.length\n    while (index < il) {\n      if (input[index] === value) {\n        exist = true\n        break\n      }\n      index++\n    }\n    return exist\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && ticks <= input.length) {\n    while (true) {\n      var rand = Math.floor((Math.random() * input.length))\n      if (indexes.length === ticks) {\n        break\n      }\n      if (!checkDuplicate(indexes, rand)) {\n        indexes.push(rand)\n      }\n    }\n  } else {\n    indexes = null\n  }\n\n  return ((ticks === 1) ? indexes[0] : indexes)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_rand/index.html","comments":1,"_id":"cinoej9zb0017ou9y7x366wk8","content":"module.exports = function array_rand (input, numReq) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_rand/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_rand( ['Kevin'], 1 )\n  //   returns 1: 0\n\n  var indexes = []\n  var ticks = numReq || 1\n  var checkDuplicate = function (input, value) {\n    var exist = false\n    var index = 0\n    var il = input.length\n    while (index < il) {\n      if (input[index] === value) {\n        exist = true\n        break\n      }\n      index++\n    }\n    return exist\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && ticks ","excerpt":"","more":"module.exports = function array_rand (input, numReq) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_rand/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: array_rand( ['Kevin'], 1 )\n  //   returns 1: 0\n\n  var indexes = []\n  var ticks = numReq || 1\n  var checkDuplicate = function (input, value) {\n    var exist = false\n    var index = 0\n    var il = input.length\n    while (index < il) {\n      if (input[index] === value) {\n        exist = true\n        break\n      }\n      index++\n    }\n    return exist\n  }\n\n  if (Object.prototype.toString.call(input) === '[object Array]' && ticks <= input.length) {\n    while (true) {\n      var rand = Math.floor((Math.random() * input.length))\n      if (indexes.length === ticks) {\n        break\n      }\n      if (!checkDuplicate(indexes, rand)) {\n        indexes.push(rand)\n      }\n    }\n  } else {\n    indexes = null\n  }\n\n  return ((ticks === 1) ? indexes[0] : indexes)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_push(['kevin','van'], 'zonneveld')"],"estarget":"es5","returns":["3"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Note also that IE retains information about property position even\nafter being supposedly deleted, so if you delete properties and then\nadd back properties with the same keys (including numeric) that had\nbeen deleted, the order will be as before; thus, this function is not\nreally recommended with associative arrays (objects) in IE environments"],"layout":"function","title":"php'sarray_push in JavaScript","function":"array_push","category":"array","language":"php","alias":["/functions/php/array_push/","/functions/array/array_push/","/php/array_push/","/functions/array_push/"],"_content":"module.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n","source":"php/array/array_push.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_push([''kevin'',''van''], ''zonneveld'')'\nestarget: es5\nreturns:\n  - '3'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    Note also that IE retains information about property position even\n    after being supposedly deleted, so if you delete properties and then\n    add back properties with the same keys (including numeric) that had\n    been deleted, the order will be as before; thus, this function is not\n    really recommended with associative arrays (objects) in IE environments\nlayout: function\ntitle: php'sarray_push in JavaScript\nfunction: array_push\ncategory: array\nlanguage: php\npermalink: php/array/array_push/\nalias:\n  - /functions/php/array_push/\n  - /functions/array/array_push/\n  - /php/array_push/\n  - /functions/array_push/\n---\nmodule.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_push/index.html","comments":1,"_id":"cinoej9zc0018ou9yzr2np7nf","content":"module.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n","excerpt":"","more":"module.exports = function array_push (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_push/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so if you delete properties and then\n  //      note 1: add back properties with the same keys (including numeric) that had\n  //      note 1: been deleted, the order will be as before; thus, this function is not\n  //      note 1: really recommended with associative arrays (objects) in IE environments\n  //   example 1: array_push(['kevin','van'], 'zonneveld')\n  //   returns 1: 3\n\n  var i = 0\n  var pr = ''\n  var argv = arguments\n  var argc = argv.length\n  var allDigits = /^\\d$/\n  var size = 0\n  var highestIdx = 0\n  var len = 0\n\n  if (inputArr.hasOwnProperty('length')) {\n    for (i = 1; i < argc; i++) {\n      inputArr[inputArr.length] = argv[i]\n    }\n    return inputArr.length\n  }\n\n  // Associative (object)\n  for (pr in inputArr) {\n    if (inputArr.hasOwnProperty(pr)) {\n      ++len\n      if (pr.search(allDigits) !== -1) {\n        size = parseInt(pr, 10)\n        highestIdx = size > highestIdx ? size : highestIdx\n      }\n    }\n  }\n  for (i = 1; i < argc; i++) {\n    inputArr[++highestIdx] = argv[i]\n  }\n\n  return len + i - 1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})"],"estarget":"es5","returns":["15"],"dependencies":[],"authors":{"original by":["Alfonso Jimenez (http://www.alfonsojimenez.com)"]},"notes":["Takes a function as an argument, not a function's name"],"layout":"function","title":"php'sarray_reduce in JavaScript","function":"array_reduce","category":"array","language":"php","alias":["/functions/php/array_reduce/","/functions/array/array_reduce/","/php/array_reduce/","/functions/array_reduce/"],"_content":"module.exports = function array_reduce (aInput, callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reduce/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})\n  //   returns 1: 15\n\n  var lon = aInput.length\n  var res = 0\n  var i = 0\n  var tmp = []\n\n  for (i = 0; i < lon; i += 2) {\n    tmp[0] = aInput[i]\n    if (aInput[(i + 1)]) {\n      tmp[1] = aInput[(i + 1)]\n    } else {\n      tmp[1] = 0\n    }\n    res += callback.apply(null, tmp)\n    tmp = []\n  }\n\n  return res\n}\n","source":"php/array/array_reduce.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})'\nestarget: es5\nreturns:\n  - '15'\ndependencies: []\nauthors:\n  original by:\n    - 'Alfonso Jimenez (http://www.alfonsojimenez.com)'\nnotes:\n  - 'Takes a function as an argument, not a function''s name'\nlayout: function\ntitle: php'sarray_reduce in JavaScript\nfunction: array_reduce\ncategory: array\nlanguage: php\npermalink: php/array/array_reduce/\nalias:\n  - /functions/php/array_reduce/\n  - /functions/array/array_reduce/\n  - /php/array_reduce/\n  - /functions/array_reduce/\n---\nmodule.exports = function array_reduce (aInput, callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reduce/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})\n  //   returns 1: 15\n\n  var lon = aInput.length\n  var res = 0\n  var i = 0\n  var tmp = []\n\n  for (i = 0; i < lon; i += 2) {\n    tmp[0] = aInput[i]\n    if (aInput[(i + 1)]) {\n      tmp[1] = aInput[(i + 1)]\n    } else {\n      tmp[1] = 0\n    }\n    res += callback.apply(null, tmp)\n    tmp = []\n  }\n\n  return res\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_reduce/index.html","comments":1,"_id":"cinoej9zc0019ou9y9qvnkpka","content":"module.exports = function array_reduce (aInput, callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reduce/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})\n  //   returns 1: 15\n\n  var lon = aInput.length\n  var res = 0\n  var i = 0\n  var tmp = []\n\n  for (i = 0; i < lon; i += 2) {\n    tmp[0] = aInput[i]\n    if (aInput[(i + 1)]) {\n      tmp[1] = aInput[(i + 1)]\n    } else {\n      tmp[1] = 0\n    }\n    res += callback.apply(null, tmp)\n    tmp = []\n  }\n\n  return res\n}\n","excerpt":"","more":"module.exports = function array_reduce (aInput, callback) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reduce/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  //      note 1: Takes a function as an argument, not a function's name\n  //   example 1: array_reduce([1, 2, 3, 4, 5], function (v, w){v += w;return v;})\n  //   returns 1: 15\n\n  var lon = aInput.length\n  var res = 0\n  var i = 0\n  var tmp = []\n\n  for (i = 0; i < lon; i += 2) {\n    tmp[0] = aInput[i]\n    if (aInput[(i + 1)]) {\n      tmp[1] = aInput[(i + 1)]\n    } else {\n      tmp[1] = 0\n    }\n    res += callback.apply(null, tmp)\n    tmp = []\n  }\n\n  return res\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry', 'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})"],"estarget":"es5","returns":["{citrus : ['pineapple'], berries : ['blueberry', 'raspberry']}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_replace_recursive in JavaScript","function":"array_replace_recursive","category":"array","language":"php","alias":["/functions/php/array_replace_recursive/","/functions/array/array_replace_recursive/","/php/array_replace_recursive/","/functions/array_replace_recursive/"],"_content":"module.exports = function array_replace_recursive (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace_recursive/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry', 'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})\n  //   returns 1: {citrus : ['pineapple'], berries : ['blueberry', 'raspberry']}\n\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n  var retObj\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace_recursive()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // So we make a copy here, instead of acting on arr itself\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n    for (p in arr) {\n      retObj.push(arr[p])\n    }\n  } else {\n    retObj = {}\n    for (p in arr) {\n      retObj[p] = arr[p]\n    }\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      if (retObj[p] && typeof retObj[p] === 'object') {\n        retObj[p] = array_replace_recursive(retObj[p], arguments[i][p])\n      } else {\n        retObj[p] = arguments[i][p]\n      }\n    }\n  }\n\n  return retObj\n}\n","source":"php/array/array_replace_recursive.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry',\n    'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})\nestarget: es5\nreturns:\n  - '{citrus : [''pineapple''], berries : [''blueberry'', ''raspberry'']}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_replace_recursive in JavaScript\nfunction: array_replace_recursive\ncategory: array\nlanguage: php\npermalink: php/array/array_replace_recursive/\nalias:\n  - /functions/php/array_replace_recursive/\n  - /functions/array/array_replace_recursive/\n  - /php/array_replace_recursive/\n  - /functions/array_replace_recursive/\n---\nmodule.exports = function array_replace_recursive (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace_recursive/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry', 'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})\n  //   returns 1: {citrus : ['pineapple'], berries : ['blueberry', 'raspberry']}\n\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n  var retObj\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace_recursive()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // So we make a copy here, instead of acting on arr itself\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n    for (p in arr) {\n      retObj.push(arr[p])\n    }\n  } else {\n    retObj = {}\n    for (p in arr) {\n      retObj[p] = arr[p]\n    }\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      if (retObj[p] && typeof retObj[p] === 'object') {\n        retObj[p] = array_replace_recursive(retObj[p], arguments[i][p])\n      } else {\n        retObj[p] = arguments[i][p]\n      }\n    }\n  }\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_replace_recursive/index.html","comments":1,"_id":"cinoej9zd001aou9y7z4okett","content":"module.exports = function array_replace_recursive (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace_recursive/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry', 'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})\n  //   returns 1: {citrus : ['pineapple'], berries : ['blueberry', 'raspberry']}\n\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n  var retObj\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace_recursive()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // So we make a copy here, instead of acting on arr itself\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n    for (p in arr) {\n      retObj.push(arr[p])\n    }\n  } else {\n    retObj = {}\n    for (p in arr) {\n      retObj[p] = arr[p]\n    }\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      if (retObj[p] && typeof retObj[p] === 'object') {\n        retObj[p] = array_replace_recursive(retObj[p], arguments[i][p])\n      } else {\n        retObj[p] = arguments[i][p]\n      }\n    }\n  }\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function array_replace_recursive (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace_recursive/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace_recursive({'citrus' : ['orange'], 'berries' : ['blackberry', 'raspberry']}, {'citrus' : ['pineapple'], 'berries' : ['blueberry']})\n  //   returns 1: {citrus : ['pineapple'], berries : ['blueberry', 'raspberry']}\n\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n  var retObj\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace_recursive()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // So we make a copy here, instead of acting on arr itself\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    retObj = []\n    for (p in arr) {\n      retObj.push(arr[p])\n    }\n  } else {\n    retObj = {}\n    for (p in arr) {\n      retObj[p] = arr[p]\n    }\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      if (retObj[p] && typeof retObj[p] === 'object') {\n        retObj[p] = array_replace_recursive(retObj[p], arguments[i][p])\n      } else {\n        retObj[p] = arguments[i][p]\n      }\n    }\n  }\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\", 4 : \"cherry\"}, {0:\"grape\"})"],"estarget":"es5","returns":["{0: 'grape', 1: 'banana', 2: 'apple', 3: 'raspberry', 4: 'cherry'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_replace in JavaScript","function":"array_replace","category":"array","language":"php","alias":["/functions/php/array_replace/","/functions/array/array_replace/","/php/array_replace/","/functions/array_replace/"],"_content":"module.exports = function array_replace (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\", 4 : \"cherry\"}, {0:\"grape\"})\n  //   returns 1: {0: 'grape', 1: 'banana', 2: 'apple', 3: 'raspberry', 4: 'cherry'}\n\n  var retObj = {}\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // (just guessing), so we make a copy here, instead of acting on arr itself\n  for (p in arr) {\n    retObj[p] = arr[p]\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      retObj[p] = arguments[i][p]\n    }\n  }\n\n  return retObj\n}\n","source":"php/array/array_replace.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\",\n    4 : \"cherry\"}, {0:\"grape\"})\nestarget: es5\nreturns:\n  - '{0: ''grape'', 1: ''banana'', 2: ''apple'', 3: ''raspberry'', 4: ''cherry''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_replace in JavaScript\nfunction: array_replace\ncategory: array\nlanguage: php\npermalink: php/array/array_replace/\nalias:\n  - /functions/php/array_replace/\n  - /functions/array/array_replace/\n  - /php/array_replace/\n  - /functions/array_replace/\n---\nmodule.exports = function array_replace (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\", 4 : \"cherry\"}, {0:\"grape\"})\n  //   returns 1: {0: 'grape', 1: 'banana', 2: 'apple', 3: 'raspberry', 4: 'cherry'}\n\n  var retObj = {}\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // (just guessing), so we make a copy here, instead of acting on arr itself\n  for (p in arr) {\n    retObj[p] = arr[p]\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      retObj[p] = arguments[i][p]\n    }\n  }\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_replace/index.html","comments":1,"_id":"cinoej9zd001bou9ytis2frzy","content":"module.exports = function array_replace (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\", 4 : \"cherry\"}, {0:\"grape\"})\n  //   returns 1: {0: 'grape', 1: 'banana', 2: 'apple', 3: 'raspberry', 4: 'cherry'}\n\n  var retObj = {}\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // (just guessing), so we make a copy here, instead of acting on arr itself\n  for (p in arr) {\n    retObj[p] = arr[p]\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      retObj[p] = arguments[i][p]\n    }\n  }\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function array_replace (arr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_replace([\"orange\", \"banana\", \"apple\", \"raspberry\"], {0 : \"pineapple\", 4 : \"cherry\"}, {0:\"grape\"})\n  //   returns 1: {0: 'grape', 1: 'banana', 2: 'apple', 3: 'raspberry', 4: 'cherry'}\n\n  var retObj = {}\n  var i = 0\n  var p = ''\n  var argl = arguments.length\n\n  if (argl < 2) {\n    throw new Error('There should be at least 2 arguments passed to array_replace()')\n  }\n\n  // Although docs state that the arguments are passed in by reference,\n  // it seems they are not altered, but rather the copy that is returned\n  // (just guessing), so we make a copy here, instead of acting on arr itself\n  for (p in arr) {\n    retObj[p] = arr[p]\n  }\n\n  for (i = 1; i < argl; i++) {\n    for (p in arguments[i]) {\n      retObj[p] = arguments[i][p]\n    }\n  }\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_reverse( [ 'php', '4.0', ['green', 'red'] ], true)"],"estarget":"es5","returns":["{ 2: ['green', 'red'], 1: '4.0', 0: 'php'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Karol Kowalski"]},"notes":[],"layout":"function","title":"php'sarray_reverse in JavaScript","function":"array_reverse","category":"array","language":"php","alias":["/functions/php/array_reverse/","/functions/array/array_reverse/","/php/array_reverse/","/functions/array_reverse/"],"_content":"module.exports = function array_reverse (array, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reverse/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Karol Kowalski\n  //   example 1: array_reverse( [ 'php', '4.0', ['green', 'red'] ], true)\n  //   returns 1: { 2: ['green', 'red'], 1: '4.0', 0: 'php'}\n\n  var isArray = Object.prototype.toString.call(array) === '[object Array]'\n  var tmpArr = preserveKeys ? {} : []\n  var key\n\n  if (isArray && !preserveKeys) {\n    return array.slice(0).reverse()\n  }\n\n  if (preserveKeys) {\n    var keys = []\n    for (key in array) {\n      keys.push(key)\n    }\n\n    var i = keys.length\n    while (i--) {\n      key = keys[i]\n      // @todo: don't rely on browsers keeping keys in insertion order\n      // it's implementation specific\n      // eg. the result will differ from expected in Google Chrome\n      tmpArr[key] = array[key]\n    }\n  } else {\n    for (key in array) {\n      tmpArr.unshift(array[key])\n    }\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_reverse.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_reverse( [ ''php'', ''4.0'', [''green'', ''red''] ], true)'\nestarget: es5\nreturns:\n  - '{ 2: [''green'', ''red''], 1: ''4.0'', 0: ''php''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Karol Kowalski\nnotes: []\nlayout: function\ntitle: php'sarray_reverse in JavaScript\nfunction: array_reverse\ncategory: array\nlanguage: php\npermalink: php/array/array_reverse/\nalias:\n  - /functions/php/array_reverse/\n  - /functions/array/array_reverse/\n  - /php/array_reverse/\n  - /functions/array_reverse/\n---\nmodule.exports = function array_reverse (array, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reverse/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Karol Kowalski\n  //   example 1: array_reverse( [ 'php', '4.0', ['green', 'red'] ], true)\n  //   returns 1: { 2: ['green', 'red'], 1: '4.0', 0: 'php'}\n\n  var isArray = Object.prototype.toString.call(array) === '[object Array]'\n  var tmpArr = preserveKeys ? {} : []\n  var key\n\n  if (isArray && !preserveKeys) {\n    return array.slice(0).reverse()\n  }\n\n  if (preserveKeys) {\n    var keys = []\n    for (key in array) {\n      keys.push(key)\n    }\n\n    var i = keys.length\n    while (i--) {\n      key = keys[i]\n      // @todo: don't rely on browsers keeping keys in insertion order\n      // it's implementation specific\n      // eg. the result will differ from expected in Google Chrome\n      tmpArr[key] = array[key]\n    }\n  } else {\n    for (key in array) {\n      tmpArr.unshift(array[key])\n    }\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_reverse/index.html","comments":1,"_id":"cinoej9ze001cou9y3twsi5gm","content":"module.exports = function array_reverse (array, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reverse/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Karol Kowalski\n  //   example 1: array_reverse( [ 'php', '4.0', ['green', 'red'] ], true)\n  //   returns 1: { 2: ['green', 'red'], 1: '4.0', 0: 'php'}\n\n  var isArray = Object.prototype.toString.call(array) === '[object Array]'\n  var tmpArr = preserveKeys ? {} : []\n  var key\n\n  if (isArray && !preserveKeys) {\n    return array.slice(0).reverse()\n  }\n\n  if (preserveKeys) {\n    var keys = []\n    for (key in array) {\n      keys.push(key)\n    }\n\n    var i = keys.length\n    while (i--) {\n      key = keys[i]\n      // @todo: don't rely on browsers keeping keys in insertion order\n      // it's implementation specific\n      // eg. the result will differ from expected in Google Chrome\n      tmpArr[key] = array[key]\n    }\n  } else {\n    for (key in array) {\n      tmpArr.unshift(array[key])\n    }\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_reverse (array, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_reverse/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Karol Kowalski\n  //   example 1: array_reverse( [ 'php', '4.0', ['green', 'red'] ], true)\n  //   returns 1: { 2: ['green', 'red'], 1: '4.0', 0: 'php'}\n\n  var isArray = Object.prototype.toString.call(array) === '[object Array]'\n  var tmpArr = preserveKeys ? {} : []\n  var key\n\n  if (isArray && !preserveKeys) {\n    return array.slice(0).reverse()\n  }\n\n  if (preserveKeys) {\n    var keys = []\n    for (key in array) {\n      keys.push(key)\n    }\n\n    var i = keys.length\n    while (i--) {\n      key = keys[i]\n      // @todo: don't rely on browsers keeping keys in insertion order\n      // it's implementation specific\n      // eg. the result will differ from expected in Google Chrome\n      tmpArr[key] = array[key]\n    }\n  } else {\n    for (key in array) {\n      tmpArr.unshift(array[key])\n    }\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'})"],"estarget":"es5","returns":["'surname'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_search in JavaScript","function":"array_search","category":"array","language":"php","alias":["/functions/php/array_search/","/functions/array/array_search/","/php/array_search/","/functions/array_search/"],"_content":"module.exports = function array_search (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_search/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //        test: skip-all\n  //   example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'})\n  //   returns 1: 'surname'\n\n  var strict = !!argStrict\n  var key = ''\n\n  if (typeof needle === 'object' && needle.exec) {\n    // Duck-type for RegExp\n    if (!strict) {\n      // Let's consider case sensitive searches as strict\n      var flags = 'i' + (needle.global ? 'g' : '') +\n        (needle.multiline ? 'm' : '') +\n        // sticky is FF only\n        (needle.sticky ? 'y' : '')\n      needle = new RegExp(needle.source, flags)\n    }\n    for (key in haystack) {\n      if (haystack.hasOwnProperty(key)) {\n        if (needle.test(haystack[key])) {\n          return key\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in haystack) {\n    if (haystack.hasOwnProperty(key)) {\n      if ((strict && haystack[key] === needle) || (!strict && haystack[key] === needle)) {\n        return key\n      }\n    }\n  }\n\n  return false\n}\n","source":"php/array/array_search.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname:\n    'zonneveld'})\nestarget: es5\nreturns:\n  - '''surname'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_search in JavaScript\nfunction: array_search\ncategory: array\nlanguage: php\npermalink: php/array/array_search/\nalias:\n  - /functions/php/array_search/\n  - /functions/array/array_search/\n  - /php/array_search/\n  - /functions/array_search/\n---\nmodule.exports = function array_search (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_search/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //        test: skip-all\n  //   example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'})\n  //   returns 1: 'surname'\n\n  var strict = !!argStrict\n  var key = ''\n\n  if (typeof needle === 'object' && needle.exec) {\n    // Duck-type for RegExp\n    if (!strict) {\n      // Let's consider case sensitive searches as strict\n      var flags = 'i' + (needle.global ? 'g' : '') +\n        (needle.multiline ? 'm' : '') +\n        // sticky is FF only\n        (needle.sticky ? 'y' : '')\n      needle = new RegExp(needle.source, flags)\n    }\n    for (key in haystack) {\n      if (haystack.hasOwnProperty(key)) {\n        if (needle.test(haystack[key])) {\n          return key\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in haystack) {\n    if (haystack.hasOwnProperty(key)) {\n      if ((strict && haystack[key] === needle) || (!strict && haystack[key] === needle)) {\n        return key\n      }\n    }\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_search/index.html","comments":1,"_id":"cinoej9ze001dou9yylthw74t","content":"module.exports = function array_search (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_search/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //        test: skip-all\n  //   example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'})\n  //   returns 1: 'surname'\n\n  var strict = !!argStrict\n  var key = ''\n\n  if (typeof needle === 'object' && needle.exec) {\n    // Duck-type for RegExp\n    if (!strict) {\n      // Let's consider case sensitive searches as strict\n      var flags = 'i' + (needle.global ? 'g' : '') +\n        (needle.multiline ? 'm' : '') +\n        // sticky is FF only\n        (needle.sticky ? 'y' : '')\n      needle = new RegExp(needle.source, flags)\n    }\n    for (key in haystack) {\n      if (haystack.hasOwnProperty(key)) {\n        if (needle.test(haystack[key])) {\n          return key\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in haystack) {\n    if (haystack.hasOwnProperty(key)) {\n      if ((strict && haystack[key] === needle) || (!strict && haystack[key] === needle)) {\n        return key\n      }\n    }\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function array_search (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_search/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //        test: skip-all\n  //   example 1: array_search('zonneveld', {firstname: 'kevin', middle: 'van', surname: 'zonneveld'})\n  //   returns 1: 'surname'\n\n  var strict = !!argStrict\n  var key = ''\n\n  if (typeof needle === 'object' && needle.exec) {\n    // Duck-type for RegExp\n    if (!strict) {\n      // Let's consider case sensitive searches as strict\n      var flags = 'i' + (needle.global ? 'g' : '') +\n        (needle.multiline ? 'm' : '') +\n        // sticky is FF only\n        (needle.sticky ? 'y' : '')\n      needle = new RegExp(needle.source, flags)\n    }\n    for (key in haystack) {\n      if (haystack.hasOwnProperty(key)) {\n        if (needle.test(haystack[key])) {\n          return key\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in haystack) {\n    if (haystack.hasOwnProperty(key)) {\n      if ((strict && haystack[key] === needle) || (!strict && haystack[key] === needle)) {\n        return key\n      }\n    }\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_shift(['Kevin', 'van', 'Zonneveld'])"],"estarget":"es5","returns":["'Kevin'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Martijn Wieringa"]},"notes":["Currently does not handle objects"],"layout":"function","title":"php'sarray_shift in JavaScript","function":"array_shift","category":"array","language":"php","alias":["/functions/php/array_shift/","/functions/array/array_shift/","/php/array_shift/","/functions/array_shift/"],"_content":"module.exports = function array_shift (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_shift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  //      note 1: Currently does not handle objects\n  //   example 1: array_shift(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin'\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key, since\n    // we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n\n    return ct\n  }\n\n  if (inputArr.length === 0) {\n    return null\n  }\n  if (inputArr.length > 0) {\n    return inputArr.shift()\n  }\n}\n","source":"php/array/array_shift.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_shift([''Kevin'', ''van'', ''Zonneveld''])'\nestarget: es5\nreturns:\n  - '''Kevin'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Martijn Wieringa\nnotes:\n  - Currently does not handle objects\nlayout: function\ntitle: php'sarray_shift in JavaScript\nfunction: array_shift\ncategory: array\nlanguage: php\npermalink: php/array/array_shift/\nalias:\n  - /functions/php/array_shift/\n  - /functions/array/array_shift/\n  - /php/array_shift/\n  - /functions/array_shift/\n---\nmodule.exports = function array_shift (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_shift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  //      note 1: Currently does not handle objects\n  //   example 1: array_shift(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin'\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key, since\n    // we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n\n    return ct\n  }\n\n  if (inputArr.length === 0) {\n    return null\n  }\n  if (inputArr.length > 0) {\n    return inputArr.shift()\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_shift/index.html","comments":1,"_id":"cinoej9zf001eou9ywtlxp7ga","content":"module.exports = function array_shift (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_shift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  //      note 1: Currently does not handle objects\n  //   example 1: array_shift(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin'\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key, since\n    // we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n\n    return ct\n  }\n\n  if (inputArr.length === 0) {\n    return null\n  }\n  if (inputArr.length > 0) {\n    return inputArr.shift()\n  }\n}\n","excerpt":"","more":"module.exports = function array_shift (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_shift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  //      note 1: Currently does not handle objects\n  //   example 1: array_shift(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin'\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key, since\n    // we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n\n    return ct\n  }\n\n  if (inputArr.length === 0) {\n    return null\n  }\n  if (inputArr.length > 0) {\n    return inputArr.shift()\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\narray_splice($input, 2)","var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\narray_splice($input, 3, 0, \"purple\")","var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\narray_splice($input, -1, 1, [\"black\", \"maroon\"])"],"estarget":"es5","returns":["{4: \"red\", 'abc': \"green\"}","[]","[\"yellow\"]"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Theriault (https://github.com/Theriault)"]},"notes":["Order does get shifted in associative array input with numeric indices,\nsince PHP behavior doesn't preserve keys, but I understand order is\nnot reliable anyways\nNote also that IE retains information about property position even\nafter being supposedly deleted, so use of this function may produce\nunexpected results in IE if you later attempt to add back properties\nwith the same keys that had been deleted"],"layout":"function","title":"php'sarray_splice in JavaScript","function":"array_splice","category":"array","language":"php","alias":["/functions/php/array_splice/","/functions/array/array_splice/","/php/array_splice/","/functions/array_splice/"],"_content":"module.exports = function array_splice (arr, offst, lgth, replacement) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_splice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  //      note 1: Order does get shifted in associative array input with numeric indices,\n  //      note 1: since PHP behavior doesn't preserve keys, but I understand order is\n  //      note 1: not reliable anyways\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so use of this function may produce\n  //      note 1: unexpected results in IE if you later attempt to add back properties\n  //      note 1: with the same keys that had been deleted\n  //   example 1: var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n  //   example 1: array_splice($input, 2)\n  //   returns 1: {4: \"red\", 'abc': \"green\"}\n  //   example 2: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 2: array_splice($input, 3, 0, \"purple\")\n  //   returns 2: []\n  //   example 3: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 3: array_splice($input, -1, 1, [\"black\", \"maroon\"])\n  //   returns 3: [\"yellow\"]\n  //        test: skip-1\n\n  var isInt = require('../var/is_int')\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key,\n    // since we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n    return ct\n  }\n\n  if (replacement && typeof replacement !== 'object') {\n    replacement = [replacement]\n  }\n  if (lgth === undefined) {\n    lgth = offst >= 0 ? arr.length - offst : -offst\n  } else if (lgth < 0) {\n    lgth = (offst >= 0 ? arr.length - offst : -offst) + lgth\n  }\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    /* if (arr.length !== undefined) {\n     // Deal with array-like objects as input\n    delete arr.length;\n    }*/\n    var lgt = 0\n    var ct = -1\n    var rmvd = []\n    var rmvdObj = {}\n    var replCt = -1\n    var intCt = -1\n    var returnArr = true\n    var rmvdCt = 0\n    var rmvdLngth = 0\n    var key = ''\n    // rmvdObj.length = 0;\n    for (key in arr) {\n      // Can do arr.__count__ in some browsers\n      lgt += 1\n    }\n    offst = (offst >= 0) ? offst : lgt + offst\n    for (key in arr) {\n      ct += 1\n      if (ct < offst) {\n        if (isInt(key)) {\n          intCt += 1\n          if (parseInt(key, 10) === intCt) {\n            // Key is already numbered ok, so don't need to change key for value\n            continue\n          }\n          // Deal with situation, e.g.,\n          _checkToUpIndices(arr, intCt, key)\n          // if encounter index 4 and try to set it to 0, but 0 exists later in loop\n          arr[intCt] = arr[key]\n          delete arr[key]\n        }\n        continue\n      }\n      if (returnArr && isInt(key)) {\n        rmvd.push(arr[key])\n        // PHP starts over here too\n        rmvdObj[rmvdCt++] = arr[key]\n      } else {\n        rmvdObj[key] = arr[key]\n        returnArr = false\n      }\n      rmvdLngth += 1\n      // rmvdObj.length += 1;\n      if (replacement && replacement[++replCt]) {\n        arr[key] = replacement[replCt]\n      } else {\n        delete arr[key]\n      }\n    }\n    // Make (back) into an array-like object\n    // arr.length = lgt - rmvdLngth + (replacement ? replacement.length : 0);\n    return returnArr ? rmvd : rmvdObj\n  }\n\n  if (replacement) {\n    replacement.unshift(offst, lgth)\n    return Array.prototype.splice.apply(arr, replacement)\n  }\n\n  return arr.splice(offst, lgth)\n}\n","source":"php/array/array_splice.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n    array_splice($input, 2)\n  - |-\n    var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n    array_splice($input, 3, 0, \"purple\")\n  - |-\n    var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n    array_splice($input, -1, 1, [\"black\", \"maroon\"])\nestarget: es5\nreturns:\n  - '{4: \"red\", ''abc'': \"green\"}'\n  - '[]'\n  - '[\"yellow\"]'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - |-\n    Order does get shifted in associative array input with numeric indices,\n    since PHP behavior doesn't preserve keys, but I understand order is\n    not reliable anyways\n    Note also that IE retains information about property position even\n    after being supposedly deleted, so use of this function may produce\n    unexpected results in IE if you later attempt to add back properties\n    with the same keys that had been deleted\nlayout: function\ntitle: php'sarray_splice in JavaScript\nfunction: array_splice\ncategory: array\nlanguage: php\npermalink: php/array/array_splice/\nalias:\n  - /functions/php/array_splice/\n  - /functions/array/array_splice/\n  - /php/array_splice/\n  - /functions/array_splice/\n---\nmodule.exports = function array_splice (arr, offst, lgth, replacement) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_splice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  //      note 1: Order does get shifted in associative array input with numeric indices,\n  //      note 1: since PHP behavior doesn't preserve keys, but I understand order is\n  //      note 1: not reliable anyways\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so use of this function may produce\n  //      note 1: unexpected results in IE if you later attempt to add back properties\n  //      note 1: with the same keys that had been deleted\n  //   example 1: var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n  //   example 1: array_splice($input, 2)\n  //   returns 1: {4: \"red\", 'abc': \"green\"}\n  //   example 2: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 2: array_splice($input, 3, 0, \"purple\")\n  //   returns 2: []\n  //   example 3: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 3: array_splice($input, -1, 1, [\"black\", \"maroon\"])\n  //   returns 3: [\"yellow\"]\n  //        test: skip-1\n\n  var isInt = require('../var/is_int')\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key,\n    // since we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n    return ct\n  }\n\n  if (replacement && typeof replacement !== 'object') {\n    replacement = [replacement]\n  }\n  if (lgth === undefined) {\n    lgth = offst >= 0 ? arr.length - offst : -offst\n  } else if (lgth < 0) {\n    lgth = (offst >= 0 ? arr.length - offst : -offst) + lgth\n  }\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    /* if (arr.length !== undefined) {\n     // Deal with array-like objects as input\n    delete arr.length;\n    }*/\n    var lgt = 0\n    var ct = -1\n    var rmvd = []\n    var rmvdObj = {}\n    var replCt = -1\n    var intCt = -1\n    var returnArr = true\n    var rmvdCt = 0\n    var rmvdLngth = 0\n    var key = ''\n    // rmvdObj.length = 0;\n    for (key in arr) {\n      // Can do arr.__count__ in some browsers\n      lgt += 1\n    }\n    offst = (offst >= 0) ? offst : lgt + offst\n    for (key in arr) {\n      ct += 1\n      if (ct < offst) {\n        if (isInt(key)) {\n          intCt += 1\n          if (parseInt(key, 10) === intCt) {\n            // Key is already numbered ok, so don't need to change key for value\n            continue\n          }\n          // Deal with situation, e.g.,\n          _checkToUpIndices(arr, intCt, key)\n          // if encounter index 4 and try to set it to 0, but 0 exists later in loop\n          arr[intCt] = arr[key]\n          delete arr[key]\n        }\n        continue\n      }\n      if (returnArr && isInt(key)) {\n        rmvd.push(arr[key])\n        // PHP starts over here too\n        rmvdObj[rmvdCt++] = arr[key]\n      } else {\n        rmvdObj[key] = arr[key]\n        returnArr = false\n      }\n      rmvdLngth += 1\n      // rmvdObj.length += 1;\n      if (replacement && replacement[++replCt]) {\n        arr[key] = replacement[replCt]\n      } else {\n        delete arr[key]\n      }\n    }\n    // Make (back) into an array-like object\n    // arr.length = lgt - rmvdLngth + (replacement ? replacement.length : 0);\n    return returnArr ? rmvd : rmvdObj\n  }\n\n  if (replacement) {\n    replacement.unshift(offst, lgth)\n    return Array.prototype.splice.apply(arr, replacement)\n  }\n\n  return arr.splice(offst, lgth)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_splice/index.html","comments":1,"_id":"cinoej9zf001fou9yhwd5kkep","content":"module.exports = function array_splice (arr, offst, lgth, replacement) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_splice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  //      note 1: Order does get shifted in associative array input with numeric indices,\n  //      note 1: since PHP behavior doesn't preserve keys, but I understand order is\n  //      note 1: not reliable anyways\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so use of this function may produce\n  //      note 1: unexpected results in IE if you later attempt to add back properties\n  //      note 1: with the same keys that had been deleted\n  //   example 1: var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n  //   example 1: array_splice($input, 2)\n  //   returns 1: {4: \"red\", 'abc': \"green\"}\n  //   example 2: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 2: array_splice($input, 3, 0, \"purple\")\n  //   returns 2: []\n  //   example 3: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 3: array_splice($input, -1, 1, [\"black\", \"maroon\"])\n  //   returns 3: [\"yellow\"]\n  //        test: skip-1\n\n  var isInt = require('../var/is_int')\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key,\n    // since we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n    return ct\n  }\n\n  if (replacement && typeof replacement !== 'object') {\n    replacement = [replacement]\n  }\n  if (lgth === undefined) {\n    lgth = offst >= 0 ? arr.length - offst : -offst\n  } else if (lgth < 0) {\n    lgth = (offst >= 0 ? arr.length - offst : -offst) + lgth\n  }\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    /* if (arr.length !== undefined) {\n     // Deal with array-like objects as input\n    delete arr.length;\n    }*/\n    var lgt = 0\n    var ct = -1\n    var rmvd = []\n    var rmvdObj = {}\n    var replCt = -1\n    var intCt = -1\n    var returnArr = true\n    var rmvdCt = 0\n    var rmvdLngth = 0\n    var key = ''\n    // rmvdObj.length = 0;\n    for (key in arr) {\n      // Can do arr.__count__ in some browsers\n      lgt += 1\n    }\n    offst = (offst >= 0) ? offst : lgt + offst\n    for (key in arr) {\n      ct += 1\n      if (ct < offst) {\n        if (isInt(key)) {\n          intCt += 1\n          if (parseInt(key, 10) === intCt) {\n            // Key is already numbered ok, so don't need to change key for value\n            continue\n          }\n          // Deal with situation, e.g.,\n          _checkToUpIndices(arr, intCt, key)\n          // if encounter index 4 and try to set it to 0, but 0 exists later in loop\n          arr[intCt] = arr[key]\n          delete arr[key]\n        }\n        continue\n      }\n      if (returnArr && isInt(key)) {\n        rmvd.push(arr[key])\n        // PHP starts over here too\n        rmvdObj[rmvdCt++] = arr[key]\n      } else {\n        rmvdObj[key] = arr[key]\n        returnArr = false\n      }\n      rmvdLngth += 1\n      // rmvdObj.length += 1;\n      if (replacement && replacement[++replCt]) {\n        arr[key] = replacement[replCt]\n      } else {\n        delete arr[key]\n      }\n    }\n    // Make (back) into an array-like object\n    // arr.length = lgt - rmvdLngth + (replacement ? replacement.length : 0);\n    return returnArr ? rmvd : rmvdObj\n  }\n\n  if (replacement) {\n    replacement.unshift(offst, lgth)\n    return Array.prototype.splice.apply(arr, replacement)\n  }\n\n  return arr.splice(offst, lgth)\n}\n","excerpt":"","more":"module.exports = function array_splice (arr, offst, lgth, replacement) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_splice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Theriault (https://github.com/Theriault)\n  //      note 1: Order does get shifted in associative array input with numeric indices,\n  //      note 1: since PHP behavior doesn't preserve keys, but I understand order is\n  //      note 1: not reliable anyways\n  //      note 1: Note also that IE retains information about property position even\n  //      note 1: after being supposedly deleted, so use of this function may produce\n  //      note 1: unexpected results in IE if you later attempt to add back properties\n  //      note 1: with the same keys that had been deleted\n  //   example 1: var $input = {4: \"red\", 'abc': \"green\", 2: \"blue\", 'dud': \"yellow\"}\n  //   example 1: array_splice($input, 2)\n  //   returns 1: {4: \"red\", 'abc': \"green\"}\n  //   example 2: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 2: array_splice($input, 3, 0, \"purple\")\n  //   returns 2: []\n  //   example 3: var $input = [\"red\", \"green\", \"blue\", \"yellow\"]\n  //   example 3: array_splice($input, -1, 1, [\"black\", \"maroon\"])\n  //   returns 3: [\"yellow\"]\n  //        test: skip-1\n\n  var isInt = require('../var/is_int')\n\n  var _checkToUpIndices = function (arr, ct, key) {\n    // Deal with situation, e.g., if encounter index 4 and try\n    // to set it to 0, but 0 exists later in loop (need to\n    // increment all subsequent (skipping current key,\n    // since we need its value below) until find unused)\n    if (arr[ct] !== undefined) {\n      var tmp = ct\n      ct += 1\n      if (ct === key) {\n        ct += 1\n      }\n      ct = _checkToUpIndices(arr, ct, key)\n      arr[ct] = arr[tmp]\n      delete arr[tmp]\n    }\n    return ct\n  }\n\n  if (replacement && typeof replacement !== 'object') {\n    replacement = [replacement]\n  }\n  if (lgth === undefined) {\n    lgth = offst >= 0 ? arr.length - offst : -offst\n  } else if (lgth < 0) {\n    lgth = (offst >= 0 ? arr.length - offst : -offst) + lgth\n  }\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    /* if (arr.length !== undefined) {\n     // Deal with array-like objects as input\n    delete arr.length;\n    }*/\n    var lgt = 0\n    var ct = -1\n    var rmvd = []\n    var rmvdObj = {}\n    var replCt = -1\n    var intCt = -1\n    var returnArr = true\n    var rmvdCt = 0\n    var rmvdLngth = 0\n    var key = ''\n    // rmvdObj.length = 0;\n    for (key in arr) {\n      // Can do arr.__count__ in some browsers\n      lgt += 1\n    }\n    offst = (offst >= 0) ? offst : lgt + offst\n    for (key in arr) {\n      ct += 1\n      if (ct < offst) {\n        if (isInt(key)) {\n          intCt += 1\n          if (parseInt(key, 10) === intCt) {\n            // Key is already numbered ok, so don't need to change key for value\n            continue\n          }\n          // Deal with situation, e.g.,\n          _checkToUpIndices(arr, intCt, key)\n          // if encounter index 4 and try to set it to 0, but 0 exists later in loop\n          arr[intCt] = arr[key]\n          delete arr[key]\n        }\n        continue\n      }\n      if (returnArr && isInt(key)) {\n        rmvd.push(arr[key])\n        // PHP starts over here too\n        rmvdObj[rmvdCt++] = arr[key]\n      } else {\n        rmvdObj[key] = arr[key]\n        returnArr = false\n      }\n      rmvdLngth += 1\n      // rmvdObj.length += 1;\n      if (replacement && replacement[++replCt]) {\n        arr[key] = replacement[replCt]\n      } else {\n        delete arr[key]\n      }\n    }\n    // Make (back) into an array-like object\n    // arr.length = lgt - rmvdLngth + (replacement ? replacement.length : 0);\n    return returnArr ? rmvd : rmvdObj\n  }\n\n  if (replacement) {\n    replacement.unshift(offst, lgth)\n    return Array.prototype.splice.apply(arr, replacement)\n  }\n\n  return arr.splice(offst, lgth)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)","array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)"],"estarget":"es5","returns":["[ 'c', 'd' ]","{2: 'c', 3: 'd'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Relies on is_int because !isNaN accepts floats"],"layout":"function","title":"php'sarray_slice in JavaScript","function":"array_slice","category":"array","language":"php","alias":["/functions/php/array_slice/","/functions/array/array_slice/","/php/array_slice/","/functions/array_slice/"],"_content":"module.exports = function array_slice (arr, offst, lgth, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_slice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on is_int because !isNaN accepts floats\n  //   example 1: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)\n  //   returns 1: [ 'c', 'd' ]\n  //   example 2: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)\n  //   returns 2: {2: 'c', 3: 'd'}\n\n  var isInt = require('../var/is_int')\n\n  /*\n    if ('callee' in arr && 'length' in arr) {\n      arr = Array.prototype.slice.call(arr);\n    }\n  */\n\n  var key = ''\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]' || (preserveKeys && offst !== 0)) {\n    // Assoc. array as input or if required as output\n    var lgt = 0\n    var newAssoc = {}\n    for (key in arr) {\n      lgt += 1\n      newAssoc[key] = arr[key]\n    }\n    arr = newAssoc\n\n    offst = (offst < 0) ? lgt + offst : offst\n    lgth = lgth === undefined ? lgt : (lgth < 0) ? lgt + lgth - offst : lgth\n\n    var assoc = {}\n    var start = false\n    var it = -1\n    var arrlgth = 0\n    var noPkIdx = 0\n\n    for (key in arr) {\n      ++it\n      if (arrlgth >= lgth) {\n        break\n      }\n      if (it === offst) {\n        start = true\n      }\n      if (!start) {\n        continue\n      }++arrlgth\n      if (isInt(key) && !preserveKeys) {\n        assoc[noPkIdx++] = arr[key]\n      } else {\n        assoc[key] = arr[key]\n      }\n    }\n    // Make as array-like object (though length will not be dynamic)\n    // assoc.length = arrlgth;\n    return assoc\n  }\n\n  if (lgth === undefined) {\n    return arr.slice(offst)\n  } else if (lgth >= 0) {\n    return arr.slice(offst, offst + lgth)\n  } else {\n    return arr.slice(offst, lgth)\n  }\n}\n","source":"php/array/array_slice.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)'\n  - 'array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)'\nestarget: es5\nreturns:\n  - '[ ''c'', ''d'' ]'\n  - '{2: ''c'', 3: ''d''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - Relies on is_int because !isNaN accepts floats\nlayout: function\ntitle: php'sarray_slice in JavaScript\nfunction: array_slice\ncategory: array\nlanguage: php\npermalink: php/array/array_slice/\nalias:\n  - /functions/php/array_slice/\n  - /functions/array/array_slice/\n  - /php/array_slice/\n  - /functions/array_slice/\n---\nmodule.exports = function array_slice (arr, offst, lgth, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_slice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on is_int because !isNaN accepts floats\n  //   example 1: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)\n  //   returns 1: [ 'c', 'd' ]\n  //   example 2: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)\n  //   returns 2: {2: 'c', 3: 'd'}\n\n  var isInt = require('../var/is_int')\n\n  /*\n    if ('callee' in arr && 'length' in arr) {\n      arr = Array.prototype.slice.call(arr);\n    }\n  */\n\n  var key = ''\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]' || (preserveKeys && offst !== 0)) {\n    // Assoc. array as input or if required as output\n    var lgt = 0\n    var newAssoc = {}\n    for (key in arr) {\n      lgt += 1\n      newAssoc[key] = arr[key]\n    }\n    arr = newAssoc\n\n    offst = (offst < 0) ? lgt + offst : offst\n    lgth = lgth === undefined ? lgt : (lgth < 0) ? lgt + lgth - offst : lgth\n\n    var assoc = {}\n    var start = false\n    var it = -1\n    var arrlgth = 0\n    var noPkIdx = 0\n\n    for (key in arr) {\n      ++it\n      if (arrlgth >= lgth) {\n        break\n      }\n      if (it === offst) {\n        start = true\n      }\n      if (!start) {\n        continue\n      }++arrlgth\n      if (isInt(key) && !preserveKeys) {\n        assoc[noPkIdx++] = arr[key]\n      } else {\n        assoc[key] = arr[key]\n      }\n    }\n    // Make as array-like object (though length will not be dynamic)\n    // assoc.length = arrlgth;\n    return assoc\n  }\n\n  if (lgth === undefined) {\n    return arr.slice(offst)\n  } else if (lgth >= 0) {\n    return arr.slice(offst, offst + lgth)\n  } else {\n    return arr.slice(offst, lgth)\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_slice/index.html","comments":1,"_id":"cinoej9zg001gou9yh88jw72z","content":"module.exports = function array_slice (arr, offst, lgth, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_slice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on is_int because !isNaN accepts floats\n  //   example 1: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)\n  //   returns 1: [ 'c', 'd' ]\n  //   example 2: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)\n  //   returns 2: {2: 'c', 3: 'd'}\n\n  var isInt = require('../var/is_int')\n\n  /*\n    if ('callee' in arr && 'length' in arr) {\n      arr = Array.prototype.slice.call(arr);\n    }\n  */\n\n  var key = ''\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]' || (preserveKeys && offst !== 0)) {\n    // Assoc. array as input or if required as output\n    var lgt = 0\n    var newAssoc = {}\n    for (key in arr) {\n      lgt += 1\n      newAssoc[key] = arr[key]\n    }\n    arr = newAssoc\n\n    offst = (offst < 0) ? lgt + offst : offst\n    lgth = lgth === undefined ? lgt : (lgth < 0) ? lgt + lgth - offst : lgth\n\n    var assoc = {}\n    var start = false\n    var it = -1\n    var arrlgth = 0\n    var noPkIdx = 0\n\n    for (key in arr) {\n      ++it\n      if (arrlgth >= lgth) {\n        break\n      }\n      if (it === offst) {\n        start = true\n      }\n      if (!start) {\n        continue\n      }++arrlgth\n      if (isInt(key) && !preserveKeys) {\n        assoc[noPkIdx++] = arr[key]\n      } else {\n        assoc[key] = arr[key]\n      }\n    }\n    // Make as array-like object (though length will not be dynamic)\n    // assoc.length = arrlgth;\n    return assoc\n  }\n\n  if (lgth === undefined) {\n    return arr.slice(offst)\n  } else if (lgth >= 0) {\n    return arr.slice(offst, offst + lgth)\n  } else {\n    return arr.slice(offst, lgth)\n  }\n}\n","excerpt":"","more":"module.exports = function array_slice (arr, offst, lgth, preserveKeys) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_slice/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on is_int because !isNaN accepts floats\n  //   example 1: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1)\n  //   returns 1: [ 'c', 'd' ]\n  //   example 2: array_slice([\"a\", \"b\", \"c\", \"d\", \"e\"], 2, -1, true)\n  //   returns 2: {2: 'c', 3: 'd'}\n\n  var isInt = require('../var/is_int')\n\n  /*\n    if ('callee' in arr && 'length' in arr) {\n      arr = Array.prototype.slice.call(arr);\n    }\n  */\n\n  var key = ''\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]' || (preserveKeys && offst !== 0)) {\n    // Assoc. array as input or if required as output\n    var lgt = 0\n    var newAssoc = {}\n    for (key in arr) {\n      lgt += 1\n      newAssoc[key] = arr[key]\n    }\n    arr = newAssoc\n\n    offst = (offst < 0) ? lgt + offst : offst\n    lgth = lgth === undefined ? lgt : (lgth < 0) ? lgt + lgth - offst : lgth\n\n    var assoc = {}\n    var start = false\n    var it = -1\n    var arrlgth = 0\n    var noPkIdx = 0\n\n    for (key in arr) {\n      ++it\n      if (arrlgth >= lgth) {\n        break\n      }\n      if (it === offst) {\n        start = true\n      }\n      if (!start) {\n        continue\n      }++arrlgth\n      if (isInt(key) && !preserveKeys) {\n        assoc[noPkIdx++] = arr[key]\n      } else {\n        assoc[key] = arr[key]\n      }\n    }\n    // Make as array-like object (though length will not be dynamic)\n    // assoc.length = arrlgth;\n    return assoc\n  }\n\n  if (lgth === undefined) {\n    return arr.slice(offst)\n  } else if (lgth >= 0) {\n    return arr.slice(offst, offst + lgth)\n  } else {\n    return arr.slice(offst, lgth)\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_sum([4, 9, 182.6])","var $total = []\nvar $index = 0.1\nfor (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\narray_sum($total)"],"estarget":"es5","returns":["195.6","67.2"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["David Pilia (http://www.beteck.it/)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Nate","Gilbert"]},"notes":[],"layout":"function","title":"php'sarray_sum in JavaScript","function":"array_sum","category":"array","language":"php","alias":["/functions/php/array_sum/","/functions/array/array_sum/","/php/array_sum/","/functions/array_sum/"],"_content":"module.exports = function array_sum (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_sum/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Gilbert\n  // improved by: David Pilia (http://www.beteck.it/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_sum([4, 9, 182.6])\n  //   returns 1: 195.6\n  //   example 2: var $total = []\n  //   example 2: var $index = 0.1\n  //   example 2: for (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\n  //   example 2: array_sum($total)\n  //   returns 2: 67.2\n\n  var key\n  var sum = 0\n\n  // input sanitation\n  if (typeof array !== 'object') {\n    return null\n  }\n\n  for (key in array) {\n    if (!isNaN(parseFloat(array[key]))) {\n      sum += parseFloat(array[key])\n    }\n  }\n\n  return sum\n}\n","source":"php/array/array_sum.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_sum([4, 9, 182.6])'\n  - |-\n    var $total = []\n    var $index = 0.1\n    for (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\n    array_sum($total)\nestarget: es5\nreturns:\n  - '195.6'\n  - '67.2'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'David Pilia (http://www.beteck.it/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Nate\n    - Gilbert\nnotes: []\nlayout: function\ntitle: php'sarray_sum in JavaScript\nfunction: array_sum\ncategory: array\nlanguage: php\npermalink: php/array/array_sum/\nalias:\n  - /functions/php/array_sum/\n  - /functions/array/array_sum/\n  - /php/array_sum/\n  - /functions/array_sum/\n---\nmodule.exports = function array_sum (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_sum/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Gilbert\n  // improved by: David Pilia (http://www.beteck.it/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_sum([4, 9, 182.6])\n  //   returns 1: 195.6\n  //   example 2: var $total = []\n  //   example 2: var $index = 0.1\n  //   example 2: for (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\n  //   example 2: array_sum($total)\n  //   returns 2: 67.2\n\n  var key\n  var sum = 0\n\n  // input sanitation\n  if (typeof array !== 'object') {\n    return null\n  }\n\n  for (key in array) {\n    if (!isNaN(parseFloat(array[key]))) {\n      sum += parseFloat(array[key])\n    }\n  }\n\n  return sum\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_sum/index.html","comments":1,"_id":"cinoej9zg001hou9y88eiomof","content":"module.exports = function array_sum (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_sum/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Gilbert\n  // improved by: David Pilia (http://www.beteck.it/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_sum([4, 9, 182.6])\n  //   returns 1: 195.6\n  //   example 2: var $total = []\n  //   example 2: var $index = 0.1\n  //   example 2: for (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\n  //   example 2: array_sum($total)\n  //   returns 2: 67.2\n\n  var key\n  var sum = 0\n\n  // input sanitation\n  if (typeof array !== 'object') {\n    return null\n  }\n\n  for (key in array) {\n    if (!isNaN(parseFloat(array[key]))) {\n      sum += parseFloat(array[key])\n    }\n  }\n\n  return sum\n}\n","excerpt":"","more":"module.exports = function array_sum (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_sum/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Gilbert\n  // improved by: David Pilia (http://www.beteck.it/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_sum([4, 9, 182.6])\n  //   returns 1: 195.6\n  //   example 2: var $total = []\n  //   example 2: var $index = 0.1\n  //   example 2: for (var $y = 0; $y < 12; $y++){ $total[$y] = $y + $index }\n  //   example 2: array_sum($total)\n  //   returns 2: 67.2\n\n  var key\n  var sum = 0\n\n  // input sanitation\n  if (typeof array !== 'object') {\n    return null\n  }\n\n  for (key in array) {\n    if (!isNaN(parseFloat(array[key]))) {\n      sum += parseFloat(array[key])\n    }\n  }\n\n  return sum\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{c: 'blue'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_udiff in JavaScript","function":"array_udiff","category":"array","language":"php","alias":["/functions/php/array_udiff/","/functions/array/array_udiff/","/php/array_udiff/","/functions/array_udiff/"],"_content":"module.exports = function array_udiff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = ''\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_udiff.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_udiff($array1, $array2, function (f_string1, f_string2){var string1 =\n    (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if\n    (string1 > string2) return 1; if (string1 === string2) return 0; return\n    -1;})\nestarget: es5\nreturns:\n  - '{c: ''blue''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_udiff in JavaScript\nfunction: array_udiff\ncategory: array\nlanguage: php\npermalink: php/array/array_udiff/\nalias:\n  - /functions/php/array_udiff/\n  - /functions/array/array_udiff/\n  - /php/array_udiff/\n  - /functions/array_udiff/\n---\nmodule.exports = function array_udiff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = ''\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_udiff/index.html","comments":1,"_id":"cinoej9zh001iou9yfr1el6hy","content":"module.exports = function array_udiff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = ''\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_udiff (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = ''\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{1: 'van', 2: 'Zonneveld'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_udiff_assoc in JavaScript","function":"array_udiff_assoc","category":"array","language":"php","alias":["/functions/php/array_udiff_assoc/","/functions/array/array_udiff_assoc/","/php/array_udiff_assoc/","/functions/array_udiff_assoc/"],"_content":"module.exports = function array_udiff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0 && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_udiff_assoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4:\n    'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 =\n    (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if\n    (string1 > string2) return 1; if (string1 === string2) return 0; return\n    -1;})\nestarget: es5\nreturns:\n  - '{1: ''van'', 2: ''Zonneveld''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_udiff_assoc in JavaScript\nfunction: array_udiff_assoc\ncategory: array\nlanguage: php\npermalink: php/array/array_udiff_assoc/\nalias:\n  - /functions/php/array_udiff_assoc/\n  - /functions/array/array_udiff_assoc/\n  - /php/array_udiff_assoc/\n  - /functions/array_udiff_assoc/\n---\nmodule.exports = function array_udiff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0 && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_udiff_assoc/index.html","comments":1,"_id":"cinoej9zh001jou9yrlnhmzs1","content":"module.exports = function array_udiff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0 && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_udiff_assoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_assoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_udiff_assoc({0: 'kevin', 1: 'van', 2: 'Zonneveld'}, {0: 'Kevin', 4: 'van', 5: 'Zonneveld'}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {1: 'van', 2: 'Zonneveld'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var cb = arguments[arglm1]\n  var arr = {}\n  var i = 1\n  var k1 = ''\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm1; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0 && k === k1) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{0: 'red', c: 'blue'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_udiff_uassoc in JavaScript","function":"array_udiff_uassoc","category":"array","language":"php","alias":["/functions/php/array_udiff_uassoc/","/functions/array/array_udiff_uassoc/","/php/array_udiff_uassoc/","/functions/array_udiff_uassoc/"],"_content":"module.exports = function array_udiff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {0: 'red', c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm2; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_udiff_uassoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var\n    string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;}, function (f_string1, f_string2){var\n    string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;})\nestarget: es5\nreturns:\n  - '{0: ''red'', c: ''blue''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_udiff_uassoc in JavaScript\nfunction: array_udiff_uassoc\ncategory: array\nlanguage: php\npermalink: php/array/array_udiff_uassoc/\nalias:\n  - /functions/php/array_udiff_uassoc/\n  - /functions/array/array_udiff_uassoc/\n  - /php/array_udiff_uassoc/\n  - /functions/array_udiff_uassoc/\n---\nmodule.exports = function array_udiff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {0: 'red', c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm2; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_udiff_uassoc/index.html","comments":1,"_id":"cinoej9zi001kou9yag2y20nm","content":"module.exports = function array_udiff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {0: 'red', c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm2; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_udiff_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_udiff_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_udiff_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {0: 'red', c: 'blue'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    for (i = 1; i < arglm2; i++) {\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          // If it reaches here, it was found in at least one array, so try next value\n          continue arr1keys // eslint-disable-line no-labels\n        }\n      }\n      retArr[k1] = arr1[k1]\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_uintersect($array1, $array2, function( f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{a: 'green', b: 'brown', 0: 'red'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Demosthenes Koptsis"]},"notes":[],"layout":"function","title":"php'sarray_uintersect in JavaScript","function":"array_uintersect","category":"array","language":"php","alias":["/functions/php/array_uintersect/","/functions/array/array_uintersect/","/php/array_uintersect/","/functions/array_uintersect/"],"_content":"module.exports = function array_uintersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Demosthenes Koptsis\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect($array1, $array2, function( f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown', 0: 'red'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_uintersect.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_uintersect($array1, $array2, function( f_string1, f_string2){var\n    string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;})\nestarget: es5\nreturns:\n  - '{a: ''green'', b: ''brown'', 0: ''red''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Demosthenes Koptsis\nnotes: []\nlayout: function\ntitle: php'sarray_uintersect in JavaScript\nfunction: array_uintersect\ncategory: array\nlanguage: php\npermalink: php/array/array_uintersect/\nalias:\n  - /functions/php/array_uintersect/\n  - /functions/array/array_uintersect/\n  - /php/array_uintersect/\n  - /functions/array_uintersect/\n---\nmodule.exports = function array_uintersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Demosthenes Koptsis\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect($array1, $array2, function( f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown', 0: 'red'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_uintersect/index.html","comments":1,"_id":"cinoej9zi001lou9yut8ttj0a","content":"module.exports = function array_uintersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Demosthenes Koptsis\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect($array1, $array2, function( f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown', 0: 'red'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_uintersect (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Demosthenes Koptsis\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect($array1, $array2, function( f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown', 0: 'red'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var k1 = ''\n  var i = 1\n  var arr = {}\n  var k = ''\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm1; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb(arr[k], arr1[k1]) === 0) {\n          if (i === arglm2) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_unique(['Kevin','Kevin','van','Zonneveld','Kevin'])","array_unique({'a': 'green', 0: 'red', 'b': 'green', 1: 'blue', 2: 'red'})"],"estarget":"es5","returns":["{0: 'Kevin', 2: 'van', 3: 'Zonneveld'}","{a: 'green', 0: 'red', 1: 'blue'}"],"dependencies":[],"authors":{"original by":["Carlos R. L. Rodrigues (http://www.jsfromhell.com)"],"improved by":["Michael Grier"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Nate","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"input by":["duncan","Brett Zamir (http://brett-zamir.me)"]},"notes":["The second argument, sort_flags is not implemented;\nalso should be sorted (asort?) first according to docs"],"layout":"function","title":"php'sarray_unique in JavaScript","function":"array_unique","category":"array","language":"php","alias":["/functions/php/array_unique/","/functions/array/array_unique/","/php/array_unique/","/functions/array_unique/"],"_content":"module.exports = function array_unique (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unique/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //    input by: duncan\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Michael Grier\n  //      note 1: The second argument, sort_flags is not implemented;\n  //      note 1: also should be sorted (asort?) first according to docs\n  //   example 1: array_unique(['Kevin','Kevin','van','Zonneveld','Kevin'])\n  //   returns 1: {0: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n  //   example 2: array_unique({'a': 'green', 0: 'red', 'b': 'green', 1: 'blue', 2: 'red'})\n  //   returns 2: {a: 'green', 0: 'red', 1: 'blue'}\n\n  var key = ''\n  var tmpArr2 = {}\n  var val = ''\n\n  var _arraySearch = function (needle, haystack) {\n    var fkey = ''\n    for (fkey in haystack) {\n      if (haystack.hasOwnProperty(fkey)) {\n        if ((haystack[fkey] + '') === (needle + '')) {\n          return fkey\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in inputArr) {\n    if (inputArr.hasOwnProperty(key)) {\n      val = inputArr[key]\n      if (_arraySearch(val, tmpArr2) === false) {\n        tmpArr2[key] = val\n      }\n    }\n  }\n\n  return tmpArr2\n}\n","source":"php/array/array_unique.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_unique([''Kevin'',''Kevin'',''van'',''Zonneveld'',''Kevin''])'\n  - 'array_unique({''a'': ''green'', 0: ''red'', ''b'': ''green'', 1: ''blue'', 2: ''red''})'\nestarget: es5\nreturns:\n  - '{0: ''Kevin'', 2: ''van'', 3: ''Zonneveld''}'\n  - '{a: ''green'', 0: ''red'', 1: ''blue''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Carlos R. L. Rodrigues (http://www.jsfromhell.com)'\n  improved by:\n    - Michael Grier\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Nate\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - duncan\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    The second argument, sort_flags is not implemented;\n    also should be sorted (asort?) first according to docs\nlayout: function\ntitle: php'sarray_unique in JavaScript\nfunction: array_unique\ncategory: array\nlanguage: php\npermalink: php/array/array_unique/\nalias:\n  - /functions/php/array_unique/\n  - /functions/array/array_unique/\n  - /php/array_unique/\n  - /functions/array_unique/\n---\nmodule.exports = function array_unique (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unique/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //    input by: duncan\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Michael Grier\n  //      note 1: The second argument, sort_flags is not implemented;\n  //      note 1: also should be sorted (asort?) first according to docs\n  //   example 1: array_unique(['Kevin','Kevin','van','Zonneveld','Kevin'])\n  //   returns 1: {0: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n  //   example 2: array_unique({'a': 'green', 0: 'red', 'b': 'green', 1: 'blue', 2: 'red'})\n  //   returns 2: {a: 'green', 0: 'red', 1: 'blue'}\n\n  var key = ''\n  var tmpArr2 = {}\n  var val = ''\n\n  var _arraySearch = function (needle, haystack) {\n    var fkey = ''\n    for (fkey in haystack) {\n      if (haystack.hasOwnProperty(fkey)) {\n        if ((haystack[fkey] + '') === (needle + '')) {\n          return fkey\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in inputArr) {\n    if (inputArr.hasOwnProperty(key)) {\n      val = inputArr[key]\n      if (_arraySearch(val, tmpArr2) === false) {\n        tmpArr2[key] = val\n      }\n    }\n  }\n\n  return tmpArr2\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_unique/index.html","comments":1,"_id":"cinoej9zj001mou9ythm89xtv","content":"module.exports = function array_unique (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unique/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //    input by: duncan\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Michael Grier\n  //      note 1: The second argument, sort_flags is not implemented;\n  //      note 1: also should be sorted (asort?) first according to docs\n  //   example 1: array_unique(['Kevin','Kevin','van','Zonneveld','Kevin'])\n  //   returns 1: {0: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n  //   example 2: array_unique({'a': 'green', 0: 'red', 'b': 'green', 1: 'blue', 2: 'red'})\n  //   returns 2: {a: 'green', 0: 'red', 1: 'blue'}\n\n  var key = ''\n  var tmpArr2 = {}\n  var val = ''\n\n  var _arraySearch = function (needle, haystack) {\n    var fkey = ''\n    for (fkey in haystack) {\n      if (haystack.hasOwnProperty(fkey)) {\n        if ((haystack[fkey] + '') === (needle + '')) {\n          return fkey\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in inputArr) {\n    if (inputArr.hasOwnProperty(key)) {\n      val = inputArr[key]\n      if (_arraySearch(val, tmpArr2) === false) {\n        tmpArr2[key] = val\n      }\n    }\n  }\n\n  return tmpArr2\n}\n","excerpt":"","more":"module.exports = function array_unique (inputArr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unique/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //    input by: duncan\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Nate\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Michael Grier\n  //      note 1: The second argument, sort_flags is not implemented;\n  //      note 1: also should be sorted (asort?) first according to docs\n  //   example 1: array_unique(['Kevin','Kevin','van','Zonneveld','Kevin'])\n  //   returns 1: {0: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n  //   example 2: array_unique({'a': 'green', 0: 'red', 'b': 'green', 1: 'blue', 2: 'red'})\n  //   returns 2: {a: 'green', 0: 'red', 1: 'blue'}\n\n  var key = ''\n  var tmpArr2 = {}\n  var val = ''\n\n  var _arraySearch = function (needle, haystack) {\n    var fkey = ''\n    for (fkey in haystack) {\n      if (haystack.hasOwnProperty(fkey)) {\n        if ((haystack[fkey] + '') === (needle + '')) {\n          return fkey\n        }\n      }\n    }\n    return false\n  }\n\n  for (key in inputArr) {\n    if (inputArr.hasOwnProperty(key)) {\n      val = inputArr[key]\n      if (_arraySearch(val, tmpArr2) === false) {\n        tmpArr2[key] = val\n      }\n    }\n  }\n\n  return tmpArr2\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\nvar $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\narray_uintersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})"],"estarget":"es5","returns":["{a: 'green', b: 'brown'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_uintersect_uassoc in JavaScript","function":"array_uintersect_uassoc","category":"array","language":"php","alias":["/functions/php/array_uintersect_uassoc/","/functions/array/array_uintersect_uassoc/","/php/array_uintersect_uassoc/","/functions/array_uintersect_uassoc/"],"_content":"module.exports = function array_uintersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm2; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          if (i === arguments.length - 3) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","source":"php/array/array_uintersect_uassoc.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n\n    var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n\n    array_uintersect_uassoc($array1, $array2, function (f_string1,\n    f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;}, function (f_string1, f_string2){var\n    string1 = (f_string1+'').toLowerCase(); var string2 =\n    (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1\n    === string2) return 0; return -1;})\nestarget: es5\nreturns:\n  - '{a: ''green'', b: ''brown''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_uintersect_uassoc in JavaScript\nfunction: array_uintersect_uassoc\ncategory: array\nlanguage: php\npermalink: php/array/array_uintersect_uassoc/\nalias:\n  - /functions/php/array_uintersect_uassoc/\n  - /functions/array/array_uintersect_uassoc/\n  - /php/array_uintersect_uassoc/\n  - /functions/array_uintersect_uassoc/\n---\nmodule.exports = function array_uintersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm2; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          if (i === arguments.length - 3) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_uintersect_uassoc/index.html","comments":1,"_id":"cinoej9zj001nou9y693065bs","content":"module.exports = function array_uintersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm2; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          if (i === arguments.length - 3) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n","excerpt":"","more":"module.exports = function array_uintersect_uassoc (arr1) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_uintersect_uassoc/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}\n  //   example 1: var $array2 = {a: 'GREEN', B: 'brown', 0: 'yellow', 1: 'red'}\n  //   example 1: array_uintersect_uassoc($array1, $array2, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;}, function (f_string1, f_string2){var string1 = (f_string1+'').toLowerCase(); var string2 = (f_string2+'').toLowerCase(); if (string1 > string2) return 1; if (string1 === string2) return 0; return -1;})\n  //   returns 1: {a: 'green', b: 'brown'}\n\n  var retArr = {}\n  var arglm1 = arguments.length - 1\n  var arglm2 = arglm1 - 1\n  var cb = arguments[arglm1]\n  var cb0 = arguments[arglm2]\n  var k1 = ''\n  var i = 1\n  var k = ''\n  var arr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  cb = (typeof cb === 'string')\n    ? $global[cb]\n    : (Object.prototype.toString.call(cb) === '[object Array]')\n      ? $global[cb[0]][cb[1]]\n      : cb\n\n  cb0 = (typeof cb0 === 'string')\n    ? $global[cb0]\n    : (Object.prototype.toString.call(cb0) === '[object Array]')\n      ? $global[cb0[0]][cb0[1]]\n      : cb0\n\n  arr1keys: for (k1 in arr1) { // eslint-disable-line no-labels\n    arrs: for (i = 1; i < arglm2; i++) { // eslint-disable-line no-labels\n      arr = arguments[i]\n      for (k in arr) {\n        if (cb0(arr[k], arr1[k1]) === 0 && cb(k, k1) === 0) {\n          if (i === arguments.length - 3) {\n            retArr[k1] = arr1[k1]\n          }\n          // If the innermost loop always leads at least once to an equal value,\n          // continue the loop until done\n          continue arrs // eslint-disable-line no-labels\n        }\n      }\n      // If it reaches here, it wasn't found in at least one array, so try next value\n      continue arr1keys // eslint-disable-line no-labels\n    }\n  }\n\n  return retArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_unshift(['van', 'Zonneveld'], 'Kevin')"],"estarget":"es5","returns":["3"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Martijn Wieringa","jmweb"]},"notes":["Currently does not handle objects"],"layout":"function","title":"php'sarray_unshift in JavaScript","function":"array_unshift","category":"array","language":"php","alias":["/functions/php/array_unshift/","/functions/array/array_unshift/","/php/array_unshift/","/functions/array_unshift/"],"_content":"module.exports = function array_unshift (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unshift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  // improved by: jmweb\n  //      note 1: Currently does not handle objects\n  //   example 1: array_unshift(['van', 'Zonneveld'], 'Kevin')\n  //   returns 1: 3\n\n  var i = arguments.length\n\n  while (--i !== 0) {\n    arguments[0].unshift(arguments[i])\n  }\n\n  return arguments[0].length\n}\n","source":"php/array/array_unshift.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_unshift([''van'', ''Zonneveld''], ''Kevin'')'\nestarget: es5\nreturns:\n  - '3'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Martijn Wieringa\n    - jmweb\nnotes:\n  - Currently does not handle objects\nlayout: function\ntitle: php'sarray_unshift in JavaScript\nfunction: array_unshift\ncategory: array\nlanguage: php\npermalink: php/array/array_unshift/\nalias:\n  - /functions/php/array_unshift/\n  - /functions/array/array_unshift/\n  - /php/array_unshift/\n  - /functions/array_unshift/\n---\nmodule.exports = function array_unshift (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unshift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  // improved by: jmweb\n  //      note 1: Currently does not handle objects\n  //   example 1: array_unshift(['van', 'Zonneveld'], 'Kevin')\n  //   returns 1: 3\n\n  var i = arguments.length\n\n  while (--i !== 0) {\n    arguments[0].unshift(arguments[i])\n  }\n\n  return arguments[0].length\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_unshift/index.html","comments":1,"_id":"cinoej9zj001oou9y58sykujx","content":"module.exports = function array_unshift (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unshift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  // improved by: jmweb\n  //      note 1: Currently does not handle objects\n  //   example 1: array_unshift(['van', 'Zonneveld'], 'Kevin')\n  //   returns 1: 3\n\n  var i = arguments.length\n\n  while (--i !== 0) {\n    arguments[0].unshift(arguments[i])\n  }\n\n  return arguments[0].length\n}\n","excerpt":"","more":"module.exports = function array_unshift (array) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_unshift/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Martijn Wieringa\n  // improved by: jmweb\n  //      note 1: Currently does not handle objects\n  //   example 1: array_unshift(['van', 'Zonneveld'], 'Kevin')\n  //   returns 1: 3\n\n  var i = arguments.length\n\n  while (--i !== 0) {\n    arguments[0].unshift(arguments[i])\n  }\n\n  return arguments[0].length\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_values( {firstname: 'Kevin', surname: 'van Zonneveld'} )"],"estarget":"es5","returns":["[ 'Kevin', 'van Zonneveld' ]"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sarray_values in JavaScript","function":"array_values","category":"array","language":"php","alias":["/functions/php/array_values/","/functions/array/array_values/","/php/array_values/","/functions/array_values/"],"_content":"module.exports = function array_values (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_values/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_values( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'Kevin', 'van Zonneveld' ]\n\n  var tmpArr = []\n  var key = ''\n\n  for (key in input) {\n    tmpArr[tmpArr.length] = input[key]\n  }\n\n  return tmpArr\n}\n","source":"php/array/array_values.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_values( {firstname: ''Kevin'', surname: ''van Zonneveld''} )'\nestarget: es5\nreturns:\n  - '[ ''Kevin'', ''van Zonneveld'' ]'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sarray_values in JavaScript\nfunction: array_values\ncategory: array\nlanguage: php\npermalink: php/array/array_values/\nalias:\n  - /functions/php/array_values/\n  - /functions/array/array_values/\n  - /php/array_values/\n  - /functions/array_values/\n---\nmodule.exports = function array_values (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_values/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_values( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'Kevin', 'van Zonneveld' ]\n\n  var tmpArr = []\n  var key = ''\n\n  for (key in input) {\n    tmpArr[tmpArr.length] = input[key]\n  }\n\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_values/index.html","comments":1,"_id":"cinoej9zk001pou9yil7u30en","content":"module.exports = function array_values (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_values/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_values( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'Kevin', 'van Zonneveld' ]\n\n  var tmpArr = []\n  var key = ''\n\n  for (key in input) {\n    tmpArr[tmpArr.length] = input[key]\n  }\n\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function array_values (input) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_values/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: array_values( {firstname: 'Kevin', surname: 'van Zonneveld'} )\n  //   returns 1: [ 'Kevin', 'van Zonneveld' ]\n\n  var tmpArr = []\n  var key = ''\n\n  for (key in input) {\n    tmpArr[tmpArr.length] = input[key]\n  }\n\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["array_walk ([3, 4], function () {}, 'userdata')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Johnny Mast (http://www.phpvrouwen.nl)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["David"]},"notes":["Only works with user-defined functions, not built-in functions like void()"],"layout":"function","title":"php'sarray_walk in JavaScript","function":"array_walk","category":"array","language":"php","alias":["/functions/php/array_walk/","/functions/array/array_walk/","/php/array_walk/","/functions/array_walk/"],"_content":"module.exports = function array_walk (array, funcname, userdata) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_walk/\n  // original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // bugfixed by: David\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk ([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  try {\n    if (typeof funcname === 'function') {\n      for (var key in array) {\n        if (arguments.length > 2) {\n          funcname(array[key], key, userdata)\n        } else {\n          funcname(array[key], key)\n        }\n      }\n    } else {\n      return false\n    }\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n","source":"php/array/array_walk.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'array_walk ([3, 4], function () {}, ''userdata'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Johnny Mast (http://www.phpvrouwen.nl)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - David\nnotes:\n  - 'Only works with user-defined functions, not built-in functions like void()'\nlayout: function\ntitle: php'sarray_walk in JavaScript\nfunction: array_walk\ncategory: array\nlanguage: php\npermalink: php/array/array_walk/\nalias:\n  - /functions/php/array_walk/\n  - /functions/array/array_walk/\n  - /php/array_walk/\n  - /functions/array_walk/\n---\nmodule.exports = function array_walk (array, funcname, userdata) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_walk/\n  // original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // bugfixed by: David\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk ([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  try {\n    if (typeof funcname === 'function') {\n      for (var key in array) {\n        if (arguments.length > 2) {\n          funcname(array[key], key, userdata)\n        } else {\n          funcname(array[key], key)\n        }\n      }\n    } else {\n      return false\n    }\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/array_walk/index.html","comments":1,"_id":"cinoej9zk001qou9y1w9wq1fn","content":"module.exports = function array_walk (array, funcname, userdata) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_walk/\n  // original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // bugfixed by: David\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk ([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  try {\n    if (typeof funcname === 'function') {\n      for (var key in array) {\n        if (arguments.length > 2) {\n          funcname(array[key], key, userdata)\n        } else {\n          funcname(array[key], key)\n        }\n      }\n    } else {\n      return false\n    }\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n","excerpt":"","more":"module.exports = function array_walk (array, funcname, userdata) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/array_walk/\n  // original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // bugfixed by: David\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Only works with user-defined functions, not built-in functions like void()\n  //   example 1: array_walk ([3, 4], function () {}, 'userdata')\n  //   returns 1: true\n\n  if (!array || typeof array !== 'object') {\n    return false\n  }\n\n  try {\n    if (typeof funcname === 'function') {\n      for (var key in array) {\n        if (arguments.length > 2) {\n          funcname(array[key], key, userdata)\n        } else {\n          funcname(array[key], key)\n        }\n      }\n    } else {\n      return false\n    }\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\narsort($data)\nvar $result = $data","ini_set('locutus.sortByReference', true)\nvar $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\narsort($data)\nvar $result = $data"],"estarget":"es5","returns":["{a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}","{a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":["SORT_STRING (as well as natsort and natcasesort) might also be\nintegrated into all of these functions by adapting the code at\nhttp://sourcefrog.net/projects/natsort/natcompare.js\nThe examples are correct, this is a new way\nCredits to: http://javascript.internet.com/math-related/bubble-sort.html\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'sarsort in JavaScript","function":"arsort","category":"array","language":"php","alias":["/functions/php/arsort/","/functions/array/arsort/","/php/arsort/","/functions/arsort/"],"_content":"module.exports = function arsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/arsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: arsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: arsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //        test: skip-1\n\n  var i18lgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18lgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n    if (sortByReference) {\n      inputArr[valArr[i][0]] = valArr[i][1]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/arsort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    arsort($data)\n    var $result = $data\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    arsort($data)\n    var $result = $data\nestarget: es5\nreturns:\n  - '{a: ''orange'', d: ''lemon'', b: ''banana'', c: ''apple''}'\n  - '{a: ''orange'', d: ''lemon'', b: ''banana'', c: ''apple''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - >-\n    SORT_STRING (as well as natsort and natcasesort) might also be\n\n    integrated into all of these functions by adapting the code at\n\n    http://sourcefrog.net/projects/natsort/natcompare.js\n\n    The examples are correct, this is a new way\n\n    Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'sarsort in JavaScript\nfunction: arsort\ncategory: array\nlanguage: php\npermalink: php/array/arsort/\nalias:\n  - /functions/php/arsort/\n  - /functions/array/arsort/\n  - /php/arsort/\n  - /functions/arsort/\n---\nmodule.exports = function arsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/arsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: arsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: arsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //        test: skip-1\n\n  var i18lgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18lgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n    if (sortByReference) {\n      inputArr[valArr[i][0]] = valArr[i][1]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/arsort/index.html","comments":1,"_id":"cinoej9zk001rou9ym0vdf8sn","content":"module.exports = function arsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/arsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: arsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: arsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //        test: skip-1\n\n  var i18lgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18lgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n    if (sortByReference) {\n      inputArr[valArr[i][0]] = valArr[i][1]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function arsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/arsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: arsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: arsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {a: 'orange', d: 'lemon', b: 'banana', c: 'apple'}\n  //        test: skip-1\n\n  var i18lgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18lgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n    if (sortByReference) {\n      inputArr[valArr[i][0]] = valArr[i][1]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nasort($data)\nvar $result = $data","ini_set('locutus.sortByReference', true)\nvar $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nasort($data)\nvar $result = $data"],"estarget":"es5","returns":["{c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}","{c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"],"bugfixed by":["Adam Wallner (http://web2.bitbaro.hu/)"],"input by":["paulo kuong"]},"notes":["SORT_STRING (as well as natsort and natcasesort) might also be\nintegrated into all of these functions by adapting the code at\nhttp://sourcefrog.net/projects/natsort/natcompare.js\nThe examples are correct, this is a new way\nCredits to: http://javascript.internet.com/math-related/bubble-sort.html\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'sasort in JavaScript","function":"asort","category":"array","language":"php","alias":["/functions/php/asort/","/functions/array/asort/","/php/asort/","/functions/asort/"],"_content":"module.exports = function asort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/asort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: paulo kuong\n  // bugfixed by: Adam Wallner (http://web2.bitbaro.hu/)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: asort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: asort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(a, b)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/asort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    asort($data)\n    var $result = $data\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    asort($data)\n    var $result = $data\nestarget: es5\nreturns:\n  - '{c: ''apple'', b: ''banana'', d: ''lemon'', a: ''orange''}'\n  - '{c: ''apple'', b: ''banana'', d: ''lemon'', a: ''orange''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\n  bugfixed by:\n    - 'Adam Wallner (http://web2.bitbaro.hu/)'\n  input by:\n    - paulo kuong\nnotes:\n  - >-\n    SORT_STRING (as well as natsort and natcasesort) might also be\n\n    integrated into all of these functions by adapting the code at\n\n    http://sourcefrog.net/projects/natsort/natcompare.js\n\n    The examples are correct, this is a new way\n\n    Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'sasort in JavaScript\nfunction: asort\ncategory: array\nlanguage: php\npermalink: php/array/asort/\nalias:\n  - /functions/php/asort/\n  - /functions/array/asort/\n  - /php/asort/\n  - /functions/asort/\n---\nmodule.exports = function asort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/asort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: paulo kuong\n  // bugfixed by: Adam Wallner (http://web2.bitbaro.hu/)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: asort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: asort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(a, b)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/asort/index.html","comments":1,"_id":"cinoej9zl001sou9ywtblfz9l","content":"module.exports = function asort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/asort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: paulo kuong\n  // bugfixed by: Adam Wallner (http://web2.bitbaro.hu/)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: asort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: asort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(a, b)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function asort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/asort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: paulo kuong\n  // bugfixed by: Adam Wallner (http://web2.bitbaro.hu/)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: Credits to: http://javascript.internet.com/math-related/bubble-sort.html\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: asort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: asort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n\n  var valArr = []\n  var valArrLen = 0\n  var k\n  var i\n  var sorter\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(a, b)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.php.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n      // compare items normally (don't change types)\n      break\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0, valArrLen = valArr.length; i < valArrLen; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["count([[0,0],[0,-4]], 'COUNT_RECURSIVE')","count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')"],"estarget":"es5","returns":["6","6"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Soren Hansen","Olivier Louvignes (http://mg-crea.com/)"],"input by":["Waldo Malqui Silva (http://waldo.malqui.info)","merabi"]},"notes":[],"layout":"function","title":"php'scount in JavaScript","function":"count","category":"array","language":"php","alias":["/functions/php/count/","/functions/array/count/","/php/count/","/functions/count/"],"_content":"module.exports = function count (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: merabi\n  // bugfixed by: Soren Hansen\n  // bugfixed by: Olivier Louvignes (http://mg-crea.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: count([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var key\n  var cnt = 0\n\n  if (mixedVar === null || typeof mixedVar === 'undefined') {\n    return 0\n  } else if (mixedVar.constructor !== Array && mixedVar.constructor !== Object) {\n    return 1\n  }\n\n  if (mode === 'COUNT_RECURSIVE') {\n    mode = 1\n  }\n  if (mode !== 1) {\n    mode = 0\n  }\n\n  for (key in mixedVar) {\n    if (mixedVar.hasOwnProperty(key)) {\n      cnt++\n      if (mode === 1 && mixedVar[key] &&\n        (mixedVar[key].constructor === Array ||\n          mixedVar[key].constructor === Object)) {\n        cnt += count(mixedVar[key], 1)\n      }\n    }\n  }\n\n  return cnt\n}\n","source":"php/array/count.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'count([[0,0],[0,-4]], ''COUNT_RECURSIVE'')'\n  - 'count({''one'' : [1,2,3,4,5]}, ''COUNT_RECURSIVE'')'\nestarget: es5\nreturns:\n  - '6'\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Soren Hansen\n    - 'Olivier Louvignes (http://mg-crea.com/)'\n  input by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n    - merabi\nnotes: []\nlayout: function\ntitle: php'scount in JavaScript\nfunction: count\ncategory: array\nlanguage: php\npermalink: php/array/count/\nalias:\n  - /functions/php/count/\n  - /functions/array/count/\n  - /php/count/\n  - /functions/count/\n---\nmodule.exports = function count (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: merabi\n  // bugfixed by: Soren Hansen\n  // bugfixed by: Olivier Louvignes (http://mg-crea.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: count([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var key\n  var cnt = 0\n\n  if (mixedVar === null || typeof mixedVar === 'undefined') {\n    return 0\n  } else if (mixedVar.constructor !== Array && mixedVar.constructor !== Object) {\n    return 1\n  }\n\n  if (mode === 'COUNT_RECURSIVE') {\n    mode = 1\n  }\n  if (mode !== 1) {\n    mode = 0\n  }\n\n  for (key in mixedVar) {\n    if (mixedVar.hasOwnProperty(key)) {\n      cnt++\n      if (mode === 1 && mixedVar[key] &&\n        (mixedVar[key].constructor === Array ||\n          mixedVar[key].constructor === Object)) {\n        cnt += count(mixedVar[key], 1)\n      }\n    }\n  }\n\n  return cnt\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/count/index.html","comments":1,"_id":"cinoej9zm001tou9ydh0gm6r8","content":"module.exports = function count (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: merabi\n  // bugfixed by: Soren Hansen\n  // bugfixed by: Olivier Louvignes (http://mg-crea.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: count([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var key\n  var cnt = 0\n\n  if (mixedVar === null || typeof mixedVar === 'undefined') {\n    return 0\n  } else if (mixedVar.constructor !== Array && mixedVar.constructor !== Object) {\n    return 1\n  }\n\n  if (mode === 'COUNT_RECURSIVE') {\n    mode = 1\n  }\n  if (mode !== 1) {\n    mode = 0\n  }\n\n  for (key in mixedVar) {\n    if (mixedVar.hasOwnProperty(key)) {\n      cnt++\n      if (mode === 1 && mixedVar[key] &&\n        (mixedVar[key].constructor === Array ||\n          mixedVar[key].constructor === Object)) {\n        cnt += count(mixedVar[key], 1)\n      }\n    }\n  }\n\n  return cnt\n}\n","excerpt":"","more":"module.exports = function count (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: merabi\n  // bugfixed by: Soren Hansen\n  // bugfixed by: Olivier Louvignes (http://mg-crea.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: count([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: count({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var key\n  var cnt = 0\n\n  if (mixedVar === null || typeof mixedVar === 'undefined') {\n    return 0\n  } else if (mixedVar.constructor !== Array && mixedVar.constructor !== Object) {\n    return 1\n  }\n\n  if (mode === 'COUNT_RECURSIVE') {\n    mode = 1\n  }\n  if (mode !== 1) {\n    mode = 0\n  }\n\n  for (key in mixedVar) {\n    if (mixedVar.hasOwnProperty(key)) {\n      cnt++\n      if (mode === 1 && mixedVar[key] &&\n        (mixedVar[key].constructor === Array ||\n          mixedVar[key].constructor === Object)) {\n        cnt += count(mixedVar[key], 1)\n      }\n    }\n  }\n\n  return cnt\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $transport = ['foot', 'bike', 'car', 'plane']\ncurrent($transport)"],"estarget":"es5","returns":["'foot'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'scurrent in JavaScript","function":"current","category":"array","language":"php","alias":["/functions/php/current/","/functions/array/current/","/php/current/","/functions/current/"],"_content":"module.exports = function current (arr) {\n  //  discuss at: http://locutusjs.io/php/current/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: current($transport)\n  //   returns 1: 'foot'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    return arr[cursor] || false\n  }\n  var ct = 0\n  for (var k in arr) {\n    if (ct === cursor) {\n      return arr[k]\n    }\n    ct++\n  }\n  // Empty\n  return false\n}\n","source":"php/array/current.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $transport = ['foot', 'bike', 'car', 'plane']\n    current($transport)\nestarget: es5\nreturns:\n  - '''foot'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'scurrent in JavaScript\nfunction: current\ncategory: array\nlanguage: php\npermalink: php/array/current/\nalias:\n  - /functions/php/current/\n  - /functions/array/current/\n  - /php/current/\n  - /functions/current/\n---\nmodule.exports = function current (arr) {\n  //  discuss at: http://locutusjs.io/php/current/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: current($transport)\n  //   returns 1: 'foot'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    return arr[cursor] || false\n  }\n  var ct = 0\n  for (var k in arr) {\n    if (ct === cursor) {\n      return arr[k]\n    }\n    ct++\n  }\n  // Empty\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/current/index.html","comments":1,"_id":"cinoej9zm001uou9yb8b7wyhj","content":"module.exports = function current (arr) {\n  //  discuss at: http://locutusjs.io/php/current/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: current($transport)\n  //   returns 1: 'foot'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    return arr[cursor] || false\n  }\n  var ct = 0\n  for (var k in arr) {\n    if (ct === cursor) {\n      return arr[k]\n    }\n    ct++\n  }\n  // Empty\n  return false\n}\n","excerpt":"","more":"module.exports = function current (arr) {\n  //  discuss at: http://locutusjs.io/php/current/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: current($transport)\n  //   returns 1: 'foot'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) === '[object Array]') {\n    return arr[cursor] || false\n  }\n  var ct = 0\n  for (var k in arr) {\n    if (ct === cursor) {\n      return arr[k]\n    }\n    ct++\n  }\n  // Empty\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["each({a: \"apple\", b: \"balloon\"})"],"estarget":"es5","returns":["{0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}"],"dependencies":[],"authors":{"original by":["Ates Goral (http://magnetiq.com)"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'seach in JavaScript","function":"each","category":"array","language":"php","alias":["/functions/php/each/","/functions/array/each/","/php/each/","/functions/each/"],"_content":"module.exports = function each (arr) {\n  //  discuss at: http://locutusjs.io/php/each/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: each({a: \"apple\", b: \"balloon\"})\n  //   returns 1: {0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  var pos = 0\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        pointers[arrpos + 1] += 1\n        if (each.returnArrayOnly) {\n          return [k, arr[k]]\n        } else {\n          return {\n            1: arr[k],\n            value: arr[k],\n            0: k,\n            key: k\n          }\n        }\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0 || cursor === arr.length) {\n    return false\n  }\n  pos = cursor\n  pointers[arrpos + 1] += 1\n  if (each.returnArrayOnly) {\n    return [pos, arr[pos]]\n  } else {\n    return {\n      1: arr[pos],\n      value: arr[pos],\n      0: pos,\n      key: pos\n    }\n  }\n}\n","source":"php/array/each.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'each({a: \"apple\", b: \"balloon\"})'\nestarget: es5\nreturns:\n  - '{0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}'\ndependencies: []\nauthors:\n  original by:\n    - 'Ates Goral (http://magnetiq.com)'\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'seach in JavaScript\nfunction: each\ncategory: array\nlanguage: php\npermalink: php/array/each/\nalias:\n  - /functions/php/each/\n  - /functions/array/each/\n  - /php/each/\n  - /functions/each/\n---\nmodule.exports = function each (arr) {\n  //  discuss at: http://locutusjs.io/php/each/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: each({a: \"apple\", b: \"balloon\"})\n  //   returns 1: {0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  var pos = 0\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        pointers[arrpos + 1] += 1\n        if (each.returnArrayOnly) {\n          return [k, arr[k]]\n        } else {\n          return {\n            1: arr[k],\n            value: arr[k],\n            0: k,\n            key: k\n          }\n        }\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0 || cursor === arr.length) {\n    return false\n  }\n  pos = cursor\n  pointers[arrpos + 1] += 1\n  if (each.returnArrayOnly) {\n    return [pos, arr[pos]]\n  } else {\n    return {\n      1: arr[pos],\n      value: arr[pos],\n      0: pos,\n      key: pos\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/each/index.html","comments":1,"_id":"cinoej9zn001vou9yhrp3pbb2","content":"module.exports = function each (arr) {\n  //  discuss at: http://locutusjs.io/php/each/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: each({a: \"apple\", b: \"balloon\"})\n  //   returns 1: {0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  var pos = 0\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        pointers[arrpos + 1] += 1\n        if (each.returnArrayOnly) {\n          return [k, arr[k]]\n        } else {\n          return {\n            1: arr[k],\n            value: arr[k],\n            0: k,\n            key: k\n          }\n        }\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0 || cursor === arr.length) {\n    return false\n  }\n  pos = cursor\n  pointers[arrpos + 1] += 1\n  if (each.returnArrayOnly) {\n    return [pos, arr[pos]]\n  } else {\n    return {\n      1: arr[pos],\n      value: arr[pos],\n      0: pos,\n      key: pos\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function each (arr) {\n  //  discuss at: http://locutusjs.io/php/each/\n  // original by: Ates Goral (http://magnetiq.com)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: each({a: \"apple\", b: \"balloon\"})\n  //   returns 1: {0: \"a\", 1: \"apple\", key: \"a\", value: \"apple\"}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  var pos = 0\n\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        pointers[arrpos + 1] += 1\n        if (each.returnArrayOnly) {\n          return [k, arr[k]]\n        } else {\n          return {\n            1: arr[k],\n            value: arr[k],\n            0: k,\n            key: k\n          }\n        }\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0 || cursor === arr.length) {\n    return false\n  }\n  pos = cursor\n  pointers[arrpos + 1] += 1\n  if (each.returnArrayOnly) {\n    return [pos, arr[pos]]\n  } else {\n    return {\n      1: arr[pos],\n      value: arr[pos],\n      0: pos,\n      key: pos\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["end({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})","end(['Kevin', 'van', 'Zonneveld'])"],"estarget":"es5","returns":["'Zonneveld'","'Zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Legaev Andrey"],"revised by":["J A R","Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'send in JavaScript","function":"end","category":"array","language":"php","alias":["/functions/php/end/","/functions/array/end/","/php/end/","/functions/end/"],"_content":"module.exports = function end (arr) {\n  //  discuss at: http://locutusjs.io/php/end/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: J A R\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: end({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Zonneveld'\n  //   example 2: end(['Kevin', 'van', 'Zonneveld'])\n  //   returns 2: 'Zonneveld'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    var val\n    for (var k in arr) {\n      ct++\n      val = arr[k]\n    }\n    if (ct === 0) {\n      // Empty\n      return false\n    }\n    pointers[arrpos + 1] = ct - 1\n    return val\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = arr.length - 1\n  return arr[pointers[arrpos + 1]]\n}\n","source":"php/array/end.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'end({0: ''Kevin'', 1: ''van'', 2: ''Zonneveld''})'\n  - 'end([''Kevin'', ''van'', ''Zonneveld''])'\nestarget: es5\nreturns:\n  - '''Zonneveld'''\n  - '''Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - Legaev Andrey\n  revised by:\n    - J A R\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'send in JavaScript\nfunction: end\ncategory: array\nlanguage: php\npermalink: php/array/end/\nalias:\n  - /functions/php/end/\n  - /functions/array/end/\n  - /php/end/\n  - /functions/end/\n---\nmodule.exports = function end (arr) {\n  //  discuss at: http://locutusjs.io/php/end/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: J A R\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: end({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Zonneveld'\n  //   example 2: end(['Kevin', 'van', 'Zonneveld'])\n  //   returns 2: 'Zonneveld'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    var val\n    for (var k in arr) {\n      ct++\n      val = arr[k]\n    }\n    if (ct === 0) {\n      // Empty\n      return false\n    }\n    pointers[arrpos + 1] = ct - 1\n    return val\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = arr.length - 1\n  return arr[pointers[arrpos + 1]]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/end/index.html","comments":1,"_id":"cinoej9zn001wou9y12l4y0c6","content":"module.exports = function end (arr) {\n  //  discuss at: http://locutusjs.io/php/end/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: J A R\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: end({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Zonneveld'\n  //   example 2: end(['Kevin', 'van', 'Zonneveld'])\n  //   returns 2: 'Zonneveld'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    var val\n    for (var k in arr) {\n      ct++\n      val = arr[k]\n    }\n    if (ct === 0) {\n      // Empty\n      return false\n    }\n    pointers[arrpos + 1] = ct - 1\n    return val\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = arr.length - 1\n  return arr[pointers[arrpos + 1]]\n}\n","excerpt":"","more":"module.exports = function end (arr) {\n  //  discuss at: http://locutusjs.io/php/end/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: J A R\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: end({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Zonneveld'\n  //   example 2: end(['Kevin', 'van', 'Zonneveld'])\n  //   returns 2: 'Zonneveld'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    var val\n    for (var k in arr) {\n      ct++\n      val = arr[k]\n    }\n    if (ct === 0) {\n      // Empty\n      return false\n    }\n    pointers[arrpos + 1] = ct - 1\n    return val\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = arr.length - 1\n  return arr[pointers[arrpos + 1]]\n}\n"},{"type":"category","language":"php","category":"array","title":"array","_content":"","source":"php/array/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: array\ntitle: array\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/index.html","comments":1,"layout":"page","_id":"cinoej9zo001xou9yzkcpd8zq","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["in_array('van', ['Kevin', 'van', 'Zonneveld'])","in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'})","in_array(1, ['1', '2', '3'])\nin_array(1, ['1', '2', '3'], false)","in_array(1, ['1', '2', '3'], true)"],"estarget":"es5","returns":["true","false","true\ntrue","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["vlado houba","Jonas Sciangula Street (Joni2Back)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Billy"]},"notes":[],"layout":"function","title":"php'sin_array in JavaScript","function":"in_array","category":"array","language":"php","alias":["/functions/php/in_array/","/functions/array/in_array/","/php/in_array/","/functions/in_array/"],"_content":"module.exports = function in_array (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/in_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: vlado houba\n  // improved by: Jonas Sciangula Street (Joni2Back)\n  //    input by: Billy\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: in_array('van', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'})\n  //   returns 2: false\n  //   example 3: in_array(1, ['1', '2', '3'])\n  //   example 3: in_array(1, ['1', '2', '3'], false)\n  //   returns 3: true\n  //   returns 3: true\n  //   example 4: in_array(1, ['1', '2', '3'], true)\n  //   returns 4: false\n\n  var key = ''\n  var strict = !!argStrict\n\n  // we prevent the double check (strict && arr[key] === ndl) || (!strict && arr[key] === ndl)\n  // in just one for, in order to improve the performance\n  // deciding wich type of comparation will do before walk array\n  if (strict) {\n    for (key in haystack) {\n      if (haystack[key] === needle) {\n        return true\n      }\n    }\n  } else {\n    for (key in haystack) {\n      if (haystack[key] == needle) { // eslint-disable-line eqeqeq\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","source":"php/array/in_array.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'in_array(''van'', [''Kevin'', ''van'', ''Zonneveld''])'\n  - 'in_array(''vlado'', {0: ''Kevin'', vlado: ''van'', 1: ''Zonneveld''})'\n  - |-\n    in_array(1, ['1', '2', '3'])\n    in_array(1, ['1', '2', '3'], false)\n  - 'in_array(1, [''1'', ''2'', ''3''], true)'\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\n  - |-\n    true\n    true\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - vlado houba\n    - Jonas Sciangula Street (Joni2Back)\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Billy\nnotes: []\nlayout: function\ntitle: php'sin_array in JavaScript\nfunction: in_array\ncategory: array\nlanguage: php\npermalink: php/array/in_array/\nalias:\n  - /functions/php/in_array/\n  - /functions/array/in_array/\n  - /php/in_array/\n  - /functions/in_array/\n---\nmodule.exports = function in_array (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/in_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: vlado houba\n  // improved by: Jonas Sciangula Street (Joni2Back)\n  //    input by: Billy\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: in_array('van', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'})\n  //   returns 2: false\n  //   example 3: in_array(1, ['1', '2', '3'])\n  //   example 3: in_array(1, ['1', '2', '3'], false)\n  //   returns 3: true\n  //   returns 3: true\n  //   example 4: in_array(1, ['1', '2', '3'], true)\n  //   returns 4: false\n\n  var key = ''\n  var strict = !!argStrict\n\n  // we prevent the double check (strict && arr[key] === ndl) || (!strict && arr[key] === ndl)\n  // in just one for, in order to improve the performance\n  // deciding wich type of comparation will do before walk array\n  if (strict) {\n    for (key in haystack) {\n      if (haystack[key] === needle) {\n        return true\n      }\n    }\n  } else {\n    for (key in haystack) {\n      if (haystack[key] == needle) { // eslint-disable-line eqeqeq\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/in_array/index.html","comments":1,"_id":"cinoej9zo001you9y2hbciwct","content":"module.exports = function in_array (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/in_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: vlado houba\n  // improved by: Jonas Sciangula Street (Joni2Back)\n  //    input by: Billy\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: in_array('van', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'})\n  //   returns 2: false\n  //   example 3: in_array(1, ['1', '2', '3'])\n  //   example 3: in_array(1, ['1', '2', '3'], false)\n  //   returns 3: true\n  //   returns 3: true\n  //   example 4: in_array(1, ['1', '2', '3'], true)\n  //   returns 4: false\n\n  var key = ''\n  var strict = !!argStrict\n\n  // we prevent the double check (strict && arr[key] === ndl) || (!strict && arr[key] === ndl)\n  // in just one for, in order to improve the performance\n  // deciding wich type of comparation will do before walk array\n  if (strict) {\n    for (key in haystack) {\n      if (haystack[key] === needle) {\n        return true\n      }\n    }\n  } else {\n    for (key in haystack) {\n      if (haystack[key] == needle) { // eslint-disable-line eqeqeq\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function in_array (needle, haystack, argStrict) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/in_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: vlado houba\n  // improved by: Jonas Sciangula Street (Joni2Back)\n  //    input by: Billy\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: in_array('van', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: in_array('vlado', {0: 'Kevin', vlado: 'van', 1: 'Zonneveld'})\n  //   returns 2: false\n  //   example 3: in_array(1, ['1', '2', '3'])\n  //   example 3: in_array(1, ['1', '2', '3'], false)\n  //   returns 3: true\n  //   returns 3: true\n  //   example 4: in_array(1, ['1', '2', '3'], true)\n  //   returns 4: false\n\n  var key = ''\n  var strict = !!argStrict\n\n  // we prevent the double check (strict && arr[key] === ndl) || (!strict && arr[key] === ndl)\n  // in just one for, in order to improve the performance\n  // deciding wich type of comparation will do before walk array\n  if (strict) {\n    for (key in haystack) {\n      if (haystack[key] === needle) {\n        return true\n      }\n    }\n  } else {\n    for (key in haystack) {\n      if (haystack[key] == needle) { // eslint-disable-line eqeqeq\n        return true\n      }\n    }\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array = {fruit1: 'apple', 'fruit2': 'orange'}\nkey($array)"],"estarget":"es5","returns":["'fruit1'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Riddler (http://www.frontierwebdev.com/)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'skey in JavaScript","function":"key","category":"array","language":"php","alias":["/functions/php/key/","/functions/array/key/","/php/key/","/functions/key/"],"_content":"module.exports = function key (arr) {\n  //  discuss at: http://locutusjs.io/php/key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Riddler (http://www.frontierwebdev.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n  //   example 1: key($array)\n  //   returns 1: 'fruit1'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var cursor = pointers[pointers.indexOf(arr) + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        return k\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n\n  return cursor\n}\n","source":"php/array/key.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n    key($array)\nestarget: es5\nreturns:\n  - '''fruit1'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Riddler (http://www.frontierwebdev.com/)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'skey in JavaScript\nfunction: key\ncategory: array\nlanguage: php\npermalink: php/array/key/\nalias:\n  - /functions/php/key/\n  - /functions/array/key/\n  - /php/key/\n  - /functions/key/\n---\nmodule.exports = function key (arr) {\n  //  discuss at: http://locutusjs.io/php/key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Riddler (http://www.frontierwebdev.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n  //   example 1: key($array)\n  //   returns 1: 'fruit1'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var cursor = pointers[pointers.indexOf(arr) + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        return k\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n\n  return cursor\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/key/index.html","comments":1,"_id":"cinoej9zp001zou9y3wudiqdk","content":"module.exports = function key (arr) {\n  //  discuss at: http://locutusjs.io/php/key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Riddler (http://www.frontierwebdev.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n  //   example 1: key($array)\n  //   returns 1: 'fruit1'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var cursor = pointers[pointers.indexOf(arr) + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        return k\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n\n  return cursor\n}\n","excerpt":"","more":"module.exports = function key (arr) {\n  //  discuss at: http://locutusjs.io/php/key/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Riddler (http://www.frontierwebdev.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $array = {fruit1: 'apple', 'fruit2': 'orange'}\n  //   example 1: key($array)\n  //   returns 1: 'fruit1'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var cursor = pointers[pointers.indexOf(arr) + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor) {\n        return k\n      }\n      ct++\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n\n  return cursor\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nkrsort($data)\nvar $result = $data","ini_set('locutus.sortByReference', true)\nvar $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\nkrsort($data)\nvar $result = $data"],"estarget":"es5","returns":["{d: 'lemon', c: 'apple', b: 'banana', a: 'orange'}","{3: 'Zonneveld', 2: 'van', 1: 'Kevin'}"],"dependencies":[],"authors":{"original by":["GeekFG (http://geekfg.blogspot.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["pseudaria (https://github.com/pseudaria)"]},"notes":["The examples are correct, this is a new way\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'skrsort in JavaScript","function":"krsort","category":"array","language":"php","alias":["/functions/php/krsort/","/functions/array/krsort/","/php/krsort/","/functions/krsort/"],"_content":"module.exports = function krsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/krsort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: pseudaria (https://github.com/pseudaria)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: krsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {d: 'lemon', c: 'apple', b: 'banana', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: krsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {3: 'Zonneveld', 2: 'van', 1: 'Kevin'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/krsort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    krsort($data)\n    var $result = $data\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n    krsort($data)\n    var $result = $data\nestarget: es5\nreturns:\n  - '{d: ''lemon'', c: ''apple'', b: ''banana'', a: ''orange''}'\n  - '{3: ''Zonneveld'', 2: ''van'', 1: ''Kevin''}'\ndependencies: []\nauthors:\n  original by:\n    - 'GeekFG (http://geekfg.blogspot.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'pseudaria (https://github.com/pseudaria)'\nnotes:\n  - >-\n    The examples are correct, this is a new way\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'skrsort in JavaScript\nfunction: krsort\ncategory: array\nlanguage: php\npermalink: php/array/krsort/\nalias:\n  - /functions/php/krsort/\n  - /functions/array/krsort/\n  - /php/krsort/\n  - /functions/krsort/\n---\nmodule.exports = function krsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/krsort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: pseudaria (https://github.com/pseudaria)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: krsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {d: 'lemon', c: 'apple', b: 'banana', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: krsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {3: 'Zonneveld', 2: 'van', 1: 'Kevin'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/krsort/index.html","comments":1,"_id":"cinoej9zp0020ou9yrcakhn9i","content":"module.exports = function krsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/krsort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: pseudaria (https://github.com/pseudaria)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: krsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {d: 'lemon', c: 'apple', b: 'banana', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: krsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {3: 'Zonneveld', 2: 'van', 1: 'Kevin'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function krsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/krsort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: pseudaria (https://github.com/pseudaria)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: krsort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {d: 'lemon', c: 'apple', b: 'banana', a: 'orange'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: krsort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {3: 'Zonneveld', 2: 'van', 1: 'Kevin'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nksort($data)\nvar $result = $data","ini_set('locutus.sortByReference', true)\nvar $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\nksort($data)\nvar $result = $data"],"estarget":"es5","returns":["{a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}","{1: 'Kevin', 2: 'van', 3: 'Zonneveld'}"],"dependencies":[],"authors":{"original by":["GeekFG (http://geekfg.blogspot.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"]},"notes":["This function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'sksort in JavaScript","function":"ksort","category":"array","language":"php","alias":["/functions/php/ksort/","/functions/array/ksort/","/php/ksort/","/functions/ksort/"],"_content":"module.exports = function ksort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/ksort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: ksort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: ksort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {1: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return ((a + 0) - (b + 0))\n      }\n      break\n    default:\n      // case 'SORT_REGULAR': // compare items normally (don't change types)\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/ksort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    ksort($data)\n    var $result = $data\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n    ksort($data)\n    var $result = $data\nestarget: es5\nreturns:\n  - '{a: ''orange'', b: ''banana'', c: ''apple'', d: ''lemon''}'\n  - '{1: ''Kevin'', 2: ''van'', 3: ''Zonneveld''}'\ndependencies: []\nauthors:\n  original by:\n    - 'GeekFG (http://geekfg.blogspot.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'sksort in JavaScript\nfunction: ksort\ncategory: array\nlanguage: php\npermalink: php/array/ksort/\nalias:\n  - /functions/php/ksort/\n  - /functions/array/ksort/\n  - /php/ksort/\n  - /functions/ksort/\n---\nmodule.exports = function ksort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/ksort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: ksort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: ksort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {1: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return ((a + 0) - (b + 0))\n      }\n      break\n    default:\n      // case 'SORT_REGULAR': // compare items normally (don't change types)\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/ksort/index.html","comments":1,"_id":"cinoej9zp0021ou9yrbupfge9","content":"module.exports = function ksort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/ksort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: ksort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: ksort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {1: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return ((a + 0) - (b + 0))\n      }\n      break\n    default:\n      // case 'SORT_REGULAR': // compare items normally (don't change types)\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function ksort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/ksort/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: ksort($data)\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $data = {2: 'van', 3: 'Zonneveld', 1: 'Kevin'}\n  //   example 2: ksort($data)\n  //   example 2: var $result = $data\n  //   returns 2: {1: 'Kevin', 2: 'van', 3: 'Zonneveld'}\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var tmpArr = {}\n  var keys = []\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return ((a + 0) - (b + 0))\n      }\n      break\n    default:\n      // case 'SORT_REGULAR': // compare items normally (don't change types)\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n  keys.sort(sorter)\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png', e:'img1.png', f:'IMG3.png'}\nnatcasesort($array1)\nvar $result = $array1"],"estarget":"es5","returns":["{a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png', b: 'img12.png'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":["This function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nWe cannot use numbers as keys and have them be reordered since they\nadhere to numerical order in some implementations"],"layout":"function","title":"php'snatcasesort in JavaScript","function":"natcasesort","category":"array","language":"php","alias":["/functions/php/natcasesort/","/functions/array/natcasesort/","/php/natcasesort/","/functions/natcasesort/"],"_content":"module.exports = function natcasesort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natcasesort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: We cannot use numbers as keys and have them be reordered since they\n  //      note 1: adhere to numerical order in some implementations\n  //   example 1: var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png', e:'img1.png', f:'IMG3.png'}\n  //   example 1: natcasesort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png', b: 'img12.png'}\n\n  var strnatcasecmp = require('../strings/strnatcasecmp')\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcasecmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/natcasesort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png',\n    e:'img1.png', f:'IMG3.png'}\n\n    natcasesort($array1)\n\n    var $result = $array1\nestarget: es5\nreturns:\n  - >-\n    {a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png',\n    b: 'img12.png'}\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - >-\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    We cannot use numbers as keys and have them be reordered since they\n\n    adhere to numerical order in some implementations\nlayout: function\ntitle: php'snatcasesort in JavaScript\nfunction: natcasesort\ncategory: array\nlanguage: php\npermalink: php/array/natcasesort/\nalias:\n  - /functions/php/natcasesort/\n  - /functions/array/natcasesort/\n  - /php/natcasesort/\n  - /functions/natcasesort/\n---\nmodule.exports = function natcasesort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natcasesort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: We cannot use numbers as keys and have them be reordered since they\n  //      note 1: adhere to numerical order in some implementations\n  //   example 1: var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png', e:'img1.png', f:'IMG3.png'}\n  //   example 1: natcasesort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png', b: 'img12.png'}\n\n  var strnatcasecmp = require('../strings/strnatcasecmp')\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcasecmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/natcasesort/index.html","comments":1,"_id":"cinoej9zq0022ou9ylh68brvr","content":"module.exports = function natcasesort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natcasesort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: We cannot use numbers as keys and have them be reordered since they\n  //      note 1: adhere to numerical order in some implementations\n  //   example 1: var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png', e:'img1.png', f:'IMG3.png'}\n  //   example 1: natcasesort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png', b: 'img12.png'}\n\n  var strnatcasecmp = require('../strings/strnatcasecmp')\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcasecmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function natcasesort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natcasesort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: We cannot use numbers as keys and have them be reordered since they\n  //      note 1: adhere to numerical order in some implementations\n  //   example 1: var $array1 = {a:'IMG0.png', b:'img12.png', c:'img10.png', d:'img2.png', e:'img1.png', f:'IMG3.png'}\n  //   example 1: natcasesort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {a: 'IMG0.png', e: 'img1.png', d: 'img2.png', f: 'IMG3.png', c: 'img10.png', b: 'img12.png'}\n\n  var strnatcasecmp = require('../strings/strnatcasecmp')\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcasecmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\nnatsort($array1)\nvar $result = $array1"],"estarget":"es5","returns":["{d: 'img1.png', c: 'img2.png', b: 'img10.png', a: 'img12.png'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":["This function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways"],"layout":"function","title":"php'snatsort in JavaScript","function":"natsort","category":"array","language":"php","alias":["/functions/php/natsort/","/functions/array/natsort/","/php/natsort/","/functions/natsort/"],"_content":"module.exports = function natsort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\n  //   example 1: natsort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {d: 'img1.png', c: 'img2.png', b: 'img10.png', a: 'img12.png'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/natsort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\n    natsort($array1)\n    var $result = $array1\nestarget: es5\nreturns:\n  - '{d: ''img1.png'', c: ''img2.png'', b: ''img10.png'', a: ''img12.png''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - >-\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\nlayout: function\ntitle: php'snatsort in JavaScript\nfunction: natsort\ncategory: array\nlanguage: php\npermalink: php/array/natsort/\nalias:\n  - /functions/php/natsort/\n  - /functions/array/natsort/\n  - /php/natsort/\n  - /functions/natsort/\n---\nmodule.exports = function natsort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\n  //   example 1: natsort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {d: 'img1.png', c: 'img2.png', b: 'img10.png', a: 'img12.png'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/natsort/index.html","comments":1,"_id":"cinoej9zq0023ou9yzzpaorsl","content":"module.exports = function natsort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\n  //   example 1: natsort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {d: 'img1.png', c: 'img2.png', b: 'img10.png', a: 'img12.png'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function natsort (inputArr) {\n  //  discuss at: http://locutusjs.io/php/natsort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $array1 = {a:\"img12.png\", b:\"img10.png\", c:\"img2.png\", d:\"img1.png\"}\n  //   example 1: natsort($array1)\n  //   example 1: var $result = $array1\n  //   returns 1: {d: 'img1.png', c: 'img2.png', b: 'img10.png', a: 'img12.png'}\n\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var valArr = []\n  var k\n  var i\n  var sortByReference = false\n  var populateArr = {}\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Get key and value arrays\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return strnatcmp(a[1], b[1])\n  })\n\n  // Repopulate the old array\n  for (i = 0; i < valArr.length; i++) {\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $transport = ['foot', 'bike', 'car', 'plane']\nnext($transport)\nnext($transport)"],"estarget":"es5","returns":["'car'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'snext in JavaScript","function":"next","category":"array","language":"php","alias":["/functions/php/next/","/functions/array/next/","/php/next/","/functions/next/"],"_content":"module.exports = function next (arr) {\n  //  discuss at: http://locutusjs.io/php/next/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: next($transport)\n  //   example 1: next($transport)\n  //   returns 1: 'car'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor + 1) {\n        pointers[arrpos + 1] += 1\n        return arr[k]\n      }\n      ct++\n    }\n    // End\n    return false\n  }\n  if (arr.length === 0 || cursor === (arr.length - 1)) {\n    return false\n  }\n  pointers[arrpos + 1] += 1\n  return arr[pointers[arrpos + 1]]\n}\n","source":"php/array/next.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $transport = ['foot', 'bike', 'car', 'plane']\n    next($transport)\n    next($transport)\nestarget: es5\nreturns:\n  - '''car'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'snext in JavaScript\nfunction: next\ncategory: array\nlanguage: php\npermalink: php/array/next/\nalias:\n  - /functions/php/next/\n  - /functions/array/next/\n  - /php/next/\n  - /functions/next/\n---\nmodule.exports = function next (arr) {\n  //  discuss at: http://locutusjs.io/php/next/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: next($transport)\n  //   example 1: next($transport)\n  //   returns 1: 'car'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor + 1) {\n        pointers[arrpos + 1] += 1\n        return arr[k]\n      }\n      ct++\n    }\n    // End\n    return false\n  }\n  if (arr.length === 0 || cursor === (arr.length - 1)) {\n    return false\n  }\n  pointers[arrpos + 1] += 1\n  return arr[pointers[arrpos + 1]]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/next/index.html","comments":1,"_id":"cinoej9zq0024ou9ywkh3jfnx","content":"module.exports = function next (arr) {\n  //  discuss at: http://locutusjs.io/php/next/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: next($transport)\n  //   example 1: next($transport)\n  //   returns 1: 'car'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor + 1) {\n        pointers[arrpos + 1] += 1\n        return arr[k]\n      }\n      ct++\n    }\n    // End\n    return false\n  }\n  if (arr.length === 0 || cursor === (arr.length - 1)) {\n    return false\n  }\n  pointers[arrpos + 1] += 1\n  return arr[pointers[arrpos + 1]]\n}\n","excerpt":"","more":"module.exports = function next (arr) {\n  //  discuss at: http://locutusjs.io/php/next/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: next($transport)\n  //   example 1: next($transport)\n  //   returns 1: 'car'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor + 1) {\n        pointers[arrpos + 1] += 1\n        return arr[k]\n      }\n      ct++\n    }\n    // End\n    return false\n  }\n  if (arr.length === 0 || cursor === (arr.length - 1)) {\n    return false\n  }\n  pointers[arrpos + 1] += 1\n  return arr[pointers[arrpos + 1]]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $transport = ['foot', 'bike', 'car', 'plane']\npos($transport)"],"estarget":"es5","returns":["'foot'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'spos in JavaScript","function":"pos","category":"array","language":"php","alias":["/functions/php/pos/","/functions/array/pos/","/php/pos/","/functions/pos/"],"_content":"module.exports = function pos (arr) {\n  //  discuss at: http://locutusjs.io/php/pos/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: pos($transport)\n  //   returns 1: 'foot'\n\n  var current = require('../array/current')\n  return current(arr)\n}\n","source":"php/array/pos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $transport = ['foot', 'bike', 'car', 'plane']\n    pos($transport)\nestarget: es5\nreturns:\n  - '''foot'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'spos in JavaScript\nfunction: pos\ncategory: array\nlanguage: php\npermalink: php/array/pos/\nalias:\n  - /functions/php/pos/\n  - /functions/array/pos/\n  - /php/pos/\n  - /functions/pos/\n---\nmodule.exports = function pos (arr) {\n  //  discuss at: http://locutusjs.io/php/pos/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: pos($transport)\n  //   returns 1: 'foot'\n\n  var current = require('../array/current')\n  return current(arr)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/pos/index.html","comments":1,"_id":"cinoej9zr0025ou9yunxcy3hg","content":"module.exports = function pos (arr) {\n  //  discuss at: http://locutusjs.io/php/pos/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: pos($transport)\n  //   returns 1: 'foot'\n\n  var current = require('../array/current')\n  return current(arr)\n}\n","excerpt":"","more":"module.exports = function pos (arr) {\n  //  discuss at: http://locutusjs.io/php/pos/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: pos($transport)\n  //   returns 1: 'foot'\n\n  var current = require('../array/current')\n  return current(arr)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $transport = ['foot', 'bike', 'car', 'plane']\nprev($transport)"],"estarget":"es5","returns":["false"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'sprev in JavaScript","function":"prev","category":"array","language":"php","alias":["/functions/php/prev/","/functions/array/prev/","/php/prev/","/functions/prev/"],"_content":"module.exports = function prev (arr) {\n  //  discuss at: http://locutusjs.io/php/prev/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: prev($transport)\n  //   returns 1: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (pointers.indexOf(arr) === -1 || cursor === 0) {\n    return false\n  }\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor - 1) {\n        pointers[arrpos + 1] -= 1\n        return arr[k]\n      }\n      ct++\n    }\n    // Shouldn't reach here\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] -= 1\n  return arr[pointers[arrpos + 1]]\n}\n","source":"php/array/prev.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $transport = ['foot', 'bike', 'car', 'plane']\n    prev($transport)\nestarget: es5\nreturns:\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'sprev in JavaScript\nfunction: prev\ncategory: array\nlanguage: php\npermalink: php/array/prev/\nalias:\n  - /functions/php/prev/\n  - /functions/array/prev/\n  - /php/prev/\n  - /functions/prev/\n---\nmodule.exports = function prev (arr) {\n  //  discuss at: http://locutusjs.io/php/prev/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: prev($transport)\n  //   returns 1: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (pointers.indexOf(arr) === -1 || cursor === 0) {\n    return false\n  }\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor - 1) {\n        pointers[arrpos + 1] -= 1\n        return arr[k]\n      }\n      ct++\n    }\n    // Shouldn't reach here\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] -= 1\n  return arr[pointers[arrpos + 1]]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/prev/index.html","comments":1,"_id":"cinoej9zr0026ou9yygxf294b","content":"module.exports = function prev (arr) {\n  //  discuss at: http://locutusjs.io/php/prev/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: prev($transport)\n  //   returns 1: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (pointers.indexOf(arr) === -1 || cursor === 0) {\n    return false\n  }\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor - 1) {\n        pointers[arrpos + 1] -= 1\n        return arr[k]\n      }\n      ct++\n    }\n    // Shouldn't reach here\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] -= 1\n  return arr[pointers[arrpos + 1]]\n}\n","excerpt":"","more":"module.exports = function prev (arr) {\n  //  discuss at: http://locutusjs.io/php/prev/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: var $transport = ['foot', 'bike', 'car', 'plane']\n  //   example 1: prev($transport)\n  //   returns 1: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  var arrpos = pointers.indexOf(arr)\n  var cursor = pointers[arrpos + 1]\n  if (pointers.indexOf(arr) === -1 || cursor === 0) {\n    return false\n  }\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    var ct = 0\n    for (var k in arr) {\n      if (ct === cursor - 1) {\n        pointers[arrpos + 1] -= 1\n        return arr[k]\n      }\n      ct++\n    }\n    // Shouldn't reach here\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] -= 1\n  return arr[pointers[arrpos + 1]]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["range ( 0, 12 )","range( 0, 100, 10 )","range( 'a', 'i' )","range( 'c', 'a' )"],"estarget":"es5","returns":["[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]","[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]","['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']","['c', 'b', 'a']"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'srange in JavaScript","function":"range","category":"array","language":"php","alias":["/functions/php/range/","/functions/array/range/","/php/range/","/functions/range/"],"_content":"module.exports = function range (low, high, step) {\n  //  discuss at: http://locutusjs.io/php/range/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: range ( 0, 12 )\n  //   returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n  //   example 2: range( 0, 100, 10 )\n  //   returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  //   example 3: range( 'a', 'i' )\n  //   returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n  //   example 4: range( 'c', 'a' )\n  //   returns 4: ['c', 'b', 'a']\n\n  var matrix = []\n  var iVal\n  var endval\n  var plus\n  var walker = step || 1\n  var chars = false\n\n  if (!isNaN(low) && !isNaN(high)) {\n    iVal = low\n    endval = high\n  } else if (isNaN(low) && isNaN(high)) {\n    chars = true\n    iVal = low.charCodeAt(0)\n    endval = high.charCodeAt(0)\n  } else {\n    iVal = (isNaN(low) ? 0 : low)\n    endval = (isNaN(high) ? 0 : high)\n  }\n\n  plus = !(iVal > endval)\n  if (plus) {\n    while (iVal <= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal += walker\n    }\n  } else {\n    while (iVal >= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal -= walker\n    }\n  }\n\n  return matrix\n}\n","source":"php/array/range.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'range ( 0, 12 )'\n  - 'range( 0, 100, 10 )'\n  - 'range( ''a'', ''i'' )'\n  - 'range( ''c'', ''a'' )'\nestarget: es5\nreturns:\n  - '[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]'\n  - '[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]'\n  - '[''a'', ''b'', ''c'', ''d'', ''e'', ''f'', ''g'', ''h'', ''i'']'\n  - '[''c'', ''b'', ''a'']'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'srange in JavaScript\nfunction: range\ncategory: array\nlanguage: php\npermalink: php/array/range/\nalias:\n  - /functions/php/range/\n  - /functions/array/range/\n  - /php/range/\n  - /functions/range/\n---\nmodule.exports = function range (low, high, step) {\n  //  discuss at: http://locutusjs.io/php/range/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: range ( 0, 12 )\n  //   returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n  //   example 2: range( 0, 100, 10 )\n  //   returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  //   example 3: range( 'a', 'i' )\n  //   returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n  //   example 4: range( 'c', 'a' )\n  //   returns 4: ['c', 'b', 'a']\n\n  var matrix = []\n  var iVal\n  var endval\n  var plus\n  var walker = step || 1\n  var chars = false\n\n  if (!isNaN(low) && !isNaN(high)) {\n    iVal = low\n    endval = high\n  } else if (isNaN(low) && isNaN(high)) {\n    chars = true\n    iVal = low.charCodeAt(0)\n    endval = high.charCodeAt(0)\n  } else {\n    iVal = (isNaN(low) ? 0 : low)\n    endval = (isNaN(high) ? 0 : high)\n  }\n\n  plus = !(iVal > endval)\n  if (plus) {\n    while (iVal <= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal += walker\n    }\n  } else {\n    while (iVal >= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal -= walker\n    }\n  }\n\n  return matrix\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/range/index.html","comments":1,"_id":"cinoej9zs0027ou9ysepywx9u","content":"module.exports = function range (low, high, step) {\n  //  discuss at: http://locutusjs.io/php/range/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: range ( 0, 12 )\n  //   returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n  //   example 2: range( 0, 100, 10 )\n  //   returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  //   example 3: range( 'a', 'i' )\n  //   returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n  //   example 4: range( 'c', 'a' )\n  //   returns 4: ['c', 'b', 'a']\n\n  var matrix = []\n  var iVal\n  var endval\n  var plus\n  var walker = step || 1\n  var chars = false\n\n  if (!isNaN(low) && !isNaN(high)) {\n    iVal = low\n    endval = high\n  } else if (isNaN(low) && isNaN(high)) {\n    chars = true\n    iVal = low.charCodeAt(0)\n    endval = high.charCodeAt(0)\n  } else {\n    iVal = (isNaN(low) ? 0 : low)\n    endval = (isNaN(high) ? 0 : high)\n  }\n\n  plus = !(iVal > endval)\n  if (plus) {\n    while (iVal <= endval)=\"\" {=\"\" matrix.push(((chars)=\"\" ?=\"\" string.fromcharcode(ival)=\"\" :=\"\" ival))=\"\" ival=\"\" +=\"walker\" }=\"\" else=\"\" while=\"\" (ival=\"\">= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal -= walker\n    }\n  }\n\n  return matrix\n}\n</=>","excerpt":"","more":"module.exports = function range (low, high, step) {\n  //  discuss at: http://locutusjs.io/php/range/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: range ( 0, 12 )\n  //   returns 1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n  //   example 2: range( 0, 100, 10 )\n  //   returns 2: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n  //   example 3: range( 'a', 'i' )\n  //   returns 3: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']\n  //   example 4: range( 'c', 'a' )\n  //   returns 4: ['c', 'b', 'a']\n\n  var matrix = []\n  var iVal\n  var endval\n  var plus\n  var walker = step || 1\n  var chars = false\n\n  if (!isNaN(low) && !isNaN(high)) {\n    iVal = low\n    endval = high\n  } else if (isNaN(low) && isNaN(high)) {\n    chars = true\n    iVal = low.charCodeAt(0)\n    endval = high.charCodeAt(0)\n  } else {\n    iVal = (isNaN(low) ? 0 : low)\n    endval = (isNaN(high) ? 0 : high)\n  }\n\n  plus = !(iVal > endval)\n  if (plus) {\n    while (iVal <= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal += walker\n    }\n  } else {\n    while (iVal >= endval) {\n      matrix.push(((chars) ? String.fromCharCode(iVal) : iVal))\n      iVal -= walker\n    }\n  }\n\n  return matrix\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["reset({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})"],"estarget":"es5","returns":["'Kevin'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Legaev Andrey"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Uses global: locutus to store the array pointer"],"layout":"function","title":"php'sreset in JavaScript","function":"reset","category":"array","language":"php","alias":["/functions/php/reset/","/functions/array/reset/","/php/reset/","/functions/reset/"],"_content":"module.exports = function reset (arr) {\n  //  discuss at: http://locutusjs.io/php/reset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: reset({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Kevin'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    for (var k in arr) {\n      if (pointers.indexOf(arr) === -1) {\n        pointers.push(arr, 0)\n      } else {\n        pointers[arrpos + 1] = 0\n      }\n      return arr[k]\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = 0\n  return arr[pointers[arrpos + 1]]\n}\n","source":"php/array/reset.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'reset({0: ''Kevin'', 1: ''van'', 2: ''Zonneveld''})'\nestarget: es5\nreturns:\n  - '''Kevin'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - Legaev Andrey\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - 'Uses global: locutus to store the array pointer'\nlayout: function\ntitle: php'sreset in JavaScript\nfunction: reset\ncategory: array\nlanguage: php\npermalink: php/array/reset/\nalias:\n  - /functions/php/reset/\n  - /functions/array/reset/\n  - /php/reset/\n  - /functions/reset/\n---\nmodule.exports = function reset (arr) {\n  //  discuss at: http://locutusjs.io/php/reset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: reset({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Kevin'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    for (var k in arr) {\n      if (pointers.indexOf(arr) === -1) {\n        pointers.push(arr, 0)\n      } else {\n        pointers[arrpos + 1] = 0\n      }\n      return arr[k]\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = 0\n  return arr[pointers[arrpos + 1]]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/reset/index.html","comments":1,"_id":"cinoej9zs0028ou9ykfpee2n2","content":"module.exports = function reset (arr) {\n  //  discuss at: http://locutusjs.io/php/reset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: reset({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Kevin'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    for (var k in arr) {\n      if (pointers.indexOf(arr) === -1) {\n        pointers.push(arr, 0)\n      } else {\n        pointers[arrpos + 1] = 0\n      }\n      return arr[k]\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = 0\n  return arr[pointers[arrpos + 1]]\n}\n","excerpt":"","more":"module.exports = function reset (arr) {\n  //  discuss at: http://locutusjs.io/php/reset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Legaev Andrey\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Uses global: locutus to store the array pointer\n  //   example 1: reset({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 1: 'Kevin'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.pointers = $locutus.php.pointers || []\n  var pointers = $locutus.php.pointers\n\n  var indexOf = function (value) {\n    for (var i = 0, length = this.length; i < length; i++) {\n      if (this[i] === value) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  if (!pointers.indexOf) {\n    pointers.indexOf = indexOf\n  }\n  if (pointers.indexOf(arr) === -1) {\n    pointers.push(arr, 0)\n  }\n  var arrpos = pointers.indexOf(arr)\n  if (Object.prototype.toString.call(arr) !== '[object Array]') {\n    for (var k in arr) {\n      if (pointers.indexOf(arr) === -1) {\n        pointers.push(arr, 0)\n      } else {\n        pointers[arrpos + 1] = 0\n      }\n      return arr[k]\n    }\n    // Empty\n    return false\n  }\n  if (arr.length === 0) {\n    return false\n  }\n  pointers[arrpos + 1] = 0\n  return arr[pointers[arrpos + 1]]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $arr = ['Kevin', 'van', 'Zonneveld']\nrsort($arr)\nvar $result = $arr","ini_set('locutus.sortByReference', true)\nvar $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nrsort($fruits)\nvar $result = $fruits"],"estarget":"es5","returns":["['van', 'Zonneveld', 'Kevin']","{0: 'orange', 1: 'lemon', 2: 'banana', 3: 'apple'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["SORT_STRING (as well as natsort and natcasesort) might also be\nintegrated into all of these functions by adapting the code at\nhttp://sourcefrog.net/projects/natsort/natcompare.js\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'srsort in JavaScript","function":"rsort","category":"array","language":"php","alias":["/functions/php/rsort/","/functions/array/rsort/","/php/rsort/","/functions/rsort/"],"_content":"module.exports = function rsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/rsort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: rsort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['van', 'Zonneveld', 'Kevin']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: rsort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'orange', 1: 'lemon', 2: 'banana', 3: 'apple'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n  var valArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/rsort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $arr = ['Kevin', 'van', 'Zonneveld']\n    rsort($arr)\n    var $result = $arr\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    rsort($fruits)\n    var $result = $fruits\nestarget: es5\nreturns:\n  - '[''van'', ''Zonneveld'', ''Kevin'']'\n  - '{0: ''orange'', 1: ''lemon'', 2: ''banana'', 3: ''apple''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    SORT_STRING (as well as natsort and natcasesort) might also be\n\n    integrated into all of these functions by adapting the code at\n\n    http://sourcefrog.net/projects/natsort/natcompare.js\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'srsort in JavaScript\nfunction: rsort\ncategory: array\nlanguage: php\npermalink: php/array/rsort/\nalias:\n  - /functions/php/rsort/\n  - /functions/array/rsort/\n  - /php/rsort/\n  - /functions/rsort/\n---\nmodule.exports = function rsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/rsort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: rsort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['van', 'Zonneveld', 'Kevin']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: rsort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'orange', 1: 'lemon', 2: 'banana', 3: 'apple'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n  var valArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/rsort/index.html","comments":1,"_id":"cinoej9zs0029ou9ycod6yihx","content":"module.exports = function rsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/rsort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: rsort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['van', 'Zonneveld', 'Kevin']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: rsort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'orange', 1: 'lemon', 2: 'banana', 3: 'apple'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n  var valArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function rsort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/rsort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: rsort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['van', 'Zonneveld', 'Kevin']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: rsort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'orange', 1: 'lemon', 2: 'banana', 3: 'apple'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (b - a)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      // compare items normally (don't change types)\n      sorter = function (b, a) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n  var valArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\nini_set('locutus.sortByReference', true)\nshuffle($data)\nvar $result = $data.q"],"estarget":"es5","returns":["5"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"revised by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sshuffle in JavaScript","function":"shuffle","category":"array","language":"php","alias":["/functions/php/shuffle/","/functions/array/shuffle/","/php/shuffle/","/functions/shuffle/"],"_content":"module.exports = function shuffle (inputArr) {\n  //  discuss at: http://locutusjs.io/php/shuffle/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\n  //   example 1: ini_set('locutus.sortByReference', true)\n  //   example 1: shuffle($data)\n  //   example 1: var $result = $data.q\n  //   returns 1: 5\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function () {\n    return 0.5 - Math.random()\n  })\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/shuffle.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\n    ini_set('locutus.sortByReference', true)\n    shuffle($data)\n    var $result = $data.q\nestarget: es5\nreturns:\n  - '5'\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sshuffle in JavaScript\nfunction: shuffle\ncategory: array\nlanguage: php\npermalink: php/array/shuffle/\nalias:\n  - /functions/php/shuffle/\n  - /functions/array/shuffle/\n  - /php/shuffle/\n  - /functions/shuffle/\n---\nmodule.exports = function shuffle (inputArr) {\n  //  discuss at: http://locutusjs.io/php/shuffle/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\n  //   example 1: ini_set('locutus.sortByReference', true)\n  //   example 1: shuffle($data)\n  //   example 1: var $result = $data.q\n  //   returns 1: 5\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function () {\n    return 0.5 - Math.random()\n  })\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/shuffle/index.html","comments":1,"_id":"cinoej9zt002aou9ymsg19wdm","content":"module.exports = function shuffle (inputArr) {\n  //  discuss at: http://locutusjs.io/php/shuffle/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\n  //   example 1: ini_set('locutus.sortByReference', true)\n  //   example 1: shuffle($data)\n  //   example 1: var $result = $data.q\n  //   returns 1: 5\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function () {\n    return 0.5 - Math.random()\n  })\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function shuffle (inputArr) {\n  //  discuss at: http://locutusjs.io/php/shuffle/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $data = {5:'a', 2:'3', 3:'c', 4:5, 'q':5}\n  //   example 1: ini_set('locutus.sortByReference', true)\n  //   example 1: shuffle($data)\n  //   example 1: var $result = $data.q\n  //   returns 1: 5\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = []\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function () {\n    return 0.5 - Math.random()\n  })\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sizeof([[0,0],[0,-4]], 'COUNT_RECURSIVE')","sizeof({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')"],"estarget":"es5","returns":["6","6"],"dependencies":[],"authors":{"original by":["Philip Peterson"]},"notes":[],"layout":"function","title":"php'ssizeof in JavaScript","function":"sizeof","category":"array","language":"php","alias":["/functions/php/sizeof/","/functions/array/sizeof/","/php/sizeof/","/functions/sizeof/"],"_content":"module.exports = function sizeof (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/sizeof/\n  // original by: Philip Peterson\n  //   example 1: sizeof([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: sizeof({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var count = require('../array/count')\n\n  return count(mixedVar, mode)\n}\n","source":"php/array/sizeof.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'sizeof([[0,0],[0,-4]], ''COUNT_RECURSIVE'')'\n  - 'sizeof({''one'' : [1,2,3,4,5]}, ''COUNT_RECURSIVE'')'\nestarget: es5\nreturns:\n  - '6'\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\nnotes: []\nlayout: function\ntitle: php'ssizeof in JavaScript\nfunction: sizeof\ncategory: array\nlanguage: php\npermalink: php/array/sizeof/\nalias:\n  - /functions/php/sizeof/\n  - /functions/array/sizeof/\n  - /php/sizeof/\n  - /functions/sizeof/\n---\nmodule.exports = function sizeof (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/sizeof/\n  // original by: Philip Peterson\n  //   example 1: sizeof([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: sizeof({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var count = require('../array/count')\n\n  return count(mixedVar, mode)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/sizeof/index.html","comments":1,"_id":"cinoej9zt002bou9y1ejx9sln","content":"module.exports = function sizeof (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/sizeof/\n  // original by: Philip Peterson\n  //   example 1: sizeof([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: sizeof({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var count = require('../array/count')\n\n  return count(mixedVar, mode)\n}\n","excerpt":"","more":"module.exports = function sizeof (mixedVar, mode) {\n  //  discuss at: http://locutusjs.io/php/sizeof/\n  // original by: Philip Peterson\n  //   example 1: sizeof([[0,0],[0,-4]], 'COUNT_RECURSIVE')\n  //   returns 1: 6\n  //   example 2: sizeof({'one' : [1,2,3,4,5]}, 'COUNT_RECURSIVE')\n  //   returns 2: 6\n\n  var count = require('../array/count')\n\n  return count(mixedVar, mode)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $arr = ['Kevin', 'van', 'Zonneveld']\nsort($arr)\nvar $result = $arr","ini_set('locutus.sortByReference', true)\nvar $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nsort($fruits)\nvar $result = $fruits"],"estarget":"es5","returns":["['Kevin', 'Zonneveld', 'van']","{0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"revised by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["SORT_STRING (as well as natsort and natcasesort) might also be\nintegrated into all of these functions by adapting the code at\nhttp://sourcefrog.net/projects/natsort/natcompare.js\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways\nSince JS objects' keys are always strings, and (the\ndefault) SORT_REGULAR flag distinguishes by key type,\nif the content is a numeric string, we treat the\n\"original type\" as numeric."],"layout":"function","title":"php'ssort in JavaScript","function":"sort","category":"array","language":"php","alias":["/functions/php/sort/","/functions/array/sort/","/php/sort/","/functions/sort/"],"_content":"module.exports = function sort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/sort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: sort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['Kevin', 'Zonneveld', 'van']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: sort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  var valArr = []\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n  return sortByReference || populateArr\n}\n","source":"php/array/sort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $arr = ['Kevin', 'van', 'Zonneveld']\n    sort($arr)\n    var $result = $arr\n  - |-\n    ini_set('locutus.sortByReference', true)\n    var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n    sort($fruits)\n    var $result = $fruits\nestarget: es5\nreturns:\n  - '[''Kevin'', ''Zonneveld'', ''van'']'\n  - '{0: ''apple'', 1: ''banana'', 2: ''lemon'', 3: ''orange''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    SORT_STRING (as well as natsort and natcasesort) might also be\n\n    integrated into all of these functions by adapting the code at\n\n    http://sourcefrog.net/projects/natsort/natcompare.js\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\n\n    Since JS objects' keys are always strings, and (the\n\n    default) SORT_REGULAR flag distinguishes by key type,\n\n    if the content is a numeric string, we treat the\n\n    \"original type\" as numeric.\nlayout: function\ntitle: php'ssort in JavaScript\nfunction: sort\ncategory: array\nlanguage: php\npermalink: php/array/sort/\nalias:\n  - /functions/php/sort/\n  - /functions/array/sort/\n  - /php/sort/\n  - /functions/sort/\n---\nmodule.exports = function sort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/sort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: sort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['Kevin', 'Zonneveld', 'van']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: sort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  var valArr = []\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/sort/index.html","comments":1,"_id":"cinoej9zt002cou9ybtn0e8yz","content":"module.exports = function sort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/sort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: sort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['Kevin', 'Zonneveld', 'van']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: sort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  var valArr = []\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function sort (inputArr, sortFlags) {\n  //  discuss at: http://locutusjs.io/php/sort/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: SORT_STRING (as well as natsort and natcasesort) might also be\n  //      note 1: integrated into all of these functions by adapting the code at\n  //      note 1: http://sourcefrog.net/projects/natsort/natcompare.js\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //      note 1: Since JS objects' keys are always strings, and (the\n  //      note 1: default) SORT_REGULAR flag distinguishes by key type,\n  //      note 1: if the content is a numeric string, we treat the\n  //      note 1: \"original type\" as numeric.\n  //   example 1: var $arr = ['Kevin', 'van', 'Zonneveld']\n  //   example 1: sort($arr)\n  //   example 1: var $result = $arr\n  //   returns 1: ['Kevin', 'Zonneveld', 'van']\n  //   example 2: ini_set('locutus.sortByReference', true)\n  //   example 2: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 2: sort($fruits)\n  //   example 2: var $result = $fruits\n  //   returns 2: {0: 'apple', 1: 'banana', 2: 'lemon', 3: 'orange'}\n  //        test: skip-1\n\n  var i18nlgd = require('../i18n/i18n_loc_get_default')\n  var strnatcmp = require('../strings/strnatcmp')\n\n  var sorter\n  var i\n  var k\n  var sortByReference = false\n  var populateArr = {}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  switch (sortFlags) {\n    case 'SORT_STRING':\n      // compare items as strings\n      sorter = function (a, b) {\n        return strnatcmp(b, a)\n      }\n      break\n    case 'SORT_LOCALE_STRING':\n      // compare items as strings, based on the current locale\n      // (set with i18n_loc_set_default() as of PHP6)\n      var loc = i18nlgd()\n      sorter = $locutus.locales[loc].sorting\n      break\n    case 'SORT_NUMERIC':\n      // compare items numerically\n      sorter = function (a, b) {\n        return (a - b)\n      }\n      break\n    case 'SORT_REGULAR':\n    default:\n      sorter = function (a, b) {\n        var aFloat = parseFloat(a)\n        var bFloat = parseFloat(b)\n        var aNumeric = aFloat + '' === a\n        var bNumeric = bFloat + '' === b\n\n        if (aNumeric && bNumeric) {\n          return aFloat > bFloat ? 1 : aFloat < bFloat ? -1 : 0\n        } else if (aNumeric && !bNumeric) {\n          return 1\n        } else if (!aNumeric && bNumeric) {\n          return -1\n        }\n\n        return a > b ? 1 : a < b ? -1 : 0\n      }\n      break\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  var valArr = []\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n\n  valArr.sort(sorter)\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return -1;} return 0;}\nvar $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nuasort($fruits, $sorter)\nvar $result = $fruits"],"estarget":"es5","returns":["{c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":["This function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways"],"layout":"function","title":"php'suasort in JavaScript","function":"uasort","category":"array","language":"php","alias":["/functions/php/uasort/","/functions/array/uasort/","/php/uasort/","/functions/uasort/"],"_content":"module.exports = function uasort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uasort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return -1;} return 0;}\n  //   example 1: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uasort($fruits, $sorter)\n  //   example 1: var $result = $fruits\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/uasort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return\n    -1;} return 0;}\n\n    var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n\n    uasort($fruits, $sorter)\n\n    var $result = $fruits\nestarget: es5\nreturns:\n  - '{c: ''apple'', b: ''banana'', d: ''lemon'', a: ''orange''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - >-\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\nlayout: function\ntitle: php'suasort in JavaScript\nfunction: uasort\ncategory: array\nlanguage: php\npermalink: php/array/uasort/\nalias:\n  - /functions/php/uasort/\n  - /functions/array/uasort/\n  - /php/uasort/\n  - /functions/uasort/\n---\nmodule.exports = function uasort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uasort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return -1;} return 0;}\n  //   example 1: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uasort($fruits, $sorter)\n  //   example 1: var $result = $fruits\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/uasort/index.html","comments":1,"_id":"cinoej9zu002dou9ybn556wl9","content":"module.exports = function uasort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uasort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return -1;} return 0;}\n  //   example 1: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uasort($fruits, $sorter)\n  //   example 1: var $result = $fruits\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function uasort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uasort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $sorter = function (a, b) { if (a > b) {return 1;}if (a < b) {return -1;} return 0;}\n  //   example 1: var $fruits = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uasort($fruits, $sorter)\n  //   example 1: var $result = $fruits\n  //   returns 1: {c: 'apple', b: 'banana', d: 'lemon', a: 'orange'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push([k, inputArr[k]])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  valArr.sort(function (a, b) {\n    return sorter(a[1], b[1])\n  })\n\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[valArr[i][0]] = valArr[i][1]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\nuksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\nvar $result = $data"],"estarget":"es5","returns":["{a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["The examples are correct, this is a new way\nThis function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways"],"layout":"function","title":"php'suksort in JavaScript","function":"uksort","category":"array","language":"php","alias":["/functions/php/uksort/","/functions/array/uksort/","/php/uksort/","/functions/uksort/"],"_content":"module.exports = function uksort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uksort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n\n  var tmpArr = {}\n  var keys = []\n  var i = 0\n  var k = ''\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this.window[sorter]\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n\n  // Sort key names\n  try {\n    if (sorter) {\n      keys.sort(sorter)\n    } else {\n      keys.sort()\n    }\n  } catch (e) {\n    return false\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/uksort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n\n    uksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 >\n    key2 ? 1 : -1)); })\n\n    var $result = $data\nestarget: es5\nreturns:\n  - '{a: ''orange'', b: ''banana'', c: ''apple'', d: ''lemon''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    The examples are correct, this is a new way\n\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\nlayout: function\ntitle: php'suksort in JavaScript\nfunction: uksort\ncategory: array\nlanguage: php\npermalink: php/array/uksort/\nalias:\n  - /functions/php/uksort/\n  - /functions/array/uksort/\n  - /php/uksort/\n  - /functions/uksort/\n---\nmodule.exports = function uksort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uksort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n\n  var tmpArr = {}\n  var keys = []\n  var i = 0\n  var k = ''\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this.window[sorter]\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n\n  // Sort key names\n  try {\n    if (sorter) {\n      keys.sort(sorter)\n    } else {\n      keys.sort()\n    }\n  } catch (e) {\n    return false\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/uksort/index.html","comments":1,"_id":"cinoej9zu002eou9yaohv4rqj","content":"module.exports = function uksort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uksort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n\n  var tmpArr = {}\n  var keys = []\n  var i = 0\n  var k = ''\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this.window[sorter]\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n\n  // Sort key names\n  try {\n    if (sorter) {\n      keys.sort(sorter)\n    } else {\n      keys.sort()\n    }\n  } catch (e) {\n    return false\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function uksort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/uksort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The examples are correct, this is a new way\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $data = {d: 'lemon', a: 'orange', b: 'banana', c: 'apple'}\n  //   example 1: uksort($data, function (key1, key2){ return (key1 === key2 ? 0 : (key1 > key2 ? 1 : -1)); })\n  //   example 1: var $result = $data\n  //   returns 1: {a: 'orange', b: 'banana', c: 'apple', d: 'lemon'}\n\n  var tmpArr = {}\n  var keys = []\n  var i = 0\n  var k = ''\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this.window[sorter]\n  }\n\n  // Make a list of key names\n  for (k in inputArr) {\n    if (inputArr.hasOwnProperty(k)) {\n      keys.push(k)\n    }\n  }\n\n  // Sort key names\n  try {\n    if (sorter) {\n      keys.sort(sorter)\n    } else {\n      keys.sort()\n    }\n  } catch (e) {\n    return false\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  // Rebuild array with sorted key names\n  for (i = 0; i < keys.length; i++) {\n    k = keys[i]\n    tmpArr[k] = inputArr[k]\n    if (sortByReference) {\n      delete inputArr[k]\n    }\n  }\n  for (i in tmpArr) {\n    if (tmpArr.hasOwnProperty(i)) {\n      populateArr[i] = tmpArr[i]\n    }\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $stuff = {d: '3', a: '1', b: '11', c: '4'}\nusort($stuff, function (a, b) { return (a - b) })\nvar $result = $stuff"],"estarget":"es5","returns":["{0: '1', 1: '3', 2: '4', 3: '11'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["This function deviates from PHP in returning a copy of the array instead\nof acting by reference and returning true; this was necessary because\nIE does not allow deleting and re-adding of properties without caching\nof property position; you can set the ini of \"locutus.sortByReference\" to true to\nget the PHP behavior, but use this only if you are in an environment\nsuch as Firefox extensions where for-in iteration order is fixed and true\nproperty deletion is supported. Note that we intend to implement the PHP\nbehavior by default if IE ever does allow it; only gives shallow copy since\nis by reference in PHP anyways"],"layout":"function","title":"php'susort in JavaScript","function":"usort","category":"array","language":"php","alias":["/functions/php/usort/","/functions/array/usort/","/php/usort/","/functions/usort/"],"_content":"module.exports = function usort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/usort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $stuff = {d: '3', a: '1', b: '11', c: '4'}\n  //   example 1: usort($stuff, function (a, b) { return (a - b) })\n  //   example 1: var $result = $stuff\n  //   returns 1: {0: '1', 1: '3', 2: '4', 3: '11'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  try {\n    valArr.sort(sorter)\n  } catch (e) {\n    return false\n  }\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","source":"php/array/usort.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $stuff = {d: '3', a: '1', b: '11', c: '4'}\n    usort($stuff, function (a, b) { return (a - b) })\n    var $result = $stuff\nestarget: es5\nreturns:\n  - '{0: ''1'', 1: ''3'', 2: ''4'', 3: ''11''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    This function deviates from PHP in returning a copy of the array instead\n\n    of acting by reference and returning true; this was necessary because\n\n    IE does not allow deleting and re-adding of properties without caching\n\n    of property position; you can set the ini of \"locutus.sortByReference\" to\n    true to\n\n    get the PHP behavior, but use this only if you are in an environment\n\n    such as Firefox extensions where for-in iteration order is fixed and true\n\n    property deletion is supported. Note that we intend to implement the PHP\n\n    behavior by default if IE ever does allow it; only gives shallow copy since\n\n    is by reference in PHP anyways\nlayout: function\ntitle: php'susort in JavaScript\nfunction: usort\ncategory: array\nlanguage: php\npermalink: php/array/usort/\nalias:\n  - /functions/php/usort/\n  - /functions/array/usort/\n  - /php/usort/\n  - /functions/usort/\n---\nmodule.exports = function usort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/usort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $stuff = {d: '3', a: '1', b: '11', c: '4'}\n  //   example 1: usort($stuff, function (a, b) { return (a - b) })\n  //   example 1: var $result = $stuff\n  //   returns 1: {0: '1', 1: '3', 2: '4', 3: '11'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  try {\n    valArr.sort(sorter)\n  } catch (e) {\n    return false\n  }\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/array/usort/index.html","comments":1,"_id":"cinoej9zu002fou9y6sj4ufm8","content":"module.exports = function usort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/usort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $stuff = {d: '3', a: '1', b: '11', c: '4'}\n  //   example 1: usort($stuff, function (a, b) { return (a - b) })\n  //   example 1: var $result = $stuff\n  //   returns 1: {0: '1', 1: '3', 2: '4', 3: '11'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  try {\n    valArr.sort(sorter)\n  } catch (e) {\n    return false\n  }\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n","excerpt":"","more":"module.exports = function usort (inputArr, sorter) {\n  //  discuss at: http://locutusjs.io/php/usort/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This function deviates from PHP in returning a copy of the array instead\n  //      note 1: of acting by reference and returning true; this was necessary because\n  //      note 1: IE does not allow deleting and re-adding of properties without caching\n  //      note 1: of property position; you can set the ini of \"locutus.sortByReference\" to true to\n  //      note 1: get the PHP behavior, but use this only if you are in an environment\n  //      note 1: such as Firefox extensions where for-in iteration order is fixed and true\n  //      note 1: property deletion is supported. Note that we intend to implement the PHP\n  //      note 1: behavior by default if IE ever does allow it; only gives shallow copy since\n  //      note 1: is by reference in PHP anyways\n  //   example 1: var $stuff = {d: '3', a: '1', b: '11', c: '4'}\n  //   example 1: usort($stuff, function (a, b) { return (a - b) })\n  //   example 1: var $result = $stuff\n  //   returns 1: {0: '1', 1: '3', 2: '4', 3: '11'}\n\n  var valArr = []\n  var k = ''\n  var i = 0\n  var sortByReference = false\n  var populateArr = {}\n\n  if (typeof sorter === 'string') {\n    sorter = this[sorter]\n  } else if (Object.prototype.toString.call(sorter) === '[object Array]') {\n    sorter = this[sorter[0]][sorter[1]]\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.sortByReference') : undefined) || 'on'\n  sortByReference = iniVal === 'on'\n  populateArr = sortByReference ? inputArr : populateArr\n\n  for (k in inputArr) {\n    // Get key and value arrays\n    if (inputArr.hasOwnProperty(k)) {\n      valArr.push(inputArr[k])\n      if (sortByReference) {\n        delete inputArr[k]\n      }\n    }\n  }\n  try {\n    valArr.sort(sorter)\n  } catch (e) {\n    return false\n  }\n  for (i = 0; i < valArr.length; i++) {\n    // Repopulate the old array\n    populateArr[i] = valArr[i]\n  }\n\n  return sortByReference || populateArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_alnum('AbC12')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_alnum in JavaScript","function":"ctype_alnum","category":"ctype","language":"php","alias":["/functions/php/ctype_alnum/","/functions/ctype/ctype_alnum/","/php/ctype_alnum/","/functions/ctype_alnum/"],"_content":"module.exports = function ctype_alnum (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alnum/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alnum('AbC12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.an) !== -1\n}\n","source":"php/ctype/ctype_alnum.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_alnum('AbC12')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_alnum in JavaScript\nfunction: ctype_alnum\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_alnum/\nalias:\n  - /functions/php/ctype_alnum/\n  - /functions/ctype/ctype_alnum/\n  - /php/ctype_alnum/\n  - /functions/ctype_alnum/\n---\nmodule.exports = function ctype_alnum (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alnum/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alnum('AbC12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.an) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_alnum/index.html","comments":1,"_id":"cinoej9zv002gou9yav5dr1oi","content":"module.exports = function ctype_alnum (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alnum/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alnum('AbC12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.an) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_alnum (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alnum/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alnum('AbC12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.an) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_alpha('Az')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_alpha in JavaScript","function":"ctype_alpha","category":"ctype","language":"php","alias":["/functions/php/ctype_alpha/","/functions/ctype/ctype_alpha/","/php/ctype_alpha/","/functions/ctype_alpha/"],"_content":"module.exports = function ctype_alpha (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alpha/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alpha('Az')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.al) !== -1\n}\n","source":"php/ctype/ctype_alpha.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_alpha('Az')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_alpha in JavaScript\nfunction: ctype_alpha\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_alpha/\nalias:\n  - /functions/php/ctype_alpha/\n  - /functions/ctype/ctype_alpha/\n  - /php/ctype_alpha/\n  - /functions/ctype_alpha/\n---\nmodule.exports = function ctype_alpha (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alpha/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alpha('Az')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.al) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_alpha/index.html","comments":1,"_id":"cinoej9zv002hou9yoxu5qvq1","content":"module.exports = function ctype_alpha (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alpha/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alpha('Az')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.al) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_alpha (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_alpha/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_alpha('Az')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.al) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_cntrl('\\u0020')","ctype_cntrl('\\u001F')"],"estarget":"es5","returns":["false","true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_cntrl in JavaScript","function":"ctype_cntrl","category":"ctype","language":"php","alias":["/functions/php/ctype_cntrl/","/functions/ctype/ctype_cntrl/","/php/ctype_cntrl/","/functions/ctype_cntrl/"],"_content":"module.exports = function ctype_cntrl (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_cntrl/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_cntrl('\\u0020')\n  //   returns 1: false\n  //   example 2: ctype_cntrl('\\u001F')\n  //   returns 2: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.ct) !== -1\n}\n","source":"php/ctype/ctype_cntrl.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_cntrl('\\u0020')\n  - ctype_cntrl('\\u001F')\nestarget: es5\nreturns:\n  - 'false'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_cntrl in JavaScript\nfunction: ctype_cntrl\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_cntrl/\nalias:\n  - /functions/php/ctype_cntrl/\n  - /functions/ctype/ctype_cntrl/\n  - /php/ctype_cntrl/\n  - /functions/ctype_cntrl/\n---\nmodule.exports = function ctype_cntrl (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_cntrl/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_cntrl('\\u0020')\n  //   returns 1: false\n  //   example 2: ctype_cntrl('\\u001F')\n  //   returns 2: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.ct) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_cntrl/index.html","comments":1,"_id":"cinoej9zv002iou9yznl0fkng","content":"module.exports = function ctype_cntrl (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_cntrl/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_cntrl('\\u0020')\n  //   returns 1: false\n  //   example 2: ctype_cntrl('\\u001F')\n  //   returns 2: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.ct) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_cntrl (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_cntrl/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_cntrl('\\u0020')\n  //   returns 1: false\n  //   example 2: ctype_cntrl('\\u001F')\n  //   returns 2: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.ct) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_digit('150')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_digit in JavaScript","function":"ctype_digit","category":"ctype","language":"php","alias":["/functions/php/ctype_digit/","/functions/ctype/ctype_digit/","/php/ctype_digit/","/functions/ctype_digit/"],"_content":"module.exports = function ctype_digit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_digit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_digit('150')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.dg) !== -1\n}\n","source":"php/ctype/ctype_digit.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_digit('150')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_digit in JavaScript\nfunction: ctype_digit\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_digit/\nalias:\n  - /functions/php/ctype_digit/\n  - /functions/ctype/ctype_digit/\n  - /php/ctype_digit/\n  - /functions/ctype_digit/\n---\nmodule.exports = function ctype_digit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_digit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_digit('150')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.dg) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_digit/index.html","comments":1,"_id":"cinoej9zw002jou9yt5xyumxn","content":"module.exports = function ctype_digit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_digit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_digit('150')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.dg) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_digit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_digit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_digit('150')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.dg) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_graph('!%')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_graph in JavaScript","function":"ctype_graph","category":"ctype","language":"php","alias":["/functions/php/ctype_graph/","/functions/ctype/ctype_graph/","/php/ctype_graph/","/functions/ctype_graph/"],"_content":"module.exports = function ctype_graph (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_graph/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_graph('!%')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.gr) !== -1\n}\n","source":"php/ctype/ctype_graph.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_graph('!%')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_graph in JavaScript\nfunction: ctype_graph\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_graph/\nalias:\n  - /functions/php/ctype_graph/\n  - /functions/ctype/ctype_graph/\n  - /php/ctype_graph/\n  - /functions/ctype_graph/\n---\nmodule.exports = function ctype_graph (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_graph/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_graph('!%')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.gr) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_graph/index.html","comments":1,"_id":"cinoej9zw002kou9y9kc8jx4y","content":"module.exports = function ctype_graph (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_graph/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_graph('!%')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.gr) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_graph (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_graph/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_graph('!%')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.gr) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_lower('abc')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_lower in JavaScript","function":"ctype_lower","category":"ctype","language":"php","alias":["/functions/php/ctype_lower/","/functions/ctype/ctype_lower/","/php/ctype_lower/","/functions/ctype_lower/"],"_content":"module.exports = function ctype_lower (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_lower/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_lower('abc')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.lw) !== -1\n}\n","source":"php/ctype/ctype_lower.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_lower('abc')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_lower in JavaScript\nfunction: ctype_lower\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_lower/\nalias:\n  - /functions/php/ctype_lower/\n  - /functions/ctype/ctype_lower/\n  - /php/ctype_lower/\n  - /functions/ctype_lower/\n---\nmodule.exports = function ctype_lower (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_lower/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_lower('abc')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.lw) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_lower/index.html","comments":1,"_id":"cinoej9zx002lou9yvmkeofv1","content":"module.exports = function ctype_lower (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_lower/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_lower('abc')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.lw) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_lower (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_lower/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_lower('abc')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.lw) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_print('AbC!#12')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_print in JavaScript","function":"ctype_print","category":"ctype","language":"php","alias":["/functions/php/ctype_print/","/functions/ctype/ctype_print/","/php/ctype_print/","/functions/ctype_print/"],"_content":"module.exports = function ctype_print (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_print/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_print('AbC!#12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pr) !== -1\n}\n","source":"php/ctype/ctype_print.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'ctype_print(''AbC!#12'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_print in JavaScript\nfunction: ctype_print\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_print/\nalias:\n  - /functions/php/ctype_print/\n  - /functions/ctype/ctype_print/\n  - /php/ctype_print/\n  - /functions/ctype_print/\n---\nmodule.exports = function ctype_print (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_print/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_print('AbC!#12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pr) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_print/index.html","comments":1,"_id":"cinoej9zx002mou9yp8v98oz6","content":"module.exports = function ctype_print (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_print/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_print('AbC!#12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pr) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_print (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_print/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_print('AbC!#12')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pr) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_punct('!?')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_punct in JavaScript","function":"ctype_punct","category":"ctype","language":"php","alias":["/functions/php/ctype_punct/","/functions/ctype/ctype_punct/","/php/ctype_punct/","/functions/ctype_punct/"],"_content":"module.exports = function ctype_punct (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_punct/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_punct('!?')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pu) !== -1\n}\n","source":"php/ctype/ctype_punct.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_punct('!?')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_punct in JavaScript\nfunction: ctype_punct\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_punct/\nalias:\n  - /functions/php/ctype_punct/\n  - /functions/ctype/ctype_punct/\n  - /php/ctype_punct/\n  - /functions/ctype_punct/\n---\nmodule.exports = function ctype_punct (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_punct/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_punct('!?')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pu) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_punct/index.html","comments":1,"_id":"cinoej9zy002nou9y6eztf5j8","content":"module.exports = function ctype_punct (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_punct/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_punct('!?')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pu) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_punct (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_punct/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_punct('!?')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.pu) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_space('\\t\\n')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_space in JavaScript","function":"ctype_space","category":"ctype","language":"php","alias":["/functions/php/ctype_space/","/functions/ctype/ctype_space/","/php/ctype_space/","/functions/ctype_space/"],"_content":"module.exports = function ctype_space (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_space/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_space('\\t\\n')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.sp) !== -1\n}\n","source":"php/ctype/ctype_space.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_space('\\t\\n')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_space in JavaScript\nfunction: ctype_space\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_space/\nalias:\n  - /functions/php/ctype_space/\n  - /functions/ctype/ctype_space/\n  - /php/ctype_space/\n  - /functions/ctype_space/\n---\nmodule.exports = function ctype_space (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_space/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_space('\\t\\n')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.sp) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_space/index.html","comments":1,"_id":"cinoej9zy002oou9yebx7m6oh","content":"module.exports = function ctype_space (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_space/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_space('\\t\\n')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.sp) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_space (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_space/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_space('\\t\\n')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.sp) !== -1\n}\n"},{"type":"category","language":"php","category":"ctype","title":"ctype","_content":"","source":"php/ctype/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: ctype\ntitle: ctype\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/index.html","comments":1,"layout":"page","_id":"cinoej9zy002pou9y7umkunz7","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["checkdate(12, 31, 2000)","checkdate(2, 29, 2001)","checkdate(3, 31, 2008)","checkdate(1, 390, 2000)"],"estarget":"es5","returns":["true","false","true","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Pyerre","Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'scheckdate in JavaScript","function":"checkdate","category":"datetime","language":"php","alias":["/functions/php/checkdate/","/functions/datetime/checkdate/","/php/checkdate/","/functions/checkdate/"],"_content":"module.exports = function checkdate (m, d, y) {\n  //  discuss at: http://locutusjs.io/php/checkdate/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pyerre\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: checkdate(12, 31, 2000)\n  //   returns 1: true\n  //   example 2: checkdate(2, 29, 2001)\n  //   returns 2: false\n  //   example 3: checkdate(3, 31, 2008)\n  //   returns 3: true\n  //   example 4: checkdate(1, 390, 2000)\n  //   returns 4: false\n\n  return m > 0 && m < 13 && y > 0 && y < 32768 && d > 0 && d <= (new Date(y, m, 0))\n    .getDate()\n}\n","source":"php/datetime/checkdate.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'checkdate(12, 31, 2000)'\n  - 'checkdate(2, 29, 2001)'\n  - 'checkdate(3, 31, 2008)'\n  - 'checkdate(1, 390, 2000)'\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Pyerre\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'scheckdate in JavaScript\nfunction: checkdate\ncategory: datetime\nlanguage: php\npermalink: php/datetime/checkdate/\nalias:\n  - /functions/php/checkdate/\n  - /functions/datetime/checkdate/\n  - /php/checkdate/\n  - /functions/checkdate/\n---\nmodule.exports = function checkdate (m, d, y) {\n  //  discuss at: http://locutusjs.io/php/checkdate/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pyerre\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: checkdate(12, 31, 2000)\n  //   returns 1: true\n  //   example 2: checkdate(2, 29, 2001)\n  //   returns 2: false\n  //   example 3: checkdate(3, 31, 2008)\n  //   returns 3: true\n  //   example 4: checkdate(1, 390, 2000)\n  //   returns 4: false\n\n  return m > 0 && m < 13 && y > 0 && y < 32768 && d > 0 && d <= (new Date(y, m, 0))\n    .getDate()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/checkdate/index.html","comments":1,"_id":"cinoej9zz002qou9yepupezpn","content":"module.exports = function checkdate (m, d, y) {\n  //  discuss at: http://locutusjs.io/php/checkdate/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pyerre\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: checkdate(12, 31, 2000)\n  //   returns 1: true\n  //   example 2: checkdate(2, 29, 2001)\n  //   returns 2: false\n  //   example 3: checkdate(3, 31, 2008)\n  //   returns 3: true\n  //   example 4: checkdate(1, 390, 2000)\n  //   returns 4: false\n\n  return m > 0 && m < 13 && y > 0 && y < 32768 && d > 0 && d ","excerpt":"","more":"module.exports = function checkdate (m, d, y) {\n  //  discuss at: http://locutusjs.io/php/checkdate/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Pyerre\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: checkdate(12, 31, 2000)\n  //   returns 1: true\n  //   example 2: checkdate(2, 29, 2001)\n  //   returns 2: false\n  //   example 3: checkdate(3, 31, 2008)\n  //   returns 3: true\n  //   example 4: checkdate(1, 390, 2000)\n  //   returns 4: false\n\n  return m > 0 && m < 13 && y > 0 && y < 32768 && d > 0 && d <= (new Date(y, m, 0))\n    .getDate()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_xdigit('01dF')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_xdigit in JavaScript","function":"ctype_xdigit","category":"ctype","language":"php","alias":["/functions/php/ctype_xdigit/","/functions/ctype/ctype_xdigit/","/php/ctype_xdigit/","/functions/ctype_xdigit/"],"_content":"module.exports = function ctype_xdigit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_xdigit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_xdigit('01dF')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.xd) !== -1\n}\n","source":"php/ctype/ctype_xdigit.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_xdigit('01dF')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_xdigit in JavaScript\nfunction: ctype_xdigit\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_xdigit/\nalias:\n  - /functions/php/ctype_xdigit/\n  - /functions/ctype/ctype_xdigit/\n  - /php/ctype_xdigit/\n  - /functions/ctype_xdigit/\n---\nmodule.exports = function ctype_xdigit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_xdigit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_xdigit('01dF')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.xd) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_xdigit/index.html","comments":1,"_id":"cinoej9zz002rou9yksdebt81","content":"module.exports = function ctype_xdigit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_xdigit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_xdigit('01dF')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.xd) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_xdigit (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_xdigit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_xdigit('01dF')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.xd) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ctype_upper('AZ')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sctype_upper in JavaScript","function":"ctype_upper","category":"ctype","language":"php","alias":["/functions/php/ctype_upper/","/functions/ctype/ctype_upper/","/php/ctype_upper/","/functions/ctype_upper/"],"_content":"module.exports = function ctype_upper (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_upper/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_upper('AZ')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.up) !== -1\n}\n","source":"php/ctype/ctype_upper.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ctype_upper('AZ')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sctype_upper in JavaScript\nfunction: ctype_upper\ncategory: ctype\nlanguage: php\npermalink: php/ctype/ctype_upper/\nalias:\n  - /functions/php/ctype_upper/\n  - /functions/ctype/ctype_upper/\n  - /php/ctype_upper/\n  - /functions/ctype_upper/\n---\nmodule.exports = function ctype_upper (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_upper/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_upper('AZ')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.up) !== -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/ctype/ctype_upper/index.html","comments":1,"_id":"cinoeja00002sou9ypaaqybit","content":"module.exports = function ctype_upper (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_upper/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_upper('AZ')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.up) !== -1\n}\n","excerpt":"","more":"module.exports = function ctype_upper (text) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ctype_upper/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ctype_upper('AZ')\n  //   returns 1: true\n\n  var setlocale = require('../strings/setlocale')\n\n  if (typeof text !== 'string') {\n    return false\n  }\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var p = $locutus.php\n\n  return text.search(p.locales[p.localeCategories.LC_CTYPE].LC_CTYPE.up) !== -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)","date('F j, Y, g:i a', 1062462400)","date('Y W o', 1062462400)","var $x = date('Y m d', (new Date()).getTime() / 1000)\n$x = $x + ''\nvar $result = $x.length // 2009 01 09","date('W', 1104534000)","date('B t', 1104534000)","date('W U', 1293750000.82); // 2010-12-31","date('W', 1293836400); // 2011-01-01","date('W Y-m-d', 1293974054); // 2011-01-02"],"estarget":"es5","returns":["'07:09:40 m is month'","'September 2, 2003, 12:26 am'","'2003 36 2003'","10","'52'","'999 31'","'52 1293750000'","'52'","'52 2011-01-02'"],"dependencies":[],"authors":{"original by":["Carlos R. L. Rodrigues (http://www.jsfromhell.com)","gettimeofday"],"improved by":["Kevin van Zonneveld (http://kvz.io)","MeEtc (http://yass.meetcweb.com)","Brad Touesnard","Tim Wiel","Bryan Elliott","David Randall","Theriault (https://github.com/Theriault)","Theriault (https://github.com/Theriault)","Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)","Thomas Beaucourt (http://www.webapp.fr)","JT","Theriault (https://github.com/Theriault)","Rafał Kukawski (http://blog.kukawski.pl)","Theriault (https://github.com/Theriault)"],"parts by":["Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","majak","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","omid (http://locutusjs.io/php/380:380#comment_137122)","Chris (http://www.devotis.nl/)"],"input by":["Brett Zamir (http://brett-zamir.me)","majak","Alex","Martin","Alex Wilson","Haravikk"]},"notes":["Uses global: locutus to store the default timezone\nAlthough the function potentially allows timezone info\n(see notes), it currently does not set\nper a timezone specified by date_default_timezone_set(). Implementers might use\n$locutus.currentTimezoneOffset and\n$locutus.currentTimezoneDST set by that function\nin order to adjust the dates in this function\n(or our other date functions!) accordingly"],"layout":"function","title":"php'sdate in JavaScript","function":"date","category":"datetime","language":"php","alias":["/functions/php/date/","/functions/datetime/date/","/php/date/","/functions/date/"],"_content":"module.exports = function date (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/date/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // original by: gettimeofday\n  //    parts by: Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: MeEtc (http://yass.meetcweb.com)\n  // improved by: Brad Touesnard\n  // improved by: Tim Wiel\n  // improved by: Bryan Elliott\n  // improved by: David Randall\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Thomas Beaucourt (http://www.webapp.fr)\n  // improved by: JT\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: majak\n  //    input by: Alex\n  //    input by: Martin\n  //    input by: Alex Wilson\n  //    input by: Haravikk\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: majak\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: omid (http://locutusjs.io/php/380:380#comment_137122)\n  // bugfixed by: Chris (http://www.devotis.nl/)\n  //      note 1: Uses global: locutus to store the default timezone\n  //      note 1: Although the function potentially allows timezone info\n  //      note 1: (see notes), it currently does not set\n  //      note 1: per a timezone specified by date_default_timezone_set(). Implementers might use\n  //      note 1: $locutus.currentTimezoneOffset and\n  //      note 1: $locutus.currentTimezoneDST set by that function\n  //      note 1: in order to adjust the dates in this function\n  //      note 1: (or our other date functions!) accordingly\n  //   example 1: date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)\n  //   returns 1: '07:09:40 m is month'\n  //   example 2: date('F j, Y, g:i a', 1062462400)\n  //   returns 2: 'September 2, 2003, 12:26 am'\n  //   example 3: date('Y W o', 1062462400)\n  //   returns 3: '2003 36 2003'\n  //   example 4: var $x = date('Y m d', (new Date()).getTime() / 1000)\n  //   example 4: $x = $x + ''\n  //   example 4: var $result = $x.length // 2009 01 09\n  //   returns 4: 10\n  //   example 5: date('W', 1104534000)\n  //   returns 5: '52'\n  //   example 6: date('B t', 1104534000)\n  //   returns 6: '999 31'\n  //   example 7: date('W U', 1293750000.82); // 2010-12-31\n  //   returns 7: '52 1293750000'\n  //   example 8: date('W', 1293836400); // 2011-01-01\n  //   returns 8: '52'\n  //   example 9: date('W Y-m-d', 1293974054); // 2011-01-02\n  //   returns 9: '52 2011-01-02'\n  //        test: skip-1 skip-2 skip-5\n\n  var jsdate, f\n  // Keep this here (works, but for code commented-out below for file size reasons)\n  // var tal= [];\n  var txtWords = [\n    'Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur',\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n  // trailing backslash -> (dropped)\n  // a backslash followed by any character (including backslash) -> the character\n  // empty string -> empty string\n  var formatChr = /\\\\?(.?)/gi\n  var formatChrCb = function (t, s) {\n    return f[t] ? f[t]() : s\n  }\n  var _pad = function (n, c) {\n    n = String(n)\n    while (n.length < c) {\n      n = '0' + n\n    }\n    return n\n  }\n  f = {\n    // Day\n    d: function () {\n      // Day of month w/leading 0; 01..31\n      return _pad(f.j(), 2)\n    },\n    D: function () {\n      // Shorthand day name; Mon...Sun\n      return f.l()\n        .slice(0, 3)\n    },\n    j: function () {\n      // Day of month; 1..31\n      return jsdate.getDate()\n    },\n    l: function () {\n      // Full day name; Monday...Sunday\n      return txtWords[f.w()] + 'day'\n    },\n    N: function () {\n      // ISO-8601 day of week; 1[Mon]..7[Sun]\n      return f.w() || 7\n    },\n    S: function () {\n      // Ordinal suffix for day of month; st, nd, rd, th\n      var j = f.j()\n      var i = j % 10\n      if (i <= 3 && parseInt((j % 100) / 10, 10) === 1) {\n        i = 0\n      }\n      return ['st', 'nd', 'rd'][i - 1] || 'th'\n    },\n    w: function () {\n      // Day of week; 0[Sun]..6[Sat]\n      return jsdate.getDay()\n    },\n    z: function () {\n      // Day of year; 0..365\n      var a = new Date(f.Y(), f.n() - 1, f.j())\n      var b = new Date(f.Y(), 0, 1)\n      return Math.round((a - b) / 864e5)\n    },\n\n    // Week\n    W: function () {\n      // ISO-8601 week number\n      var a = new Date(f.Y(), f.n() - 1, f.j() - f.N() + 3)\n      var b = new Date(a.getFullYear(), 0, 4)\n      return _pad(1 + Math.round((a - b) / 864e5 / 7), 2)\n    },\n\n    // Month\n    F: function () {\n      // Full month name; January...December\n      return txtWords[6 + f.n()]\n    },\n    m: function () {\n      // Month w/leading 0; 01...12\n      return _pad(f.n(), 2)\n    },\n    M: function () {\n      // Shorthand month name; Jan...Dec\n      return f.F()\n        .slice(0, 3)\n    },\n    n: function () {\n      // Month; 1...12\n      return jsdate.getMonth() + 1\n    },\n    t: function () {\n      // Days in month; 28...31\n      return (new Date(f.Y(), f.n(), 0))\n        .getDate()\n    },\n\n    // Year\n    L: function () {\n      // Is leap year?; 0 or 1\n      var j = f.Y()\n      return j % 4 === 0 & j % 100 !== 0 | j % 400 === 0\n    },\n    o: function () {\n      // ISO-8601 year\n      var n = f.n()\n      var W = f.W()\n      var Y = f.Y()\n      return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0)\n    },\n    Y: function () {\n      // Full year; e.g. 1980...2010\n      return jsdate.getFullYear()\n    },\n    y: function () {\n      // Last two digits of year; 00...99\n      return f.Y()\n        .toString()\n        .slice(-2)\n    },\n\n    // Time\n    a: function () {\n      // am or pm\n      return jsdate.getHours() > 11 ? 'pm' : 'am'\n    },\n    A: function () {\n      // AM or PM\n      return f.a()\n        .toUpperCase()\n    },\n    B: function () {\n      // Swatch Internet time; 000..999\n      var H = jsdate.getUTCHours() * 36e2\n      // Hours\n      var i = jsdate.getUTCMinutes() * 60\n      // Minutes\n      // Seconds\n      var s = jsdate.getUTCSeconds()\n      return _pad(Math.floor((H + i + s + 36e2) / 86.4) % 1e3, 3)\n    },\n    g: function () {\n      // 12-Hours; 1..12\n      return f.G() % 12 || 12\n    },\n    G: function () {\n      // 24-Hours; 0..23\n      return jsdate.getHours()\n    },\n    h: function () {\n      // 12-Hours w/leading 0; 01..12\n      return _pad(f.g(), 2)\n    },\n    H: function () {\n      // 24-Hours w/leading 0; 00..23\n      return _pad(f.G(), 2)\n    },\n    i: function () {\n      // Minutes w/leading 0; 00..59\n      return _pad(jsdate.getMinutes(), 2)\n    },\n    s: function () {\n      // Seconds w/leading 0; 00..59\n      return _pad(jsdate.getSeconds(), 2)\n    },\n    u: function () {\n      // Microseconds; 000000-999000\n      return _pad(jsdate.getMilliseconds() * 1000, 6)\n    },\n\n    // Timezone\n    e: function () {\n      // Timezone identifier; e.g. Atlantic/Azores, ...\n      // The following works, but requires inclusion of the very large\n      // timezone_abbreviations_list() function.\n      /*              return that.date_default_timezone_get();\n       */\n      var msg = 'Not supported (see source code of date() for timezone on how to add support)'\n      throw new Error(msg)\n    },\n    I: function () {\n      // DST observed?; 0 or 1\n      // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n      // If they are not equal, then DST is observed.\n      var a = new Date(f.Y(), 0)\n      // Jan 1\n      var c = Date.UTC(f.Y(), 0)\n      // Jan 1 UTC\n      var b = new Date(f.Y(), 6)\n      // Jul 1\n      // Jul 1 UTC\n      var d = Date.UTC(f.Y(), 6)\n      return ((a - c) !== (b - d)) ? 1 : 0\n    },\n    O: function () {\n      // Difference to GMT in hour format; e.g. +0200\n      var tzo = jsdate.getTimezoneOffset()\n      var a = Math.abs(tzo)\n      return (tzo > 0 ? '-' : '+') + _pad(Math.floor(a / 60) * 100 + a % 60, 4)\n    },\n    P: function () {\n      // Difference to GMT w/colon; e.g. +02:00\n      var O = f.O()\n      return (O.substr(0, 3) + ':' + O.substr(3, 2))\n    },\n    T: function () {\n      // The following works, but requires inclusion of the very\n      // large timezone_abbreviations_list() function.\n      /*              var abbr, i, os, _default;\n      if (!tal.length) {\n        tal = that.timezone_abbreviations_list();\n      }\n      if ($locutus && $locutus.default_timezone) {\n        _default = $locutus.default_timezone;\n        for (abbr in tal) {\n          for (i = 0; i < tal[abbr].length; i++) {\n            if (tal[abbr][i].timezone_id === _default) {\n              return abbr.toUpperCase();\n            }\n          }\n        }\n      }\n      for (abbr in tal) {\n        for (i = 0; i < tal[abbr].length; i++) {\n          os = -jsdate.getTimezoneOffset() * 60;\n          if (tal[abbr][i].offset === os) {\n            return abbr.toUpperCase();\n          }\n        }\n      }\n      */\n      return 'UTC'\n    },\n    Z: function () {\n      // Timezone offset in seconds (-43200...50400)\n      return -jsdate.getTimezoneOffset() * 60\n    },\n\n    // Full Date/Time\n    c: function () {\n      // ISO-8601 date.\n      return 'Y-m-d\\\\TH:i:sP'.replace(formatChr, formatChrCb)\n    },\n    r: function () {\n      // RFC 2822\n      return 'D, d M Y H:i:s O'.replace(formatChr, formatChrCb)\n    },\n    U: function () {\n      // Seconds since UNIX epoch\n      return jsdate / 1000 | 0\n    }\n  }\n\n  var _date = function (format, timestamp) {\n    jsdate = (timestamp === undefined ? new Date() // Not provided\n      : (timestamp instanceof Date) ? new Date(timestamp) // JS Date()\n      : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n    )\n    return format.replace(formatChr, formatChrCb)\n  }\n\n  return _date(format, timestamp)\n}\n","source":"php/datetime/date.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'date(''H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h'', 1062402400)'\n  - 'date(''F j, Y, g:i a'', 1062462400)'\n  - 'date(''Y W o'', 1062462400)'\n  - |-\n    var $x = date('Y m d', (new Date()).getTime() / 1000)\n    $x = $x + ''\n    var $result = $x.length // 2009 01 09\n  - 'date(''W'', 1104534000)'\n  - 'date(''B t'', 1104534000)'\n  - 'date(''W U'', 1293750000.82); // 2010-12-31'\n  - 'date(''W'', 1293836400); // 2011-01-01'\n  - 'date(''W Y-m-d'', 1293974054); // 2011-01-02'\nestarget: es5\nreturns:\n  - '''07:09:40 m is month'''\n  - '''September 2, 2003, 12:26 am'''\n  - '''2003 36 2003'''\n  - '10'\n  - '''52'''\n  - '''999 31'''\n  - '''52 1293750000'''\n  - '''52'''\n  - '''52 2011-01-02'''\ndependencies: []\nauthors:\n  original by:\n    - 'Carlos R. L. Rodrigues (http://www.jsfromhell.com)'\n    - gettimeofday\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'MeEtc (http://yass.meetcweb.com)'\n    - Brad Touesnard\n    - Tim Wiel\n    - Bryan Elliott\n    - David Randall\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Thomas Beaucourt (http://www.webapp.fr)'\n    - JT\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n    - 'Theriault (https://github.com/Theriault)'\n  parts by:\n    - 'Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - majak\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'omid (http://locutusjs.io/php/380:380#comment_137122)'\n    - 'Chris (http://www.devotis.nl/)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - majak\n    - Alex\n    - Martin\n    - Alex Wilson\n    - Haravikk\nnotes:\n  - >-\n    Uses global: locutus to store the default timezone\n\n    Although the function potentially allows timezone info\n\n    (see notes), it currently does not set\n\n    per a timezone specified by date_default_timezone_set(). Implementers might\n    use\n\n    $locutus.currentTimezoneOffset and\n\n    $locutus.currentTimezoneDST set by that function\n\n    in order to adjust the dates in this function\n\n    (or our other date functions!) accordingly\nlayout: function\ntitle: php'sdate in JavaScript\nfunction: date\ncategory: datetime\nlanguage: php\npermalink: php/datetime/date/\nalias:\n  - /functions/php/date/\n  - /functions/datetime/date/\n  - /php/date/\n  - /functions/date/\n---\nmodule.exports = function date (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/date/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // original by: gettimeofday\n  //    parts by: Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: MeEtc (http://yass.meetcweb.com)\n  // improved by: Brad Touesnard\n  // improved by: Tim Wiel\n  // improved by: Bryan Elliott\n  // improved by: David Randall\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Thomas Beaucourt (http://www.webapp.fr)\n  // improved by: JT\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: majak\n  //    input by: Alex\n  //    input by: Martin\n  //    input by: Alex Wilson\n  //    input by: Haravikk\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: majak\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: omid (http://locutusjs.io/php/380:380#comment_137122)\n  // bugfixed by: Chris (http://www.devotis.nl/)\n  //      note 1: Uses global: locutus to store the default timezone\n  //      note 1: Although the function potentially allows timezone info\n  //      note 1: (see notes), it currently does not set\n  //      note 1: per a timezone specified by date_default_timezone_set(). Implementers might use\n  //      note 1: $locutus.currentTimezoneOffset and\n  //      note 1: $locutus.currentTimezoneDST set by that function\n  //      note 1: in order to adjust the dates in this function\n  //      note 1: (or our other date functions!) accordingly\n  //   example 1: date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)\n  //   returns 1: '07:09:40 m is month'\n  //   example 2: date('F j, Y, g:i a', 1062462400)\n  //   returns 2: 'September 2, 2003, 12:26 am'\n  //   example 3: date('Y W o', 1062462400)\n  //   returns 3: '2003 36 2003'\n  //   example 4: var $x = date('Y m d', (new Date()).getTime() / 1000)\n  //   example 4: $x = $x + ''\n  //   example 4: var $result = $x.length // 2009 01 09\n  //   returns 4: 10\n  //   example 5: date('W', 1104534000)\n  //   returns 5: '52'\n  //   example 6: date('B t', 1104534000)\n  //   returns 6: '999 31'\n  //   example 7: date('W U', 1293750000.82); // 2010-12-31\n  //   returns 7: '52 1293750000'\n  //   example 8: date('W', 1293836400); // 2011-01-01\n  //   returns 8: '52'\n  //   example 9: date('W Y-m-d', 1293974054); // 2011-01-02\n  //   returns 9: '52 2011-01-02'\n  //        test: skip-1 skip-2 skip-5\n\n  var jsdate, f\n  // Keep this here (works, but for code commented-out below for file size reasons)\n  // var tal= [];\n  var txtWords = [\n    'Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur',\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n  // trailing backslash -> (dropped)\n  // a backslash followed by any character (including backslash) -> the character\n  // empty string -> empty string\n  var formatChr = /\\\\?(.?)/gi\n  var formatChrCb = function (t, s) {\n    return f[t] ? f[t]() : s\n  }\n  var _pad = function (n, c) {\n    n = String(n)\n    while (n.length < c) {\n      n = '0' + n\n    }\n    return n\n  }\n  f = {\n    // Day\n    d: function () {\n      // Day of month w/leading 0; 01..31\n      return _pad(f.j(), 2)\n    },\n    D: function () {\n      // Shorthand day name; Mon...Sun\n      return f.l()\n        .slice(0, 3)\n    },\n    j: function () {\n      // Day of month; 1..31\n      return jsdate.getDate()\n    },\n    l: function () {\n      // Full day name; Monday...Sunday\n      return txtWords[f.w()] + 'day'\n    },\n    N: function () {\n      // ISO-8601 day of week; 1[Mon]..7[Sun]\n      return f.w() || 7\n    },\n    S: function () {\n      // Ordinal suffix for day of month; st, nd, rd, th\n      var j = f.j()\n      var i = j % 10\n      if (i <= 3 && parseInt((j % 100) / 10, 10) === 1) {\n        i = 0\n      }\n      return ['st', 'nd', 'rd'][i - 1] || 'th'\n    },\n    w: function () {\n      // Day of week; 0[Sun]..6[Sat]\n      return jsdate.getDay()\n    },\n    z: function () {\n      // Day of year; 0..365\n      var a = new Date(f.Y(), f.n() - 1, f.j())\n      var b = new Date(f.Y(), 0, 1)\n      return Math.round((a - b) / 864e5)\n    },\n\n    // Week\n    W: function () {\n      // ISO-8601 week number\n      var a = new Date(f.Y(), f.n() - 1, f.j() - f.N() + 3)\n      var b = new Date(a.getFullYear(), 0, 4)\n      return _pad(1 + Math.round((a - b) / 864e5 / 7), 2)\n    },\n\n    // Month\n    F: function () {\n      // Full month name; January...December\n      return txtWords[6 + f.n()]\n    },\n    m: function () {\n      // Month w/leading 0; 01...12\n      return _pad(f.n(), 2)\n    },\n    M: function () {\n      // Shorthand month name; Jan...Dec\n      return f.F()\n        .slice(0, 3)\n    },\n    n: function () {\n      // Month; 1...12\n      return jsdate.getMonth() + 1\n    },\n    t: function () {\n      // Days in month; 28...31\n      return (new Date(f.Y(), f.n(), 0))\n        .getDate()\n    },\n\n    // Year\n    L: function () {\n      // Is leap year?; 0 or 1\n      var j = f.Y()\n      return j % 4 === 0 & j % 100 !== 0 | j % 400 === 0\n    },\n    o: function () {\n      // ISO-8601 year\n      var n = f.n()\n      var W = f.W()\n      var Y = f.Y()\n      return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0)\n    },\n    Y: function () {\n      // Full year; e.g. 1980...2010\n      return jsdate.getFullYear()\n    },\n    y: function () {\n      // Last two digits of year; 00...99\n      return f.Y()\n        .toString()\n        .slice(-2)\n    },\n\n    // Time\n    a: function () {\n      // am or pm\n      return jsdate.getHours() > 11 ? 'pm' : 'am'\n    },\n    A: function () {\n      // AM or PM\n      return f.a()\n        .toUpperCase()\n    },\n    B: function () {\n      // Swatch Internet time; 000..999\n      var H = jsdate.getUTCHours() * 36e2\n      // Hours\n      var i = jsdate.getUTCMinutes() * 60\n      // Minutes\n      // Seconds\n      var s = jsdate.getUTCSeconds()\n      return _pad(Math.floor((H + i + s + 36e2) / 86.4) % 1e3, 3)\n    },\n    g: function () {\n      // 12-Hours; 1..12\n      return f.G() % 12 || 12\n    },\n    G: function () {\n      // 24-Hours; 0..23\n      return jsdate.getHours()\n    },\n    h: function () {\n      // 12-Hours w/leading 0; 01..12\n      return _pad(f.g(), 2)\n    },\n    H: function () {\n      // 24-Hours w/leading 0; 00..23\n      return _pad(f.G(), 2)\n    },\n    i: function () {\n      // Minutes w/leading 0; 00..59\n      return _pad(jsdate.getMinutes(), 2)\n    },\n    s: function () {\n      // Seconds w/leading 0; 00..59\n      return _pad(jsdate.getSeconds(), 2)\n    },\n    u: function () {\n      // Microseconds; 000000-999000\n      return _pad(jsdate.getMilliseconds() * 1000, 6)\n    },\n\n    // Timezone\n    e: function () {\n      // Timezone identifier; e.g. Atlantic/Azores, ...\n      // The following works, but requires inclusion of the very large\n      // timezone_abbreviations_list() function.\n      /*              return that.date_default_timezone_get();\n       */\n      var msg = 'Not supported (see source code of date() for timezone on how to add support)'\n      throw new Error(msg)\n    },\n    I: function () {\n      // DST observed?; 0 or 1\n      // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n      // If they are not equal, then DST is observed.\n      var a = new Date(f.Y(), 0)\n      // Jan 1\n      var c = Date.UTC(f.Y(), 0)\n      // Jan 1 UTC\n      var b = new Date(f.Y(), 6)\n      // Jul 1\n      // Jul 1 UTC\n      var d = Date.UTC(f.Y(), 6)\n      return ((a - c) !== (b - d)) ? 1 : 0\n    },\n    O: function () {\n      // Difference to GMT in hour format; e.g. +0200\n      var tzo = jsdate.getTimezoneOffset()\n      var a = Math.abs(tzo)\n      return (tzo > 0 ? '-' : '+') + _pad(Math.floor(a / 60) * 100 + a % 60, 4)\n    },\n    P: function () {\n      // Difference to GMT w/colon; e.g. +02:00\n      var O = f.O()\n      return (O.substr(0, 3) + ':' + O.substr(3, 2))\n    },\n    T: function () {\n      // The following works, but requires inclusion of the very\n      // large timezone_abbreviations_list() function.\n      /*              var abbr, i, os, _default;\n      if (!tal.length) {\n        tal = that.timezone_abbreviations_list();\n      }\n      if ($locutus && $locutus.default_timezone) {\n        _default = $locutus.default_timezone;\n        for (abbr in tal) {\n          for (i = 0; i < tal[abbr].length; i++) {\n            if (tal[abbr][i].timezone_id === _default) {\n              return abbr.toUpperCase();\n            }\n          }\n        }\n      }\n      for (abbr in tal) {\n        for (i = 0; i < tal[abbr].length; i++) {\n          os = -jsdate.getTimezoneOffset() * 60;\n          if (tal[abbr][i].offset === os) {\n            return abbr.toUpperCase();\n          }\n        }\n      }\n      */\n      return 'UTC'\n    },\n    Z: function () {\n      // Timezone offset in seconds (-43200...50400)\n      return -jsdate.getTimezoneOffset() * 60\n    },\n\n    // Full Date/Time\n    c: function () {\n      // ISO-8601 date.\n      return 'Y-m-d\\\\TH:i:sP'.replace(formatChr, formatChrCb)\n    },\n    r: function () {\n      // RFC 2822\n      return 'D, d M Y H:i:s O'.replace(formatChr, formatChrCb)\n    },\n    U: function () {\n      // Seconds since UNIX epoch\n      return jsdate / 1000 | 0\n    }\n  }\n\n  var _date = function (format, timestamp) {\n    jsdate = (timestamp === undefined ? new Date() // Not provided\n      : (timestamp instanceof Date) ? new Date(timestamp) // JS Date()\n      : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n    )\n    return format.replace(formatChr, formatChrCb)\n  }\n\n  return _date(format, timestamp)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/date/index.html","comments":1,"_id":"cinoeja00002tou9ym32kasfl","content":"module.exports = function date (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/date/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // original by: gettimeofday\n  //    parts by: Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: MeEtc (http://yass.meetcweb.com)\n  // improved by: Brad Touesnard\n  // improved by: Tim Wiel\n  // improved by: Bryan Elliott\n  // improved by: David Randall\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Thomas Beaucourt (http://www.webapp.fr)\n  // improved by: JT\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: majak\n  //    input by: Alex\n  //    input by: Martin\n  //    input by: Alex Wilson\n  //    input by: Haravikk\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: majak\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: omid (http://locutusjs.io/php/380:380#comment_137122)\n  // bugfixed by: Chris (http://www.devotis.nl/)\n  //      note 1: Uses global: locutus to store the default timezone\n  //      note 1: Although the function potentially allows timezone info\n  //      note 1: (see notes), it currently does not set\n  //      note 1: per a timezone specified by date_default_timezone_set(). Implementers might use\n  //      note 1: $locutus.currentTimezoneOffset and\n  //      note 1: $locutus.currentTimezoneDST set by that function\n  //      note 1: in order to adjust the dates in this function\n  //      note 1: (or our other date functions!) accordingly\n  //   example 1: date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)\n  //   returns 1: '07:09:40 m is month'\n  //   example 2: date('F j, Y, g:i a', 1062462400)\n  //   returns 2: 'September 2, 2003, 12:26 am'\n  //   example 3: date('Y W o', 1062462400)\n  //   returns 3: '2003 36 2003'\n  //   example 4: var $x = date('Y m d', (new Date()).getTime() / 1000)\n  //   example 4: $x = $x + ''\n  //   example 4: var $result = $x.length // 2009 01 09\n  //   returns 4: 10\n  //   example 5: date('W', 1104534000)\n  //   returns 5: '52'\n  //   example 6: date('B t', 1104534000)\n  //   returns 6: '999 31'\n  //   example 7: date('W U', 1293750000.82); // 2010-12-31\n  //   returns 7: '52 1293750000'\n  //   example 8: date('W', 1293836400); // 2011-01-01\n  //   returns 8: '52'\n  //   example 9: date('W Y-m-d', 1293974054); // 2011-01-02\n  //   returns 9: '52 2011-01-02'\n  //        test: skip-1 skip-2 skip-5\n\n  var jsdate, f\n  // Keep this here (works, but for code commented-out below for file size reasons)\n  // var tal= [];\n  var txtWords = [\n    'Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur',\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n  // trailing backslash -> (dropped)\n  // a backslash followed by any character (including backslash) -> the character\n  // empty string -> empty string\n  var formatChr = /\\\\?(.?)/gi\n  var formatChrCb = function (t, s) {\n    return f[t] ? f[t]() : s\n  }\n  var _pad = function (n, c) {\n    n = String(n)\n    while (n.length < c) {\n      n = '0' + n\n    }\n    return n\n  }\n  f = {\n    // Day\n    d: function () {\n      // Day of month w/leading 0; 01..31\n      return _pad(f.j(), 2)\n    },\n    D: function () {\n      // Shorthand day name; Mon...Sun\n      return f.l()\n        .slice(0, 3)\n    },\n    j: function () {\n      // Day of month; 1..31\n      return jsdate.getDate()\n    },\n    l: function () {\n      // Full day name; Monday...Sunday\n      return txtWords[f.w()] + 'day'\n    },\n    N: function () {\n      // ISO-8601 day of week; 1[Mon]..7[Sun]\n      return f.w() || 7\n    },\n    S: function () {\n      // Ordinal suffix for day of month; st, nd, rd, th\n      var j = f.j()\n      var i = j % 10\n      if (i <= 0=\"\" 1=\"\" 3=\"\" 4=\"==\" 9=\"\" 12=\"\" 100=\"\" 400=\"==\" &&=\"\" parseint((j=\"\" %=\"\" 100)=\"\" 10,=\"\" 10)=\"==\" 1)=\"\" {=\"\" i=\"0\" }=\"\" return=\"\" ['st',=\"\" 'nd',=\"\" 'rd'][i=\"\" -=\"\" 1]=\"\" ||=\"\" 'th'=\"\" },=\"\" w:=\"\" function=\"\" ()=\"\" day=\"\" of=\"\" week;=\"\" 0[sun]..6[sat]=\"\" jsdate.getday()=\"\" z:=\"\" year;=\"\" 0..365=\"\" var=\"\" a=\"new\" date(f.y(),=\"\" f.n()=\"\" 1,=\"\" f.j())=\"\" b=\"new\" 0,=\"\" math.round((a=\"\" b)=\"\" 864e5)=\"\" week=\"\" iso-8601=\"\" number=\"\" f.j()=\"\" +=\"\" 3)=\"\" date(a.getfullyear(),=\"\" 4)=\"\" _pad(1=\"\" 864e5=\"\" 7),=\"\" 2)=\"\" month=\"\" f:=\"\" full=\"\" name;=\"\" january...december=\"\" txtwords[6=\"\" f.n()]=\"\" m:=\"\" w=\"\" leading=\"\" 0;=\"\" 01...12=\"\" _pad(f.n(),=\"\" shorthand=\"\" jan...dec=\"\" f.f()=\"\" .slice(0,=\"\" n:=\"\" month;=\"\" 1...12=\"\" jsdate.getmonth()=\"\" t:=\"\" days=\"\" in=\"\" 28...31=\"\" (new=\"\" f.n(),=\"\" 0))=\"\" .getdate()=\"\" year=\"\" l:=\"\" is=\"\" leap=\"\" year?;=\"\" or=\"\" j=\"f.Y()\" &=\"\" !=\"=\" |=\"\" o:=\"\" n=\"f.n()\" y=\"f.Y()\" (n=\"==\" <=\"\" ?=\"\" :=\"\"> 9 ? -1 : 0)\n    },\n    Y: function () {\n      // Full year; e.g. 1980...2010\n      return jsdate.getFullYear()\n    },\n    y: function () {\n      // Last two digits of year; 00...99\n      return f.Y()\n        .toString()\n        .slice(-2)\n    },\n\n    // Time\n    a: function () {\n      // am or pm\n      return jsdate.getHours() > 11 ? 'pm' : 'am'\n    },\n    A: function () {\n      // AM or PM\n      return f.a()\n        .toUpperCase()\n    },\n    B: function () {\n      // Swatch Internet time; 000..999\n      var H = jsdate.getUTCHours() * 36e2\n      // Hours\n      var i = jsdate.getUTCMinutes() * 60\n      // Minutes\n      // Seconds\n      var s = jsdate.getUTCSeconds()\n      return _pad(Math.floor((H + i + s + 36e2) / 86.4) % 1e3, 3)\n    },\n    g: function () {\n      // 12-Hours; 1..12\n      return f.G() % 12 || 12\n    },\n    G: function () {\n      // 24-Hours; 0..23\n      return jsdate.getHours()\n    },\n    h: function () {\n      // 12-Hours w/leading 0; 01..12\n      return _pad(f.g(), 2)\n    },\n    H: function () {\n      // 24-Hours w/leading 0; 00..23\n      return _pad(f.G(), 2)\n    },\n    i: function () {\n      // Minutes w/leading 0; 00..59\n      return _pad(jsdate.getMinutes(), 2)\n    },\n    s: function () {\n      // Seconds w/leading 0; 00..59\n      return _pad(jsdate.getSeconds(), 2)\n    },\n    u: function () {\n      // Microseconds; 000000-999000\n      return _pad(jsdate.getMilliseconds() * 1000, 6)\n    },\n\n    // Timezone\n    e: function () {\n      // Timezone identifier; e.g. Atlantic/Azores, ...\n      // The following works, but requires inclusion of the very large\n      // timezone_abbreviations_list() function.\n      /*              return that.date_default_timezone_get();\n       */\n      var msg = 'Not supported (see source code of date() for timezone on how to add support)'\n      throw new Error(msg)\n    },\n    I: function () {\n      // DST observed?; 0 or 1\n      // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n      // If they are not equal, then DST is observed.\n      var a = new Date(f.Y(), 0)\n      // Jan 1\n      var c = Date.UTC(f.Y(), 0)\n      // Jan 1 UTC\n      var b = new Date(f.Y(), 6)\n      // Jul 1\n      // Jul 1 UTC\n      var d = Date.UTC(f.Y(), 6)\n      return ((a - c) !== (b - d)) ? 1 : 0\n    },\n    O: function () {\n      // Difference to GMT in hour format; e.g. +0200\n      var tzo = jsdate.getTimezoneOffset()\n      var a = Math.abs(tzo)\n      return (tzo > 0 ? '-' : '+') + _pad(Math.floor(a / 60) * 100 + a % 60, 4)\n    },\n    P: function () {\n      // Difference to GMT w/colon; e.g. +02:00\n      var O = f.O()\n      return (O.substr(0, 3) + ':' + O.substr(3, 2))\n    },\n    T: function () {\n      // The following works, but requires inclusion of the very\n      // large timezone_abbreviations_list() function.\n      /*              var abbr, i, os, _default;\n      if (!tal.length) {\n        tal = that.timezone_abbreviations_list();\n      }\n      if ($locutus && $locutus.default_timezone) {\n        _default = $locutus.default_timezone;\n        for (abbr in tal) {\n          for (i = 0; i < tal[abbr].length; i++) {\n            if (tal[abbr][i].timezone_id === _default) {\n              return abbr.toUpperCase();\n            }\n          }\n        }\n      }\n      for (abbr in tal) {\n        for (i = 0; i < tal[abbr].length; i++) {\n          os = -jsdate.getTimezoneOffset() * 60;\n          if (tal[abbr][i].offset === os) {\n            return abbr.toUpperCase();\n          }\n        }\n      }\n      */\n      return 'UTC'\n    },\n    Z: function () {\n      // Timezone offset in seconds (-43200...50400)\n      return -jsdate.getTimezoneOffset() * 60\n    },\n\n    // Full Date/Time\n    c: function () {\n      // ISO-8601 date.\n      return 'Y-m-d\\\\TH:i:sP'.replace(formatChr, formatChrCb)\n    },\n    r: function () {\n      // RFC 2822\n      return 'D, d M Y H:i:s O'.replace(formatChr, formatChrCb)\n    },\n    U: function () {\n      // Seconds since UNIX epoch\n      return jsdate / 1000 | 0\n    }\n  }\n\n  var _date = function (format, timestamp) {\n    jsdate = (timestamp === undefined ? new Date() // Not provided\n      : (timestamp instanceof Date) ? new Date(timestamp) // JS Date()\n      : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n    )\n    return format.replace(formatChr, formatChrCb)\n  }\n\n  return _date(format, timestamp)\n}\n</=>","excerpt":"","more":"module.exports = function date (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/date/\n  // original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  // original by: gettimeofday\n  //    parts by: Peter-Paul Koch (http://www.quirksmode.org/js/beat.html)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: MeEtc (http://yass.meetcweb.com)\n  // improved by: Brad Touesnard\n  // improved by: Tim Wiel\n  // improved by: Bryan Elliott\n  // improved by: David Randall\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Thomas Beaucourt (http://www.webapp.fr)\n  // improved by: JT\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Theriault (https://github.com/Theriault)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: majak\n  //    input by: Alex\n  //    input by: Martin\n  //    input by: Alex Wilson\n  //    input by: Haravikk\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: majak\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: omid (http://locutusjs.io/php/380:380#comment_137122)\n  // bugfixed by: Chris (http://www.devotis.nl/)\n  //      note 1: Uses global: locutus to store the default timezone\n  //      note 1: Although the function potentially allows timezone info\n  //      note 1: (see notes), it currently does not set\n  //      note 1: per a timezone specified by date_default_timezone_set(). Implementers might use\n  //      note 1: $locutus.currentTimezoneOffset and\n  //      note 1: $locutus.currentTimezoneDST set by that function\n  //      note 1: in order to adjust the dates in this function\n  //      note 1: (or our other date functions!) accordingly\n  //   example 1: date('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400)\n  //   returns 1: '07:09:40 m is month'\n  //   example 2: date('F j, Y, g:i a', 1062462400)\n  //   returns 2: 'September 2, 2003, 12:26 am'\n  //   example 3: date('Y W o', 1062462400)\n  //   returns 3: '2003 36 2003'\n  //   example 4: var $x = date('Y m d', (new Date()).getTime() / 1000)\n  //   example 4: $x = $x + ''\n  //   example 4: var $result = $x.length // 2009 01 09\n  //   returns 4: 10\n  //   example 5: date('W', 1104534000)\n  //   returns 5: '52'\n  //   example 6: date('B t', 1104534000)\n  //   returns 6: '999 31'\n  //   example 7: date('W U', 1293750000.82); // 2010-12-31\n  //   returns 7: '52 1293750000'\n  //   example 8: date('W', 1293836400); // 2011-01-01\n  //   returns 8: '52'\n  //   example 9: date('W Y-m-d', 1293974054); // 2011-01-02\n  //   returns 9: '52 2011-01-02'\n  //        test: skip-1 skip-2 skip-5\n\n  var jsdate, f\n  // Keep this here (works, but for code commented-out below for file size reasons)\n  // var tal= [];\n  var txtWords = [\n    'Sun', 'Mon', 'Tues', 'Wednes', 'Thurs', 'Fri', 'Satur',\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n  // trailing backslash -> (dropped)\n  // a backslash followed by any character (including backslash) -> the character\n  // empty string -> empty string\n  var formatChr = /\\\\?(.?)/gi\n  var formatChrCb = function (t, s) {\n    return f[t] ? f[t]() : s\n  }\n  var _pad = function (n, c) {\n    n = String(n)\n    while (n.length < c) {\n      n = '0' + n\n    }\n    return n\n  }\n  f = {\n    // Day\n    d: function () {\n      // Day of month w/leading 0; 01..31\n      return _pad(f.j(), 2)\n    },\n    D: function () {\n      // Shorthand day name; Mon...Sun\n      return f.l()\n        .slice(0, 3)\n    },\n    j: function () {\n      // Day of month; 1..31\n      return jsdate.getDate()\n    },\n    l: function () {\n      // Full day name; Monday...Sunday\n      return txtWords[f.w()] + 'day'\n    },\n    N: function () {\n      // ISO-8601 day of week; 1[Mon]..7[Sun]\n      return f.w() || 7\n    },\n    S: function () {\n      // Ordinal suffix for day of month; st, nd, rd, th\n      var j = f.j()\n      var i = j % 10\n      if (i <= 3 && parseInt((j % 100) / 10, 10) === 1) {\n        i = 0\n      }\n      return ['st', 'nd', 'rd'][i - 1] || 'th'\n    },\n    w: function () {\n      // Day of week; 0[Sun]..6[Sat]\n      return jsdate.getDay()\n    },\n    z: function () {\n      // Day of year; 0..365\n      var a = new Date(f.Y(), f.n() - 1, f.j())\n      var b = new Date(f.Y(), 0, 1)\n      return Math.round((a - b) / 864e5)\n    },\n\n    // Week\n    W: function () {\n      // ISO-8601 week number\n      var a = new Date(f.Y(), f.n() - 1, f.j() - f.N() + 3)\n      var b = new Date(a.getFullYear(), 0, 4)\n      return _pad(1 + Math.round((a - b) / 864e5 / 7), 2)\n    },\n\n    // Month\n    F: function () {\n      // Full month name; January...December\n      return txtWords[6 + f.n()]\n    },\n    m: function () {\n      // Month w/leading 0; 01...12\n      return _pad(f.n(), 2)\n    },\n    M: function () {\n      // Shorthand month name; Jan...Dec\n      return f.F()\n        .slice(0, 3)\n    },\n    n: function () {\n      // Month; 1...12\n      return jsdate.getMonth() + 1\n    },\n    t: function () {\n      // Days in month; 28...31\n      return (new Date(f.Y(), f.n(), 0))\n        .getDate()\n    },\n\n    // Year\n    L: function () {\n      // Is leap year?; 0 or 1\n      var j = f.Y()\n      return j % 4 === 0 & j % 100 !== 0 | j % 400 === 0\n    },\n    o: function () {\n      // ISO-8601 year\n      var n = f.n()\n      var W = f.W()\n      var Y = f.Y()\n      return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0)\n    },\n    Y: function () {\n      // Full year; e.g. 1980...2010\n      return jsdate.getFullYear()\n    },\n    y: function () {\n      // Last two digits of year; 00...99\n      return f.Y()\n        .toString()\n        .slice(-2)\n    },\n\n    // Time\n    a: function () {\n      // am or pm\n      return jsdate.getHours() > 11 ? 'pm' : 'am'\n    },\n    A: function () {\n      // AM or PM\n      return f.a()\n        .toUpperCase()\n    },\n    B: function () {\n      // Swatch Internet time; 000..999\n      var H = jsdate.getUTCHours() * 36e2\n      // Hours\n      var i = jsdate.getUTCMinutes() * 60\n      // Minutes\n      // Seconds\n      var s = jsdate.getUTCSeconds()\n      return _pad(Math.floor((H + i + s + 36e2) / 86.4) % 1e3, 3)\n    },\n    g: function () {\n      // 12-Hours; 1..12\n      return f.G() % 12 || 12\n    },\n    G: function () {\n      // 24-Hours; 0..23\n      return jsdate.getHours()\n    },\n    h: function () {\n      // 12-Hours w/leading 0; 01..12\n      return _pad(f.g(), 2)\n    },\n    H: function () {\n      // 24-Hours w/leading 0; 00..23\n      return _pad(f.G(), 2)\n    },\n    i: function () {\n      // Minutes w/leading 0; 00..59\n      return _pad(jsdate.getMinutes(), 2)\n    },\n    s: function () {\n      // Seconds w/leading 0; 00..59\n      return _pad(jsdate.getSeconds(), 2)\n    },\n    u: function () {\n      // Microseconds; 000000-999000\n      return _pad(jsdate.getMilliseconds() * 1000, 6)\n    },\n\n    // Timezone\n    e: function () {\n      // Timezone identifier; e.g. Atlantic/Azores, ...\n      // The following works, but requires inclusion of the very large\n      // timezone_abbreviations_list() function.\n      /*              return that.date_default_timezone_get();\n       */\n      var msg = 'Not supported (see source code of date() for timezone on how to add support)'\n      throw new Error(msg)\n    },\n    I: function () {\n      // DST observed?; 0 or 1\n      // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n      // If they are not equal, then DST is observed.\n      var a = new Date(f.Y(), 0)\n      // Jan 1\n      var c = Date.UTC(f.Y(), 0)\n      // Jan 1 UTC\n      var b = new Date(f.Y(), 6)\n      // Jul 1\n      // Jul 1 UTC\n      var d = Date.UTC(f.Y(), 6)\n      return ((a - c) !== (b - d)) ? 1 : 0\n    },\n    O: function () {\n      // Difference to GMT in hour format; e.g. +0200\n      var tzo = jsdate.getTimezoneOffset()\n      var a = Math.abs(tzo)\n      return (tzo > 0 ? '-' : '+') + _pad(Math.floor(a / 60) * 100 + a % 60, 4)\n    },\n    P: function () {\n      // Difference to GMT w/colon; e.g. +02:00\n      var O = f.O()\n      return (O.substr(0, 3) + ':' + O.substr(3, 2))\n    },\n    T: function () {\n      // The following works, but requires inclusion of the very\n      // large timezone_abbreviations_list() function.\n      /*              var abbr, i, os, _default;\n      if (!tal.length) {\n        tal = that.timezone_abbreviations_list();\n      }\n      if ($locutus && $locutus.default_timezone) {\n        _default = $locutus.default_timezone;\n        for (abbr in tal) {\n          for (i = 0; i < tal[abbr].length; i++) {\n            if (tal[abbr][i].timezone_id === _default) {\n              return abbr.toUpperCase();\n            }\n          }\n        }\n      }\n      for (abbr in tal) {\n        for (i = 0; i < tal[abbr].length; i++) {\n          os = -jsdate.getTimezoneOffset() * 60;\n          if (tal[abbr][i].offset === os) {\n            return abbr.toUpperCase();\n          }\n        }\n      }\n      */\n      return 'UTC'\n    },\n    Z: function () {\n      // Timezone offset in seconds (-43200...50400)\n      return -jsdate.getTimezoneOffset() * 60\n    },\n\n    // Full Date/Time\n    c: function () {\n      // ISO-8601 date.\n      return 'Y-m-d\\\\TH:i:sP'.replace(formatChr, formatChrCb)\n    },\n    r: function () {\n      // RFC 2822\n      return 'D, d M Y H:i:s O'.replace(formatChr, formatChrCb)\n    },\n    U: function () {\n      // Seconds since UNIX epoch\n      return jsdate / 1000 | 0\n    }\n  }\n\n  var _date = function (format, timestamp) {\n    jsdate = (timestamp === undefined ? new Date() // Not provided\n      : (timestamp instanceof Date) ? new Date(timestamp) // JS Date()\n      : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n    )\n    return format.replace(formatChr, formatChrCb)\n  }\n\n  return _date(format, timestamp)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["date_parse('2006-12-12 10:00:00')"],"estarget":"es5","returns":["{year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction: 0, is_localtime: false}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sdate_parse in JavaScript","function":"date_parse","category":"datetime","language":"php","alias":["/functions/php/date_parse/","/functions/datetime/date_parse/","/php/date_parse/","/functions/date_parse/"],"_content":"module.exports = function date_parse (date) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/date_parse/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: date_parse('2006-12-12 10:00:00')\n  //   returns 1: {year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction: 0, is_localtime: false}\n\n  var strtotime = require('../datetime/strtotime')\n  var ts\n\n  try {\n    ts = strtotime(date)\n  } finally {\n    if (!ts) {\n      return false\n    }\n  }\n\n  var dt = new Date(ts * 1000)\n\n  var retObj = {}\n\n  retObj.year = dt.getFullYear()\n  retObj.month = dt.getMonth() + 1\n  retObj.day = dt.getDate()\n  retObj.hour = dt.getHours()\n  retObj.minute = dt.getMinutes()\n  retObj.second = dt.getSeconds()\n  retObj.fraction = parseFloat('0.' + dt.getMilliseconds())\n  retObj.is_localtime = dt.getTimezoneOffset() !== 0\n\n  return retObj\n}\n","source":"php/datetime/date_parse.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'date_parse(''2006-12-12 10:00:00'')'\nestarget: es5\nreturns:\n  - >-\n    {year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction:\n    0, is_localtime: false}\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sdate_parse in JavaScript\nfunction: date_parse\ncategory: datetime\nlanguage: php\npermalink: php/datetime/date_parse/\nalias:\n  - /functions/php/date_parse/\n  - /functions/datetime/date_parse/\n  - /php/date_parse/\n  - /functions/date_parse/\n---\nmodule.exports = function date_parse (date) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/date_parse/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: date_parse('2006-12-12 10:00:00')\n  //   returns 1: {year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction: 0, is_localtime: false}\n\n  var strtotime = require('../datetime/strtotime')\n  var ts\n\n  try {\n    ts = strtotime(date)\n  } finally {\n    if (!ts) {\n      return false\n    }\n  }\n\n  var dt = new Date(ts * 1000)\n\n  var retObj = {}\n\n  retObj.year = dt.getFullYear()\n  retObj.month = dt.getMonth() + 1\n  retObj.day = dt.getDate()\n  retObj.hour = dt.getHours()\n  retObj.minute = dt.getMinutes()\n  retObj.second = dt.getSeconds()\n  retObj.fraction = parseFloat('0.' + dt.getMilliseconds())\n  retObj.is_localtime = dt.getTimezoneOffset() !== 0\n\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/date_parse/index.html","comments":1,"_id":"cinoeja00002uou9yzvllqc5b","content":"module.exports = function date_parse (date) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/date_parse/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: date_parse('2006-12-12 10:00:00')\n  //   returns 1: {year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction: 0, is_localtime: false}\n\n  var strtotime = require('../datetime/strtotime')\n  var ts\n\n  try {\n    ts = strtotime(date)\n  } finally {\n    if (!ts) {\n      return false\n    }\n  }\n\n  var dt = new Date(ts * 1000)\n\n  var retObj = {}\n\n  retObj.year = dt.getFullYear()\n  retObj.month = dt.getMonth() + 1\n  retObj.day = dt.getDate()\n  retObj.hour = dt.getHours()\n  retObj.minute = dt.getMinutes()\n  retObj.second = dt.getSeconds()\n  retObj.fraction = parseFloat('0.' + dt.getMilliseconds())\n  retObj.is_localtime = dt.getTimezoneOffset() !== 0\n\n  return retObj\n}\n","excerpt":"","more":"module.exports = function date_parse (date) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/date_parse/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: date_parse('2006-12-12 10:00:00')\n  //   returns 1: {year : 2006, month: 12, day: 12, hour: 10, minute: 0, second: 0, fraction: 0, is_localtime: false}\n\n  var strtotime = require('../datetime/strtotime')\n  var ts\n\n  try {\n    ts = strtotime(date)\n  } finally {\n    if (!ts) {\n      return false\n    }\n  }\n\n  var dt = new Date(ts * 1000)\n\n  var retObj = {}\n\n  retObj.year = dt.getFullYear()\n  retObj.month = dt.getMonth() + 1\n  retObj.day = dt.getDate()\n  retObj.hour = dt.getHours()\n  retObj.minute = dt.getMinutes()\n  retObj.second = dt.getSeconds()\n  retObj.fraction = parseFloat('0.' + dt.getMilliseconds())\n  retObj.is_localtime = dt.getTimezoneOffset() !== 0\n\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["getdate(1055901520)"],"estarget":"es5","returns":["{'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6, 'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0': 1055901520}"],"dependencies":[],"authors":{"original by":["Paulo Freitas"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Alex"]},"notes":[],"layout":"function","title":"php'sgetdate in JavaScript","function":"getdate","category":"datetime","language":"php","alias":["/functions/php/getdate/","/functions/datetime/getdate/","/php/getdate/","/functions/getdate/"],"_content":"module.exports = function getdate (timestamp) {\n  //  discuss at: http://locutusjs.io/php/getdate/\n  // original by: Paulo Freitas\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getdate(1055901520)\n  //   returns 1: {'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6, 'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0': 1055901520}\n\n  var _w = [\n    'Sun',\n    'Mon',\n    'Tues',\n    'Wednes',\n    'Thurs',\n    'Fri',\n    'Satur'\n  ]\n  var _m = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n  var d = ((typeof timestamp === 'undefined') ? new Date()\n    : (timestamp instanceof Date) ? new Date(timestamp)  // Not provided\n    : new Date(timestamp * 1000) // Javascript Date() // UNIX timestamp (auto-convert to int)\n  )\n  var w = d.getDay()\n  var m = d.getMonth()\n  var y = d.getFullYear()\n  var r = {}\n\n  r.seconds = d.getSeconds()\n  r.minutes = d.getMinutes()\n  r.hours = d.getHours()\n  r.mday = d.getDate()\n  r.wday = w\n  r.mon = m + 1\n  r.year = y\n  r.yday = Math.floor((d - (new Date(y, 0, 1))) / 86400000)\n  r.weekday = _w[w] + 'day'\n  r.month = _m[m]\n  r['0'] = parseInt(d.getTime() / 1000, 10)\n\n  return r\n}\n","source":"php/datetime/getdate.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - getdate(1055901520)\nestarget: es5\nreturns:\n  - >-\n    {'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6,\n    'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0':\n    1055901520}\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Alex\nnotes: []\nlayout: function\ntitle: php'sgetdate in JavaScript\nfunction: getdate\ncategory: datetime\nlanguage: php\npermalink: php/datetime/getdate/\nalias:\n  - /functions/php/getdate/\n  - /functions/datetime/getdate/\n  - /php/getdate/\n  - /functions/getdate/\n---\nmodule.exports = function getdate (timestamp) {\n  //  discuss at: http://locutusjs.io/php/getdate/\n  // original by: Paulo Freitas\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getdate(1055901520)\n  //   returns 1: {'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6, 'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0': 1055901520}\n\n  var _w = [\n    'Sun',\n    'Mon',\n    'Tues',\n    'Wednes',\n    'Thurs',\n    'Fri',\n    'Satur'\n  ]\n  var _m = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n  var d = ((typeof timestamp === 'undefined') ? new Date()\n    : (timestamp instanceof Date) ? new Date(timestamp)  // Not provided\n    : new Date(timestamp * 1000) // Javascript Date() // UNIX timestamp (auto-convert to int)\n  )\n  var w = d.getDay()\n  var m = d.getMonth()\n  var y = d.getFullYear()\n  var r = {}\n\n  r.seconds = d.getSeconds()\n  r.minutes = d.getMinutes()\n  r.hours = d.getHours()\n  r.mday = d.getDate()\n  r.wday = w\n  r.mon = m + 1\n  r.year = y\n  r.yday = Math.floor((d - (new Date(y, 0, 1))) / 86400000)\n  r.weekday = _w[w] + 'day'\n  r.month = _m[m]\n  r['0'] = parseInt(d.getTime() / 1000, 10)\n\n  return r\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/getdate/index.html","comments":1,"_id":"cinoeja01002vou9ypj4i1hd7","content":"module.exports = function getdate (timestamp) {\n  //  discuss at: http://locutusjs.io/php/getdate/\n  // original by: Paulo Freitas\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getdate(1055901520)\n  //   returns 1: {'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6, 'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0': 1055901520}\n\n  var _w = [\n    'Sun',\n    'Mon',\n    'Tues',\n    'Wednes',\n    'Thurs',\n    'Fri',\n    'Satur'\n  ]\n  var _m = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n  var d = ((typeof timestamp === 'undefined') ? new Date()\n    : (timestamp instanceof Date) ? new Date(timestamp)  // Not provided\n    : new Date(timestamp * 1000) // Javascript Date() // UNIX timestamp (auto-convert to int)\n  )\n  var w = d.getDay()\n  var m = d.getMonth()\n  var y = d.getFullYear()\n  var r = {}\n\n  r.seconds = d.getSeconds()\n  r.minutes = d.getMinutes()\n  r.hours = d.getHours()\n  r.mday = d.getDate()\n  r.wday = w\n  r.mon = m + 1\n  r.year = y\n  r.yday = Math.floor((d - (new Date(y, 0, 1))) / 86400000)\n  r.weekday = _w[w] + 'day'\n  r.month = _m[m]\n  r['0'] = parseInt(d.getTime() / 1000, 10)\n\n  return r\n}\n","excerpt":"","more":"module.exports = function getdate (timestamp) {\n  //  discuss at: http://locutusjs.io/php/getdate/\n  // original by: Paulo Freitas\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getdate(1055901520)\n  //   returns 1: {'seconds': 40, 'minutes': 58, 'hours': 1, 'mday': 18, 'wday': 3, 'mon': 6, 'year': 2003, 'yday': 168, 'weekday': 'Wednesday', 'month': 'June', '0': 1055901520}\n\n  var _w = [\n    'Sun',\n    'Mon',\n    'Tues',\n    'Wednes',\n    'Thurs',\n    'Fri',\n    'Satur'\n  ]\n  var _m = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n  var d = ((typeof timestamp === 'undefined') ? new Date()\n    : (timestamp instanceof Date) ? new Date(timestamp)  // Not provided\n    : new Date(timestamp * 1000) // Javascript Date() // UNIX timestamp (auto-convert to int)\n  )\n  var w = d.getDay()\n  var m = d.getMonth()\n  var y = d.getFullYear()\n  var r = {}\n\n  r.seconds = d.getSeconds()\n  r.minutes = d.getMinutes()\n  r.hours = d.getHours()\n  r.mday = d.getDate()\n  r.wday = w\n  r.mon = m + 1\n  r.year = y\n  r.yday = Math.floor((d - (new Date(y, 0, 1))) / 86400000)\n  r.weekday = _w[w] + 'day'\n  r.month = _m[m]\n  r['0'] = parseInt(d.getTime() / 1000, 10)\n\n  return r\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $obj = gettimeofday()\nvar $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj &&80, 'dsttime' in $obj)","var $timeStamp = gettimeofday(true)\nvar $result = $timeStamp > 1000000000 && $timeStamp < 2000000000"],"estarget":"es5","returns":["true","true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","Josh Fraser (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)"],"parts by":["Breaking Par Consulting Inc (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)"],"revised by":["Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'sgettimeofday in JavaScript","function":"gettimeofday","category":"datetime","language":"php","alias":["/functions/php/gettimeofday/","/functions/datetime/gettimeofday/","/php/gettimeofday/","/functions/gettimeofday/"],"_content":"module.exports = function gettimeofday (returnFloat) {\n  //  discuss at: http://locutusjs.io/php/gettimeofday/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Josh Fraser (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)\n  //    parts by: Breaking Par Consulting Inc (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: var $obj = gettimeofday()\n  //   example 1: var $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj &&80, 'dsttime' in $obj)\n  //   returns 1: true\n  //   example 2: var $timeStamp = gettimeofday(true)\n  //   example 2: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 2: true\n\n  var t = new Date()\n  var y = 0\n\n  if (returnFloat) {\n    return t.getTime() / 1000\n  }\n\n  // Store current year.\n  y = t.getFullYear()\n  return {\n    sec: t.getUTCSeconds(),\n    usec: t.getUTCMilliseconds() * 1000,\n    minuteswest: t.getTimezoneOffset(),\n    // Compare Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC to see if DST is observed.\n    dsttime: 0 + (((new Date(y, 0)) - Date.UTC(y, 0)) !== ((new Date(y, 6)) - Date.UTC(y, 6)))\n  }\n}\n","source":"php/datetime/gettimeofday.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var $obj = gettimeofday()\n\n    var $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj\n    &&80, 'dsttime' in $obj)\n  - |-\n    var $timeStamp = gettimeofday(true)\n    var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - >-\n      Josh Fraser\n      (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)\n  parts by:\n    - >-\n      Breaking Par Consulting Inc\n      (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)\n  revised by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'sgettimeofday in JavaScript\nfunction: gettimeofday\ncategory: datetime\nlanguage: php\npermalink: php/datetime/gettimeofday/\nalias:\n  - /functions/php/gettimeofday/\n  - /functions/datetime/gettimeofday/\n  - /php/gettimeofday/\n  - /functions/gettimeofday/\n---\nmodule.exports = function gettimeofday (returnFloat) {\n  //  discuss at: http://locutusjs.io/php/gettimeofday/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Josh Fraser (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)\n  //    parts by: Breaking Par Consulting Inc (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: var $obj = gettimeofday()\n  //   example 1: var $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj &&80, 'dsttime' in $obj)\n  //   returns 1: true\n  //   example 2: var $timeStamp = gettimeofday(true)\n  //   example 2: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 2: true\n\n  var t = new Date()\n  var y = 0\n\n  if (returnFloat) {\n    return t.getTime() / 1000\n  }\n\n  // Store current year.\n  y = t.getFullYear()\n  return {\n    sec: t.getUTCSeconds(),\n    usec: t.getUTCMilliseconds() * 1000,\n    minuteswest: t.getTimezoneOffset(),\n    // Compare Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC to see if DST is observed.\n    dsttime: 0 + (((new Date(y, 0)) - Date.UTC(y, 0)) !== ((new Date(y, 6)) - Date.UTC(y, 6)))\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/gettimeofday/index.html","comments":1,"_id":"cinoeja01002wou9yghkrm7pv","content":"module.exports = function gettimeofday (returnFloat) {\n  //  discuss at: http://locutusjs.io/php/gettimeofday/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Josh Fraser (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)\n  //    parts by: Breaking Par Consulting Inc (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: var $obj = gettimeofday()\n  //   example 1: var $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj &&80, 'dsttime' in $obj)\n  //   returns 1: true\n  //   example 2: var $timeStamp = gettimeofday(true)\n  //   example 2: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 2: true\n\n  var t = new Date()\n  var y = 0\n\n  if (returnFloat) {\n    return t.getTime() / 1000\n  }\n\n  // Store current year.\n  y = t.getFullYear()\n  return {\n    sec: t.getUTCSeconds(),\n    usec: t.getUTCMilliseconds() * 1000,\n    minuteswest: t.getTimezoneOffset(),\n    // Compare Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC to see if DST is observed.\n    dsttime: 0 + (((new Date(y, 0)) - Date.UTC(y, 0)) !== ((new Date(y, 6)) - Date.UTC(y, 6)))\n  }\n}\n","excerpt":"","more":"module.exports = function gettimeofday (returnFloat) {\n  //  discuss at: http://locutusjs.io/php/gettimeofday/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Josh Fraser (http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/)\n  //    parts by: Breaking Par Consulting Inc (http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: var $obj = gettimeofday()\n  //   example 1: var $result = ('sec' in $obj && 'usec' in $obj && 'minuteswest' in $obj &&80, 'dsttime' in $obj)\n  //   returns 1: true\n  //   example 2: var $timeStamp = gettimeofday(true)\n  //   example 2: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 2: true\n\n  var t = new Date()\n  var y = 0\n\n  if (returnFloat) {\n    return t.getTime() / 1000\n  }\n\n  // Store current year.\n  y = t.getFullYear()\n  return {\n    sec: t.getUTCSeconds(),\n    usec: t.getUTCMilliseconds() * 1000,\n    minuteswest: t.getTimezoneOffset(),\n    // Compare Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC to see if DST is observed.\n    dsttime: 0 + (((new Date(y, 0)) - Date.UTC(y, 0)) !== ((new Date(y, 6)) - Date.UTC(y, 6)))\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will depend on your timezone"],"estarget":"es5","returns":["'07:09:40 m is month'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Alex"]},"notes":[],"layout":"function","title":"php'sgmdate in JavaScript","function":"gmdate","category":"datetime","language":"php","alias":["/functions/php/gmdate/","/functions/datetime/gmdate/","/php/gmdate/","/functions/gmdate/"],"_content":"module.exports = function gmdate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmdate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will depend on your timezone\n  //   returns 1: '07:09:40 m is month'\n\n  var date = require('../datetime/date')\n\n  var dt = typeof timestamp === 'undefined' ? new Date() // Not provided\n    : timestamp instanceof Date ? new Date(timestamp) // Javascript Date()\n    : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n\n  timestamp = Date.parse(dt.toUTCString().slice(0, -4)) / 1000\n\n  return date(format, timestamp)\n}\n","source":"php/datetime/gmdate.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will\n    depend on your timezone\nestarget: es5\nreturns:\n  - '''07:09:40 m is month'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Alex\nnotes: []\nlayout: function\ntitle: php'sgmdate in JavaScript\nfunction: gmdate\ncategory: datetime\nlanguage: php\npermalink: php/datetime/gmdate/\nalias:\n  - /functions/php/gmdate/\n  - /functions/datetime/gmdate/\n  - /php/gmdate/\n  - /functions/gmdate/\n---\nmodule.exports = function gmdate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmdate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will depend on your timezone\n  //   returns 1: '07:09:40 m is month'\n\n  var date = require('../datetime/date')\n\n  var dt = typeof timestamp === 'undefined' ? new Date() // Not provided\n    : timestamp instanceof Date ? new Date(timestamp) // Javascript Date()\n    : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n\n  timestamp = Date.parse(dt.toUTCString().slice(0, -4)) / 1000\n\n  return date(format, timestamp)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/gmdate/index.html","comments":1,"_id":"cinoeja01002xou9ytd581l0j","content":"module.exports = function gmdate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmdate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will depend on your timezone\n  //   returns 1: '07:09:40 m is month'\n\n  var date = require('../datetime/date')\n\n  var dt = typeof timestamp === 'undefined' ? new Date() // Not provided\n    : timestamp instanceof Date ? new Date(timestamp) // Javascript Date()\n    : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n\n  timestamp = Date.parse(dt.toUTCString().slice(0, -4)) / 1000\n\n  return date(format, timestamp)\n}\n","excerpt":"","more":"module.exports = function gmdate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmdate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmdate('H:m:s \\\\m \\\\i\\\\s \\\\m\\\\o\\\\n\\\\t\\\\h', 1062402400); // Return will depend on your timezone\n  //   returns 1: '07:09:40 m is month'\n\n  var date = require('../datetime/date')\n\n  var dt = typeof timestamp === 'undefined' ? new Date() // Not provided\n    : timestamp instanceof Date ? new Date(timestamp) // Javascript Date()\n    : new Date(timestamp * 1000) // UNIX timestamp (auto-convert to int)\n\n  timestamp = Date.parse(dt.toUTCString().slice(0, -4)) / 1000\n\n  return date(format, timestamp)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["gmmktime(14, 10, 2, 2, 1, 2008)","gmmktime(0, 0, -1, 1, 1, 1970)"],"estarget":"es5","returns":["1201875002","-1"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","mktime"]},"notes":[],"layout":"function","title":"php'sgmmktime in JavaScript","function":"gmmktime","category":"datetime","language":"php","alias":["/functions/php/gmmktime/","/functions/datetime/gmmktime/","/php/gmmktime/","/functions/gmmktime/"],"_content":"module.exports = function gmmktime () {\n  //  discuss at: http://locutusjs.io/php/gmmktime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: mktime\n  //   example 1: gmmktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: gmmktime(0, 0, -1, 1, 1, 1970)\n  //   returns 2: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['getUTC' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setUTCFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setUTCHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n","source":"php/datetime/gmmktime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'gmmktime(14, 10, 2, 2, 1, 2008)'\n  - 'gmmktime(0, 0, -1, 1, 1, 1970)'\nestarget: es5\nreturns:\n  - '1201875002'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - mktime\nnotes: []\nlayout: function\ntitle: php'sgmmktime in JavaScript\nfunction: gmmktime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/gmmktime/\nalias:\n  - /functions/php/gmmktime/\n  - /functions/datetime/gmmktime/\n  - /php/gmmktime/\n  - /functions/gmmktime/\n---\nmodule.exports = function gmmktime () {\n  //  discuss at: http://locutusjs.io/php/gmmktime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: mktime\n  //   example 1: gmmktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: gmmktime(0, 0, -1, 1, 1, 1970)\n  //   returns 2: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['getUTC' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setUTCFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setUTCHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/gmmktime/index.html","comments":1,"_id":"cinoeja02002you9ydtciwj0g","content":"module.exports = function gmmktime () {\n  //  discuss at: http://locutusjs.io/php/gmmktime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: mktime\n  //   example 1: gmmktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: gmmktime(0, 0, -1, 1, 1, 1970)\n  //   returns 2: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['getUTC' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 1=\"\" 69=\"\" 1000=\"\" 1900=\"\" ?=\"\" 2e3=\"\" :=\"\" (r[5]=\"\" <=\"100\" 0))=\"\" 0)=\"\" set=\"\" year,=\"\" month=\"\" (-1=\"\" to=\"\" fix=\"\" js=\"\" months),=\"\" and=\"\" date.=\"\" !this=\"\" must=\"\" come=\"\" before=\"\" the=\"\" call=\"\" sethours!=\"\" d.setutcfullyear(r[5],=\"\" r[3]=\"\" -=\"\" 1,=\"\" r[4])=\"\" hours,=\"\" minutes,=\"\" seconds.=\"\" d.setutchours(r[0],=\"\" r[1],=\"\" r[2])=\"\" divide=\"\" milliseconds=\"\" by=\"\" return=\"\" seconds=\"\" drop=\"\" decimal.=\"\" add=\"\" second=\"\" if=\"\" negative=\"\" or=\"\" it'll=\"\" be=\"\" off=\"\" from=\"\" php=\"\" second.=\"\" (d.gettime()=\"\" 1e3=\"\">> 0) - (d.getTime() < 0)\n}\n</=>","excerpt":"","more":"module.exports = function gmmktime () {\n  //  discuss at: http://locutusjs.io/php/gmmktime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: mktime\n  //   example 1: gmmktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: gmmktime(0, 0, -1, 1, 1, 1970)\n  //   returns 2: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['getUTC' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setUTCFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setUTCHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["gmstrftime(\"%A\", 1062462400)"],"estarget":"es5","returns":["'Tuesday'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Alex"]},"notes":[],"layout":"function","title":"php'sgmstrftime in JavaScript","function":"gmstrftime","category":"datetime","language":"php","alias":["/functions/php/gmstrftime/","/functions/datetime/gmstrftime/","/php/gmstrftime/","/functions/gmstrftime/"],"_content":"module.exports = function gmstrftime (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmstrftime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmstrftime(\"%A\", 1062462400)\n  //   returns 1: 'Tuesday'\n\n  var strftime = require('../datetime/strftime')\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  timestamp = Date.parse(_date.toUTCString().slice(0, -4)) / 1000\n\n  return strftime(format, timestamp)\n}\n","source":"php/datetime/gmstrftime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'gmstrftime(\"%A\", 1062462400)'\nestarget: es5\nreturns:\n  - '''Tuesday'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Alex\nnotes: []\nlayout: function\ntitle: php'sgmstrftime in JavaScript\nfunction: gmstrftime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/gmstrftime/\nalias:\n  - /functions/php/gmstrftime/\n  - /functions/datetime/gmstrftime/\n  - /php/gmstrftime/\n  - /functions/gmstrftime/\n---\nmodule.exports = function gmstrftime (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmstrftime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmstrftime(\"%A\", 1062462400)\n  //   returns 1: 'Tuesday'\n\n  var strftime = require('../datetime/strftime')\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  timestamp = Date.parse(_date.toUTCString().slice(0, -4)) / 1000\n\n  return strftime(format, timestamp)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/gmstrftime/index.html","comments":1,"_id":"cinoeja02002zou9y3ievsfmt","content":"module.exports = function gmstrftime (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmstrftime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmstrftime(\"%A\", 1062462400)\n  //   returns 1: 'Tuesday'\n\n  var strftime = require('../datetime/strftime')\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  timestamp = Date.parse(_date.toUTCString().slice(0, -4)) / 1000\n\n  return strftime(format, timestamp)\n}\n","excerpt":"","more":"module.exports = function gmstrftime (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/gmstrftime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: gmstrftime(\"%A\", 1062462400)\n  //   returns 1: 'Tuesday'\n\n  var strftime = require('../datetime/strftime')\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  timestamp = Date.parse(_date.toUTCString().slice(0, -4)) / 1000\n\n  return strftime(format, timestamp)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["idate('y', 1255633200)"],"estarget":"es5","returns":["9"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","date","gettimeofday"],"improved by":["Theriault (https://github.com/Theriault)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Alex"]},"notes":[],"layout":"function","title":"php'sidate in JavaScript","function":"idate","category":"datetime","language":"php","alias":["/functions/php/idate/","/functions/datetime/idate/","/php/idate/","/functions/idate/"],"_content":"module.exports = function idate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/idate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: date\n  // original by: gettimeofday\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: idate('y', 1255633200)\n  //   returns 1: 9\n\n  if (format === undefined) {\n    throw new Error('idate() expects at least 1 parameter, 0 given')\n  }\n  if (!format.length || format.length > 1) {\n    throw new Error('idate format is one char')\n  }\n\n  // @todo: Need to allow date_default_timezone_set() (check for $locutus.default_timezone and use)\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n  var a\n\n  switch (format) {\n    case 'B':\n      return Math.floor((\n        (_date.getUTCHours() * 36e2) +\n        (_date.getUTCMinutes() * 60) +\n        _date.getUTCSeconds() + 36e2\n      ) / 86.4) % 1e3\n    case 'd':\n      return _date.getDate()\n    case 'h':\n      return _date.getHours() % 12 || 12\n    case 'H':\n      return _date.getHours()\n    case 'i':\n      return _date.getMinutes()\n    case 'I':\n    // capital 'i'\n    // Logic original by getimeofday().\n    // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n    // If they are not equal, then DST is observed.\n      a = _date.getFullYear()\n      return 0 + (((new Date(a, 0)) - Date.UTC(a, 0)) !== ((new Date(a, 6)) - Date.UTC(a, 6)))\n    case 'L':\n      a = _date.getFullYear()\n      return (!(a & 3) && (a % 1e2 || !(a % 4e2))) ? 1 : 0\n    case 'm':\n      return _date.getMonth() + 1\n    case 's':\n      return _date.getSeconds()\n    case 't':\n      return (new Date(_date.getFullYear(), _date.getMonth() + 1, 0))\n      .getDate()\n    case 'U':\n      return Math.round(_date.getTime() / 1000)\n    case 'w':\n      return _date.getDay()\n    case 'W':\n      a = new Date(\n        _date.getFullYear(),\n        _date.getMonth(),\n        _date.getDate() - (_date.getDay() || 7) + 3\n      )\n      return 1 + Math.round((a - (new Date(a.getFullYear(), 0, 4))) / 864e5 / 7)\n    case 'y':\n      return parseInt((_date.getFullYear() + '')\n      .slice(2), 10) // This function returns an integer, unlike _date()\n    case 'Y':\n      return _date.getFullYear()\n    case 'z':\n      return Math.floor((_date - new Date(_date.getFullYear(), 0, 1)) / 864e5)\n    case 'Z':\n      return -_date.getTimezoneOffset() * 60\n    default:\n      throw new Error('Unrecognized _date format token')\n  }\n}\n","source":"php/datetime/idate.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'idate(''y'', 1255633200)'\nestarget: es5\nreturns:\n  - '9'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - date\n    - gettimeofday\n  improved by:\n    - 'Theriault (https://github.com/Theriault)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Alex\nnotes: []\nlayout: function\ntitle: php'sidate in JavaScript\nfunction: idate\ncategory: datetime\nlanguage: php\npermalink: php/datetime/idate/\nalias:\n  - /functions/php/idate/\n  - /functions/datetime/idate/\n  - /php/idate/\n  - /functions/idate/\n---\nmodule.exports = function idate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/idate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: date\n  // original by: gettimeofday\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: idate('y', 1255633200)\n  //   returns 1: 9\n\n  if (format === undefined) {\n    throw new Error('idate() expects at least 1 parameter, 0 given')\n  }\n  if (!format.length || format.length > 1) {\n    throw new Error('idate format is one char')\n  }\n\n  // @todo: Need to allow date_default_timezone_set() (check for $locutus.default_timezone and use)\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n  var a\n\n  switch (format) {\n    case 'B':\n      return Math.floor((\n        (_date.getUTCHours() * 36e2) +\n        (_date.getUTCMinutes() * 60) +\n        _date.getUTCSeconds() + 36e2\n      ) / 86.4) % 1e3\n    case 'd':\n      return _date.getDate()\n    case 'h':\n      return _date.getHours() % 12 || 12\n    case 'H':\n      return _date.getHours()\n    case 'i':\n      return _date.getMinutes()\n    case 'I':\n    // capital 'i'\n    // Logic original by getimeofday().\n    // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n    // If they are not equal, then DST is observed.\n      a = _date.getFullYear()\n      return 0 + (((new Date(a, 0)) - Date.UTC(a, 0)) !== ((new Date(a, 6)) - Date.UTC(a, 6)))\n    case 'L':\n      a = _date.getFullYear()\n      return (!(a & 3) && (a % 1e2 || !(a % 4e2))) ? 1 : 0\n    case 'm':\n      return _date.getMonth() + 1\n    case 's':\n      return _date.getSeconds()\n    case 't':\n      return (new Date(_date.getFullYear(), _date.getMonth() + 1, 0))\n      .getDate()\n    case 'U':\n      return Math.round(_date.getTime() / 1000)\n    case 'w':\n      return _date.getDay()\n    case 'W':\n      a = new Date(\n        _date.getFullYear(),\n        _date.getMonth(),\n        _date.getDate() - (_date.getDay() || 7) + 3\n      )\n      return 1 + Math.round((a - (new Date(a.getFullYear(), 0, 4))) / 864e5 / 7)\n    case 'y':\n      return parseInt((_date.getFullYear() + '')\n      .slice(2), 10) // This function returns an integer, unlike _date()\n    case 'Y':\n      return _date.getFullYear()\n    case 'z':\n      return Math.floor((_date - new Date(_date.getFullYear(), 0, 1)) / 864e5)\n    case 'Z':\n      return -_date.getTimezoneOffset() * 60\n    default:\n      throw new Error('Unrecognized _date format token')\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/idate/index.html","comments":1,"_id":"cinoeja030030ou9yurlkwufb","content":"module.exports = function idate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/idate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: date\n  // original by: gettimeofday\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: idate('y', 1255633200)\n  //   returns 1: 9\n\n  if (format === undefined) {\n    throw new Error('idate() expects at least 1 parameter, 0 given')\n  }\n  if (!format.length || format.length > 1) {\n    throw new Error('idate format is one char')\n  }\n\n  // @todo: Need to allow date_default_timezone_set() (check for $locutus.default_timezone and use)\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n  var a\n\n  switch (format) {\n    case 'B':\n      return Math.floor((\n        (_date.getUTCHours() * 36e2) +\n        (_date.getUTCMinutes() * 60) +\n        _date.getUTCSeconds() + 36e2\n      ) / 86.4) % 1e3\n    case 'd':\n      return _date.getDate()\n    case 'h':\n      return _date.getHours() % 12 || 12\n    case 'H':\n      return _date.getHours()\n    case 'i':\n      return _date.getMinutes()\n    case 'I':\n    // capital 'i'\n    // Logic original by getimeofday().\n    // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n    // If they are not equal, then DST is observed.\n      a = _date.getFullYear()\n      return 0 + (((new Date(a, 0)) - Date.UTC(a, 0)) !== ((new Date(a, 6)) - Date.UTC(a, 6)))\n    case 'L':\n      a = _date.getFullYear()\n      return (!(a & 3) && (a % 1e2 || !(a % 4e2))) ? 1 : 0\n    case 'm':\n      return _date.getMonth() + 1\n    case 's':\n      return _date.getSeconds()\n    case 't':\n      return (new Date(_date.getFullYear(), _date.getMonth() + 1, 0))\n      .getDate()\n    case 'U':\n      return Math.round(_date.getTime() / 1000)\n    case 'w':\n      return _date.getDay()\n    case 'W':\n      a = new Date(\n        _date.getFullYear(),\n        _date.getMonth(),\n        _date.getDate() - (_date.getDay() || 7) + 3\n      )\n      return 1 + Math.round((a - (new Date(a.getFullYear(), 0, 4))) / 864e5 / 7)\n    case 'y':\n      return parseInt((_date.getFullYear() + '')\n      .slice(2), 10) // This function returns an integer, unlike _date()\n    case 'Y':\n      return _date.getFullYear()\n    case 'z':\n      return Math.floor((_date - new Date(_date.getFullYear(), 0, 1)) / 864e5)\n    case 'Z':\n      return -_date.getTimezoneOffset() * 60\n    default:\n      throw new Error('Unrecognized _date format token')\n  }\n}\n","excerpt":"","more":"module.exports = function idate (format, timestamp) {\n  //  discuss at: http://locutusjs.io/php/idate/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: date\n  // original by: gettimeofday\n  //    input by: Alex\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: idate('y', 1255633200)\n  //   returns 1: 9\n\n  if (format === undefined) {\n    throw new Error('idate() expects at least 1 parameter, 0 given')\n  }\n  if (!format.length || format.length > 1) {\n    throw new Error('idate format is one char')\n  }\n\n  // @todo: Need to allow date_default_timezone_set() (check for $locutus.default_timezone and use)\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n  var a\n\n  switch (format) {\n    case 'B':\n      return Math.floor((\n        (_date.getUTCHours() * 36e2) +\n        (_date.getUTCMinutes() * 60) +\n        _date.getUTCSeconds() + 36e2\n      ) / 86.4) % 1e3\n    case 'd':\n      return _date.getDate()\n    case 'h':\n      return _date.getHours() % 12 || 12\n    case 'H':\n      return _date.getHours()\n    case 'i':\n      return _date.getMinutes()\n    case 'I':\n    // capital 'i'\n    // Logic original by getimeofday().\n    // Compares Jan 1 minus Jan 1 UTC to Jul 1 minus Jul 1 UTC.\n    // If they are not equal, then DST is observed.\n      a = _date.getFullYear()\n      return 0 + (((new Date(a, 0)) - Date.UTC(a, 0)) !== ((new Date(a, 6)) - Date.UTC(a, 6)))\n    case 'L':\n      a = _date.getFullYear()\n      return (!(a & 3) && (a % 1e2 || !(a % 4e2))) ? 1 : 0\n    case 'm':\n      return _date.getMonth() + 1\n    case 's':\n      return _date.getSeconds()\n    case 't':\n      return (new Date(_date.getFullYear(), _date.getMonth() + 1, 0))\n      .getDate()\n    case 'U':\n      return Math.round(_date.getTime() / 1000)\n    case 'w':\n      return _date.getDay()\n    case 'W':\n      a = new Date(\n        _date.getFullYear(),\n        _date.getMonth(),\n        _date.getDate() - (_date.getDay() || 7) + 3\n      )\n      return 1 + Math.round((a - (new Date(a.getFullYear(), 0, 4))) / 864e5 / 7)\n    case 'y':\n      return parseInt((_date.getFullYear() + '')\n      .slice(2), 10) // This function returns an integer, unlike _date()\n    case 'Y':\n      return _date.getFullYear()\n    case 'z':\n      return Math.floor((_date - new Date(_date.getFullYear(), 0, 1)) / 864e5)\n    case 'Z':\n      return -_date.getTimezoneOffset() * 60\n    default:\n      throw new Error('Unrecognized _date format token')\n  }\n}\n"},{"type":"category","language":"php","category":"datetime","title":"datetime","_content":"","source":"php/datetime/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: datetime\ntitle: datetime\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/index.html","comments":1,"layout":"page","_id":"cinoeja030031ou9yyvtv7r39","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $timeStamp = microtime(true)\n$timeStamp > 1000000000 && $timeStamp < 2000000000","/^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())"],"estarget":"es5","returns":["true","true"],"dependencies":[],"authors":{"original by":["Paulo Freitas"],"improved by":["Dumitru Uzun (http://duzun.me)"]},"notes":[],"layout":"function","title":"php'smicrotime in JavaScript","function":"microtime","category":"datetime","language":"php","alias":["/functions/php/microtime/","/functions/datetime/microtime/","/php/microtime/","/functions/microtime/"],"_content":"module.exports = function microtime (getAsFloat) {\n  //  discuss at: http://locutusjs.io/php/microtime/\n  // original by: Paulo Freitas\n  // improved by: Dumitru Uzun (http://duzun.me)\n  //   example 1: var $timeStamp = microtime(true)\n  //   example 1: $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n  //   example 2: /^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())\n  //   returns 2: true\n\n  var s\n  var now\n  if (typeof performance !== 'undefined' && performance.now) {\n    now = (performance.now() + performance.timing.navigationStart) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e6) / 1e6) + ' ' + s\n  } else {\n    now = (Date.now ? Date.now() : new Date().getTime()) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e3) / 1e3) + ' ' + s\n  }\n}\n","source":"php/datetime/microtime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $timeStamp = microtime(true)\n    $timeStamp > 1000000000 && $timeStamp < 2000000000\n  - '/^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())'\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\n  improved by:\n    - 'Dumitru Uzun (http://duzun.me)'\nnotes: []\nlayout: function\ntitle: php'smicrotime in JavaScript\nfunction: microtime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/microtime/\nalias:\n  - /functions/php/microtime/\n  - /functions/datetime/microtime/\n  - /php/microtime/\n  - /functions/microtime/\n---\nmodule.exports = function microtime (getAsFloat) {\n  //  discuss at: http://locutusjs.io/php/microtime/\n  // original by: Paulo Freitas\n  // improved by: Dumitru Uzun (http://duzun.me)\n  //   example 1: var $timeStamp = microtime(true)\n  //   example 1: $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n  //   example 2: /^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())\n  //   returns 2: true\n\n  var s\n  var now\n  if (typeof performance !== 'undefined' && performance.now) {\n    now = (performance.now() + performance.timing.navigationStart) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e6) / 1e6) + ' ' + s\n  } else {\n    now = (Date.now ? Date.now() : new Date().getTime()) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e3) / 1e3) + ' ' + s\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/microtime/index.html","comments":1,"_id":"cinoeja030032ou9yz7srgvim","content":"module.exports = function microtime (getAsFloat) {\n  //  discuss at: http://locutusjs.io/php/microtime/\n  // original by: Paulo Freitas\n  // improved by: Dumitru Uzun (http://duzun.me)\n  //   example 1: var $timeStamp = microtime(true)\n  //   example 1: $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n  //   example 2: /^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())\n  //   returns 2: true\n\n  var s\n  var now\n  if (typeof performance !== 'undefined' && performance.now) {\n    now = (performance.now() + performance.timing.navigationStart) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e6) / 1e6) + ' ' + s\n  } else {\n    now = (Date.now ? Date.now() : new Date().getTime()) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e3) / 1e3) + ' ' + s\n  }\n}\n","excerpt":"","more":"module.exports = function microtime (getAsFloat) {\n  //  discuss at: http://locutusjs.io/php/microtime/\n  // original by: Paulo Freitas\n  // improved by: Dumitru Uzun (http://duzun.me)\n  //   example 1: var $timeStamp = microtime(true)\n  //   example 1: $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n  //   example 2: /^0\\.[0-9]{1,6} [0-9]{10,10}$/.test(microtime())\n  //   returns 2: true\n\n  var s\n  var now\n  if (typeof performance !== 'undefined' && performance.now) {\n    now = (performance.now() + performance.timing.navigationStart) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e6) / 1e6) + ' ' + s\n  } else {\n    now = (Date.now ? Date.now() : new Date().getTime()) / 1e3\n    if (getAsFloat) {\n      return now\n    }\n\n    // Math.round(now)\n    s = now | 0\n\n    return (Math.round((now - s) * 1e3) / 1e3) + ' ' + s\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["mktime(14, 10, 2, 2, 1, 2008)","mktime(0, 0, 0, 0, 1, 2008)","var $make = mktime()\nvar $td = new Date()\nvar $real = Math.floor($td.getTime() / 1000)\nvar $diff = ($real - $make)\n$diff < 5","mktime(0, 0, 0, 13, 1, 1997)","mktime(0, 0, 0, 1, 1, 1998)","mktime(0, 0, 0, 1, 1, 98)","mktime(23, 59, 59, 13, 0, 2010)","mktime(0, 0, -1, 1, 1, 1970)"],"estarget":"es5","returns":["1201875002","1196467200","true","883612800","883612800","883612800","1293839999","-1"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["baris ozdil","Kevin van Zonneveld (http://kvz.io)","FGFEmperor","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Marc Palau","Brett Zamir (http://brett-zamir.me)"],"revised by":["Theriault (https://github.com/Theriault)"],"input by":["gabriel paderni","Yannoo","jakes","3D-GRAF","Chris"]},"notes":["The return values of the following examples are\nreceived only if your system's timezone is UTC."],"layout":"function","title":"php'smktime in JavaScript","function":"mktime","category":"datetime","language":"php","alias":["/functions/php/mktime/","/functions/datetime/mktime/","/php/mktime/","/functions/mktime/"],"_content":"module.exports = function mktime () {\n  //  discuss at: http://locutusjs.io/php/mktime/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: baris ozdil\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FGFEmperor\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: gabriel paderni\n  //    input by: Yannoo\n  //    input by: jakes\n  //    input by: 3D-GRAF\n  //    input by: Chris\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Marc Palau\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: The return values of the following examples are\n  //      note 1: received only if your system's timezone is UTC.\n  //   example 1: mktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: mktime(0, 0, 0, 0, 1, 2008)\n  //   returns 2: 1196467200\n  //   example 3: var $make = mktime()\n  //   example 3: var $td = new Date()\n  //   example 3: var $real = Math.floor($td.getTime() / 1000)\n  //   example 3: var $diff = ($real - $make)\n  //   example 3: $diff < 5\n  //   returns 3: true\n  //   example 4: mktime(0, 0, 0, 13, 1, 1997)\n  //   returns 4: 883612800\n  //   example 5: mktime(0, 0, 0, 1, 1, 1998)\n  //   returns 5: 883612800\n  //   example 6: mktime(0, 0, 0, 1, 1, 98)\n  //   returns 6: 883612800\n  //   example 7: mktime(23, 59, 59, 13, 0, 2010)\n  //   returns 7: 1293839999\n  //   example 8: mktime(0, 0, -1, 1, 1, 1970)\n  //   returns 8: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['get' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n","source":"php/datetime/mktime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'mktime(14, 10, 2, 2, 1, 2008)'\n  - 'mktime(0, 0, 0, 0, 1, 2008)'\n  - |-\n    var $make = mktime()\n    var $td = new Date()\n    var $real = Math.floor($td.getTime() / 1000)\n    var $diff = ($real - $make)\n    $diff < 5\n  - 'mktime(0, 0, 0, 13, 1, 1997)'\n  - 'mktime(0, 0, 0, 1, 1, 1998)'\n  - 'mktime(0, 0, 0, 1, 1, 98)'\n  - 'mktime(23, 59, 59, 13, 0, 2010)'\n  - 'mktime(0, 0, -1, 1, 1, 1970)'\nestarget: es5\nreturns:\n  - '1201875002'\n  - '1196467200'\n  - 'true'\n  - '883612800'\n  - '883612800'\n  - '883612800'\n  - '1293839999'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - baris ozdil\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - FGFEmperor\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Marc Palau\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Theriault (https://github.com/Theriault)'\n  input by:\n    - gabriel paderni\n    - Yannoo\n    - jakes\n    - 3D-GRAF\n    - Chris\nnotes:\n  - |-\n    The return values of the following examples are\n    received only if your system's timezone is UTC.\nlayout: function\ntitle: php'smktime in JavaScript\nfunction: mktime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/mktime/\nalias:\n  - /functions/php/mktime/\n  - /functions/datetime/mktime/\n  - /php/mktime/\n  - /functions/mktime/\n---\nmodule.exports = function mktime () {\n  //  discuss at: http://locutusjs.io/php/mktime/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: baris ozdil\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FGFEmperor\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: gabriel paderni\n  //    input by: Yannoo\n  //    input by: jakes\n  //    input by: 3D-GRAF\n  //    input by: Chris\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Marc Palau\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: The return values of the following examples are\n  //      note 1: received only if your system's timezone is UTC.\n  //   example 1: mktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: mktime(0, 0, 0, 0, 1, 2008)\n  //   returns 2: 1196467200\n  //   example 3: var $make = mktime()\n  //   example 3: var $td = new Date()\n  //   example 3: var $real = Math.floor($td.getTime() / 1000)\n  //   example 3: var $diff = ($real - $make)\n  //   example 3: $diff < 5\n  //   returns 3: true\n  //   example 4: mktime(0, 0, 0, 13, 1, 1997)\n  //   returns 4: 883612800\n  //   example 5: mktime(0, 0, 0, 1, 1, 1998)\n  //   returns 5: 883612800\n  //   example 6: mktime(0, 0, 0, 1, 1, 98)\n  //   returns 6: 883612800\n  //   example 7: mktime(23, 59, 59, 13, 0, 2010)\n  //   returns 7: 1293839999\n  //   example 8: mktime(0, 0, -1, 1, 1, 1970)\n  //   returns 8: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['get' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/mktime/index.html","comments":1,"_id":"cinoeja040033ou9ytxsd82nf","content":"module.exports = function mktime () {\n  //  discuss at: http://locutusjs.io/php/mktime/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: baris ozdil\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FGFEmperor\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: gabriel paderni\n  //    input by: Yannoo\n  //    input by: jakes\n  //    input by: 3D-GRAF\n  //    input by: Chris\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Marc Palau\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: The return values of the following examples are\n  //      note 1: received only if your system's timezone is UTC.\n  //   example 1: mktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: mktime(0, 0, 0, 0, 1, 2008)\n  //   returns 2: 1196467200\n  //   example 3: var $make = mktime()\n  //   example 3: var $td = new Date()\n  //   example 3: var $real = Math.floor($td.getTime() / 1000)\n  //   example 3: var $diff = ($real - $make)\n  //   example 3: $diff < 5\n  //   returns 3: true\n  //   example 4: mktime(0, 0, 0, 13, 1, 1997)\n  //   returns 4: 883612800\n  //   example 5: mktime(0, 0, 0, 1, 1, 1998)\n  //   returns 5: 883612800\n  //   example 6: mktime(0, 0, 0, 1, 1, 98)\n  //   returns 6: 883612800\n  //   example 7: mktime(23, 59, 59, 13, 0, 2010)\n  //   returns 7: 1293839999\n  //   example 8: mktime(0, 0, -1, 1, 1, 1970)\n  //   returns 8: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['get' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 1=\"\" 69=\"\" 1000=\"\" 1900=\"\" ?=\"\" 2e3=\"\" :=\"\" (r[5]=\"\" <=\"100\" 0))=\"\" 0)=\"\" set=\"\" year,=\"\" month=\"\" (-1=\"\" to=\"\" fix=\"\" js=\"\" months),=\"\" and=\"\" date.=\"\" !this=\"\" must=\"\" come=\"\" before=\"\" the=\"\" call=\"\" sethours!=\"\" d.setfullyear(r[5],=\"\" r[3]=\"\" -=\"\" 1,=\"\" r[4])=\"\" hours,=\"\" minutes,=\"\" seconds.=\"\" d.sethours(r[0],=\"\" r[1],=\"\" r[2])=\"\" divide=\"\" milliseconds=\"\" by=\"\" return=\"\" seconds=\"\" drop=\"\" decimal.=\"\" add=\"\" second=\"\" if=\"\" negative=\"\" or=\"\" it'll=\"\" be=\"\" off=\"\" from=\"\" php=\"\" second.=\"\" (d.gettime()=\"\" 1e3=\"\">> 0) - (d.getTime() < 0)\n}\n</=>","excerpt":"","more":"module.exports = function mktime () {\n  //  discuss at: http://locutusjs.io/php/mktime/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: baris ozdil\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FGFEmperor\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: gabriel paderni\n  //    input by: Yannoo\n  //    input by: jakes\n  //    input by: 3D-GRAF\n  //    input by: Chris\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Marc Palau\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: The return values of the following examples are\n  //      note 1: received only if your system's timezone is UTC.\n  //   example 1: mktime(14, 10, 2, 2, 1, 2008)\n  //   returns 1: 1201875002\n  //   example 2: mktime(0, 0, 0, 0, 1, 2008)\n  //   returns 2: 1196467200\n  //   example 3: var $make = mktime()\n  //   example 3: var $td = new Date()\n  //   example 3: var $real = Math.floor($td.getTime() / 1000)\n  //   example 3: var $diff = ($real - $make)\n  //   example 3: $diff < 5\n  //   returns 3: true\n  //   example 4: mktime(0, 0, 0, 13, 1, 1997)\n  //   returns 4: 883612800\n  //   example 5: mktime(0, 0, 0, 1, 1, 1998)\n  //   returns 5: 883612800\n  //   example 6: mktime(0, 0, 0, 1, 1, 98)\n  //   returns 6: 883612800\n  //   example 7: mktime(23, 59, 59, 13, 0, 2010)\n  //   returns 7: 1293839999\n  //   example 8: mktime(0, 0, -1, 1, 1, 1970)\n  //   returns 8: -1\n\n  var d = new Date()\n  var r = arguments\n  var i = 0\n  var e = ['Hours', 'Minutes', 'Seconds', 'Month', 'Date', 'FullYear']\n\n  for (i = 0; i < e.length; i++) {\n    if (typeof r[i] === 'undefined') {\n      r[i] = d['get' + e[i]]()\n      // +1 to fix JS months.\n      r[i] += (i === 3)\n    } else {\n      r[i] = parseInt(r[i], 10)\n      if (isNaN(r[i])) {\n        return false\n      }\n    }\n  }\n\n  // Map years 0-69 to 2000-2069 and years 70-100 to 1970-2000.\n  r[5] += (r[5] >= 0 ? (r[5] <= 69 ? 2e3 : (r[5] <= 100 ? 1900 : 0)) : 0)\n\n  // Set year, month (-1 to fix JS months), and date.\n  // !This must come before the call to setHours!\n  d.setFullYear(r[5], r[3] - 1, r[4])\n\n  // Set hours, minutes, and seconds.\n  d.setHours(r[0], r[1], r[2])\n\n  // Divide milliseconds by 1000 to return seconds and drop decimal.\n  // Add 1 second if negative or it'll be off from PHP by 1 second.\n  return (d.getTime() / 1e3 >> 0) - (d.getTime() < 0)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strftime(\"%A\", 1062462400); // Return value will depend on date and locale"],"estarget":"es5","returns":["'Tuesday'"],"dependencies":[],"authors":{"original by":["Blues (http://tech.bluesmoon.info/)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Alex"]},"notes":["Uses global: locutus to store locale info"],"layout":"function","title":"php'sstrftime in JavaScript","function":"strftime","category":"datetime","language":"php","alias":["/functions/php/strftime/","/functions/datetime/strftime/","/php/strftime/","/functions/strftime/"],"_content":"module.exports = function strftime (fmt, timestamp) {\n  //       discuss at: http://locutusjs.io/php/strftime/\n  //      original by: Blues (http://tech.bluesmoon.info/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Alex\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Uses global: locutus to store locale info\n  //        example 1: strftime(\"%A\", 1062462400); // Return value will depend on date and locale\n  //        returns 1: 'Tuesday'\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var _xPad = function (x, pad, r) {\n    if (typeof r === 'undefined') {\n      r = 10\n    }\n    for (; parseInt(x, 10) < r && r > 1; r /= 10) {\n      x = pad.toString() + x\n    }\n    return x.toString()\n  }\n\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  var _formats = {\n    a: function (d) {\n      return lcTime.a[d.getDay()]\n    },\n    A: function (d) {\n      return lcTime.A[d.getDay()]\n    },\n    b: function (d) {\n      return lcTime.b[d.getMonth()]\n    },\n    B: function (d) {\n      return lcTime.B[d.getMonth()]\n    },\n    C: function (d) {\n      return _xPad(parseInt(d.getFullYear() / 100, 10), 0)\n    },\n    d: ['getDate', '0'],\n    e: ['getDate', ' '],\n    g: function (d) {\n      return _xPad(parseInt(this.G(d) / 100, 10), 0)\n    },\n    G: function (d) {\n      var y = d.getFullYear()\n      var V = parseInt(_formats.V(d), 10)\n      var W = parseInt(_formats.W(d), 10)\n\n      if (W > V) {\n        y++\n      } else if (W === 0 && V >= 52) {\n        y--\n      }\n\n      return y\n    },\n    H: ['getHours', '0'],\n    I: function (d) {\n      var I = d.getHours() % 12\n      return _xPad(I === 0 ? 12 : I, 0)\n    },\n    j: function (d) {\n      var ms = d - new Date('' + d.getFullYear() + '/1/1 GMT')\n      // Line differs from Yahoo implementation which would be\n      // equivalent to replacing it here with:\n      ms += d.getTimezoneOffset() * 60000\n      var doy = parseInt(ms / 60000 / 60 / 24, 10) + 1\n      return _xPad(doy, 0, 100)\n    },\n    k: ['getHours', '0'],\n    // not in PHP, but implemented here (as in Yahoo)\n    l: function (d) {\n      var l = d.getHours() % 12\n      return _xPad(l === 0 ? 12 : l, ' ')\n    },\n    m: function (d) {\n      return _xPad(d.getMonth() + 1, 0)\n    },\n    M: ['getMinutes', '0'],\n    p: function (d) {\n      return lcTime.p[d.getHours() >= 12 ? 1 : 0]\n    },\n    P: function (d) {\n      return lcTime.P[d.getHours() >= 12 ? 1 : 0]\n    },\n    s: function (d) {\n      // Yahoo uses return parseInt(d.getTime()/1000, 10);\n      return Date.parse(d) / 1000\n    },\n    S: ['getSeconds', '0'],\n    u: function (d) {\n      var dow = d.getDay()\n      return ((dow === 0) ? 7 : dow)\n    },\n    U: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 6 - d.getDay()\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0)\n    },\n    V: function (d) {\n      var woy = parseInt(_formats.W(d), 10)\n      var dow11 = (new Date('' + d.getFullYear() + '/1/1')).getDay()\n      // First week is 01 and not 00 as in the case of %U and %W,\n      // so we add 1 to the final result except if day 1 of the year\n      // is a Monday (then %W returns 01).\n      // We also need to subtract 1 if the day 1 of the year is\n      // Friday-Sunday, so the resulting equation becomes:\n      var idow = woy + (dow11 > 4 || dow11 <= 1 ? 0 : 1)\n      if (idow === 53 && (new Date('' + d.getFullYear() + '/12/31')).getDay() < 4) {\n        idow = 1\n      } else if (idow === 0) {\n        idow = _formats.V(new Date('' + (d.getFullYear() - 1) + '/12/31'))\n      }\n      return _xPad(idow, 0)\n    },\n    w: 'getDay',\n    W: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 7 - _formats.u(d)\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0, 10)\n    },\n    y: function (d) {\n      return _xPad(d.getFullYear() % 100, 0)\n    },\n    Y: 'getFullYear',\n    z: function (d) {\n      var o = d.getTimezoneOffset()\n      var H = _xPad(parseInt(Math.abs(o / 60), 10), 0)\n      var M = _xPad(o % 60, 0)\n      return (o > 0 ? '-' : '+') + H + M\n    },\n    Z: function (d) {\n      return d.toString().replace(/^.*\\(([^)]+)\\)$/, '$1')\n    },\n    '%': function (d) {\n      return '%'\n    }\n  }\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    h: '%b',\n    n: '\\n',\n    r: 'locale',\n    R: '%H:%M',\n    t: '\\t',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (fmt.match(/%[cDFhnrRtTxX]/)) {\n    fmt = fmt.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  // Now replace formats - we need a closure so that the date object gets passed through\n  var str = fmt.replace(/%([aAbBCdegGHIjklmMpPsSuUVwWyYzZ%])/g, function (m0, m1) {\n    var f = _formats[m1]\n    if (typeof f === 'string') {\n      return _date[f]()\n    } else if (typeof f === 'function') {\n      return f(_date)\n    } else if (typeof f === 'object' && typeof f[0] === 'string') {\n      return _xPad(_date[f[0]](), f[1])\n    } else {\n      // Shouldn't reach here\n      return m1\n    }\n  })\n\n  return str\n}\n","source":"php/datetime/strftime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strftime(\"%A\", 1062462400); // Return value will depend on date and locale'\nestarget: es5\nreturns:\n  - '''Tuesday'''\ndependencies: []\nauthors:\n  original by:\n    - 'Blues (http://tech.bluesmoon.info/)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Alex\nnotes:\n  - 'Uses global: locutus to store locale info'\nlayout: function\ntitle: php'sstrftime in JavaScript\nfunction: strftime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/strftime/\nalias:\n  - /functions/php/strftime/\n  - /functions/datetime/strftime/\n  - /php/strftime/\n  - /functions/strftime/\n---\nmodule.exports = function strftime (fmt, timestamp) {\n  //       discuss at: http://locutusjs.io/php/strftime/\n  //      original by: Blues (http://tech.bluesmoon.info/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Alex\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Uses global: locutus to store locale info\n  //        example 1: strftime(\"%A\", 1062462400); // Return value will depend on date and locale\n  //        returns 1: 'Tuesday'\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var _xPad = function (x, pad, r) {\n    if (typeof r === 'undefined') {\n      r = 10\n    }\n    for (; parseInt(x, 10) < r && r > 1; r /= 10) {\n      x = pad.toString() + x\n    }\n    return x.toString()\n  }\n\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  var _formats = {\n    a: function (d) {\n      return lcTime.a[d.getDay()]\n    },\n    A: function (d) {\n      return lcTime.A[d.getDay()]\n    },\n    b: function (d) {\n      return lcTime.b[d.getMonth()]\n    },\n    B: function (d) {\n      return lcTime.B[d.getMonth()]\n    },\n    C: function (d) {\n      return _xPad(parseInt(d.getFullYear() / 100, 10), 0)\n    },\n    d: ['getDate', '0'],\n    e: ['getDate', ' '],\n    g: function (d) {\n      return _xPad(parseInt(this.G(d) / 100, 10), 0)\n    },\n    G: function (d) {\n      var y = d.getFullYear()\n      var V = parseInt(_formats.V(d), 10)\n      var W = parseInt(_formats.W(d), 10)\n\n      if (W > V) {\n        y++\n      } else if (W === 0 && V >= 52) {\n        y--\n      }\n\n      return y\n    },\n    H: ['getHours', '0'],\n    I: function (d) {\n      var I = d.getHours() % 12\n      return _xPad(I === 0 ? 12 : I, 0)\n    },\n    j: function (d) {\n      var ms = d - new Date('' + d.getFullYear() + '/1/1 GMT')\n      // Line differs from Yahoo implementation which would be\n      // equivalent to replacing it here with:\n      ms += d.getTimezoneOffset() * 60000\n      var doy = parseInt(ms / 60000 / 60 / 24, 10) + 1\n      return _xPad(doy, 0, 100)\n    },\n    k: ['getHours', '0'],\n    // not in PHP, but implemented here (as in Yahoo)\n    l: function (d) {\n      var l = d.getHours() % 12\n      return _xPad(l === 0 ? 12 : l, ' ')\n    },\n    m: function (d) {\n      return _xPad(d.getMonth() + 1, 0)\n    },\n    M: ['getMinutes', '0'],\n    p: function (d) {\n      return lcTime.p[d.getHours() >= 12 ? 1 : 0]\n    },\n    P: function (d) {\n      return lcTime.P[d.getHours() >= 12 ? 1 : 0]\n    },\n    s: function (d) {\n      // Yahoo uses return parseInt(d.getTime()/1000, 10);\n      return Date.parse(d) / 1000\n    },\n    S: ['getSeconds', '0'],\n    u: function (d) {\n      var dow = d.getDay()\n      return ((dow === 0) ? 7 : dow)\n    },\n    U: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 6 - d.getDay()\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0)\n    },\n    V: function (d) {\n      var woy = parseInt(_formats.W(d), 10)\n      var dow11 = (new Date('' + d.getFullYear() + '/1/1')).getDay()\n      // First week is 01 and not 00 as in the case of %U and %W,\n      // so we add 1 to the final result except if day 1 of the year\n      // is a Monday (then %W returns 01).\n      // We also need to subtract 1 if the day 1 of the year is\n      // Friday-Sunday, so the resulting equation becomes:\n      var idow = woy + (dow11 > 4 || dow11 <= 1 ? 0 : 1)\n      if (idow === 53 && (new Date('' + d.getFullYear() + '/12/31')).getDay() < 4) {\n        idow = 1\n      } else if (idow === 0) {\n        idow = _formats.V(new Date('' + (d.getFullYear() - 1) + '/12/31'))\n      }\n      return _xPad(idow, 0)\n    },\n    w: 'getDay',\n    W: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 7 - _formats.u(d)\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0, 10)\n    },\n    y: function (d) {\n      return _xPad(d.getFullYear() % 100, 0)\n    },\n    Y: 'getFullYear',\n    z: function (d) {\n      var o = d.getTimezoneOffset()\n      var H = _xPad(parseInt(Math.abs(o / 60), 10), 0)\n      var M = _xPad(o % 60, 0)\n      return (o > 0 ? '-' : '+') + H + M\n    },\n    Z: function (d) {\n      return d.toString().replace(/^.*\\(([^)]+)\\)$/, '$1')\n    },\n    '%': function (d) {\n      return '%'\n    }\n  }\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    h: '%b',\n    n: '\\n',\n    r: 'locale',\n    R: '%H:%M',\n    t: '\\t',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (fmt.match(/%[cDFhnrRtTxX]/)) {\n    fmt = fmt.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  // Now replace formats - we need a closure so that the date object gets passed through\n  var str = fmt.replace(/%([aAbBCdegGHIjklmMpPsSuUVwWyYzZ%])/g, function (m0, m1) {\n    var f = _formats[m1]\n    if (typeof f === 'string') {\n      return _date[f]()\n    } else if (typeof f === 'function') {\n      return f(_date)\n    } else if (typeof f === 'object' && typeof f[0] === 'string') {\n      return _xPad(_date[f[0]](), f[1])\n    } else {\n      // Shouldn't reach here\n      return m1\n    }\n  })\n\n  return str\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/strftime/index.html","comments":1,"_id":"cinoeja040034ou9ylw6o30fx","content":"module.exports = function strftime (fmt, timestamp) {\n  //       discuss at: http://locutusjs.io/php/strftime/\n  //      original by: Blues (http://tech.bluesmoon.info/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Alex\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Uses global: locutus to store locale info\n  //        example 1: strftime(\"%A\", 1062462400); // Return value will depend on date and locale\n  //        returns 1: 'Tuesday'\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var _xPad = function (x, pad, r) {\n    if (typeof r === 'undefined') {\n      r = 10\n    }\n    for (; parseInt(x, 10) < r && r > 1; r /= 10) {\n      x = pad.toString() + x\n    }\n    return x.toString()\n  }\n\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  var _formats = {\n    a: function (d) {\n      return lcTime.a[d.getDay()]\n    },\n    A: function (d) {\n      return lcTime.A[d.getDay()]\n    },\n    b: function (d) {\n      return lcTime.b[d.getMonth()]\n    },\n    B: function (d) {\n      return lcTime.B[d.getMonth()]\n    },\n    C: function (d) {\n      return _xPad(parseInt(d.getFullYear() / 100, 10), 0)\n    },\n    d: ['getDate', '0'],\n    e: ['getDate', ' '],\n    g: function (d) {\n      return _xPad(parseInt(this.G(d) / 100, 10), 0)\n    },\n    G: function (d) {\n      var y = d.getFullYear()\n      var V = parseInt(_formats.V(d), 10)\n      var W = parseInt(_formats.W(d), 10)\n\n      if (W > V) {\n        y++\n      } else if (W === 0 && V >= 52) {\n        y--\n      }\n\n      return y\n    },\n    H: ['getHours', '0'],\n    I: function (d) {\n      var I = d.getHours() % 12\n      return _xPad(I === 0 ? 12 : I, 0)\n    },\n    j: function (d) {\n      var ms = d - new Date('' + d.getFullYear() + '/1/1 GMT')\n      // Line differs from Yahoo implementation which would be\n      // equivalent to replacing it here with:\n      ms += d.getTimezoneOffset() * 60000\n      var doy = parseInt(ms / 60000 / 60 / 24, 10) + 1\n      return _xPad(doy, 0, 100)\n    },\n    k: ['getHours', '0'],\n    // not in PHP, but implemented here (as in Yahoo)\n    l: function (d) {\n      var l = d.getHours() % 12\n      return _xPad(l === 0 ? 12 : l, ' ')\n    },\n    m: function (d) {\n      return _xPad(d.getMonth() + 1, 0)\n    },\n    M: ['getMinutes', '0'],\n    p: function (d) {\n      return lcTime.p[d.getHours() >= 12 ? 1 : 0]\n    },\n    P: function (d) {\n      return lcTime.P[d.getHours() >= 12 ? 1 : 0]\n    },\n    s: function (d) {\n      // Yahoo uses return parseInt(d.getTime()/1000, 10);\n      return Date.parse(d) / 1000\n    },\n    S: ['getSeconds', '0'],\n    u: function (d) {\n      var dow = d.getDay()\n      return ((dow === 0) ? 7 : dow)\n    },\n    U: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 6 - d.getDay()\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0)\n    },\n    V: function (d) {\n      var woy = parseInt(_formats.W(d), 10)\n      var dow11 = (new Date('' + d.getFullYear() + '/1/1')).getDay()\n      // First week is 01 and not 00 as in the case of %U and %W,\n      // so we add 1 to the final result except if day 1 of the year\n      // is a Monday (then %W returns 01).\n      // We also need to subtract 1 if the day 1 of the year is\n      // Friday-Sunday, so the resulting equation becomes:\n      var idow = woy + (dow11 > 4 || dow11 <= 0=\"\" 1=\"\" 12=\"\" 53=\"\" ?=\"\" :=\"\" 1)=\"\" if=\"\" (idow=\"==\" &&=\"\" (new=\"\" date(''=\"\" +=\"\" d.getfullyear()=\"\" '=\"\" 31')).getday()=\"\" <=\"\" 4)=\"\" {=\"\" idow=\"1\" }=\"\" else=\"\" 0)=\"\" (d.getfullyear()=\"\" -=\"\" 31'))=\"\" return=\"\" _xpad(idow,=\"\" },=\"\" w:=\"\" 'getday',=\"\" function=\"\" (d)=\"\" var=\"\" doy=\"parseInt(_formats.j(d),\" 10)=\"\" rdow=\"7\" _formats.u(d)=\"\" woy=\"parseInt((doy\" rdow)=\"\" 7,=\"\" _xpad(woy,=\"\" 0,=\"\" y:=\"\" _xpad(d.getfullyear()=\"\" %=\"\" 100,=\"\" 'getfullyear',=\"\" z:=\"\" o=\"d.getTimezoneOffset()\" h=\"_xPad(parseInt(Math.abs(o\" 60),=\"\" 10),=\"\" m=\"_xPad(o\" 60,=\"\" (o=\"\"> 0 ? '-' : '+') + H + M\n    },\n    Z: function (d) {\n      return d.toString().replace(/^.*\\(([^)]+)\\)$/, '$1')\n    },\n    '%': function (d) {\n      return '%'\n    }\n  }\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    h: '%b',\n    n: '\\n',\n    r: 'locale',\n    R: '%H:%M',\n    t: '\\t',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (fmt.match(/%[cDFhnrRtTxX]/)) {\n    fmt = fmt.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  // Now replace formats - we need a closure so that the date object gets passed through\n  var str = fmt.replace(/%([aAbBCdegGHIjklmMpPsSuUVwWyYzZ%])/g, function (m0, m1) {\n    var f = _formats[m1]\n    if (typeof f === 'string') {\n      return _date[f]()\n    } else if (typeof f === 'function') {\n      return f(_date)\n    } else if (typeof f === 'object' && typeof f[0] === 'string') {\n      return _xPad(_date[f[0]](), f[1])\n    } else {\n      // Shouldn't reach here\n      return m1\n    }\n  })\n\n  return str\n}\n</=>","excerpt":"","more":"module.exports = function strftime (fmt, timestamp) {\n  //       discuss at: http://locutusjs.io/php/strftime/\n  //      original by: Blues (http://tech.bluesmoon.info/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Alex\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Uses global: locutus to store locale info\n  //        example 1: strftime(\"%A\", 1062462400); // Return value will depend on date and locale\n  //        returns 1: 'Tuesday'\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var _xPad = function (x, pad, r) {\n    if (typeof r === 'undefined') {\n      r = 10\n    }\n    for (; parseInt(x, 10) < r && r > 1; r /= 10) {\n      x = pad.toString() + x\n    }\n    return x.toString()\n  }\n\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  var _formats = {\n    a: function (d) {\n      return lcTime.a[d.getDay()]\n    },\n    A: function (d) {\n      return lcTime.A[d.getDay()]\n    },\n    b: function (d) {\n      return lcTime.b[d.getMonth()]\n    },\n    B: function (d) {\n      return lcTime.B[d.getMonth()]\n    },\n    C: function (d) {\n      return _xPad(parseInt(d.getFullYear() / 100, 10), 0)\n    },\n    d: ['getDate', '0'],\n    e: ['getDate', ' '],\n    g: function (d) {\n      return _xPad(parseInt(this.G(d) / 100, 10), 0)\n    },\n    G: function (d) {\n      var y = d.getFullYear()\n      var V = parseInt(_formats.V(d), 10)\n      var W = parseInt(_formats.W(d), 10)\n\n      if (W > V) {\n        y++\n      } else if (W === 0 && V >= 52) {\n        y--\n      }\n\n      return y\n    },\n    H: ['getHours', '0'],\n    I: function (d) {\n      var I = d.getHours() % 12\n      return _xPad(I === 0 ? 12 : I, 0)\n    },\n    j: function (d) {\n      var ms = d - new Date('' + d.getFullYear() + '/1/1 GMT')\n      // Line differs from Yahoo implementation which would be\n      // equivalent to replacing it here with:\n      ms += d.getTimezoneOffset() * 60000\n      var doy = parseInt(ms / 60000 / 60 / 24, 10) + 1\n      return _xPad(doy, 0, 100)\n    },\n    k: ['getHours', '0'],\n    // not in PHP, but implemented here (as in Yahoo)\n    l: function (d) {\n      var l = d.getHours() % 12\n      return _xPad(l === 0 ? 12 : l, ' ')\n    },\n    m: function (d) {\n      return _xPad(d.getMonth() + 1, 0)\n    },\n    M: ['getMinutes', '0'],\n    p: function (d) {\n      return lcTime.p[d.getHours() >= 12 ? 1 : 0]\n    },\n    P: function (d) {\n      return lcTime.P[d.getHours() >= 12 ? 1 : 0]\n    },\n    s: function (d) {\n      // Yahoo uses return parseInt(d.getTime()/1000, 10);\n      return Date.parse(d) / 1000\n    },\n    S: ['getSeconds', '0'],\n    u: function (d) {\n      var dow = d.getDay()\n      return ((dow === 0) ? 7 : dow)\n    },\n    U: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 6 - d.getDay()\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0)\n    },\n    V: function (d) {\n      var woy = parseInt(_formats.W(d), 10)\n      var dow11 = (new Date('' + d.getFullYear() + '/1/1')).getDay()\n      // First week is 01 and not 00 as in the case of %U and %W,\n      // so we add 1 to the final result except if day 1 of the year\n      // is a Monday (then %W returns 01).\n      // We also need to subtract 1 if the day 1 of the year is\n      // Friday-Sunday, so the resulting equation becomes:\n      var idow = woy + (dow11 > 4 || dow11 <= 1 ? 0 : 1)\n      if (idow === 53 && (new Date('' + d.getFullYear() + '/12/31')).getDay() < 4) {\n        idow = 1\n      } else if (idow === 0) {\n        idow = _formats.V(new Date('' + (d.getFullYear() - 1) + '/12/31'))\n      }\n      return _xPad(idow, 0)\n    },\n    w: 'getDay',\n    W: function (d) {\n      var doy = parseInt(_formats.j(d), 10)\n      var rdow = 7 - _formats.u(d)\n      var woy = parseInt((doy + rdow) / 7, 10)\n      return _xPad(woy, 0, 10)\n    },\n    y: function (d) {\n      return _xPad(d.getFullYear() % 100, 0)\n    },\n    Y: 'getFullYear',\n    z: function (d) {\n      var o = d.getTimezoneOffset()\n      var H = _xPad(parseInt(Math.abs(o / 60), 10), 0)\n      var M = _xPad(o % 60, 0)\n      return (o > 0 ? '-' : '+') + H + M\n    },\n    Z: function (d) {\n      return d.toString().replace(/^.*\\(([^)]+)\\)$/, '$1')\n    },\n    '%': function (d) {\n      return '%'\n    }\n  }\n\n  var _date = (typeof timestamp === 'undefined')\n    ? new Date()\n    : (timestamp instanceof Date)\n      ? new Date(timestamp)\n      : new Date(timestamp * 1000)\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    h: '%b',\n    n: '\\n',\n    r: 'locale',\n    R: '%H:%M',\n    t: '\\t',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (fmt.match(/%[cDFhnrRtTxX]/)) {\n    fmt = fmt.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  // Now replace formats - we need a closure so that the date object gets passed through\n  var str = fmt.replace(/%([aAbBCdegGHIjklmMpPsSuUVwWyYzZ%])/g, function (m0, m1) {\n    var f = _formats[m1]\n    if (typeof f === 'string') {\n      return _date[f]()\n    } else if (typeof f === 'function') {\n      return f(_date)\n    } else if (typeof f === 'object' && typeof f[0] === 'string') {\n      return _xPad(_date[f[0]](), f[1])\n    } else {\n      // Shouldn't reach here\n      return m1\n    }\n  })\n\n  return str\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale","strptime('2009extra', '%Y')"],"estarget":"es5","returns":["{tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}","{tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","strftime"]},"notes":[],"layout":"function","title":"php'sstrptime in JavaScript","function":"strptime","category":"datetime","language":"php","alias":["/functions/php/strptime/","/functions/datetime/strptime/","/php/strptime/","/functions/strptime/"],"_content":"module.exports = function strptime (dateStr, format) {\n  //  discuss at: http://locutusjs.io/php/strptime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strftime\n  //   example 1: strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale\n  //   returns 1: {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}\n  //   example 2: strptime('2009extra', '%Y')\n  //   returns 2: {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}\n\n  var setlocale = require('../strings/setlocale')\n  var arrayMap = require('../array/array_map')\n\n  var retObj = {\n    tm_sec: 0,\n    tm_min: 0,\n    tm_hour: 0,\n    tm_mday: 0,\n    tm_mon: 0,\n    tm_year: 0,\n    tm_wday: 0,\n    tm_yday: 0,\n    unparsed: ''\n  }\n  var i = 0\n  var j = 0\n  var amPmOffset = 0\n  var prevHour = false\n  var _reset = function (dateObj, realMday) {\n    // realMday is to allow for a value of 0 in return results (but without\n    // messing up the Date() object)\n    var jan1\n    var o = retObj\n    var d = dateObj\n    o.tm_sec = d.getUTCSeconds()\n    o.tm_min = d.getUTCMinutes()\n    o.tm_hour = d.getUTCHours()\n    o.tm_mday = realMday === 0 ? realMday : d.getUTCDate()\n    o.tm_mon = d.getUTCMonth()\n    o.tm_year = d.getUTCFullYear() - 1900\n    o.tm_wday = realMday === 0 ? (d.getUTCDay() > 0 ? d.getUTCDay() - 1 : 6) : d.getUTCDay()\n    jan1 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    o.tm_yday = Math.ceil((d - jan1) / (1000 * 60 * 60 * 24))\n  }\n  var _date = function () {\n    var o = retObj\n    // We set date to at least 1 to ensure year or month doesn't go backwards\n    return _reset(new Date(Date.UTC(\n      o.tm_year + 1900,\n      o.tm_mon,\n      o.tm_mday || 1,\n      o.tm_hour,\n      o.tm_min,\n      o.tm_sec\n    )),\n    o.tm_mday)\n  }\n\n  var _NWS = /\\S/\n  var _WS = /\\s/\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    r: 'locale',\n    R: '%H:%M',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  /* Fix: Locale alternatives are supported though not documented in PHP; see http://linux.die.net/man/3/strptime\n    Ec\n    EC\n    Ex\n    EX\n    Ey\n    EY\n    Od or Oe\n    OH\n    OI\n    Om\n    OM\n    OS\n    OU\n    Ow\n    OW\n    Oy\n  */\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (format.match(/%[cDFhnrRtTxX]/)) {\n    format = format.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (typeof regex === 'string') {\n      regex = new RegExp('^' + regex, 'i')\n    }\n    var check = dateStr.slice(j)\n    var match = regex.exec(check)\n    // Even if the callback returns null after assigning to the\n    // return object, the object won't be saved anyways\n    var testNull = match ? cb.apply(null, match) : null\n    if (testNull === null) {\n      throw new Error('No match in string')\n    }\n    return j + match[0].length\n  }\n\n  var _addLocalized = function (j, formatChar, category) {\n    // Could make each parenthesized instead and pass index to callback:\n    return _addNext(j, arrayMap(_pregQuote, lcTime[formatChar]).join('|'),\n      function (m) {\n        var match = lcTime[formatChar].search(new RegExp('^' + _pregQuote(m) + '$', 'i'))\n        if (match) {\n          retObj[category] = match[0]\n        }\n      })\n  }\n\n  // BEGIN PROCESSING CHARACTERS\n  for (i = 0, j = 0; i < format.length; i++) {\n    if (format.charAt(i) === '%') {\n      var literalPos = ['%', 'n', 't'].indexOf(format.charAt(i + 1))\n      if (literalPos !== -1) {\n        if (['%', '\\n', '\\t'].indexOf(dateStr.charAt(j)) === literalPos) {\n          // a matched literal\n          ++i;\n          // skip beyond\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return false\n      }\n      var formatChar = format.charAt(i + 1)\n      try {\n        switch (formatChar) {\n          case 'a':\n          case 'A':\n            // Sunday-Saturday\n            // Changes nothing else\n            j = _addLocalized(j, formatChar, 'tm_wday')\n            break\n          case 'h':\n          case 'b':\n            // Jan-Dec\n            j = _addLocalized(j, 'b', 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'B':\n            // January-December\n            j = _addLocalized(j, formatChar, 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'C':\n            // 0+; century (19 for 20th)\n            // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              var year = (parseInt(d, 10) - 19) * 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'd':\n          case 'e':\n            // 1-31 day\n            j = _addNext(j, formatChar === 'd'\n              ? /^(0[1-9]|[1-2]\\d|3[0-1])/\n              : /^([1-2]\\d|3[0-1]|[1-9])/,\n            function (d) {\n              var dayMonth = parseInt(d, 10)\n              retObj.tm_mday = dayMonth\n              // Also changes w_day, y_day\n              _date()\n            })\n            break\n          case 'g':\n            // No apparent effect; 2-digit year (see 'V')\n            break\n          case 'G':\n            // No apparent effect; 4-digit year (see 'V')'\n            break\n          case 'H':\n            // 00-23 hours\n            j = _addNext(j, /^([0-1]\\d|2[0-3])/, function (d) {\n              var hour = parseInt(d, 10)\n              retObj.tm_hour = hour\n              // Changes nothing else\n            })\n            break\n          case 'l':\n          case 'I':\n            // 01-12 hours\n            j = _addNext(j, formatChar === 'l'\n              ? /^([1-9]|1[0-2])/\n              : /^(0[1-9]|1[0-2])/,\n            function (d) {\n              var hour = parseInt(d, 10) - 1 + amPmOffset\n              retObj.tm_hour = hour\n              // Used for coordinating with am-pm\n              prevHour = true\n              // Changes nothing else, but affected by prior 'p/P'\n            })\n            break\n          case 'j':\n            // 001-366 day of year\n            j = _addNext(j, /^(00[1-9]|0[1-9]\\d|[1-2]\\d\\d|3[0-6][0-6])/, function (d) {\n              var dayYear = parseInt(d, 10) - 1\n              retObj.tm_yday = dayYear\n              // Changes nothing else\n              // (oddly, since if original by a given year, could calculate other fields)\n            })\n            break\n          case 'm':\n            // 01-12 month\n            j = _addNext(j, /^(0[1-9]|1[0-2])/, function (d) {\n              var month = parseInt(d, 10) - 1\n              retObj.tm_mon = month\n            // Also sets wday and yday\n              _date()\n            })\n            break\n          case 'M':\n            // 00-59 minutes\n            j = _addNext(j, /^[0-5]\\d/, function (d) {\n              var minute = parseInt(d, 10)\n              retObj.tm_min = minute\n            // Changes nothing else\n            })\n            break\n          case 'P':\n            // Seems not to work; AM-PM\n            // Could make fall-through instead since supposed to be a synonym despite PHP docs\n            return false\n          case 'p':\n            // am-pm\n            j = _addNext(j, /^(am|pm)/i, function (d) {\n              // No effect on 'H' since already 24 hours but\n              //   works before or after setting of l/I hour\n              amPmOffset = (/a/)\n              .test(d) ? 0 : 12\n              if (prevHour) {\n                retObj.tm_hour += amPmOffset\n              }\n            })\n            break\n          case 's':\n            // Unix timestamp (in seconds)\n            j = _addNext(j, /^\\d+/, function (d) {\n              var timestamp = parseInt(d, 10)\n              var date = new Date(Date.UTC(timestamp * 1000))\n              _reset(date)\n              // Affects all fields, but can't be negative (and initial + not allowed)\n            })\n            break\n          case 'S':\n            // 00-59 seconds\n            j = _addNext(j, /^[0-5]\\d/, // strptime also accepts 60-61 for some reason\n\n            function (d) {\n              var second = parseInt(d, 10)\n              retObj.tm_sec = second\n              // Changes nothing else\n            })\n            break\n          case 'u':\n          case 'w':\n            // 0 (Sunday)-6(Saturday)\n            j = _addNext(j, /^\\d/, function (d) {\n              retObj.tm_wday = d - (formatChar === 'u')\n              // Changes nothing else apparently\n            })\n            break\n          case 'U':\n          case 'V':\n          case 'W':\n            // Apparently ignored (week of year, from 1st Monday)\n            break\n          case 'y':\n            // 69 (or higher) for 1969+, 68 (or lower) for 2068-\n             // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              d = parseInt(d, 10)\n              var year = d >= 69 ? d : d + 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'Y':\n            // 2010 (4-digit year)\n            // PHP docs say four-digit, but accepts one-digit (four-digit max):\n            j = _addNext(j, /^\\d{1,4}/,\n\n            function (d) {\n              var year = (parseInt(d, 10)) - 1900\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'z':\n            // Timezone; on my system, strftime gives -0800,\n            // but strptime seems not to alter hour setting\n            break\n          case 'Z':\n            // Timezone; on my system, strftime gives PST, but strptime treats text as unparsed\n            break\n          default:\n            throw new Error('Unrecognized formatting character in strptime()')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          // There was supposed to be a matching format but there wasn't\n          return false\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== dateStr.charAt(j)) {\n      // If extra whitespace at beginning or end of either, or between formats, no problem\n      // (just a problem when between % and format specifier)\n\n      // If the string has white-space, it is ok to ignore\n      if (dateStr.charAt(j).search(_WS) !== -1) {\n        j++\n        // Let the next iteration try again with the same format character\n        i--\n      } else if (format.charAt(i).search(_NWS) !== -1) {\n        // Any extra formatting characters besides white-space causes\n        // problems (do check after WS though, as may just be WS in string before next character)\n        return false\n      }\n      // Extra WS in format\n      // Adjust strings when encounter non-matching whitespace, so they align in future checks above\n      // Will check on next iteration (against same (non-WS) string character)\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  // Will also get extra whitespace; empty string if none\n  retObj.unparsed = dateStr.slice(j)\n  return retObj\n}\n","source":"php/datetime/strptime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on\n    date and locale\n  - 'strptime(''2009extra'', ''%Y'')'\nestarget: es5\nreturns:\n  - >-\n    {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109,\n    tm_wday: 4, tm_yday: 315, unparsed: ''}\n  - >-\n    {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3,\n    tm_yday: -1, unparsed: 'extra'}\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - strftime\nnotes: []\nlayout: function\ntitle: php'sstrptime in JavaScript\nfunction: strptime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/strptime/\nalias:\n  - /functions/php/strptime/\n  - /functions/datetime/strptime/\n  - /php/strptime/\n  - /functions/strptime/\n---\nmodule.exports = function strptime (dateStr, format) {\n  //  discuss at: http://locutusjs.io/php/strptime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strftime\n  //   example 1: strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale\n  //   returns 1: {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}\n  //   example 2: strptime('2009extra', '%Y')\n  //   returns 2: {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}\n\n  var setlocale = require('../strings/setlocale')\n  var arrayMap = require('../array/array_map')\n\n  var retObj = {\n    tm_sec: 0,\n    tm_min: 0,\n    tm_hour: 0,\n    tm_mday: 0,\n    tm_mon: 0,\n    tm_year: 0,\n    tm_wday: 0,\n    tm_yday: 0,\n    unparsed: ''\n  }\n  var i = 0\n  var j = 0\n  var amPmOffset = 0\n  var prevHour = false\n  var _reset = function (dateObj, realMday) {\n    // realMday is to allow for a value of 0 in return results (but without\n    // messing up the Date() object)\n    var jan1\n    var o = retObj\n    var d = dateObj\n    o.tm_sec = d.getUTCSeconds()\n    o.tm_min = d.getUTCMinutes()\n    o.tm_hour = d.getUTCHours()\n    o.tm_mday = realMday === 0 ? realMday : d.getUTCDate()\n    o.tm_mon = d.getUTCMonth()\n    o.tm_year = d.getUTCFullYear() - 1900\n    o.tm_wday = realMday === 0 ? (d.getUTCDay() > 0 ? d.getUTCDay() - 1 : 6) : d.getUTCDay()\n    jan1 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    o.tm_yday = Math.ceil((d - jan1) / (1000 * 60 * 60 * 24))\n  }\n  var _date = function () {\n    var o = retObj\n    // We set date to at least 1 to ensure year or month doesn't go backwards\n    return _reset(new Date(Date.UTC(\n      o.tm_year + 1900,\n      o.tm_mon,\n      o.tm_mday || 1,\n      o.tm_hour,\n      o.tm_min,\n      o.tm_sec\n    )),\n    o.tm_mday)\n  }\n\n  var _NWS = /\\S/\n  var _WS = /\\s/\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    r: 'locale',\n    R: '%H:%M',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  /* Fix: Locale alternatives are supported though not documented in PHP; see http://linux.die.net/man/3/strptime\n    Ec\n    EC\n    Ex\n    EX\n    Ey\n    EY\n    Od or Oe\n    OH\n    OI\n    Om\n    OM\n    OS\n    OU\n    Ow\n    OW\n    Oy\n  */\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (format.match(/%[cDFhnrRtTxX]/)) {\n    format = format.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (typeof regex === 'string') {\n      regex = new RegExp('^' + regex, 'i')\n    }\n    var check = dateStr.slice(j)\n    var match = regex.exec(check)\n    // Even if the callback returns null after assigning to the\n    // return object, the object won't be saved anyways\n    var testNull = match ? cb.apply(null, match) : null\n    if (testNull === null) {\n      throw new Error('No match in string')\n    }\n    return j + match[0].length\n  }\n\n  var _addLocalized = function (j, formatChar, category) {\n    // Could make each parenthesized instead and pass index to callback:\n    return _addNext(j, arrayMap(_pregQuote, lcTime[formatChar]).join('|'),\n      function (m) {\n        var match = lcTime[formatChar].search(new RegExp('^' + _pregQuote(m) + '$', 'i'))\n        if (match) {\n          retObj[category] = match[0]\n        }\n      })\n  }\n\n  // BEGIN PROCESSING CHARACTERS\n  for (i = 0, j = 0; i < format.length; i++) {\n    if (format.charAt(i) === '%') {\n      var literalPos = ['%', 'n', 't'].indexOf(format.charAt(i + 1))\n      if (literalPos !== -1) {\n        if (['%', '\\n', '\\t'].indexOf(dateStr.charAt(j)) === literalPos) {\n          // a matched literal\n          ++i;\n          // skip beyond\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return false\n      }\n      var formatChar = format.charAt(i + 1)\n      try {\n        switch (formatChar) {\n          case 'a':\n          case 'A':\n            // Sunday-Saturday\n            // Changes nothing else\n            j = _addLocalized(j, formatChar, 'tm_wday')\n            break\n          case 'h':\n          case 'b':\n            // Jan-Dec\n            j = _addLocalized(j, 'b', 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'B':\n            // January-December\n            j = _addLocalized(j, formatChar, 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'C':\n            // 0+; century (19 for 20th)\n            // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              var year = (parseInt(d, 10) - 19) * 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'd':\n          case 'e':\n            // 1-31 day\n            j = _addNext(j, formatChar === 'd'\n              ? /^(0[1-9]|[1-2]\\d|3[0-1])/\n              : /^([1-2]\\d|3[0-1]|[1-9])/,\n            function (d) {\n              var dayMonth = parseInt(d, 10)\n              retObj.tm_mday = dayMonth\n              // Also changes w_day, y_day\n              _date()\n            })\n            break\n          case 'g':\n            // No apparent effect; 2-digit year (see 'V')\n            break\n          case 'G':\n            // No apparent effect; 4-digit year (see 'V')'\n            break\n          case 'H':\n            // 00-23 hours\n            j = _addNext(j, /^([0-1]\\d|2[0-3])/, function (d) {\n              var hour = parseInt(d, 10)\n              retObj.tm_hour = hour\n              // Changes nothing else\n            })\n            break\n          case 'l':\n          case 'I':\n            // 01-12 hours\n            j = _addNext(j, formatChar === 'l'\n              ? /^([1-9]|1[0-2])/\n              : /^(0[1-9]|1[0-2])/,\n            function (d) {\n              var hour = parseInt(d, 10) - 1 + amPmOffset\n              retObj.tm_hour = hour\n              // Used for coordinating with am-pm\n              prevHour = true\n              // Changes nothing else, but affected by prior 'p/P'\n            })\n            break\n          case 'j':\n            // 001-366 day of year\n            j = _addNext(j, /^(00[1-9]|0[1-9]\\d|[1-2]\\d\\d|3[0-6][0-6])/, function (d) {\n              var dayYear = parseInt(d, 10) - 1\n              retObj.tm_yday = dayYear\n              // Changes nothing else\n              // (oddly, since if original by a given year, could calculate other fields)\n            })\n            break\n          case 'm':\n            // 01-12 month\n            j = _addNext(j, /^(0[1-9]|1[0-2])/, function (d) {\n              var month = parseInt(d, 10) - 1\n              retObj.tm_mon = month\n            // Also sets wday and yday\n              _date()\n            })\n            break\n          case 'M':\n            // 00-59 minutes\n            j = _addNext(j, /^[0-5]\\d/, function (d) {\n              var minute = parseInt(d, 10)\n              retObj.tm_min = minute\n            // Changes nothing else\n            })\n            break\n          case 'P':\n            // Seems not to work; AM-PM\n            // Could make fall-through instead since supposed to be a synonym despite PHP docs\n            return false\n          case 'p':\n            // am-pm\n            j = _addNext(j, /^(am|pm)/i, function (d) {\n              // No effect on 'H' since already 24 hours but\n              //   works before or after setting of l/I hour\n              amPmOffset = (/a/)\n              .test(d) ? 0 : 12\n              if (prevHour) {\n                retObj.tm_hour += amPmOffset\n              }\n            })\n            break\n          case 's':\n            // Unix timestamp (in seconds)\n            j = _addNext(j, /^\\d+/, function (d) {\n              var timestamp = parseInt(d, 10)\n              var date = new Date(Date.UTC(timestamp * 1000))\n              _reset(date)\n              // Affects all fields, but can't be negative (and initial + not allowed)\n            })\n            break\n          case 'S':\n            // 00-59 seconds\n            j = _addNext(j, /^[0-5]\\d/, // strptime also accepts 60-61 for some reason\n\n            function (d) {\n              var second = parseInt(d, 10)\n              retObj.tm_sec = second\n              // Changes nothing else\n            })\n            break\n          case 'u':\n          case 'w':\n            // 0 (Sunday)-6(Saturday)\n            j = _addNext(j, /^\\d/, function (d) {\n              retObj.tm_wday = d - (formatChar === 'u')\n              // Changes nothing else apparently\n            })\n            break\n          case 'U':\n          case 'V':\n          case 'W':\n            // Apparently ignored (week of year, from 1st Monday)\n            break\n          case 'y':\n            // 69 (or higher) for 1969+, 68 (or lower) for 2068-\n             // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              d = parseInt(d, 10)\n              var year = d >= 69 ? d : d + 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'Y':\n            // 2010 (4-digit year)\n            // PHP docs say four-digit, but accepts one-digit (four-digit max):\n            j = _addNext(j, /^\\d{1,4}/,\n\n            function (d) {\n              var year = (parseInt(d, 10)) - 1900\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'z':\n            // Timezone; on my system, strftime gives -0800,\n            // but strptime seems not to alter hour setting\n            break\n          case 'Z':\n            // Timezone; on my system, strftime gives PST, but strptime treats text as unparsed\n            break\n          default:\n            throw new Error('Unrecognized formatting character in strptime()')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          // There was supposed to be a matching format but there wasn't\n          return false\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== dateStr.charAt(j)) {\n      // If extra whitespace at beginning or end of either, or between formats, no problem\n      // (just a problem when between % and format specifier)\n\n      // If the string has white-space, it is ok to ignore\n      if (dateStr.charAt(j).search(_WS) !== -1) {\n        j++\n        // Let the next iteration try again with the same format character\n        i--\n      } else if (format.charAt(i).search(_NWS) !== -1) {\n        // Any extra formatting characters besides white-space causes\n        // problems (do check after WS though, as may just be WS in string before next character)\n        return false\n      }\n      // Extra WS in format\n      // Adjust strings when encounter non-matching whitespace, so they align in future checks above\n      // Will check on next iteration (against same (non-WS) string character)\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  // Will also get extra whitespace; empty string if none\n  retObj.unparsed = dateStr.slice(j)\n  return retObj\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/strptime/index.html","comments":1,"_id":"cinoeja040035ou9ymm3upzqh","content":"module.exports = function strptime (dateStr, format) {\n  //  discuss at: http://locutusjs.io/php/strptime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strftime\n  //   example 1: strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale\n  //   returns 1: {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}\n  //   example 2: strptime('2009extra', '%Y')\n  //   returns 2: {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}\n\n  var setlocale = require('../strings/setlocale')\n  var arrayMap = require('../array/array_map')\n\n  var retObj = {\n    tm_sec: 0,\n    tm_min: 0,\n    tm_hour: 0,\n    tm_mday: 0,\n    tm_mon: 0,\n    tm_year: 0,\n    tm_wday: 0,\n    tm_yday: 0,\n    unparsed: ''\n  }\n  var i = 0\n  var j = 0\n  var amPmOffset = 0\n  var prevHour = false\n  var _reset = function (dateObj, realMday) {\n    // realMday is to allow for a value of 0 in return results (but without\n    // messing up the Date() object)\n    var jan1\n    var o = retObj\n    var d = dateObj\n    o.tm_sec = d.getUTCSeconds()\n    o.tm_min = d.getUTCMinutes()\n    o.tm_hour = d.getUTCHours()\n    o.tm_mday = realMday === 0 ? realMday : d.getUTCDate()\n    o.tm_mon = d.getUTCMonth()\n    o.tm_year = d.getUTCFullYear() - 1900\n    o.tm_wday = realMday === 0 ? (d.getUTCDay() > 0 ? d.getUTCDay() - 1 : 6) : d.getUTCDay()\n    jan1 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    o.tm_yday = Math.ceil((d - jan1) / (1000 * 60 * 60 * 24))\n  }\n  var _date = function () {\n    var o = retObj\n    // We set date to at least 1 to ensure year or month doesn't go backwards\n    return _reset(new Date(Date.UTC(\n      o.tm_year + 1900,\n      o.tm_mon,\n      o.tm_mday || 1,\n      o.tm_hour,\n      o.tm_min,\n      o.tm_sec\n    )),\n    o.tm_mday)\n  }\n\n  var _NWS = /\\S/\n  var _WS = /\\s/\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    r: 'locale',\n    R: '%H:%M',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  /* Fix: Locale alternatives are supported though not documented in PHP; see http://linux.die.net/man/3/strptime\n    Ec\n    EC\n    Ex\n    EX\n    Ey\n    EY\n    Od or Oe\n    OH\n    OI\n    Om\n    OM\n    OS\n    OU\n    Ow\n    OW\n    Oy\n  */\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (format.match(/%[cDFhnrRtTxX]/)) {\n    format = format.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (typeof regex === 'string') {\n      regex = new RegExp('^' + regex, 'i')\n    }\n    var check = dateStr.slice(j)\n    var match = regex.exec(check)\n    // Even if the callback returns null after assigning to the\n    // return object, the object won't be saved anyways\n    var testNull = match ? cb.apply(null, match) : null\n    if (testNull === null) {\n      throw new Error('No match in string')\n    }\n    return j + match[0].length\n  }\n\n  var _addLocalized = function (j, formatChar, category) {\n    // Could make each parenthesized instead and pass index to callback:\n    return _addNext(j, arrayMap(_pregQuote, lcTime[formatChar]).join('|'),\n      function (m) {\n        var match = lcTime[formatChar].search(new RegExp('^' + _pregQuote(m) + '$', 'i'))\n        if (match) {\n          retObj[category] = match[0]\n        }\n      })\n  }\n\n  // BEGIN PROCESSING CHARACTERS\n  for (i = 0, j = 0; i < format.length; i++) {\n    if (format.charAt(i) === '%') {\n      var literalPos = ['%', 'n', 't'].indexOf(format.charAt(i + 1))\n      if (literalPos !== -1) {\n        if (['%', '\\n', '\\t'].indexOf(dateStr.charAt(j)) === literalPos) {\n          // a matched literal\n          ++i;\n          // skip beyond\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return false\n      }\n      var formatChar = format.charAt(i + 1)\n      try {\n        switch (formatChar) {\n          case 'a':\n          case 'A':\n            // Sunday-Saturday\n            // Changes nothing else\n            j = _addLocalized(j, formatChar, 'tm_wday')\n            break\n          case 'h':\n          case 'b':\n            // Jan-Dec\n            j = _addLocalized(j, 'b', 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'B':\n            // January-December\n            j = _addLocalized(j, formatChar, 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'C':\n            // 0+; century (19 for 20th)\n            // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              var year = (parseInt(d, 10) - 19) * 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'd':\n          case 'e':\n            // 1-31 day\n            j = _addNext(j, formatChar === 'd'\n              ? /^(0[1-9]|[1-2]\\d|3[0-1])/\n              : /^([1-2]\\d|3[0-1]|[1-9])/,\n            function (d) {\n              var dayMonth = parseInt(d, 10)\n              retObj.tm_mday = dayMonth\n              // Also changes w_day, y_day\n              _date()\n            })\n            break\n          case 'g':\n            // No apparent effect; 2-digit year (see 'V')\n            break\n          case 'G':\n            // No apparent effect; 4-digit year (see 'V')'\n            break\n          case 'H':\n            // 00-23 hours\n            j = _addNext(j, /^([0-1]\\d|2[0-3])/, function (d) {\n              var hour = parseInt(d, 10)\n              retObj.tm_hour = hour\n              // Changes nothing else\n            })\n            break\n          case 'l':\n          case 'I':\n            // 01-12 hours\n            j = _addNext(j, formatChar === 'l'\n              ? /^([1-9]|1[0-2])/\n              : /^(0[1-9]|1[0-2])/,\n            function (d) {\n              var hour = parseInt(d, 10) - 1 + amPmOffset\n              retObj.tm_hour = hour\n              // Used for coordinating with am-pm\n              prevHour = true\n              // Changes nothing else, but affected by prior 'p/P'\n            })\n            break\n          case 'j':\n            // 001-366 day of year\n            j = _addNext(j, /^(00[1-9]|0[1-9]\\d|[1-2]\\d\\d|3[0-6][0-6])/, function (d) {\n              var dayYear = parseInt(d, 10) - 1\n              retObj.tm_yday = dayYear\n              // Changes nothing else\n              // (oddly, since if original by a given year, could calculate other fields)\n            })\n            break\n          case 'm':\n            // 01-12 month\n            j = _addNext(j, /^(0[1-9]|1[0-2])/, function (d) {\n              var month = parseInt(d, 10) - 1\n              retObj.tm_mon = month\n            // Also sets wday and yday\n              _date()\n            })\n            break\n          case 'M':\n            // 00-59 minutes\n            j = _addNext(j, /^[0-5]\\d/, function (d) {\n              var minute = parseInt(d, 10)\n              retObj.tm_min = minute\n            // Changes nothing else\n            })\n            break\n          case 'P':\n            // Seems not to work; AM-PM\n            // Could make fall-through instead since supposed to be a synonym despite PHP docs\n            return false\n          case 'p':\n            // am-pm\n            j = _addNext(j, /^(am|pm)/i, function (d) {\n              // No effect on 'H' since already 24 hours but\n              //   works before or after setting of l/I hour\n              amPmOffset = (/a/)\n              .test(d) ? 0 : 12\n              if (prevHour) {\n                retObj.tm_hour += amPmOffset\n              }\n            })\n            break\n          case 's':\n            // Unix timestamp (in seconds)\n            j = _addNext(j, /^\\d+/, function (d) {\n              var timestamp = parseInt(d, 10)\n              var date = new Date(Date.UTC(timestamp * 1000))\n              _reset(date)\n              // Affects all fields, but can't be negative (and initial + not allowed)\n            })\n            break\n          case 'S':\n            // 00-59 seconds\n            j = _addNext(j, /^[0-5]\\d/, // strptime also accepts 60-61 for some reason\n\n            function (d) {\n              var second = parseInt(d, 10)\n              retObj.tm_sec = second\n              // Changes nothing else\n            })\n            break\n          case 'u':\n          case 'w':\n            // 0 (Sunday)-6(Saturday)\n            j = _addNext(j, /^\\d/, function (d) {\n              retObj.tm_wday = d - (formatChar === 'u')\n              // Changes nothing else apparently\n            })\n            break\n          case 'U':\n          case 'V':\n          case 'W':\n            // Apparently ignored (week of year, from 1st Monday)\n            break\n          case 'y':\n            // 69 (or higher) for 1969+, 68 (or lower) for 2068-\n             // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              d = parseInt(d, 10)\n              var year = d >= 69 ? d : d + 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'Y':\n            // 2010 (4-digit year)\n            // PHP docs say four-digit, but accepts one-digit (four-digit max):\n            j = _addNext(j, /^\\d{1,4}/,\n\n            function (d) {\n              var year = (parseInt(d, 10)) - 1900\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'z':\n            // Timezone; on my system, strftime gives -0800,\n            // but strptime seems not to alter hour setting\n            break\n          case 'Z':\n            // Timezone; on my system, strftime gives PST, but strptime treats text as unparsed\n            break\n          default:\n            throw new Error('Unrecognized formatting character in strptime()')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          // There was supposed to be a matching format but there wasn't\n          return false\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== dateStr.charAt(j)) {\n      // If extra whitespace at beginning or end of either, or between formats, no problem\n      // (just a problem when between % and format specifier)\n\n      // If the string has white-space, it is ok to ignore\n      if (dateStr.charAt(j).search(_WS) !== -1) {\n        j++\n        // Let the next iteration try again with the same format character\n        i--\n      } else if (format.charAt(i).search(_NWS) !== -1) {\n        // Any extra formatting characters besides white-space causes\n        // problems (do check after WS though, as may just be WS in string before next character)\n        return false\n      }\n      // Extra WS in format\n      // Adjust strings when encounter non-matching whitespace, so they align in future checks above\n      // Will check on next iteration (against same (non-WS) string character)\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  // Will also get extra whitespace; empty string if none\n  retObj.unparsed = dateStr.slice(j)\n  return retObj\n}\n","excerpt":"","more":"module.exports = function strptime (dateStr, format) {\n  //  discuss at: http://locutusjs.io/php/strptime/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strftime\n  //   example 1: strptime('20091112222135', '%Y%m%d%H%M%S') // Return value will depend on date and locale\n  //   returns 1: {tm_sec: 35, tm_min: 21, tm_hour: 22, tm_mday: 12, tm_mon: 10, tm_year: 109, tm_wday: 4, tm_yday: 315, unparsed: ''}\n  //   example 2: strptime('2009extra', '%Y')\n  //   returns 2: {tm_sec:0, tm_min:0, tm_hour:0, tm_mday:0, tm_mon:0, tm_year:109, tm_wday:3, tm_yday: -1, unparsed: 'extra'}\n\n  var setlocale = require('../strings/setlocale')\n  var arrayMap = require('../array/array_map')\n\n  var retObj = {\n    tm_sec: 0,\n    tm_min: 0,\n    tm_hour: 0,\n    tm_mday: 0,\n    tm_mon: 0,\n    tm_year: 0,\n    tm_wday: 0,\n    tm_yday: 0,\n    unparsed: ''\n  }\n  var i = 0\n  var j = 0\n  var amPmOffset = 0\n  var prevHour = false\n  var _reset = function (dateObj, realMday) {\n    // realMday is to allow for a value of 0 in return results (but without\n    // messing up the Date() object)\n    var jan1\n    var o = retObj\n    var d = dateObj\n    o.tm_sec = d.getUTCSeconds()\n    o.tm_min = d.getUTCMinutes()\n    o.tm_hour = d.getUTCHours()\n    o.tm_mday = realMday === 0 ? realMday : d.getUTCDate()\n    o.tm_mon = d.getUTCMonth()\n    o.tm_year = d.getUTCFullYear() - 1900\n    o.tm_wday = realMday === 0 ? (d.getUTCDay() > 0 ? d.getUTCDay() - 1 : 6) : d.getUTCDay()\n    jan1 = new Date(Date.UTC(d.getUTCFullYear(), 0, 1))\n    o.tm_yday = Math.ceil((d - jan1) / (1000 * 60 * 60 * 24))\n  }\n  var _date = function () {\n    var o = retObj\n    // We set date to at least 1 to ensure year or month doesn't go backwards\n    return _reset(new Date(Date.UTC(\n      o.tm_year + 1900,\n      o.tm_mon,\n      o.tm_mday || 1,\n      o.tm_hour,\n      o.tm_min,\n      o.tm_sec\n    )),\n    o.tm_mday)\n  }\n\n  var _NWS = /\\S/\n  var _WS = /\\s/\n\n  var _aggregates = {\n    c: 'locale',\n    D: '%m/%d/%y',\n    F: '%y-%m-%d',\n    r: 'locale',\n    R: '%H:%M',\n    T: '%H:%M:%S',\n    x: 'locale',\n    X: 'locale'\n  }\n\n  /* Fix: Locale alternatives are supported though not documented in PHP; see http://linux.die.net/man/3/strptime\n    Ec\n    EC\n    Ex\n    EX\n    Ey\n    EY\n    Od or Oe\n    OH\n    OI\n    Om\n    OM\n    OS\n    OU\n    Ow\n    OW\n    Oy\n  */\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  // ensure setup of localization variables takes place\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  var locale = $locutus.php.localeCategories.LC_TIME\n  var lcTime = $locutus.php.locales[locale].LC_TIME\n\n  // First replace aggregates (run in a loop because an agg may be made up of other aggs)\n  while (format.match(/%[cDFhnrRtTxX]/)) {\n    format = format.replace(/%([cDFhnrRtTxX])/g, function (m0, m1) {\n      var f = _aggregates[m1]\n      return (f === 'locale' ? lcTime[m1] : f)\n    })\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (typeof regex === 'string') {\n      regex = new RegExp('^' + regex, 'i')\n    }\n    var check = dateStr.slice(j)\n    var match = regex.exec(check)\n    // Even if the callback returns null after assigning to the\n    // return object, the object won't be saved anyways\n    var testNull = match ? cb.apply(null, match) : null\n    if (testNull === null) {\n      throw new Error('No match in string')\n    }\n    return j + match[0].length\n  }\n\n  var _addLocalized = function (j, formatChar, category) {\n    // Could make each parenthesized instead and pass index to callback:\n    return _addNext(j, arrayMap(_pregQuote, lcTime[formatChar]).join('|'),\n      function (m) {\n        var match = lcTime[formatChar].search(new RegExp('^' + _pregQuote(m) + '$', 'i'))\n        if (match) {\n          retObj[category] = match[0]\n        }\n      })\n  }\n\n  // BEGIN PROCESSING CHARACTERS\n  for (i = 0, j = 0; i < format.length; i++) {\n    if (format.charAt(i) === '%') {\n      var literalPos = ['%', 'n', 't'].indexOf(format.charAt(i + 1))\n      if (literalPos !== -1) {\n        if (['%', '\\n', '\\t'].indexOf(dateStr.charAt(j)) === literalPos) {\n          // a matched literal\n          ++i;\n          // skip beyond\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return false\n      }\n      var formatChar = format.charAt(i + 1)\n      try {\n        switch (formatChar) {\n          case 'a':\n          case 'A':\n            // Sunday-Saturday\n            // Changes nothing else\n            j = _addLocalized(j, formatChar, 'tm_wday')\n            break\n          case 'h':\n          case 'b':\n            // Jan-Dec\n            j = _addLocalized(j, 'b', 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'B':\n            // January-December\n            j = _addLocalized(j, formatChar, 'tm_mon')\n            // Also changes wday, yday\n            _date()\n            break\n          case 'C':\n            // 0+; century (19 for 20th)\n            // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              var year = (parseInt(d, 10) - 19) * 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'd':\n          case 'e':\n            // 1-31 day\n            j = _addNext(j, formatChar === 'd'\n              ? /^(0[1-9]|[1-2]\\d|3[0-1])/\n              : /^([1-2]\\d|3[0-1]|[1-9])/,\n            function (d) {\n              var dayMonth = parseInt(d, 10)\n              retObj.tm_mday = dayMonth\n              // Also changes w_day, y_day\n              _date()\n            })\n            break\n          case 'g':\n            // No apparent effect; 2-digit year (see 'V')\n            break\n          case 'G':\n            // No apparent effect; 4-digit year (see 'V')'\n            break\n          case 'H':\n            // 00-23 hours\n            j = _addNext(j, /^([0-1]\\d|2[0-3])/, function (d) {\n              var hour = parseInt(d, 10)\n              retObj.tm_hour = hour\n              // Changes nothing else\n            })\n            break\n          case 'l':\n          case 'I':\n            // 01-12 hours\n            j = _addNext(j, formatChar === 'l'\n              ? /^([1-9]|1[0-2])/\n              : /^(0[1-9]|1[0-2])/,\n            function (d) {\n              var hour = parseInt(d, 10) - 1 + amPmOffset\n              retObj.tm_hour = hour\n              // Used for coordinating with am-pm\n              prevHour = true\n              // Changes nothing else, but affected by prior 'p/P'\n            })\n            break\n          case 'j':\n            // 001-366 day of year\n            j = _addNext(j, /^(00[1-9]|0[1-9]\\d|[1-2]\\d\\d|3[0-6][0-6])/, function (d) {\n              var dayYear = parseInt(d, 10) - 1\n              retObj.tm_yday = dayYear\n              // Changes nothing else\n              // (oddly, since if original by a given year, could calculate other fields)\n            })\n            break\n          case 'm':\n            // 01-12 month\n            j = _addNext(j, /^(0[1-9]|1[0-2])/, function (d) {\n              var month = parseInt(d, 10) - 1\n              retObj.tm_mon = month\n            // Also sets wday and yday\n              _date()\n            })\n            break\n          case 'M':\n            // 00-59 minutes\n            j = _addNext(j, /^[0-5]\\d/, function (d) {\n              var minute = parseInt(d, 10)\n              retObj.tm_min = minute\n            // Changes nothing else\n            })\n            break\n          case 'P':\n            // Seems not to work; AM-PM\n            // Could make fall-through instead since supposed to be a synonym despite PHP docs\n            return false\n          case 'p':\n            // am-pm\n            j = _addNext(j, /^(am|pm)/i, function (d) {\n              // No effect on 'H' since already 24 hours but\n              //   works before or after setting of l/I hour\n              amPmOffset = (/a/)\n              .test(d) ? 0 : 12\n              if (prevHour) {\n                retObj.tm_hour += amPmOffset\n              }\n            })\n            break\n          case 's':\n            // Unix timestamp (in seconds)\n            j = _addNext(j, /^\\d+/, function (d) {\n              var timestamp = parseInt(d, 10)\n              var date = new Date(Date.UTC(timestamp * 1000))\n              _reset(date)\n              // Affects all fields, but can't be negative (and initial + not allowed)\n            })\n            break\n          case 'S':\n            // 00-59 seconds\n            j = _addNext(j, /^[0-5]\\d/, // strptime also accepts 60-61 for some reason\n\n            function (d) {\n              var second = parseInt(d, 10)\n              retObj.tm_sec = second\n              // Changes nothing else\n            })\n            break\n          case 'u':\n          case 'w':\n            // 0 (Sunday)-6(Saturday)\n            j = _addNext(j, /^\\d/, function (d) {\n              retObj.tm_wday = d - (formatChar === 'u')\n              // Changes nothing else apparently\n            })\n            break\n          case 'U':\n          case 'V':\n          case 'W':\n            // Apparently ignored (week of year, from 1st Monday)\n            break\n          case 'y':\n            // 69 (or higher) for 1969+, 68 (or lower) for 2068-\n             // PHP docs say two-digit, but accepts one-digit (two-digit max):\n            j = _addNext(j, /^\\d?\\d/,\n\n            function (d) {\n              d = parseInt(d, 10)\n              var year = d >= 69 ? d : d + 100\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'Y':\n            // 2010 (4-digit year)\n            // PHP docs say four-digit, but accepts one-digit (four-digit max):\n            j = _addNext(j, /^\\d{1,4}/,\n\n            function (d) {\n              var year = (parseInt(d, 10)) - 1900\n              retObj.tm_year = year\n              _date()\n              if (!retObj.tm_yday) {\n                retObj.tm_yday = -1\n              }\n              // Also changes wday; and sets yday to -1 (always?)\n            })\n            break\n          case 'z':\n            // Timezone; on my system, strftime gives -0800,\n            // but strptime seems not to alter hour setting\n            break\n          case 'Z':\n            // Timezone; on my system, strftime gives PST, but strptime treats text as unparsed\n            break\n          default:\n            throw new Error('Unrecognized formatting character in strptime()')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          // There was supposed to be a matching format but there wasn't\n          return false\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== dateStr.charAt(j)) {\n      // If extra whitespace at beginning or end of either, or between formats, no problem\n      // (just a problem when between % and format specifier)\n\n      // If the string has white-space, it is ok to ignore\n      if (dateStr.charAt(j).search(_WS) !== -1) {\n        j++\n        // Let the next iteration try again with the same format character\n        i--\n      } else if (format.charAt(i).search(_NWS) !== -1) {\n        // Any extra formatting characters besides white-space causes\n        // problems (do check after WS though, as may just be WS in string before next character)\n        return false\n      }\n      // Extra WS in format\n      // Adjust strings when encounter non-matching whitespace, so they align in future checks above\n      // Will check on next iteration (against same (non-WS) string character)\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  // Will also get extra whitespace; empty string if none\n  retObj.unparsed = dateStr.slice(j)\n  return retObj\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strtotime('+1 day', 1129633200)","strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)","strtotime('last month', 1129633200)","strtotime('2009-05-04 08:30:00 GMT')","strtotime('2009-05-04 08:30:00+00')","strtotime('2009-05-04 08:30:00+02:00')","strtotime('2009-05-04T08:30:00Z')"],"estarget":"es5","returns":["1129719600","1130425202","1127041200","1241425800","1241425800","1241418600","1241425800"],"dependencies":[],"authors":{"original by":["Caio Ariede (http://caioariede.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Caio Ariede (http://caioariede.com)","A. Matías Quezada (http://amatiasq.com)","preuter","Brett Zamir (http://brett-zamir.me)","Mirko Faber"],"bugfixed by":["Wagner B. Soares","Artur Tchernychev","Stephan Bösch-Plepelits (http://github.com/plepe)"],"input by":["David"]},"notes":["Examples all have a fixed timestamp to prevent\ntests to fail because of variable time(zones)"],"layout":"function","title":"php'sstrtotime in JavaScript","function":"strtotime","category":"datetime","language":"php","alias":["/functions/php/strtotime/","/functions/datetime/strtotime/","/php/strtotime/","/functions/strtotime/"],"_content":"module.exports = function strtotime (text, now) {\n  //  discuss at: http://locutusjs.io/php/strtotime/\n  // original by: Caio Ariede (http://caioariede.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Caio Ariede (http://caioariede.com)\n  // improved by: A. Matías Quezada (http://amatiasq.com)\n  // improved by: preuter\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Mirko Faber\n  //    input by: David\n  // bugfixed by: Wagner B. Soares\n  // bugfixed by: Artur Tchernychev\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  //      note 1: Examples all have a fixed timestamp to prevent\n  //      note 1: tests to fail because of variable time(zones)\n  //   example 1: strtotime('+1 day', 1129633200)\n  //   returns 1: 1129719600\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)\n  //   returns 2: 1130425202\n  //   example 3: strtotime('last month', 1129633200)\n  //   returns 3: 1127041200\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT')\n  //   returns 4: 1241425800\n  //   example 5: strtotime('2009-05-04 08:30:00+00')\n  //   returns 5: 1241425800\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00')\n  //   returns 6: 1241418600\n  //   example 7: strtotime('2009-05-04T08:30:00Z')\n  //   returns 7: 1241425800\n\n  var parsed\n  var match\n  var today\n  var year\n  var date\n  var days\n  var ranges\n  var len\n  var times\n  var regex\n  var i\n  var fail = false\n\n  if (!text) {\n    return fail\n  }\n\n  // Unecessary spaces\n  text = text.replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .replace(/[\\t\\r\\n]/g, '')\n    .toLowerCase()\n\n  // in contrast to php, js Date.parse function interprets:\n  // dates given as yyyy-mm-dd as in timezone: UTC,\n  // dates with \".\" or \"-\" as MDY instead of DMY\n  // dates with two-digit years differently\n  // etc...etc...\n  // ...therefore we manually parse lots of common date formats\n  var pattern = new RegExp([\n    '^(\\\\d{1,4})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,2})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,4})',\n    '(?:\\\\s(\\\\d{1,2}):(\\\\d{2})?:?(\\\\d{2})?)?',\n    '(?:\\\\s([A-Z]+)?)?$'\n  ].join(''))\n  match = text.match(pattern)\n\n  if (match && match[2] === match[4]) {\n    if (match[1] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // YYYY-M-D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // YYYY.M.D is not parsed by strtotime()\n          return fail\n        case '/':\n          // YYYY/M/D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else if (match[5] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // D-M-YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '/':\n          // M/D/YYYY\n          if (match[1] > 12 || match[3] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else {\n      switch (match[2]) {\n        case '-':\n          // YY-M-D\n          if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\n            return fail\n          }\n\n          year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1]\n          return new Date(year, parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YY or H.MM.SS\n          if (match[5] >= 70) {\n            // D.M.YY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n          if (match[5] < 60 && !match[6]) {\n            // H.MM.SS\n            if (match[1] > 23 || match[3] > 59) {\n              return fail\n            }\n\n            today = new Date()\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000\n          }\n\n          // invalid format, cannot be parsed\n          return fail\n        case '/':\n          // M/D/YY\n          if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\n            return fail\n          }\n\n          year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5]\n          return new Date(year, parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case ':':\n          // HH:MM:SS\n          if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\n            return fail\n          }\n\n          today = new Date()\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000\n      }\n    }\n  }\n\n  // other formats and \"now\" should be parsed by Date.parse()\n  if (text === 'now') {\n    return now === null || isNaN(now)\n      ? new Date().getTime() / 1000 | 0\n      : now | 0\n  }\n  if (!isNaN(parsed = Date.parse(text))) {\n    return parsed / 1000 | 0\n  }\n  // Browsers !== Chrome have problems parsing ISO 8601 date strings, as they do\n  // not accept lower case characters, space, or shortened time zones.\n  // Therefore, fix these problems and try again.\n  // Examples:\n  //   2015-04-15 20:33:59+02\n  //   2015-04-15 20:33:59z\n  //   2015-04-15t20:33:59+02:00\n  pattern = new RegExp([\n    '^([0-9]{4}-[0-9]{2}-[0-9]{2})',\n    '[ t]',\n    '([0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?)',\n    '([\\\\+-][0-9]{2}(:[0-9]{2})?|z)'\n  ].join(''))\n  match = text.match(pattern)\n  if (match) {\n    // @todo: time zone information\n    if (match[4] === 'z') {\n      match[4] = 'Z'\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\n      match[4] = match[4] + ':00'\n    }\n\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\n      return parsed / 1000 | 0\n    }\n  }\n\n  date = now ? new Date(now * 1000) : new Date()\n  days = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  }\n  ranges = {\n    'yea': 'FullYear',\n    'mon': 'Month',\n    'day': 'Date',\n    'hou': 'Hours',\n    'min': 'Minutes',\n    'sec': 'Seconds'\n  }\n\n  function lastNext (type, range, modifier) {\n    var diff\n    var day = days[range]\n\n    if (typeof day !== 'undefined') {\n      diff = day - date.getDay()\n\n      if (diff === 0) {\n        diff = 7 * modifier\n      } else if (diff > 0 && type === 'last') {\n        diff -= 7\n      } else if (diff < 0 && type === 'next') {\n        diff += 7\n      }\n\n      date.setDate(date.getDate() + diff)\n    }\n  }\n\n  function process (val) {\n    // @todo: Reconcile this with regex using \\s, taking into account\n    // browser issues with split and regexes\n    var splt = val.split(' ')\n    var type = splt[0]\n    var range = splt[1].substring(0, 3)\n    var typeIsNumber = /\\d+/.test(type)\n    var ago = splt[2] === 'ago'\n    var num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)\n\n    if (typeIsNumber) {\n      num *= parseInt(type, 10)\n    }\n\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)\n    }\n\n    if (range === 'wee') {\n      return date.setDate(date.getDate() + (num * 7))\n    }\n\n    if (type === 'next' || type === 'last') {\n      lastNext(type, range, num)\n    } else if (!typeIsNumber) {\n      return false\n    }\n\n    return true\n  }\n\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)'\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?'\n\n  match = text.match(new RegExp(regex, 'gi'))\n  if (!match) {\n    return fail\n  }\n\n  for (i = 0, len = match.length; i < len; i++) {\n    if (!process(match[i])) {\n      return fail\n    }\n  }\n\n  return (date.getTime() / 1000)\n}\n","source":"php/datetime/strtotime.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strtotime(''+1 day'', 1129633200)'\n  - 'strtotime(''+1 week 2 days 4 hours 2 seconds'', 1129633200)'\n  - 'strtotime(''last month'', 1129633200)'\n  - 'strtotime(''2009-05-04 08:30:00 GMT'')'\n  - 'strtotime(''2009-05-04 08:30:00+00'')'\n  - 'strtotime(''2009-05-04 08:30:00+02:00'')'\n  - 'strtotime(''2009-05-04T08:30:00Z'')'\nestarget: es5\nreturns:\n  - '1129719600'\n  - '1130425202'\n  - '1127041200'\n  - '1241425800'\n  - '1241425800'\n  - '1241418600'\n  - '1241425800'\ndependencies: []\nauthors:\n  original by:\n    - 'Caio Ariede (http://caioariede.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Caio Ariede (http://caioariede.com)'\n    - 'A. Matías Quezada (http://amatiasq.com)'\n    - preuter\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Mirko Faber\n  bugfixed by:\n    - Wagner B. Soares\n    - Artur Tchernychev\n    - 'Stephan Bösch-Plepelits (http://github.com/plepe)'\n  input by:\n    - David\nnotes:\n  - |-\n    Examples all have a fixed timestamp to prevent\n    tests to fail because of variable time(zones)\nlayout: function\ntitle: php'sstrtotime in JavaScript\nfunction: strtotime\ncategory: datetime\nlanguage: php\npermalink: php/datetime/strtotime/\nalias:\n  - /functions/php/strtotime/\n  - /functions/datetime/strtotime/\n  - /php/strtotime/\n  - /functions/strtotime/\n---\nmodule.exports = function strtotime (text, now) {\n  //  discuss at: http://locutusjs.io/php/strtotime/\n  // original by: Caio Ariede (http://caioariede.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Caio Ariede (http://caioariede.com)\n  // improved by: A. Matías Quezada (http://amatiasq.com)\n  // improved by: preuter\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Mirko Faber\n  //    input by: David\n  // bugfixed by: Wagner B. Soares\n  // bugfixed by: Artur Tchernychev\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  //      note 1: Examples all have a fixed timestamp to prevent\n  //      note 1: tests to fail because of variable time(zones)\n  //   example 1: strtotime('+1 day', 1129633200)\n  //   returns 1: 1129719600\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)\n  //   returns 2: 1130425202\n  //   example 3: strtotime('last month', 1129633200)\n  //   returns 3: 1127041200\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT')\n  //   returns 4: 1241425800\n  //   example 5: strtotime('2009-05-04 08:30:00+00')\n  //   returns 5: 1241425800\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00')\n  //   returns 6: 1241418600\n  //   example 7: strtotime('2009-05-04T08:30:00Z')\n  //   returns 7: 1241425800\n\n  var parsed\n  var match\n  var today\n  var year\n  var date\n  var days\n  var ranges\n  var len\n  var times\n  var regex\n  var i\n  var fail = false\n\n  if (!text) {\n    return fail\n  }\n\n  // Unecessary spaces\n  text = text.replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .replace(/[\\t\\r\\n]/g, '')\n    .toLowerCase()\n\n  // in contrast to php, js Date.parse function interprets:\n  // dates given as yyyy-mm-dd as in timezone: UTC,\n  // dates with \".\" or \"-\" as MDY instead of DMY\n  // dates with two-digit years differently\n  // etc...etc...\n  // ...therefore we manually parse lots of common date formats\n  var pattern = new RegExp([\n    '^(\\\\d{1,4})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,2})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,4})',\n    '(?:\\\\s(\\\\d{1,2}):(\\\\d{2})?:?(\\\\d{2})?)?',\n    '(?:\\\\s([A-Z]+)?)?$'\n  ].join(''))\n  match = text.match(pattern)\n\n  if (match && match[2] === match[4]) {\n    if (match[1] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // YYYY-M-D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // YYYY.M.D is not parsed by strtotime()\n          return fail\n        case '/':\n          // YYYY/M/D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else if (match[5] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // D-M-YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '/':\n          // M/D/YYYY\n          if (match[1] > 12 || match[3] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else {\n      switch (match[2]) {\n        case '-':\n          // YY-M-D\n          if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\n            return fail\n          }\n\n          year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1]\n          return new Date(year, parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YY or H.MM.SS\n          if (match[5] >= 70) {\n            // D.M.YY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n          if (match[5] < 60 && !match[6]) {\n            // H.MM.SS\n            if (match[1] > 23 || match[3] > 59) {\n              return fail\n            }\n\n            today = new Date()\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000\n          }\n\n          // invalid format, cannot be parsed\n          return fail\n        case '/':\n          // M/D/YY\n          if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\n            return fail\n          }\n\n          year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5]\n          return new Date(year, parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case ':':\n          // HH:MM:SS\n          if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\n            return fail\n          }\n\n          today = new Date()\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000\n      }\n    }\n  }\n\n  // other formats and \"now\" should be parsed by Date.parse()\n  if (text === 'now') {\n    return now === null || isNaN(now)\n      ? new Date().getTime() / 1000 | 0\n      : now | 0\n  }\n  if (!isNaN(parsed = Date.parse(text))) {\n    return parsed / 1000 | 0\n  }\n  // Browsers !== Chrome have problems parsing ISO 8601 date strings, as they do\n  // not accept lower case characters, space, or shortened time zones.\n  // Therefore, fix these problems and try again.\n  // Examples:\n  //   2015-04-15 20:33:59+02\n  //   2015-04-15 20:33:59z\n  //   2015-04-15t20:33:59+02:00\n  pattern = new RegExp([\n    '^([0-9]{4}-[0-9]{2}-[0-9]{2})',\n    '[ t]',\n    '([0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?)',\n    '([\\\\+-][0-9]{2}(:[0-9]{2})?|z)'\n  ].join(''))\n  match = text.match(pattern)\n  if (match) {\n    // @todo: time zone information\n    if (match[4] === 'z') {\n      match[4] = 'Z'\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\n      match[4] = match[4] + ':00'\n    }\n\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\n      return parsed / 1000 | 0\n    }\n  }\n\n  date = now ? new Date(now * 1000) : new Date()\n  days = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  }\n  ranges = {\n    'yea': 'FullYear',\n    'mon': 'Month',\n    'day': 'Date',\n    'hou': 'Hours',\n    'min': 'Minutes',\n    'sec': 'Seconds'\n  }\n\n  function lastNext (type, range, modifier) {\n    var diff\n    var day = days[range]\n\n    if (typeof day !== 'undefined') {\n      diff = day - date.getDay()\n\n      if (diff === 0) {\n        diff = 7 * modifier\n      } else if (diff > 0 && type === 'last') {\n        diff -= 7\n      } else if (diff < 0 && type === 'next') {\n        diff += 7\n      }\n\n      date.setDate(date.getDate() + diff)\n    }\n  }\n\n  function process (val) {\n    // @todo: Reconcile this with regex using \\s, taking into account\n    // browser issues with split and regexes\n    var splt = val.split(' ')\n    var type = splt[0]\n    var range = splt[1].substring(0, 3)\n    var typeIsNumber = /\\d+/.test(type)\n    var ago = splt[2] === 'ago'\n    var num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)\n\n    if (typeIsNumber) {\n      num *= parseInt(type, 10)\n    }\n\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)\n    }\n\n    if (range === 'wee') {\n      return date.setDate(date.getDate() + (num * 7))\n    }\n\n    if (type === 'next' || type === 'last') {\n      lastNext(type, range, num)\n    } else if (!typeIsNumber) {\n      return false\n    }\n\n    return true\n  }\n\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)'\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?'\n\n  match = text.match(new RegExp(regex, 'gi'))\n  if (!match) {\n    return fail\n  }\n\n  for (i = 0, len = match.length; i < len; i++) {\n    if (!process(match[i])) {\n      return fail\n    }\n  }\n\n  return (date.getTime() / 1000)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/strtotime/index.html","comments":1,"_id":"cinoeja050036ou9y3yqhpkww","content":"module.exports = function strtotime (text, now) {\n  //  discuss at: http://locutusjs.io/php/strtotime/\n  // original by: Caio Ariede (http://caioariede.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Caio Ariede (http://caioariede.com)\n  // improved by: A. Matías Quezada (http://amatiasq.com)\n  // improved by: preuter\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Mirko Faber\n  //    input by: David\n  // bugfixed by: Wagner B. Soares\n  // bugfixed by: Artur Tchernychev\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  //      note 1: Examples all have a fixed timestamp to prevent\n  //      note 1: tests to fail because of variable time(zones)\n  //   example 1: strtotime('+1 day', 1129633200)\n  //   returns 1: 1129719600\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)\n  //   returns 2: 1130425202\n  //   example 3: strtotime('last month', 1129633200)\n  //   returns 3: 1127041200\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT')\n  //   returns 4: 1241425800\n  //   example 5: strtotime('2009-05-04 08:30:00+00')\n  //   returns 5: 1241425800\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00')\n  //   returns 6: 1241418600\n  //   example 7: strtotime('2009-05-04T08:30:00Z')\n  //   returns 7: 1241425800\n\n  var parsed\n  var match\n  var today\n  var year\n  var date\n  var days\n  var ranges\n  var len\n  var times\n  var regex\n  var i\n  var fail = false\n\n  if (!text) {\n    return fail\n  }\n\n  // Unecessary spaces\n  text = text.replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .replace(/[\\t\\r\\n]/g, '')\n    .toLowerCase()\n\n  // in contrast to php, js Date.parse function interprets:\n  // dates given as yyyy-mm-dd as in timezone: UTC,\n  // dates with \".\" or \"-\" as MDY instead of DMY\n  // dates with two-digit years differently\n  // etc...etc...\n  // ...therefore we manually parse lots of common date formats\n  var pattern = new RegExp([\n    '^(\\\\d{1,4})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,2})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,4})',\n    '(?:\\\\s(\\\\d{1,2}):(\\\\d{2})?:?(\\\\d{2})?)?',\n    '(?:\\\\s([A-Z]+)?)?$'\n  ].join(''))\n  match = text.match(pattern)\n\n  if (match && match[2] === match[4]) {\n    if (match[1] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // YYYY-M-D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // YYYY.M.D is not parsed by strtotime()\n          return fail\n        case '/':\n          // YYYY/M/D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else if (match[5] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // D-M-YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '/':\n          // M/D/YYYY\n          if (match[1] > 12 || match[3] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else {\n      switch (match[2]) {\n        case '-':\n          // YY-M-D\n          if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\n            return fail\n          }\n\n          year = match[1] >= 0 && match[1] <= 38=\"\" 1000=\"\" 2000=\"\" ?=\"\" +match[1]=\"\" +=\"\" :=\"\" match[1]=\"\" return=\"\" new=\"\" date(year,=\"\" parseint(match[3],=\"\" 10)=\"\" -=\"\" 1,=\"\" match[5],=\"\" match[6]=\"\" ||=\"\" 0,=\"\" match[7]=\"\" match[8]=\"\" match[9]=\"\" 0)=\"\" case=\"\" '.':=\"\" d.m.yy=\"\" or=\"\" h.mm.ss=\"\" if=\"\" (match[5]=\"\">= 70) {\n            // D.M.YY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n          if (match[5] < 60 && !match[6]) {\n            // H.MM.SS\n            if (match[1] > 23 || match[3] > 59) {\n              return fail\n            }\n\n            today = new Date()\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000\n          }\n\n          // invalid format, cannot be parsed\n          return fail\n        case '/':\n          // M/D/YY\n          if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\n            return fail\n          }\n\n          year = match[5] >= 0 && match[5] <= 38=\"\" 1000=\"\" 2000=\"\" ?=\"\" +match[5]=\"\" +=\"\" :=\"\" match[5]=\"\" return=\"\" new=\"\" date(year,=\"\" parseint(match[1],=\"\" 10)=\"\" -=\"\" 1,=\"\" match[3],=\"\" match[6]=\"\" ||=\"\" 0,=\"\" match[7]=\"\" match[8]=\"\" match[9]=\"\" 0)=\"\" case=\"\" ':':=\"\" hh:mm:ss=\"\" if=\"\" (match[1]=\"\"> 23 || match[3] > 59 || match[5] > 59) {\n            return fail\n          }\n\n          today = new Date()\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000\n      }\n    }\n  }\n\n  // other formats and \"now\" should be parsed by Date.parse()\n  if (text === 'now') {\n    return now === null || isNaN(now)\n      ? new Date().getTime() / 1000 | 0\n      : now | 0\n  }\n  if (!isNaN(parsed = Date.parse(text))) {\n    return parsed / 1000 | 0\n  }\n  // Browsers !== Chrome have problems parsing ISO 8601 date strings, as they do\n  // not accept lower case characters, space, or shortened time zones.\n  // Therefore, fix these problems and try again.\n  // Examples:\n  //   2015-04-15 20:33:59+02\n  //   2015-04-15 20:33:59z\n  //   2015-04-15t20:33:59+02:00\n  pattern = new RegExp([\n    '^([0-9]{4}-[0-9]{2}-[0-9]{2})',\n    '[ t]',\n    '([0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?)',\n    '([\\\\+-][0-9]{2}(:[0-9]{2})?|z)'\n  ].join(''))\n  match = text.match(pattern)\n  if (match) {\n    // @todo: time zone information\n    if (match[4] === 'z') {\n      match[4] = 'Z'\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\n      match[4] = match[4] + ':00'\n    }\n\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\n      return parsed / 1000 | 0\n    }\n  }\n\n  date = now ? new Date(now * 1000) : new Date()\n  days = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  }\n  ranges = {\n    'yea': 'FullYear',\n    'mon': 'Month',\n    'day': 'Date',\n    'hou': 'Hours',\n    'min': 'Minutes',\n    'sec': 'Seconds'\n  }\n\n  function lastNext (type, range, modifier) {\n    var diff\n    var day = days[range]\n\n    if (typeof day !== 'undefined') {\n      diff = day - date.getDay()\n\n      if (diff === 0) {\n        diff = 7 * modifier\n      } else if (diff > 0 && type === 'last') {\n        diff -= 7\n      } else if (diff < 0 && type === 'next') {\n        diff += 7\n      }\n\n      date.setDate(date.getDate() + diff)\n    }\n  }\n\n  function process (val) {\n    // @todo: Reconcile this with regex using \\s, taking into account\n    // browser issues with split and regexes\n    var splt = val.split(' ')\n    var type = splt[0]\n    var range = splt[1].substring(0, 3)\n    var typeIsNumber = /\\d+/.test(type)\n    var ago = splt[2] === 'ago'\n    var num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)\n\n    if (typeIsNumber) {\n      num *= parseInt(type, 10)\n    }\n\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)\n    }\n\n    if (range === 'wee') {\n      return date.setDate(date.getDate() + (num * 7))\n    }\n\n    if (type === 'next' || type === 'last') {\n      lastNext(type, range, num)\n    } else if (!typeIsNumber) {\n      return false\n    }\n\n    return true\n  }\n\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)'\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?'\n\n  match = text.match(new RegExp(regex, 'gi'))\n  if (!match) {\n    return fail\n  }\n\n  for (i = 0, len = match.length; i < len; i++) {\n    if (!process(match[i])) {\n      return fail\n    }\n  }\n\n  return (date.getTime() / 1000)\n}\n</=></=>","excerpt":"","more":"module.exports = function strtotime (text, now) {\n  //  discuss at: http://locutusjs.io/php/strtotime/\n  // original by: Caio Ariede (http://caioariede.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Caio Ariede (http://caioariede.com)\n  // improved by: A. Matías Quezada (http://amatiasq.com)\n  // improved by: preuter\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Mirko Faber\n  //    input by: David\n  // bugfixed by: Wagner B. Soares\n  // bugfixed by: Artur Tchernychev\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\n  //      note 1: Examples all have a fixed timestamp to prevent\n  //      note 1: tests to fail because of variable time(zones)\n  //   example 1: strtotime('+1 day', 1129633200)\n  //   returns 1: 1129719600\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200)\n  //   returns 2: 1130425202\n  //   example 3: strtotime('last month', 1129633200)\n  //   returns 3: 1127041200\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT')\n  //   returns 4: 1241425800\n  //   example 5: strtotime('2009-05-04 08:30:00+00')\n  //   returns 5: 1241425800\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00')\n  //   returns 6: 1241418600\n  //   example 7: strtotime('2009-05-04T08:30:00Z')\n  //   returns 7: 1241425800\n\n  var parsed\n  var match\n  var today\n  var year\n  var date\n  var days\n  var ranges\n  var len\n  var times\n  var regex\n  var i\n  var fail = false\n\n  if (!text) {\n    return fail\n  }\n\n  // Unecessary spaces\n  text = text.replace(/^\\s+|\\s+$/g, '')\n    .replace(/\\s{2,}/g, ' ')\n    .replace(/[\\t\\r\\n]/g, '')\n    .toLowerCase()\n\n  // in contrast to php, js Date.parse function interprets:\n  // dates given as yyyy-mm-dd as in timezone: UTC,\n  // dates with \".\" or \"-\" as MDY instead of DMY\n  // dates with two-digit years differently\n  // etc...etc...\n  // ...therefore we manually parse lots of common date formats\n  var pattern = new RegExp([\n    '^(\\\\d{1,4})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,2})',\n    '([\\\\-\\\\.\\\\/:])',\n    '(\\\\d{1,4})',\n    '(?:\\\\s(\\\\d{1,2}):(\\\\d{2})?:?(\\\\d{2})?)?',\n    '(?:\\\\s([A-Z]+)?)?$'\n  ].join(''))\n  match = text.match(pattern)\n\n  if (match && match[2] === match[4]) {\n    if (match[1] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // YYYY-M-D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // YYYY.M.D is not parsed by strtotime()\n          return fail\n        case '/':\n          // YYYY/M/D\n          if (match[3] > 12 || match[5] > 31) {\n            return fail\n          }\n\n          return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else if (match[5] > 1901) {\n      switch (match[2]) {\n        case '-':\n          // D-M-YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YYYY\n          if (match[3] > 12 || match[1] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '/':\n          // M/D/YYYY\n          if (match[1] > 12 || match[3] > 31) {\n            return fail\n          }\n\n          return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n      }\n    } else {\n      switch (match[2]) {\n        case '-':\n          // YY-M-D\n          if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\n            return fail\n          }\n\n          year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1]\n          return new Date(year, parseInt(match[3], 10) - 1, match[5],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case '.':\n          // D.M.YY or H.MM.SS\n          if (match[5] >= 70) {\n            // D.M.YY\n            if (match[3] > 12 || match[1] > 31) {\n              return fail\n            }\n\n            return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n          }\n          if (match[5] < 60 && !match[6]) {\n            // H.MM.SS\n            if (match[1] > 23 || match[3] > 59) {\n              return fail\n            }\n\n            today = new Date()\n            return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000\n          }\n\n          // invalid format, cannot be parsed\n          return fail\n        case '/':\n          // M/D/YY\n          if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\n            return fail\n          }\n\n          year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5]\n          return new Date(year, parseInt(match[1], 10) - 1, match[3],\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000\n        case ':':\n          // HH:MM:SS\n          if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\n            return fail\n          }\n\n          today = new Date()\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000\n      }\n    }\n  }\n\n  // other formats and \"now\" should be parsed by Date.parse()\n  if (text === 'now') {\n    return now === null || isNaN(now)\n      ? new Date().getTime() / 1000 | 0\n      : now | 0\n  }\n  if (!isNaN(parsed = Date.parse(text))) {\n    return parsed / 1000 | 0\n  }\n  // Browsers !== Chrome have problems parsing ISO 8601 date strings, as they do\n  // not accept lower case characters, space, or shortened time zones.\n  // Therefore, fix these problems and try again.\n  // Examples:\n  //   2015-04-15 20:33:59+02\n  //   2015-04-15 20:33:59z\n  //   2015-04-15t20:33:59+02:00\n  pattern = new RegExp([\n    '^([0-9]{4}-[0-9]{2}-[0-9]{2})',\n    '[ t]',\n    '([0-9]{2}:[0-9]{2}:[0-9]{2}(\\\\.[0-9]+)?)',\n    '([\\\\+-][0-9]{2}(:[0-9]{2})?|z)'\n  ].join(''))\n  match = text.match(pattern)\n  if (match) {\n    // @todo: time zone information\n    if (match[4] === 'z') {\n      match[4] = 'Z'\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\n      match[4] = match[4] + ':00'\n    }\n\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\n      return parsed / 1000 | 0\n    }\n  }\n\n  date = now ? new Date(now * 1000) : new Date()\n  days = {\n    'sun': 0,\n    'mon': 1,\n    'tue': 2,\n    'wed': 3,\n    'thu': 4,\n    'fri': 5,\n    'sat': 6\n  }\n  ranges = {\n    'yea': 'FullYear',\n    'mon': 'Month',\n    'day': 'Date',\n    'hou': 'Hours',\n    'min': 'Minutes',\n    'sec': 'Seconds'\n  }\n\n  function lastNext (type, range, modifier) {\n    var diff\n    var day = days[range]\n\n    if (typeof day !== 'undefined') {\n      diff = day - date.getDay()\n\n      if (diff === 0) {\n        diff = 7 * modifier\n      } else if (diff > 0 && type === 'last') {\n        diff -= 7\n      } else if (diff < 0 && type === 'next') {\n        diff += 7\n      }\n\n      date.setDate(date.getDate() + diff)\n    }\n  }\n\n  function process (val) {\n    // @todo: Reconcile this with regex using \\s, taking into account\n    // browser issues with split and regexes\n    var splt = val.split(' ')\n    var type = splt[0]\n    var range = splt[1].substring(0, 3)\n    var typeIsNumber = /\\d+/.test(type)\n    var ago = splt[2] === 'ago'\n    var num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1)\n\n    if (typeIsNumber) {\n      num *= parseInt(type, 10)\n    }\n\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num)\n    }\n\n    if (range === 'wee') {\n      return date.setDate(date.getDate() + (num * 7))\n    }\n\n    if (type === 'next' || type === 'last') {\n      lastNext(type, range, num)\n    } else if (!typeIsNumber) {\n      return false\n    }\n\n    return true\n  }\n\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)'\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?'\n\n  match = text.match(new RegExp(regex, 'gi'))\n  if (!match) {\n    return fail\n  }\n\n  for (i = 0, len = match.length; i < len; i++) {\n    if (!process(match[i])) {\n      return fail\n    }\n  }\n\n  return (date.getTime() / 1000)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $timeStamp = time()\nvar $result = $timeStamp > 1000000000 && $timeStamp < 2000000000"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["GeekFG (http://geekfg.blogspot.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","metjay","HKM"]},"notes":[],"layout":"function","title":"php'stime in JavaScript","function":"time","category":"datetime","language":"php","alias":["/functions/php/time/","/functions/datetime/time/","/php/time/","/functions/time/"],"_content":"module.exports = function time () {\n  //  discuss at: http://locutusjs.io/php/time/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: metjay\n  // improved by: HKM\n  //   example 1: var $timeStamp = time()\n  //   example 1: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n\n  return Math.floor(new Date().getTime() / 1000)\n}\n","source":"php/datetime/time.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $timeStamp = time()\n    var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'GeekFG (http://geekfg.blogspot.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - metjay\n    - HKM\nnotes: []\nlayout: function\ntitle: php'stime in JavaScript\nfunction: time\ncategory: datetime\nlanguage: php\npermalink: php/datetime/time/\nalias:\n  - /functions/php/time/\n  - /functions/datetime/time/\n  - /php/time/\n  - /functions/time/\n---\nmodule.exports = function time () {\n  //  discuss at: http://locutusjs.io/php/time/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: metjay\n  // improved by: HKM\n  //   example 1: var $timeStamp = time()\n  //   example 1: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n\n  return Math.floor(new Date().getTime() / 1000)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/datetime/time/index.html","comments":1,"_id":"cinoeja050037ou9ympb6goez","content":"module.exports = function time () {\n  //  discuss at: http://locutusjs.io/php/time/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: metjay\n  // improved by: HKM\n  //   example 1: var $timeStamp = time()\n  //   example 1: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n\n  return Math.floor(new Date().getTime() / 1000)\n}\n","excerpt":"","more":"module.exports = function time () {\n  //  discuss at: http://locutusjs.io/php/time/\n  // original by: GeekFG (http://geekfg.blogspot.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: metjay\n  // improved by: HKM\n  //   example 1: var $timeStamp = time()\n  //   example 1: var $result = $timeStamp > 1000000000 && $timeStamp < 2000000000\n  //   returns 1: true\n\n  return Math.floor(new Date().getTime() / 1000)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["escapeshellarg(\"kevin's birthday\")"],"estarget":"es5","returns":["\"'kevin\\\\'s birthday'\""],"dependencies":[],"authors":{"original by":["Felix Geisendoerfer (http://www.debuggable.com/felix)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sescapeshellarg in JavaScript","function":"escapeshellarg","category":"exec","language":"php","alias":["/functions/php/escapeshellarg/","/functions/exec/escapeshellarg/","/php/escapeshellarg/","/functions/escapeshellarg/"],"_content":"module.exports = function escapeshellarg (arg) {\n  //  discuss at: http://locutusjs.io/php/escapeshellarg/\n  // original by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: escapeshellarg(\"kevin's birthday\")\n  //   returns 1: \"'kevin\\\\'s birthday'\"\n\n  var ret = ''\n\n  ret = arg.replace(/[^\\\\]'/g, function (m, i, s) {\n    return m.slice(0, 1) + '\\\\\\''\n  })\n\n  return \"'\" + ret + \"'\"\n}\n","source":"php/exec/escapeshellarg.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - escapeshellarg(\"kevin's birthday\")\nestarget: es5\nreturns:\n  - '\"''kevin\\\\''s birthday''\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Felix Geisendoerfer (http://www.debuggable.com/felix)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sescapeshellarg in JavaScript\nfunction: escapeshellarg\ncategory: exec\nlanguage: php\npermalink: php/exec/escapeshellarg/\nalias:\n  - /functions/php/escapeshellarg/\n  - /functions/exec/escapeshellarg/\n  - /php/escapeshellarg/\n  - /functions/escapeshellarg/\n---\nmodule.exports = function escapeshellarg (arg) {\n  //  discuss at: http://locutusjs.io/php/escapeshellarg/\n  // original by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: escapeshellarg(\"kevin's birthday\")\n  //   returns 1: \"'kevin\\\\'s birthday'\"\n\n  var ret = ''\n\n  ret = arg.replace(/[^\\\\]'/g, function (m, i, s) {\n    return m.slice(0, 1) + '\\\\\\''\n  })\n\n  return \"'\" + ret + \"'\"\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/exec/escapeshellarg/index.html","comments":1,"_id":"cinoeja050038ou9yywazp06k","content":"module.exports = function escapeshellarg (arg) {\n  //  discuss at: http://locutusjs.io/php/escapeshellarg/\n  // original by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: escapeshellarg(\"kevin's birthday\")\n  //   returns 1: \"'kevin\\\\'s birthday'\"\n\n  var ret = ''\n\n  ret = arg.replace(/[^\\\\]'/g, function (m, i, s) {\n    return m.slice(0, 1) + '\\\\\\''\n  })\n\n  return \"'\" + ret + \"'\"\n}\n","excerpt":"","more":"module.exports = function escapeshellarg (arg) {\n  //  discuss at: http://locutusjs.io/php/escapeshellarg/\n  // original by: Felix Geisendoerfer (http://www.debuggable.com/felix)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: escapeshellarg(\"kevin's birthday\")\n  //   returns 1: \"'kevin\\\\'s birthday'\"\n\n  var ret = ''\n\n  ret = arg.replace(/[^\\\\]'/g, function (m, i, s) {\n    return m.slice(0, 1) + '\\\\\\''\n  })\n\n  return \"'\" + ret + \"'\"\n}\n"},{"type":"category","language":"php","category":"exec","title":"exec","_content":"","source":"php/exec/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: exec\ntitle: exec\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/exec/index.html","comments":1,"layout":"page","_id":"cinoeja060039ou9yjmyxb82k","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["basename('/www/site/home.htm', '.htm')","basename('ecra.php?p=1')","basename('/some/path/')","basename('/some/path_ext.ext/','.ext')"],"estarget":"es5","returns":["'home'","'ecra.php?p=1'","'path'","'path_ext'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Ash Searle (http://hexmen.com/blog/)","Lincoln Ramsay","djmix","Dmitry Gorelenkov"]},"notes":[],"layout":"function","title":"php'sbasename in JavaScript","function":"basename","category":"filesystem","language":"php","alias":["/functions/php/basename/","/functions/filesystem/basename/","/php/basename/","/functions/basename/"],"_content":"module.exports = function basename (path, suffix) {\n  //  discuss at: http://locutusjs.io/php/basename/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Lincoln Ramsay\n  // improved by: djmix\n  // improved by: Dmitry Gorelenkov\n  //   example 1: basename('/www/site/home.htm', '.htm')\n  //   returns 1: 'home'\n  //   example 2: basename('ecra.php?p=1')\n  //   returns 2: 'ecra.php?p=1'\n  //   example 3: basename('/some/path/')\n  //   returns 3: 'path'\n  //   example 4: basename('/some/path_ext.ext/','.ext')\n  //   returns 4: 'path_ext'\n\n  var b = path\n  var lastChar = b.charAt(b.length - 1)\n\n  if (lastChar === '/' || lastChar === '\\\\') {\n    b = b.slice(0, -1)\n  }\n\n  b = b.replace(/^.*[\\/\\\\]/g, '')\n\n  if (typeof suffix === 'string' && b.substr(b.length - suffix.length) === suffix) {\n    b = b.substr(0, b.length - suffix.length)\n  }\n\n  return b\n}\n","source":"php/filesystem/basename.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'basename(''/www/site/home.htm'', ''.htm'')'\n  - basename('ecra.php?p=1')\n  - basename('/some/path/')\n  - 'basename(''/some/path_ext.ext/'',''.ext'')'\nestarget: es5\nreturns:\n  - '''home'''\n  - '''ecra.php?p=1'''\n  - '''path'''\n  - '''path_ext'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Ash Searle (http://hexmen.com/blog/)'\n    - Lincoln Ramsay\n    - djmix\n    - Dmitry Gorelenkov\nnotes: []\nlayout: function\ntitle: php'sbasename in JavaScript\nfunction: basename\ncategory: filesystem\nlanguage: php\npermalink: php/filesystem/basename/\nalias:\n  - /functions/php/basename/\n  - /functions/filesystem/basename/\n  - /php/basename/\n  - /functions/basename/\n---\nmodule.exports = function basename (path, suffix) {\n  //  discuss at: http://locutusjs.io/php/basename/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Lincoln Ramsay\n  // improved by: djmix\n  // improved by: Dmitry Gorelenkov\n  //   example 1: basename('/www/site/home.htm', '.htm')\n  //   returns 1: 'home'\n  //   example 2: basename('ecra.php?p=1')\n  //   returns 2: 'ecra.php?p=1'\n  //   example 3: basename('/some/path/')\n  //   returns 3: 'path'\n  //   example 4: basename('/some/path_ext.ext/','.ext')\n  //   returns 4: 'path_ext'\n\n  var b = path\n  var lastChar = b.charAt(b.length - 1)\n\n  if (lastChar === '/' || lastChar === '\\\\') {\n    b = b.slice(0, -1)\n  }\n\n  b = b.replace(/^.*[\\/\\\\]/g, '')\n\n  if (typeof suffix === 'string' && b.substr(b.length - suffix.length) === suffix) {\n    b = b.substr(0, b.length - suffix.length)\n  }\n\n  return b\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/basename/index.html","comments":1,"_id":"cinoeja06003aou9ylemz2vix","content":"module.exports = function basename (path, suffix) {\n  //  discuss at: http://locutusjs.io/php/basename/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Lincoln Ramsay\n  // improved by: djmix\n  // improved by: Dmitry Gorelenkov\n  //   example 1: basename('/www/site/home.htm', '.htm')\n  //   returns 1: 'home'\n  //   example 2: basename('ecra.php?p=1')\n  //   returns 2: 'ecra.php?p=1'\n  //   example 3: basename('/some/path/')\n  //   returns 3: 'path'\n  //   example 4: basename('/some/path_ext.ext/','.ext')\n  //   returns 4: 'path_ext'\n\n  var b = path\n  var lastChar = b.charAt(b.length - 1)\n\n  if (lastChar === '/' || lastChar === '\\\\') {\n    b = b.slice(0, -1)\n  }\n\n  b = b.replace(/^.*[\\/\\\\]/g, '')\n\n  if (typeof suffix === 'string' && b.substr(b.length - suffix.length) === suffix) {\n    b = b.substr(0, b.length - suffix.length)\n  }\n\n  return b\n}\n","excerpt":"","more":"module.exports = function basename (path, suffix) {\n  //  discuss at: http://locutusjs.io/php/basename/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Lincoln Ramsay\n  // improved by: djmix\n  // improved by: Dmitry Gorelenkov\n  //   example 1: basename('/www/site/home.htm', '.htm')\n  //   returns 1: 'home'\n  //   example 2: basename('ecra.php?p=1')\n  //   returns 2: 'ecra.php?p=1'\n  //   example 3: basename('/some/path/')\n  //   returns 3: 'path'\n  //   example 4: basename('/some/path_ext.ext/','.ext')\n  //   returns 4: 'path_ext'\n\n  var b = path\n  var lastChar = b.charAt(b.length - 1)\n\n  if (lastChar === '/' || lastChar === '\\\\') {\n    b = b.slice(0, -1)\n  }\n\n  b = b.replace(/^.*[\\/\\\\]/g, '')\n\n  if (typeof suffix === 'string' && b.substr(b.length - suffix.length) === suffix) {\n    b = b.substr(0, b.length - suffix.length)\n  }\n\n  return b\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["dirname('/etc/passwd')","dirname('c:/Temp/x')","dirname('/dir/test/')"],"estarget":"es5","returns":["'/etc'","'c:/Temp'","'/dir'"],"dependencies":[],"authors":{"original by":["Ozh"],"improved by":["XoraX (http://www.xorax.info)"]},"notes":[],"layout":"function","title":"php'sdirname in JavaScript","function":"dirname","category":"filesystem","language":"php","alias":["/functions/php/dirname/","/functions/filesystem/dirname/","/php/dirname/","/functions/dirname/"],"_content":"module.exports = function dirname (path) {\n  //  discuss at: http://locutusjs.io/php/dirname/\n  // original by: Ozh\n  // improved by: XoraX (http://www.xorax.info)\n  //   example 1: dirname('/etc/passwd')\n  //   returns 1: '/etc'\n  //   example 2: dirname('c:/Temp/x')\n  //   returns 2: 'c:/Temp'\n  //   example 3: dirname('/dir/test/')\n  //   returns 3: '/dir'\n\n  return path.replace(/\\\\/g, '/')\n    .replace(/\\/[^\\/]*\\/?$/, '')\n}\n","source":"php/filesystem/dirname.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - dirname('/etc/passwd')\n  - 'dirname(''c:/Temp/x'')'\n  - dirname('/dir/test/')\nestarget: es5\nreturns:\n  - '''/etc'''\n  - '''c:/Temp'''\n  - '''/dir'''\ndependencies: []\nauthors:\n  original by:\n    - Ozh\n  improved by:\n    - 'XoraX (http://www.xorax.info)'\nnotes: []\nlayout: function\ntitle: php'sdirname in JavaScript\nfunction: dirname\ncategory: filesystem\nlanguage: php\npermalink: php/filesystem/dirname/\nalias:\n  - /functions/php/dirname/\n  - /functions/filesystem/dirname/\n  - /php/dirname/\n  - /functions/dirname/\n---\nmodule.exports = function dirname (path) {\n  //  discuss at: http://locutusjs.io/php/dirname/\n  // original by: Ozh\n  // improved by: XoraX (http://www.xorax.info)\n  //   example 1: dirname('/etc/passwd')\n  //   returns 1: '/etc'\n  //   example 2: dirname('c:/Temp/x')\n  //   returns 2: 'c:/Temp'\n  //   example 3: dirname('/dir/test/')\n  //   returns 3: '/dir'\n\n  return path.replace(/\\\\/g, '/')\n    .replace(/\\/[^\\/]*\\/?$/, '')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/dirname/index.html","comments":1,"_id":"cinoeja06003bou9ye8t31y4s","content":"module.exports = function dirname (path) {\n  //  discuss at: http://locutusjs.io/php/dirname/\n  // original by: Ozh\n  // improved by: XoraX (http://www.xorax.info)\n  //   example 1: dirname('/etc/passwd')\n  //   returns 1: '/etc'\n  //   example 2: dirname('c:/Temp/x')\n  //   returns 2: 'c:/Temp'\n  //   example 3: dirname('/dir/test/')\n  //   returns 3: '/dir'\n\n  return path.replace(/\\\\/g, '/')\n    .replace(/\\/[^\\/]*\\/?$/, '')\n}\n","excerpt":"","more":"module.exports = function dirname (path) {\n  //  discuss at: http://locutusjs.io/php/dirname/\n  // original by: Ozh\n  // improved by: XoraX (http://www.xorax.info)\n  //   example 1: dirname('/etc/passwd')\n  //   returns 1: '/etc'\n  //   example 2: dirname('c:/Temp/x')\n  //   returns 2: 'c:/Temp'\n  //   example 3: dirname('/dir/test/')\n  //   returns 3: '/dir'\n\n  return path.replace(/\\\\/g, '/')\n    .replace(/\\/[^\\/]*\\/?$/, '')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $buf = file_get_contents('test/never-change.txt')\nvar $result = $buf.indexOf('hash') !== -1"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Legaev Andrey"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Jani Hartikainen","Raphael (Ao) RUDLER"]},"notes":["This used to work in the browser via blocking ajax\nrequests in 1.3.2 and earlier\nbut then people started using that for real app,\nso we deprecated this behavior,\nso this function is now Node-only"],"layout":"function","title":"php'sfile_get_contents in JavaScript","function":"file_get_contents","category":"filesystem","language":"php","alias":["/functions/php/file_get_contents/","/functions/filesystem/file_get_contents/","/php/file_get_contents/","/functions/file_get_contents/"],"_content":"module.exports = function file_get_contents (url, flags, context, offset, maxLen) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/file_get_contents/\n  //      original by: Legaev Andrey\n  //         input by: Jani Hartikainen\n  //         input by: Raphael (Ao) RUDLER\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Kevin van Zonneveld (http://kvz.io)\n  //           note 1: This used to work in the browser via blocking ajax\n  //           note 1: requests in 1.3.2 and earlier\n  //           note 1: but then people started using that for real app,\n  //           note 1: so we deprecated this behavior,\n  //           note 1: so this function is now Node-only\n  //        example 1: var $buf = file_get_contents('test/never-change.txt')\n  //        example 1: var $result = $buf.indexOf('hash') !== -1\n  //        returns 1: true\n\n  var fs = require('fs')\n\n  return fs.readFileSync(url, 'utf-8')\n}\n","source":"php/filesystem/file_get_contents.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $buf = file_get_contents('test/never-change.txt')\n    var $result = $buf.indexOf('hash') !== -1\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Legaev Andrey\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Jani Hartikainen\n    - Raphael (Ao) RUDLER\nnotes:\n  - |-\n    This used to work in the browser via blocking ajax\n    requests in 1.3.2 and earlier\n    but then people started using that for real app,\n    so we deprecated this behavior,\n    so this function is now Node-only\nlayout: function\ntitle: php'sfile_get_contents in JavaScript\nfunction: file_get_contents\ncategory: filesystem\nlanguage: php\npermalink: php/filesystem/file_get_contents/\nalias:\n  - /functions/php/file_get_contents/\n  - /functions/filesystem/file_get_contents/\n  - /php/file_get_contents/\n  - /functions/file_get_contents/\n---\nmodule.exports = function file_get_contents (url, flags, context, offset, maxLen) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/file_get_contents/\n  //      original by: Legaev Andrey\n  //         input by: Jani Hartikainen\n  //         input by: Raphael (Ao) RUDLER\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Kevin van Zonneveld (http://kvz.io)\n  //           note 1: This used to work in the browser via blocking ajax\n  //           note 1: requests in 1.3.2 and earlier\n  //           note 1: but then people started using that for real app,\n  //           note 1: so we deprecated this behavior,\n  //           note 1: so this function is now Node-only\n  //        example 1: var $buf = file_get_contents('test/never-change.txt')\n  //        example 1: var $result = $buf.indexOf('hash') !== -1\n  //        returns 1: true\n\n  var fs = require('fs')\n\n  return fs.readFileSync(url, 'utf-8')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/file_get_contents/index.html","comments":1,"_id":"cinoeja07003cou9yo4fhgguw","content":"module.exports = function file_get_contents (url, flags, context, offset, maxLen) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/file_get_contents/\n  //      original by: Legaev Andrey\n  //         input by: Jani Hartikainen\n  //         input by: Raphael (Ao) RUDLER\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Kevin van Zonneveld (http://kvz.io)\n  //           note 1: This used to work in the browser via blocking ajax\n  //           note 1: requests in 1.3.2 and earlier\n  //           note 1: but then people started using that for real app,\n  //           note 1: so we deprecated this behavior,\n  //           note 1: so this function is now Node-only\n  //        example 1: var $buf = file_get_contents('test/never-change.txt')\n  //        example 1: var $result = $buf.indexOf('hash') !== -1\n  //        returns 1: true\n\n  var fs = require('fs')\n\n  return fs.readFileSync(url, 'utf-8')\n}\n","excerpt":"","more":"module.exports = function file_get_contents (url, flags, context, offset, maxLen) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/file_get_contents/\n  //      original by: Legaev Andrey\n  //         input by: Jani Hartikainen\n  //         input by: Raphael (Ao) RUDLER\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Kevin van Zonneveld (http://kvz.io)\n  //           note 1: This used to work in the browser via blocking ajax\n  //           note 1: requests in 1.3.2 and earlier\n  //           note 1: but then people started using that for real app,\n  //           note 1: so we deprecated this behavior,\n  //           note 1: so this function is now Node-only\n  //        example 1: var $buf = file_get_contents('test/never-change.txt')\n  //        example 1: var $result = $buf.indexOf('hash') !== -1\n  //        returns 1: true\n\n  var fs = require('fs')\n\n  return fs.readFileSync(url, 'utf-8')\n}\n"},{"type":"category","language":"php","category":"filesystem","title":"filesystem","_content":"","source":"php/filesystem/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: filesystem\ntitle: filesystem\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/index.html","comments":1,"layout":"page","_id":"cinoeja07003dou9yvw5g30jv","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["pathinfo('/www/htdocs/index.html', 1)","pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')","pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')","pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')","pathinfo('/www/htdocs/index.html', 2 | 4)","pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')","pathinfo('/www/htdocs/index.html')"],"estarget":"es5","returns":["'/www/htdocs'","'index.html'","'html'","'index'","{basename: 'index.html', extension: 'html'}","{dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}","{dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}"],"dependencies":[],"authors":{"original by":["Nate"],"improved by":["Brett Zamir (http://brett-zamir.me)","Dmitry Gorelenkov"],"revised by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Timo"]},"notes":["Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\nThe way the bitwise arguments are handled allows for greater flexibility\n& compatability. We might even standardize this\ncode and use a similar approach for\nother bitwise PHP functions\nLocutus tries very hard to stay away from a core.js\nfile with global dependencies, because we like\nthat you can just take a couple of functions and be on your way.\nBut by way we implemented this function,\nif you want you can still declare the PATHINFO_*\nyourself, and then you can use:\npathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\nwhich makes it fully compliant with PHP syntax."],"layout":"function","title":"php'spathinfo in JavaScript","function":"pathinfo","category":"filesystem","language":"php","alias":["/functions/php/pathinfo/","/functions/filesystem/pathinfo/","/php/pathinfo/","/functions/pathinfo/"],"_content":"module.exports = function pathinfo (path, options) {\n  //  discuss at: http://locutusjs.io/php/pathinfo/\n  // original by: Nate\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Dmitry Gorelenkov\n  //    input by: Timo\n  //      note 1: Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n  //      note 1: The way the bitwise arguments are handled allows for greater flexibility\n  //      note 1: & compatability. We might even standardize this\n  //      note 1: code and use a similar approach for\n  //      note 1: other bitwise PHP functions\n  //      note 1: Locutus tries very hard to stay away from a core.js\n  //      note 1: file with global dependencies, because we like\n  //      note 1: that you can just take a couple of functions and be on your way.\n  //      note 1: But by way we implemented this function,\n  //      note 1: if you want you can still declare the PATHINFO_*\n  //      note 1: yourself, and then you can use:\n  //      note 1: pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n  //      note 1: which makes it fully compliant with PHP syntax.\n  //   example 1: pathinfo('/www/htdocs/index.html', 1)\n  //   returns 1: '/www/htdocs'\n  //   example 2: pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')\n  //   returns 2: 'index.html'\n  //   example 3: pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')\n  //   returns 3: 'html'\n  //   example 4: pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')\n  //   returns 4: 'index'\n  //   example 5: pathinfo('/www/htdocs/index.html', 2 | 4)\n  //   returns 5: {basename: 'index.html', extension: 'html'}\n  //   example 6: pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')\n  //   returns 6: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  //   example 7: pathinfo('/www/htdocs/index.html')\n  //   returns 7: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n\n  var basename = require('../filesystem/basename')\n  var opt = ''\n  var realOpt = ''\n  var optName = ''\n  var optTemp = 0\n  var tmpArr = {}\n  var cnt = 0\n  var i = 0\n  var haveBasename = false\n  var haveExtension = false\n  var haveFilename = false\n\n  // Input defaulting & sanitation\n  if (!path) {\n    return false\n  }\n  if (!options) {\n    options = 'PATHINFO_ALL'\n  }\n\n  // Initialize binary arguments. Both the string & integer (constant) input is\n  // allowed\n  var OPTS = {\n    'PATHINFO_DIRNAME': 1,\n    'PATHINFO_BASENAME': 2,\n    'PATHINFO_EXTENSION': 4,\n    'PATHINFO_FILENAME': 8,\n    'PATHINFO_ALL': 0\n  }\n  // PATHINFO_ALL sums up all previously defined PATHINFOs (could just pre-calculate)\n  for (optName in OPTS) {\n    if (OPTS.hasOwnProperty(optName)) {\n      OPTS.PATHINFO_ALL = OPTS.PATHINFO_ALL | OPTS[optName]\n    }\n  }\n  if (typeof options !== 'number') {\n    // Allow for a single string or an array of string flags\n    options = [].concat(options)\n    for (i = 0; i < options.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[options[i]]) {\n        optTemp = optTemp | OPTS[options[i]]\n      }\n    }\n    options = optTemp\n  }\n\n  // Internal Functions\n  var _getExt = function (path) {\n    var str = path + ''\n    var dotP = str.lastIndexOf('.') + 1\n    return !dotP ? false : dotP !== str.length ? str.substr(dotP) : ''\n  }\n\n  // Gather path infos\n  if (options & OPTS.PATHINFO_DIRNAME) {\n    var dirName = path\n      .replace(/\\\\/g, '/')\n      .replace(/\\/[^\\/]*\\/?$/, '') // dirname\n    tmpArr.dirname = dirName === path ? '.' : dirName\n  }\n\n  if (options & OPTS.PATHINFO_BASENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    tmpArr.basename = haveBasename\n  }\n\n  if (options & OPTS.PATHINFO_EXTENSION) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveExtension !== false) {\n      tmpArr.extension = haveExtension\n    }\n  }\n\n  if (options & OPTS.PATHINFO_FILENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveFilename === false) {\n      haveFilename = haveBasename.slice(0, haveBasename.length - (haveExtension\n        ? haveExtension.length + 1\n        : haveExtension === false\n          ? 0\n          : 1\n        )\n      )\n    }\n\n    tmpArr.filename = haveFilename\n  }\n\n  // If array contains only 1 element: return string\n  cnt = 0\n  for (opt in tmpArr) {\n    if (tmpArr.hasOwnProperty(opt)) {\n      cnt++\n      realOpt = opt\n    }\n  }\n  if (cnt === 1) {\n    return tmpArr[realOpt]\n  }\n\n  // Return full-blown array\n  return tmpArr\n}\n","source":"php/filesystem/pathinfo.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'pathinfo(''/www/htdocs/index.html'', 1)'\n  - 'pathinfo(''/www/htdocs/index.html'', ''PATHINFO_BASENAME'')'\n  - 'pathinfo(''/www/htdocs/index.html'', ''PATHINFO_EXTENSION'')'\n  - 'pathinfo(''/www/htdocs/index.html'', ''PATHINFO_FILENAME'')'\n  - 'pathinfo(''/www/htdocs/index.html'', 2 | 4)'\n  - 'pathinfo(''/www/htdocs/index.html'', ''PATHINFO_ALL'')'\n  - pathinfo('/www/htdocs/index.html')\nestarget: es5\nreturns:\n  - '''/www/htdocs'''\n  - '''index.html'''\n  - '''html'''\n  - '''index'''\n  - '{basename: ''index.html'', extension: ''html''}'\n  - >-\n    {dirname: '/www/htdocs', basename: 'index.html', extension: 'html',\n    filename: 'index'}\n  - >-\n    {dirname: '/www/htdocs', basename: 'index.html', extension: 'html',\n    filename: 'index'}\ndependencies: []\nauthors:\n  original by:\n    - Nate\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Dmitry Gorelenkov\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Timo\nnotes:\n  - |-\n    Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n    The way the bitwise arguments are handled allows for greater flexibility\n    & compatability. We might even standardize this\n    code and use a similar approach for\n    other bitwise PHP functions\n    Locutus tries very hard to stay away from a core.js\n    file with global dependencies, because we like\n    that you can just take a couple of functions and be on your way.\n    But by way we implemented this function,\n    if you want you can still declare the PATHINFO_*\n    yourself, and then you can use:\n    pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n    which makes it fully compliant with PHP syntax.\nlayout: function\ntitle: php'spathinfo in JavaScript\nfunction: pathinfo\ncategory: filesystem\nlanguage: php\npermalink: php/filesystem/pathinfo/\nalias:\n  - /functions/php/pathinfo/\n  - /functions/filesystem/pathinfo/\n  - /php/pathinfo/\n  - /functions/pathinfo/\n---\nmodule.exports = function pathinfo (path, options) {\n  //  discuss at: http://locutusjs.io/php/pathinfo/\n  // original by: Nate\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Dmitry Gorelenkov\n  //    input by: Timo\n  //      note 1: Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n  //      note 1: The way the bitwise arguments are handled allows for greater flexibility\n  //      note 1: & compatability. We might even standardize this\n  //      note 1: code and use a similar approach for\n  //      note 1: other bitwise PHP functions\n  //      note 1: Locutus tries very hard to stay away from a core.js\n  //      note 1: file with global dependencies, because we like\n  //      note 1: that you can just take a couple of functions and be on your way.\n  //      note 1: But by way we implemented this function,\n  //      note 1: if you want you can still declare the PATHINFO_*\n  //      note 1: yourself, and then you can use:\n  //      note 1: pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n  //      note 1: which makes it fully compliant with PHP syntax.\n  //   example 1: pathinfo('/www/htdocs/index.html', 1)\n  //   returns 1: '/www/htdocs'\n  //   example 2: pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')\n  //   returns 2: 'index.html'\n  //   example 3: pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')\n  //   returns 3: 'html'\n  //   example 4: pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')\n  //   returns 4: 'index'\n  //   example 5: pathinfo('/www/htdocs/index.html', 2 | 4)\n  //   returns 5: {basename: 'index.html', extension: 'html'}\n  //   example 6: pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')\n  //   returns 6: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  //   example 7: pathinfo('/www/htdocs/index.html')\n  //   returns 7: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n\n  var basename = require('../filesystem/basename')\n  var opt = ''\n  var realOpt = ''\n  var optName = ''\n  var optTemp = 0\n  var tmpArr = {}\n  var cnt = 0\n  var i = 0\n  var haveBasename = false\n  var haveExtension = false\n  var haveFilename = false\n\n  // Input defaulting & sanitation\n  if (!path) {\n    return false\n  }\n  if (!options) {\n    options = 'PATHINFO_ALL'\n  }\n\n  // Initialize binary arguments. Both the string & integer (constant) input is\n  // allowed\n  var OPTS = {\n    'PATHINFO_DIRNAME': 1,\n    'PATHINFO_BASENAME': 2,\n    'PATHINFO_EXTENSION': 4,\n    'PATHINFO_FILENAME': 8,\n    'PATHINFO_ALL': 0\n  }\n  // PATHINFO_ALL sums up all previously defined PATHINFOs (could just pre-calculate)\n  for (optName in OPTS) {\n    if (OPTS.hasOwnProperty(optName)) {\n      OPTS.PATHINFO_ALL = OPTS.PATHINFO_ALL | OPTS[optName]\n    }\n  }\n  if (typeof options !== 'number') {\n    // Allow for a single string or an array of string flags\n    options = [].concat(options)\n    for (i = 0; i < options.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[options[i]]) {\n        optTemp = optTemp | OPTS[options[i]]\n      }\n    }\n    options = optTemp\n  }\n\n  // Internal Functions\n  var _getExt = function (path) {\n    var str = path + ''\n    var dotP = str.lastIndexOf('.') + 1\n    return !dotP ? false : dotP !== str.length ? str.substr(dotP) : ''\n  }\n\n  // Gather path infos\n  if (options & OPTS.PATHINFO_DIRNAME) {\n    var dirName = path\n      .replace(/\\\\/g, '/')\n      .replace(/\\/[^\\/]*\\/?$/, '') // dirname\n    tmpArr.dirname = dirName === path ? '.' : dirName\n  }\n\n  if (options & OPTS.PATHINFO_BASENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    tmpArr.basename = haveBasename\n  }\n\n  if (options & OPTS.PATHINFO_EXTENSION) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveExtension !== false) {\n      tmpArr.extension = haveExtension\n    }\n  }\n\n  if (options & OPTS.PATHINFO_FILENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveFilename === false) {\n      haveFilename = haveBasename.slice(0, haveBasename.length - (haveExtension\n        ? haveExtension.length + 1\n        : haveExtension === false\n          ? 0\n          : 1\n        )\n      )\n    }\n\n    tmpArr.filename = haveFilename\n  }\n\n  // If array contains only 1 element: return string\n  cnt = 0\n  for (opt in tmpArr) {\n    if (tmpArr.hasOwnProperty(opt)) {\n      cnt++\n      realOpt = opt\n    }\n  }\n  if (cnt === 1) {\n    return tmpArr[realOpt]\n  }\n\n  // Return full-blown array\n  return tmpArr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/pathinfo/index.html","comments":1,"_id":"cinoeja07003eou9ycsfmjqbz","content":"module.exports = function pathinfo (path, options) {\n  //  discuss at: http://locutusjs.io/php/pathinfo/\n  // original by: Nate\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Dmitry Gorelenkov\n  //    input by: Timo\n  //      note 1: Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n  //      note 1: The way the bitwise arguments are handled allows for greater flexibility\n  //      note 1: & compatability. We might even standardize this\n  //      note 1: code and use a similar approach for\n  //      note 1: other bitwise PHP functions\n  //      note 1: Locutus tries very hard to stay away from a core.js\n  //      note 1: file with global dependencies, because we like\n  //      note 1: that you can just take a couple of functions and be on your way.\n  //      note 1: But by way we implemented this function,\n  //      note 1: if you want you can still declare the PATHINFO_*\n  //      note 1: yourself, and then you can use:\n  //      note 1: pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n  //      note 1: which makes it fully compliant with PHP syntax.\n  //   example 1: pathinfo('/www/htdocs/index.html', 1)\n  //   returns 1: '/www/htdocs'\n  //   example 2: pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')\n  //   returns 2: 'index.html'\n  //   example 3: pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')\n  //   returns 3: 'html'\n  //   example 4: pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')\n  //   returns 4: 'index'\n  //   example 5: pathinfo('/www/htdocs/index.html', 2 | 4)\n  //   returns 5: {basename: 'index.html', extension: 'html'}\n  //   example 6: pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')\n  //   returns 6: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  //   example 7: pathinfo('/www/htdocs/index.html')\n  //   returns 7: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n\n  var basename = require('../filesystem/basename')\n  var opt = ''\n  var realOpt = ''\n  var optName = ''\n  var optTemp = 0\n  var tmpArr = {}\n  var cnt = 0\n  var i = 0\n  var haveBasename = false\n  var haveExtension = false\n  var haveFilename = false\n\n  // Input defaulting & sanitation\n  if (!path) {\n    return false\n  }\n  if (!options) {\n    options = 'PATHINFO_ALL'\n  }\n\n  // Initialize binary arguments. Both the string & integer (constant) input is\n  // allowed\n  var OPTS = {\n    'PATHINFO_DIRNAME': 1,\n    'PATHINFO_BASENAME': 2,\n    'PATHINFO_EXTENSION': 4,\n    'PATHINFO_FILENAME': 8,\n    'PATHINFO_ALL': 0\n  }\n  // PATHINFO_ALL sums up all previously defined PATHINFOs (could just pre-calculate)\n  for (optName in OPTS) {\n    if (OPTS.hasOwnProperty(optName)) {\n      OPTS.PATHINFO_ALL = OPTS.PATHINFO_ALL | OPTS[optName]\n    }\n  }\n  if (typeof options !== 'number') {\n    // Allow for a single string or an array of string flags\n    options = [].concat(options)\n    for (i = 0; i < options.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[options[i]]) {\n        optTemp = optTemp | OPTS[options[i]]\n      }\n    }\n    options = optTemp\n  }\n\n  // Internal Functions\n  var _getExt = function (path) {\n    var str = path + ''\n    var dotP = str.lastIndexOf('.') + 1\n    return !dotP ? false : dotP !== str.length ? str.substr(dotP) : ''\n  }\n\n  // Gather path infos\n  if (options & OPTS.PATHINFO_DIRNAME) {\n    var dirName = path\n      .replace(/\\\\/g, '/')\n      .replace(/\\/[^\\/]*\\/?$/, '') // dirname\n    tmpArr.dirname = dirName === path ? '.' : dirName\n  }\n\n  if (options & OPTS.PATHINFO_BASENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    tmpArr.basename = haveBasename\n  }\n\n  if (options & OPTS.PATHINFO_EXTENSION) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveExtension !== false) {\n      tmpArr.extension = haveExtension\n    }\n  }\n\n  if (options & OPTS.PATHINFO_FILENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveFilename === false) {\n      haveFilename = haveBasename.slice(0, haveBasename.length - (haveExtension\n        ? haveExtension.length + 1\n        : haveExtension === false\n          ? 0\n          : 1\n        )\n      )\n    }\n\n    tmpArr.filename = haveFilename\n  }\n\n  // If array contains only 1 element: return string\n  cnt = 0\n  for (opt in tmpArr) {\n    if (tmpArr.hasOwnProperty(opt)) {\n      cnt++\n      realOpt = opt\n    }\n  }\n  if (cnt === 1) {\n    return tmpArr[realOpt]\n  }\n\n  // Return full-blown array\n  return tmpArr\n}\n","excerpt":"","more":"module.exports = function pathinfo (path, options) {\n  //  discuss at: http://locutusjs.io/php/pathinfo/\n  // original by: Nate\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Dmitry Gorelenkov\n  //    input by: Timo\n  //      note 1: Inspired by actual PHP source: php5-5.2.6/ext/standard/string.c line #1559\n  //      note 1: The way the bitwise arguments are handled allows for greater flexibility\n  //      note 1: & compatability. We might even standardize this\n  //      note 1: code and use a similar approach for\n  //      note 1: other bitwise PHP functions\n  //      note 1: Locutus tries very hard to stay away from a core.js\n  //      note 1: file with global dependencies, because we like\n  //      note 1: that you can just take a couple of functions and be on your way.\n  //      note 1: But by way we implemented this function,\n  //      note 1: if you want you can still declare the PATHINFO_*\n  //      note 1: yourself, and then you can use:\n  //      note 1: pathinfo('/www/index.html', PATHINFO_BASENAME | PATHINFO_EXTENSION);\n  //      note 1: which makes it fully compliant with PHP syntax.\n  //   example 1: pathinfo('/www/htdocs/index.html', 1)\n  //   returns 1: '/www/htdocs'\n  //   example 2: pathinfo('/www/htdocs/index.html', 'PATHINFO_BASENAME')\n  //   returns 2: 'index.html'\n  //   example 3: pathinfo('/www/htdocs/index.html', 'PATHINFO_EXTENSION')\n  //   returns 3: 'html'\n  //   example 4: pathinfo('/www/htdocs/index.html', 'PATHINFO_FILENAME')\n  //   returns 4: 'index'\n  //   example 5: pathinfo('/www/htdocs/index.html', 2 | 4)\n  //   returns 5: {basename: 'index.html', extension: 'html'}\n  //   example 6: pathinfo('/www/htdocs/index.html', 'PATHINFO_ALL')\n  //   returns 6: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n  //   example 7: pathinfo('/www/htdocs/index.html')\n  //   returns 7: {dirname: '/www/htdocs', basename: 'index.html', extension: 'html', filename: 'index'}\n\n  var basename = require('../filesystem/basename')\n  var opt = ''\n  var realOpt = ''\n  var optName = ''\n  var optTemp = 0\n  var tmpArr = {}\n  var cnt = 0\n  var i = 0\n  var haveBasename = false\n  var haveExtension = false\n  var haveFilename = false\n\n  // Input defaulting & sanitation\n  if (!path) {\n    return false\n  }\n  if (!options) {\n    options = 'PATHINFO_ALL'\n  }\n\n  // Initialize binary arguments. Both the string & integer (constant) input is\n  // allowed\n  var OPTS = {\n    'PATHINFO_DIRNAME': 1,\n    'PATHINFO_BASENAME': 2,\n    'PATHINFO_EXTENSION': 4,\n    'PATHINFO_FILENAME': 8,\n    'PATHINFO_ALL': 0\n  }\n  // PATHINFO_ALL sums up all previously defined PATHINFOs (could just pre-calculate)\n  for (optName in OPTS) {\n    if (OPTS.hasOwnProperty(optName)) {\n      OPTS.PATHINFO_ALL = OPTS.PATHINFO_ALL | OPTS[optName]\n    }\n  }\n  if (typeof options !== 'number') {\n    // Allow for a single string or an array of string flags\n    options = [].concat(options)\n    for (i = 0; i < options.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[options[i]]) {\n        optTemp = optTemp | OPTS[options[i]]\n      }\n    }\n    options = optTemp\n  }\n\n  // Internal Functions\n  var _getExt = function (path) {\n    var str = path + ''\n    var dotP = str.lastIndexOf('.') + 1\n    return !dotP ? false : dotP !== str.length ? str.substr(dotP) : ''\n  }\n\n  // Gather path infos\n  if (options & OPTS.PATHINFO_DIRNAME) {\n    var dirName = path\n      .replace(/\\\\/g, '/')\n      .replace(/\\/[^\\/]*\\/?$/, '') // dirname\n    tmpArr.dirname = dirName === path ? '.' : dirName\n  }\n\n  if (options & OPTS.PATHINFO_BASENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    tmpArr.basename = haveBasename\n  }\n\n  if (options & OPTS.PATHINFO_EXTENSION) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveExtension !== false) {\n      tmpArr.extension = haveExtension\n    }\n  }\n\n  if (options & OPTS.PATHINFO_FILENAME) {\n    if (haveBasename === false) {\n      haveBasename = basename(path)\n    }\n    if (haveExtension === false) {\n      haveExtension = _getExt(haveBasename)\n    }\n    if (haveFilename === false) {\n      haveFilename = haveBasename.slice(0, haveBasename.length - (haveExtension\n        ? haveExtension.length + 1\n        : haveExtension === false\n          ? 0\n          : 1\n        )\n      )\n    }\n\n    tmpArr.filename = haveFilename\n  }\n\n  // If array contains only 1 element: return string\n  cnt = 0\n  for (opt in tmpArr) {\n    if (tmpArr.hasOwnProperty(opt)) {\n      cnt++\n      realOpt = opt\n    }\n  }\n  if (cnt === 1) {\n    return tmpArr[realOpt]\n  }\n\n  // Return full-blown array\n  return tmpArr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')"],"estarget":"es5","returns":["'some/_supporters/pj_test_supportfile_1.htm'"],"dependencies":[],"authors":{"original by":["mk.keck"],"improved by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":["Returned path is an url like e.g. 'http://yourhost.tld/path/'"],"layout":"function","title":"php'srealpath in JavaScript","function":"realpath","category":"filesystem","language":"php","alias":["/functions/php/realpath/","/functions/filesystem/realpath/","/php/realpath/","/functions/realpath/"],"_content":"module.exports = function realpath (path) {\n  //  discuss at: http://locutusjs.io/php/realpath/\n  // original by: mk.keck\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Returned path is an url like e.g. 'http://yourhost.tld/path/'\n  //   example 1: realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\n  //   returns 1: 'some/_supporters/pj_test_supportfile_1.htm'\n\n  if (typeof window === 'undefined') {\n    var nodePath = require('path')\n    return nodePath.normalize(path)\n  }\n\n  var p = 0\n  var arr = [] // Save the root, if not given\n  var r = this.window.location.href // Avoid input failures\n\n  // Check if there's a port in path (like 'http://')\n  path = (path + '').replace('\\\\', '/')\n  if (path.indexOf('://') !== -1) {\n    p = 1\n  }\n\n  // Ok, there's not a port in path, so let's take the root\n  if (!p) {\n    path = r.substring(0, r.lastIndexOf('/') + 1) + path\n  }\n\n  // Explode the given path into it's parts\n  arr = path.split('/') // The path is an array now\n  path = [] // Foreach part make a check\n  for (var k in arr) { // This is'nt really interesting\n    if (arr[k] === '.') {\n      continue\n    }\n    // This reduces the realpath\n    if (arr[k] === '..') {\n      /* But only if there more than 3 parts in the path-array.\n       * The first three parts are for the uri */\n      if (path.length > 3) {\n        path.pop()\n      }\n    } else {\n      // This adds parts to the realpath\n      // But only if the part is not empty or the uri\n      // (the first three parts ar needed) was not\n      // saved\n      if ((path.length < 2) || (arr[k] !== '')) {\n        path.push(arr[k])\n      }\n    }\n  }\n\n  // Returns the absloute path as a string\n  return path.join('/')\n}\n","source":"php/filesystem/realpath.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\nestarget: es5\nreturns:\n  - '''some/_supporters/pj_test_supportfile_1.htm'''\ndependencies: []\nauthors:\n  original by:\n    - mk.keck\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes:\n  - 'Returned path is an url like e.g. ''http://yourhost.tld/path/'''\nlayout: function\ntitle: php'srealpath in JavaScript\nfunction: realpath\ncategory: filesystem\nlanguage: php\npermalink: php/filesystem/realpath/\nalias:\n  - /functions/php/realpath/\n  - /functions/filesystem/realpath/\n  - /php/realpath/\n  - /functions/realpath/\n---\nmodule.exports = function realpath (path) {\n  //  discuss at: http://locutusjs.io/php/realpath/\n  // original by: mk.keck\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Returned path is an url like e.g. 'http://yourhost.tld/path/'\n  //   example 1: realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\n  //   returns 1: 'some/_supporters/pj_test_supportfile_1.htm'\n\n  if (typeof window === 'undefined') {\n    var nodePath = require('path')\n    return nodePath.normalize(path)\n  }\n\n  var p = 0\n  var arr = [] // Save the root, if not given\n  var r = this.window.location.href // Avoid input failures\n\n  // Check if there's a port in path (like 'http://')\n  path = (path + '').replace('\\\\', '/')\n  if (path.indexOf('://') !== -1) {\n    p = 1\n  }\n\n  // Ok, there's not a port in path, so let's take the root\n  if (!p) {\n    path = r.substring(0, r.lastIndexOf('/') + 1) + path\n  }\n\n  // Explode the given path into it's parts\n  arr = path.split('/') // The path is an array now\n  path = [] // Foreach part make a check\n  for (var k in arr) { // This is'nt really interesting\n    if (arr[k] === '.') {\n      continue\n    }\n    // This reduces the realpath\n    if (arr[k] === '..') {\n      /* But only if there more than 3 parts in the path-array.\n       * The first three parts are for the uri */\n      if (path.length > 3) {\n        path.pop()\n      }\n    } else {\n      // This adds parts to the realpath\n      // But only if the part is not empty or the uri\n      // (the first three parts ar needed) was not\n      // saved\n      if ((path.length < 2) || (arr[k] !== '')) {\n        path.push(arr[k])\n      }\n    }\n  }\n\n  // Returns the absloute path as a string\n  return path.join('/')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/filesystem/realpath/index.html","comments":1,"_id":"cinoeja08003fou9y9h71q5n1","content":"module.exports = function realpath (path) {\n  //  discuss at: http://locutusjs.io/php/realpath/\n  // original by: mk.keck\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Returned path is an url like e.g. 'http://yourhost.tld/path/'\n  //   example 1: realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\n  //   returns 1: 'some/_supporters/pj_test_supportfile_1.htm'\n\n  if (typeof window === 'undefined') {\n    var nodePath = require('path')\n    return nodePath.normalize(path)\n  }\n\n  var p = 0\n  var arr = [] // Save the root, if not given\n  var r = this.window.location.href // Avoid input failures\n\n  // Check if there's a port in path (like 'http://')\n  path = (path + '').replace('\\\\', '/')\n  if (path.indexOf('://') !== -1) {\n    p = 1\n  }\n\n  // Ok, there's not a port in path, so let's take the root\n  if (!p) {\n    path = r.substring(0, r.lastIndexOf('/') + 1) + path\n  }\n\n  // Explode the given path into it's parts\n  arr = path.split('/') // The path is an array now\n  path = [] // Foreach part make a check\n  for (var k in arr) { // This is'nt really interesting\n    if (arr[k] === '.') {\n      continue\n    }\n    // This reduces the realpath\n    if (arr[k] === '..') {\n      /* But only if there more than 3 parts in the path-array.\n       * The first three parts are for the uri */\n      if (path.length > 3) {\n        path.pop()\n      }\n    } else {\n      // This adds parts to the realpath\n      // But only if the part is not empty or the uri\n      // (the first three parts ar needed) was not\n      // saved\n      if ((path.length < 2) || (arr[k] !== '')) {\n        path.push(arr[k])\n      }\n    }\n  }\n\n  // Returns the absloute path as a string\n  return path.join('/')\n}\n","excerpt":"","more":"module.exports = function realpath (path) {\n  //  discuss at: http://locutusjs.io/php/realpath/\n  // original by: mk.keck\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Returned path is an url like e.g. 'http://yourhost.tld/path/'\n  //   example 1: realpath('some/dir/.././_supporters/pj_test_supportfile_1.htm')\n  //   returns 1: 'some/_supporters/pj_test_supportfile_1.htm'\n\n  if (typeof window === 'undefined') {\n    var nodePath = require('path')\n    return nodePath.normalize(path)\n  }\n\n  var p = 0\n  var arr = [] // Save the root, if not given\n  var r = this.window.location.href // Avoid input failures\n\n  // Check if there's a port in path (like 'http://')\n  path = (path + '').replace('\\\\', '/')\n  if (path.indexOf('://') !== -1) {\n    p = 1\n  }\n\n  // Ok, there's not a port in path, so let's take the root\n  if (!p) {\n    path = r.substring(0, r.lastIndexOf('/') + 1) + path\n  }\n\n  // Explode the given path into it's parts\n  arr = path.split('/') // The path is an array now\n  path = [] // Foreach part make a check\n  for (var k in arr) { // This is'nt really interesting\n    if (arr[k] === '.') {\n      continue\n    }\n    // This reduces the realpath\n    if (arr[k] === '..') {\n      /* But only if there more than 3 parts in the path-array.\n       * The first three parts are for the uri */\n      if (path.length > 3) {\n        path.pop()\n      }\n    } else {\n      // This adds parts to the realpath\n      // But only if the part is not empty or the uri\n      // (the first three parts ar needed) was not\n      // saved\n      if ((path.length < 2) || (arr[k] !== '')) {\n        path.push(arr[k])\n      }\n    }\n  }\n\n  // Returns the absloute path as a string\n  return path.join('/')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["call_user_func('isNaN', 'a')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Diplom@t (http://difane.com/)","Brett Zamir (http://brett-zamir.me)"]},"notes":["Depends on call_user_func_array which in turn depends on the `cb` that is passed,\nthis function can use `eval`.\nThe `eval` input is however checked to only allow valid function names,\nSo it should not be unsafer than uses without eval (seeing as you can)\nalready pass any function to be executed here."],"layout":"function","title":"php'scall_user_func in JavaScript","function":"call_user_func","category":"funchand","language":"php","alias":["/functions/php/call_user_func/","/functions/funchand/call_user_func/","/php/call_user_func/","/functions/call_user_func/"],"_content":"module.exports = function call_user_func (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,\n  //      note 1: this function can use `eval`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func('isNaN', 'a')\n  //   returns 1: true\n\n  var callUserFuncArray = require('../funchand/call_user_func_array')\n  parameters = Array.prototype.slice.call(arguments, 1)\n  return callUserFuncArray(cb, parameters)\n}\n","source":"php/funchand/call_user_func.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'call_user_func(''isNaN'', ''a'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Diplom@t (http://difane.com/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    Depends on call_user_func_array which in turn depends on the `cb` that is\n    passed,\n\n    this function can use `eval`.\n\n    The `eval` input is however checked to only allow valid function names,\n\n    So it should not be unsafer than uses without eval (seeing as you can)\n\n    already pass any function to be executed here.\nlayout: function\ntitle: php'scall_user_func in JavaScript\nfunction: call_user_func\ncategory: funchand\nlanguage: php\npermalink: php/funchand/call_user_func/\nalias:\n  - /functions/php/call_user_func/\n  - /functions/funchand/call_user_func/\n  - /php/call_user_func/\n  - /functions/call_user_func/\n---\nmodule.exports = function call_user_func (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,\n  //      note 1: this function can use `eval`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func('isNaN', 'a')\n  //   returns 1: true\n\n  var callUserFuncArray = require('../funchand/call_user_func_array')\n  parameters = Array.prototype.slice.call(arguments, 1)\n  return callUserFuncArray(cb, parameters)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/call_user_func/index.html","comments":1,"_id":"cinoeja08003gou9yzslsb18m","content":"module.exports = function call_user_func (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,\n  //      note 1: this function can use `eval`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func('isNaN', 'a')\n  //   returns 1: true\n\n  var callUserFuncArray = require('../funchand/call_user_func_array')\n  parameters = Array.prototype.slice.call(arguments, 1)\n  return callUserFuncArray(cb, parameters)\n}\n","excerpt":"","more":"module.exports = function call_user_func (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depends on call_user_func_array which in turn depends on the `cb` that is passed,\n  //      note 1: this function can use `eval`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func('isNaN', 'a')\n  //   returns 1: true\n\n  var callUserFuncArray = require('../funchand/call_user_func_array')\n  parameters = Array.prototype.slice.call(arguments, 1)\n  return callUserFuncArray(cb, parameters)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["call_user_func_array('isNaN', ['a'])","call_user_func_array('isNaN', [1])"],"estarget":"es5","returns":["true","false"],"dependencies":[],"authors":{"original by":["Thiago Mata (http://thiagomata.blog.com)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Diplom@t (http://difane.com/)","Brett Zamir (http://brett-zamir.me)"],"revised by":["Jon Hohle"]},"notes":["Depending on the `cb` that is passed,\nthis function can use `eval` and/or `new Function`.\nThe `eval` input is however checked to only allow valid function names,\nSo it should not be unsafer than uses without eval (seeing as you can)\nalready pass any function to be executed here."],"layout":"function","title":"php'scall_user_func_array in JavaScript","function":"call_user_func_array","category":"funchand","language":"php","alias":["/functions/php/call_user_func_array/","/functions/funchand/call_user_func_array/","/php/call_user_func_array/","/functions/call_user_func_array/"],"_content":"module.exports = function call_user_func_array (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func_array/\n  // original by: Thiago Mata (http://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  var func\n  var scope = null\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = (new Function(null, 'return ' + cb)()) // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n","source":"php/funchand/call_user_func_array.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'call_user_func_array(''isNaN'', [''a''])'\n  - 'call_user_func_array(''isNaN'', [1])'\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Thiago Mata (http://thiagomata.blog.com)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Diplom@t (http://difane.com/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - Jon Hohle\nnotes:\n  - |-\n    Depending on the `cb` that is passed,\n    this function can use `eval` and/or `new Function`.\n    The `eval` input is however checked to only allow valid function names,\n    So it should not be unsafer than uses without eval (seeing as you can)\n    already pass any function to be executed here.\nlayout: function\ntitle: php'scall_user_func_array in JavaScript\nfunction: call_user_func_array\ncategory: funchand\nlanguage: php\npermalink: php/funchand/call_user_func_array/\nalias:\n  - /functions/php/call_user_func_array/\n  - /functions/funchand/call_user_func_array/\n  - /php/call_user_func_array/\n  - /functions/call_user_func_array/\n---\nmodule.exports = function call_user_func_array (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func_array/\n  // original by: Thiago Mata (http://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  var func\n  var scope = null\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = (new Function(null, 'return ' + cb)()) // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/call_user_func_array/index.html","comments":1,"_id":"cinoeja09003hou9yj09dddz2","content":"module.exports = function call_user_func_array (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func_array/\n  // original by: Thiago Mata (http://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  var func\n  var scope = null\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = (new Function(null, 'return ' + cb)()) // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n","excerpt":"","more":"module.exports = function call_user_func_array (cb, parameters) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/call_user_func_array/\n  // original by: Thiago Mata (http://thiagomata.blog.com)\n  //  revised by: Jon Hohle\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Diplom@t (http://difane.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Depending on the `cb` that is passed,\n  //      note 1: this function can use `eval` and/or `new Function`.\n  //      note 1: The `eval` input is however checked to only allow valid function names,\n  //      note 1: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 1: already pass any function to be executed here.\n  //   example 1: call_user_func_array('isNaN', ['a'])\n  //   returns 1: true\n  //   example 2: call_user_func_array('isNaN', [1])\n  //   returns 2: false\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  var func\n  var scope = null\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  if (typeof cb === 'string') {\n    if (typeof $global[cb] === 'function') {\n      func = $global[cb]\n    } else if (cb.match(validJSFunctionNamePattern)) {\n      func = (new Function(null, 'return ' + cb)()) // eslint-disable-line no-new-func\n    }\n  } else if (Object.prototype.toString.call(cb) === '[object Array]') {\n    if (typeof cb[0] === 'string') {\n      if (cb[0].match(validJSFunctionNamePattern)) {\n        func = eval(cb[0] + \"['\" + cb[1] + \"']\") // eslint-disable-line no-eval\n      }\n    } else {\n      func = cb[0][cb[1]]\n    }\n\n    if (typeof cb[0] === 'string') {\n      if (typeof $global[cb[0]] === 'function') {\n        scope = $global[cb[0]]\n      } else if (cb[0].match(validJSFunctionNamePattern)) {\n        scope = eval(cb[0]) // eslint-disable-line no-eval\n      }\n    } else if (typeof cb[0] === 'object') {\n      scope = cb[0]\n    }\n  } else if (typeof cb === 'function') {\n    func = cb\n  }\n\n  if (typeof func !== 'function') {\n    throw new Error(func + ' is not a valid function')\n  }\n\n  return func.apply(scope, parameters)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $f = create_function('a, b', 'return (a + b)')\n$f(1, 2)"],"estarget":"es5","returns":["3"],"dependencies":[],"authors":{"original by":["Johnny Mast (http://www.phpvrouwen.nl)"]},"notes":[],"layout":"function","title":"php'screate_function in JavaScript","function":"create_function","category":"funchand","language":"php","alias":["/functions/php/create_function/","/functions/funchand/create_function/","/php/create_function/","/functions/create_function/"],"_content":"module.exports = function create_function (args, code) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/create_function/\n  //      original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: var $f = create_function('a, b', 'return (a + b)')\n  //        example 1: $f(1, 2)\n  //        returns 1: 3\n\n  try {\n    return Function.apply(null, args.split(',').concat(code))\n  } catch (e) {\n    return false\n  }\n}\n","source":"php/funchand/create_function.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $f = create_function('a, b', 'return (a + b)')\n    $f(1, 2)\nestarget: es5\nreturns:\n  - '3'\ndependencies: []\nauthors:\n  original by:\n    - 'Johnny Mast (http://www.phpvrouwen.nl)'\nnotes: []\nlayout: function\ntitle: php'screate_function in JavaScript\nfunction: create_function\ncategory: funchand\nlanguage: php\npermalink: php/funchand/create_function/\nalias:\n  - /functions/php/create_function/\n  - /functions/funchand/create_function/\n  - /php/create_function/\n  - /functions/create_function/\n---\nmodule.exports = function create_function (args, code) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/create_function/\n  //      original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: var $f = create_function('a, b', 'return (a + b)')\n  //        example 1: $f(1, 2)\n  //        returns 1: 3\n\n  try {\n    return Function.apply(null, args.split(',').concat(code))\n  } catch (e) {\n    return false\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/create_function/index.html","comments":1,"_id":"cinoeja09003iou9y9rzlw39i","content":"module.exports = function create_function (args, code) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/create_function/\n  //      original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: var $f = create_function('a, b', 'return (a + b)')\n  //        example 1: $f(1, 2)\n  //        returns 1: 3\n\n  try {\n    return Function.apply(null, args.split(',').concat(code))\n  } catch (e) {\n    return false\n  }\n}\n","excerpt":"","more":"module.exports = function create_function (args, code) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/create_function/\n  //      original by: Johnny Mast (http://www.phpvrouwen.nl)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: var $f = create_function('a, b', 'return (a + b)')\n  //        example 1: $f(1, 2)\n  //        returns 1: 3\n\n  try {\n    return Function.apply(null, args.split(',').concat(code))\n  } catch (e) {\n    return false\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["function_exists('isFinite')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Steve Clay","Legaev Andrey","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sfunction_exists in JavaScript","function":"function_exists","category":"funchand","language":"php","alias":["/functions/php/function_exists/","/functions/funchand/function_exists/","/php/function_exists/","/functions/function_exists/"],"_content":"module.exports = function function_exists (funcName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/function_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steve Clay\n  // improved by: Legaev Andrey\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: function_exists('isFinite')\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  if (typeof funcName === 'string') {\n    funcName = $global[funcName]\n  }\n\n  return typeof funcName === 'function'\n}\n","source":"php/funchand/function_exists.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - function_exists('isFinite')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Steve Clay\n    - Legaev Andrey\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sfunction_exists in JavaScript\nfunction: function_exists\ncategory: funchand\nlanguage: php\npermalink: php/funchand/function_exists/\nalias:\n  - /functions/php/function_exists/\n  - /functions/funchand/function_exists/\n  - /php/function_exists/\n  - /functions/function_exists/\n---\nmodule.exports = function function_exists (funcName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/function_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steve Clay\n  // improved by: Legaev Andrey\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: function_exists('isFinite')\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  if (typeof funcName === 'string') {\n    funcName = $global[funcName]\n  }\n\n  return typeof funcName === 'function'\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/function_exists/index.html","comments":1,"_id":"cinoeja09003jou9y2odz5ryj","content":"module.exports = function function_exists (funcName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/function_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steve Clay\n  // improved by: Legaev Andrey\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: function_exists('isFinite')\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  if (typeof funcName === 'string') {\n    funcName = $global[funcName]\n  }\n\n  return typeof funcName === 'function'\n}\n","excerpt":"","more":"module.exports = function function_exists (funcName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/function_exists/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steve Clay\n  // improved by: Legaev Andrey\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: function_exists('isFinite')\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  if (typeof funcName === 'string') {\n    funcName = $global[funcName]\n  }\n\n  return typeof funcName === 'function'\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["function test_in_array (array, p_val) {for(var i = 0, l = array.length; i < l; i++) {if (array[i] === p_val) return true} return false}\nvar $funcs = get_defined_functions()\nvar $found = test_in_array($funcs, 'get_defined_functions')\nvar $result = $found"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Test case 1: If get_defined_functions can find\nitself in the defined functions, it worked :)"],"layout":"function","title":"php'sget_defined_functions in JavaScript","function":"get_defined_functions","category":"funchand","language":"php","alias":["/functions/php/get_defined_functions/","/functions/funchand/get_defined_functions/","/php/get_defined_functions/","/functions/get_defined_functions/"],"_content":"module.exports = function get_defined_functions () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_defined_functions/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Test case 1: If get_defined_functions can find\n  //      note 1: itself in the defined functions, it worked :)\n  //   example 1: function test_in_array (array, p_val) {for(var i = 0, l = array.length; i < l; i++) {if (array[i] === p_val) return true} return false}\n  //   example 1: var $funcs = get_defined_functions()\n  //   example 1: var $found = test_in_array($funcs, 'get_defined_functions')\n  //   example 1: var $result = $found\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var i = ''\n  var arr = []\n  var already = {}\n\n  for (i in $global) {\n    try {\n      if (typeof $global[i] === 'function') {\n        if (!already[i]) {\n          already[i] = 1\n          arr.push(i)\n        }\n      } else if (typeof $global[i] === 'object') {\n        for (var j in $global[i]) {\n          if (typeof $global[j] === 'function' && $global[j] && !already[j]) {\n            already[j] = 1\n            arr.push(j)\n          }\n        }\n      }\n    } catch (e) {\n      // Some objects in Firefox throw exceptions when their\n      // properties are accessed (e.g., sessionStorage)\n    }\n  }\n\n  return arr\n}\n","source":"php/funchand/get_defined_functions.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    function test_in_array (array, p_val) {for(var i = 0, l = array.length; i <\n    l; i++) {if (array[i] === p_val) return true} return false}\n\n    var $funcs = get_defined_functions()\n\n    var $found = test_in_array($funcs, 'get_defined_functions')\n\n    var $result = $found\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    Test case 1: If get_defined_functions can find\n    itself in the defined functions, it worked :)\nlayout: function\ntitle: php'sget_defined_functions in JavaScript\nfunction: get_defined_functions\ncategory: funchand\nlanguage: php\npermalink: php/funchand/get_defined_functions/\nalias:\n  - /functions/php/get_defined_functions/\n  - /functions/funchand/get_defined_functions/\n  - /php/get_defined_functions/\n  - /functions/get_defined_functions/\n---\nmodule.exports = function get_defined_functions () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_defined_functions/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Test case 1: If get_defined_functions can find\n  //      note 1: itself in the defined functions, it worked :)\n  //   example 1: function test_in_array (array, p_val) {for(var i = 0, l = array.length; i < l; i++) {if (array[i] === p_val) return true} return false}\n  //   example 1: var $funcs = get_defined_functions()\n  //   example 1: var $found = test_in_array($funcs, 'get_defined_functions')\n  //   example 1: var $result = $found\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var i = ''\n  var arr = []\n  var already = {}\n\n  for (i in $global) {\n    try {\n      if (typeof $global[i] === 'function') {\n        if (!already[i]) {\n          already[i] = 1\n          arr.push(i)\n        }\n      } else if (typeof $global[i] === 'object') {\n        for (var j in $global[i]) {\n          if (typeof $global[j] === 'function' && $global[j] && !already[j]) {\n            already[j] = 1\n            arr.push(j)\n          }\n        }\n      }\n    } catch (e) {\n      // Some objects in Firefox throw exceptions when their\n      // properties are accessed (e.g., sessionStorage)\n    }\n  }\n\n  return arr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/get_defined_functions/index.html","comments":1,"_id":"cinoeja0a003kou9y51epol1s","content":"module.exports = function get_defined_functions () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_defined_functions/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Test case 1: If get_defined_functions can find\n  //      note 1: itself in the defined functions, it worked :)\n  //   example 1: function test_in_array (array, p_val) {for(var i = 0, l = array.length; i < l; i++) {if (array[i] === p_val) return true} return false}\n  //   example 1: var $funcs = get_defined_functions()\n  //   example 1: var $found = test_in_array($funcs, 'get_defined_functions')\n  //   example 1: var $result = $found\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var i = ''\n  var arr = []\n  var already = {}\n\n  for (i in $global) {\n    try {\n      if (typeof $global[i] === 'function') {\n        if (!already[i]) {\n          already[i] = 1\n          arr.push(i)\n        }\n      } else if (typeof $global[i] === 'object') {\n        for (var j in $global[i]) {\n          if (typeof $global[j] === 'function' && $global[j] && !already[j]) {\n            already[j] = 1\n            arr.push(j)\n          }\n        }\n      }\n    } catch (e) {\n      // Some objects in Firefox throw exceptions when their\n      // properties are accessed (e.g., sessionStorage)\n    }\n  }\n\n  return arr\n}\n","excerpt":"","more":"module.exports = function get_defined_functions () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_defined_functions/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Test case 1: If get_defined_functions can find\n  //      note 1: itself in the defined functions, it worked :)\n  //   example 1: function test_in_array (array, p_val) {for(var i = 0, l = array.length; i < l; i++) {if (array[i] === p_val) return true} return false}\n  //   example 1: var $funcs = get_defined_functions()\n  //   example 1: var $found = test_in_array($funcs, 'get_defined_functions')\n  //   example 1: var $result = $found\n  //   returns 1: true\n  //        test: skip-1\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var i = ''\n  var arr = []\n  var already = {}\n\n  for (i in $global) {\n    try {\n      if (typeof $global[i] === 'function') {\n        if (!already[i]) {\n          already[i] = 1\n          arr.push(i)\n        }\n      } else if (typeof $global[i] === 'object') {\n        for (var j in $global[i]) {\n          if (typeof $global[j] === 'function' && $global[j] && !already[j]) {\n            already[j] = 1\n            arr.push(j)\n          }\n        }\n      }\n    } catch (e) {\n      // Some objects in Firefox throw exceptions when their\n      // properties are accessed (e.g., sessionStorage)\n    }\n  }\n\n  return arr\n}\n"},{"type":"category","language":"php","category":"funchand","title":"funchand","_content":"","source":"php/funchand/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: funchand\ntitle: funchand\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/funchand/index.html","comments":1,"layout":"page","_id":"cinoeja0a003lou9yuq97g7fk","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["i18n_loc_get_default()","i18n_loc_set_default('pt_PT')\ni18n_loc_get_default()"],"estarget":"es5","returns":["'en_US_POSIX'","'pt_PT'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\nList of locales at <http://demo.icu-project.org/icu-bin/locexp>\nTo be usable with sort() if it is passed the `SORT_LOCALE_STRING`\nsorting flag: http://php.net/manual/en/function.sort.php"],"layout":"function","title":"php'si18n_loc_get_default in JavaScript","function":"i18n_loc_get_default","category":"i18n","language":"php","alias":["/functions/php/i18n_loc_get_default/","/functions/i18n/i18n_loc_get_default/","/php/i18n_loc_get_default/","/functions/i18n_loc_get_default/"],"_content":"module.exports = function i18n_loc_get_default () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_get_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\n  //      note 1: List of locales at <http://demo.icu-project.org/icu-bin/locexp>\n  //      note 1: To be usable with sort() if it is passed the `SORT_LOCALE_STRING`\n  //      note 1: sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_get_default()\n  //   returns 1: 'en_US_POSIX'\n  //   example 2: i18n_loc_set_default('pt_PT')\n  //   example 2: i18n_loc_get_default()\n  //   returns 2: 'pt_PT'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  return $locutus.php.locale_default || 'en_US_POSIX'\n}\n","source":"php/i18n/i18n_loc_get_default.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - i18n_loc_get_default()\n  - |-\n    i18n_loc_set_default('pt_PT')\n    i18n_loc_get_default()\nestarget: es5\nreturns:\n  - '''en_US_POSIX'''\n  - '''pt_PT'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\n    List of locales at <http://demo.icu-project.org/icu-bin/locexp>\n    To be usable with sort() if it is passed the `SORT_LOCALE_STRING`\n    sorting flag: http://php.net/manual/en/function.sort.php\nlayout: function\ntitle: php'si18n_loc_get_default in JavaScript\nfunction: i18n_loc_get_default\ncategory: i18n\nlanguage: php\npermalink: php/i18n/i18n_loc_get_default/\nalias:\n  - /functions/php/i18n_loc_get_default/\n  - /functions/i18n/i18n_loc_get_default/\n  - /php/i18n_loc_get_default/\n  - /functions/i18n_loc_get_default/\n---\nmodule.exports = function i18n_loc_get_default () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_get_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\n  //      note 1: List of locales at <http://demo.icu-project.org/icu-bin/locexp>\n  //      note 1: To be usable with sort() if it is passed the `SORT_LOCALE_STRING`\n  //      note 1: sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_get_default()\n  //   returns 1: 'en_US_POSIX'\n  //   example 2: i18n_loc_set_default('pt_PT')\n  //   example 2: i18n_loc_get_default()\n  //   returns 2: 'pt_PT'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  return $locutus.php.locale_default || 'en_US_POSIX'\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/i18n/i18n_loc_get_default/index.html","comments":1,"_id":"cinoeja0b003mou9ypf3lu8rm","content":"module.exports = function i18n_loc_get_default () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_get_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\n  //      note 1: List of locales at <http: demo.icu-project.org=\"\" icu-bin=\"\" locexp=\"\">\n  //      note 1: To be usable with sort() if it is passed the `SORT_LOCALE_STRING`\n  //      note 1: sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_get_default()\n  //   returns 1: 'en_US_POSIX'\n  //   example 2: i18n_loc_set_default('pt_PT')\n  //   example 2: i18n_loc_get_default()\n  //   returns 2: 'pt_PT'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  return $locutus.php.locale_default || 'en_US_POSIX'\n}\n</http:>","excerpt":"","more":"module.exports = function i18n_loc_get_default () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_get_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_get_default(). Not listed yet at php.net.\n  //      note 1: List of locales at <http://demo.icu-project.org/icu-bin/locexp>\n  //      note 1: To be usable with sort() if it is passed the `SORT_LOCALE_STRING`\n  //      note 1: sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_get_default()\n  //   returns 1: 'en_US_POSIX'\n  //   example 2: i18n_loc_set_default('pt_PT')\n  //   example 2: i18n_loc_get_default()\n  //   returns 2: 'pt_PT'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  return $locutus.php.locale_default || 'en_US_POSIX'\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["i18n_loc_set_default('pt_PT')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\nList of locales at http://demo.icu-project.org/icu-bin/locexp (use for implementing other locales here)\nTo be usable with sort() if it is passed the SORT_LOCALE_STRING sorting flag: http://php.net/manual/en/function.sort.php"],"layout":"function","title":"php'si18n_loc_set_default in JavaScript","function":"i18n_loc_set_default","category":"i18n","language":"php","alias":["/functions/php/i18n_loc_set_default/","/functions/i18n/i18n_loc_set_default/","/php/i18n_loc_set_default/","/functions/i18n_loc_set_default/"],"_content":"module.exports = function i18n_loc_set_default (name) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_set_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\n  //      note 1: List of locales at http://demo.icu-project.org/icu-bin/locexp (use for implementing other locales here)\n  //      note 1: To be usable with sort() if it is passed the SORT_LOCALE_STRING sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_set_default('pt_PT')\n  //   returns 1: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  $locutus.php.locales.en_US_POSIX = {\n    sorting: function (str1, str2) {\n      // @todo: This one taken from strcmp, but need for other locales;\n      // we don't use localeCompare since its locale is not settable\n      return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n    }\n  }\n\n  $locutus.php.locale_default = name\n  return true\n}\n","source":"php/i18n/i18n_loc_set_default.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - i18n_loc_set_default('pt_PT')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\n\n    List of locales at http://demo.icu-project.org/icu-bin/locexp (use for\n    implementing other locales here)\n\n    To be usable with sort() if it is passed the SORT_LOCALE_STRING sorting\n    flag: http://php.net/manual/en/function.sort.php\nlayout: function\ntitle: php'si18n_loc_set_default in JavaScript\nfunction: i18n_loc_set_default\ncategory: i18n\nlanguage: php\npermalink: php/i18n/i18n_loc_set_default/\nalias:\n  - /functions/php/i18n_loc_set_default/\n  - /functions/i18n/i18n_loc_set_default/\n  - /php/i18n_loc_set_default/\n  - /functions/i18n_loc_set_default/\n---\nmodule.exports = function i18n_loc_set_default (name) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_set_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\n  //      note 1: List of locales at http://demo.icu-project.org/icu-bin/locexp (use for implementing other locales here)\n  //      note 1: To be usable with sort() if it is passed the SORT_LOCALE_STRING sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_set_default('pt_PT')\n  //   returns 1: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  $locutus.php.locales.en_US_POSIX = {\n    sorting: function (str1, str2) {\n      // @todo: This one taken from strcmp, but need for other locales;\n      // we don't use localeCompare since its locale is not settable\n      return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n    }\n  }\n\n  $locutus.php.locale_default = name\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/i18n/i18n_loc_set_default/index.html","comments":1,"_id":"cinoeja0c003nou9yz8oe0r0k","content":"module.exports = function i18n_loc_set_default (name) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_set_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\n  //      note 1: List of locales at http://demo.icu-project.org/icu-bin/locexp (use for implementing other locales here)\n  //      note 1: To be usable with sort() if it is passed the SORT_LOCALE_STRING sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_set_default('pt_PT')\n  //   returns 1: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  $locutus.php.locales.en_US_POSIX = {\n    sorting: function (str1, str2) {\n      // @todo: This one taken from strcmp, but need for other locales;\n      // we don't use localeCompare since its locale is not settable\n      return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n    }\n  }\n\n  $locutus.php.locale_default = name\n  return true\n}\n","excerpt":"","more":"module.exports = function i18n_loc_set_default (name) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/i18n_loc_set_default/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Renamed in PHP6 from locale_set_default(). Not listed yet at php.net\n  //      note 1: List of locales at http://demo.icu-project.org/icu-bin/locexp (use for implementing other locales here)\n  //      note 1: To be usable with sort() if it is passed the SORT_LOCALE_STRING sorting flag: http://php.net/manual/en/function.sort.php\n  //   example 1: i18n_loc_set_default('pt_PT')\n  //   returns 1: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.locales = $locutus.php.locales || {}\n\n  $locutus.php.locales.en_US_POSIX = {\n    sorting: function (str1, str2) {\n      // @todo: This one taken from strcmp, but need for other locales;\n      // we don't use localeCompare since its locale is not settable\n      return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n    }\n  }\n\n  $locutus.php.locale_default = name\n  return true\n}\n"},{"type":"category","language":"php","category":"i18n","title":"i18n","_content":"","source":"php/i18n/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: i18n\ntitle: i18n\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/i18n/index.html","comments":1,"layout":"page","_id":"cinoeja0c003oou9y2sqsg2mo","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["assert_options('ASSERT_CALLBACK')"],"estarget":"es5","returns":["null"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sassert_options in JavaScript","function":"assert_options","category":"info","language":"php","alias":["/functions/php/assert_options/","/functions/info/assert_options/","/php/assert_options/","/functions/assert_options/"],"_content":"module.exports = function assert_options (what, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/assert_options/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: assert_options('ASSERT_CALLBACK')\n  //   returns 1: null\n\n  var iniKey, defaultVal\n  switch (what) {\n    case 'ASSERT_ACTIVE':\n      iniKey = 'assert.active'\n      defaultVal = 1\n      break\n    case 'ASSERT_WARNING':\n      iniKey = 'assert.warning'\n      defaultVal = 1\n      var msg = 'We have not yet implemented warnings for us to throw '\n      msg += 'in JavaScript (assert_options())'\n      throw new Error(msg)\n    case 'ASSERT_BAIL':\n      iniKey = 'assert.bail'\n      defaultVal = 0\n      break\n    case 'ASSERT_QUIET_EVAL':\n      iniKey = 'assert.quiet_eval'\n      defaultVal = 0\n      break\n    case 'ASSERT_CALLBACK':\n      iniKey = 'assert.callback'\n      defaultVal = null\n      break\n    default:\n      throw new Error('Improper type for assert_options()')\n  }\n\n  // I presume this is to be the most recent value, instead of the default value\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')(iniKey) : undefined) || defaultVal\n\n  return iniVal\n}\n","source":"php/info/assert_options.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - assert_options('ASSERT_CALLBACK')\nestarget: es5\nreturns:\n  - 'null'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sassert_options in JavaScript\nfunction: assert_options\ncategory: info\nlanguage: php\npermalink: php/info/assert_options/\nalias:\n  - /functions/php/assert_options/\n  - /functions/info/assert_options/\n  - /php/assert_options/\n  - /functions/assert_options/\n---\nmodule.exports = function assert_options (what, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/assert_options/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: assert_options('ASSERT_CALLBACK')\n  //   returns 1: null\n\n  var iniKey, defaultVal\n  switch (what) {\n    case 'ASSERT_ACTIVE':\n      iniKey = 'assert.active'\n      defaultVal = 1\n      break\n    case 'ASSERT_WARNING':\n      iniKey = 'assert.warning'\n      defaultVal = 1\n      var msg = 'We have not yet implemented warnings for us to throw '\n      msg += 'in JavaScript (assert_options())'\n      throw new Error(msg)\n    case 'ASSERT_BAIL':\n      iniKey = 'assert.bail'\n      defaultVal = 0\n      break\n    case 'ASSERT_QUIET_EVAL':\n      iniKey = 'assert.quiet_eval'\n      defaultVal = 0\n      break\n    case 'ASSERT_CALLBACK':\n      iniKey = 'assert.callback'\n      defaultVal = null\n      break\n    default:\n      throw new Error('Improper type for assert_options()')\n  }\n\n  // I presume this is to be the most recent value, instead of the default value\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')(iniKey) : undefined) || defaultVal\n\n  return iniVal\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/assert_options/index.html","comments":1,"_id":"cinoeja0d003pou9ywxa9qy3k","content":"module.exports = function assert_options (what, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/assert_options/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: assert_options('ASSERT_CALLBACK')\n  //   returns 1: null\n\n  var iniKey, defaultVal\n  switch (what) {\n    case 'ASSERT_ACTIVE':\n      iniKey = 'assert.active'\n      defaultVal = 1\n      break\n    case 'ASSERT_WARNING':\n      iniKey = 'assert.warning'\n      defaultVal = 1\n      var msg = 'We have not yet implemented warnings for us to throw '\n      msg += 'in JavaScript (assert_options())'\n      throw new Error(msg)\n    case 'ASSERT_BAIL':\n      iniKey = 'assert.bail'\n      defaultVal = 0\n      break\n    case 'ASSERT_QUIET_EVAL':\n      iniKey = 'assert.quiet_eval'\n      defaultVal = 0\n      break\n    case 'ASSERT_CALLBACK':\n      iniKey = 'assert.callback'\n      defaultVal = null\n      break\n    default:\n      throw new Error('Improper type for assert_options()')\n  }\n\n  // I presume this is to be the most recent value, instead of the default value\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')(iniKey) : undefined) || defaultVal\n\n  return iniVal\n}\n","excerpt":"","more":"module.exports = function assert_options (what, value) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/assert_options/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: assert_options('ASSERT_CALLBACK')\n  //   returns 1: null\n\n  var iniKey, defaultVal\n  switch (what) {\n    case 'ASSERT_ACTIVE':\n      iniKey = 'assert.active'\n      defaultVal = 1\n      break\n    case 'ASSERT_WARNING':\n      iniKey = 'assert.warning'\n      defaultVal = 1\n      var msg = 'We have not yet implemented warnings for us to throw '\n      msg += 'in JavaScript (assert_options())'\n      throw new Error(msg)\n    case 'ASSERT_BAIL':\n      iniKey = 'assert.bail'\n      defaultVal = 0\n      break\n    case 'ASSERT_QUIET_EVAL':\n      iniKey = 'assert.quiet_eval'\n      defaultVal = 0\n      break\n    case 'ASSERT_CALLBACK':\n      iniKey = 'assert.callback'\n      defaultVal = null\n      break\n    default:\n      throw new Error('Improper type for assert_options()')\n  }\n\n  // I presume this is to be the most recent value, instead of the default value\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')(iniKey) : undefined) || defaultVal\n\n  return iniVal\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["getenv('LC_ALL')"],"estarget":"es5","returns":["false"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sgetenv in JavaScript","function":"getenv","category":"info","language":"php","alias":["/functions/php/getenv/","/functions/info/getenv/","/php/getenv/","/functions/getenv/"],"_content":"module.exports = function getenv (varname) {\n  //  discuss at: http://locutusjs.io/php/getenv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getenv('LC_ALL')\n  //   returns 1: false\n\n  if (typeof process !== 'undefined' || !process.env || !process.env[varname]) {\n    return false\n  }\n\n  return process.env[varname]\n}\n","source":"php/info/getenv.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - getenv('LC_ALL')\nestarget: es5\nreturns:\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sgetenv in JavaScript\nfunction: getenv\ncategory: info\nlanguage: php\npermalink: php/info/getenv/\nalias:\n  - /functions/php/getenv/\n  - /functions/info/getenv/\n  - /php/getenv/\n  - /functions/getenv/\n---\nmodule.exports = function getenv (varname) {\n  //  discuss at: http://locutusjs.io/php/getenv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getenv('LC_ALL')\n  //   returns 1: false\n\n  if (typeof process !== 'undefined' || !process.env || !process.env[varname]) {\n    return false\n  }\n\n  return process.env[varname]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/getenv/index.html","comments":1,"_id":"cinoeja0d003qou9y2cpuizsn","content":"module.exports = function getenv (varname) {\n  //  discuss at: http://locutusjs.io/php/getenv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getenv('LC_ALL')\n  //   returns 1: false\n\n  if (typeof process !== 'undefined' || !process.env || !process.env[varname]) {\n    return false\n  }\n\n  return process.env[varname]\n}\n","excerpt":"","more":"module.exports = function getenv (varname) {\n  //  discuss at: http://locutusjs.io/php/getenv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: getenv('LC_ALL')\n  //   returns 1: false\n\n  if (typeof process !== 'undefined' || !process.env || !process.env[varname]) {\n    return false\n  }\n\n  return process.env[varname]\n}\n"},{"type":"category","language":"php","category":"info","title":"info","_content":"","source":"php/info/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: info\ntitle: info\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/index.html","comments":1,"layout":"page","_id":"cinoeja0e003rou9yz7bw866j","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ini_set('date.timezone', 'Asia/Hong_Kong')\nini_get('date.timezone')"],"estarget":"es5","returns":["'Asia/Hong_Kong'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["The ini values must be set by ini_set or manually within an ini file"],"layout":"function","title":"php'sini_get in JavaScript","function":"ini_get","category":"info","language":"php","alias":["/functions/php/ini_get/","/functions/info/ini_get/","/php/ini_get/","/functions/ini_get/"],"_content":"module.exports = function ini_get (varname) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_get/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The ini values must be set by ini_set or manually within an ini file\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_get('date.timezone')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  if ($locutus.php.ini[varname] && $locutus.php.ini[varname].local_value !== undefined) {\n    if ($locutus.php.ini[varname].local_value === null) {\n      return ''\n    }\n    return $locutus.php.ini[varname].local_value\n  }\n\n  return ''\n}\n","source":"php/info/ini_get.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    ini_set('date.timezone', 'Asia/Hong_Kong')\n    ini_get('date.timezone')\nestarget: es5\nreturns:\n  - '''Asia/Hong_Kong'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - The ini values must be set by ini_set or manually within an ini file\nlayout: function\ntitle: php'sini_get in JavaScript\nfunction: ini_get\ncategory: info\nlanguage: php\npermalink: php/info/ini_get/\nalias:\n  - /functions/php/ini_get/\n  - /functions/info/ini_get/\n  - /php/ini_get/\n  - /functions/ini_get/\n---\nmodule.exports = function ini_get (varname) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_get/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The ini values must be set by ini_set or manually within an ini file\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_get('date.timezone')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  if ($locutus.php.ini[varname] && $locutus.php.ini[varname].local_value !== undefined) {\n    if ($locutus.php.ini[varname].local_value === null) {\n      return ''\n    }\n    return $locutus.php.ini[varname].local_value\n  }\n\n  return ''\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/ini_get/index.html","comments":1,"_id":"cinoeja0e003sou9yw6tykzjh","content":"module.exports = function ini_get (varname) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_get/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The ini values must be set by ini_set or manually within an ini file\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_get('date.timezone')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  if ($locutus.php.ini[varname] && $locutus.php.ini[varname].local_value !== undefined) {\n    if ($locutus.php.ini[varname].local_value === null) {\n      return ''\n    }\n    return $locutus.php.ini[varname].local_value\n  }\n\n  return ''\n}\n","excerpt":"","more":"module.exports = function ini_get (varname) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_get/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The ini values must be set by ini_set or manually within an ini file\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_get('date.timezone')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  if ($locutus.php.ini[varname] && $locutus.php.ini[varname].local_value !== undefined) {\n    if ($locutus.php.ini[varname].local_value === null) {\n      return ''\n    }\n    return $locutus.php.ini[varname].local_value\n  }\n\n  return ''\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ini_set('date.timezone', 'Asia/Hong_Kong')\nini_set('date.timezone', 'America/Chicago')"],"estarget":"es5","returns":["'Asia/Hong_Kong'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["This will not set a global_value or access level for the ini item"],"layout":"function","title":"php'sini_set in JavaScript","function":"ini_set","category":"info","language":"php","alias":["/functions/php/ini_set/","/functions/info/ini_set/","/php/ini_set/","/functions/ini_set/"],"_content":"module.exports = function ini_set (varname, newvalue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_set/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This will not set a global_value or access level for the ini item\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_set('date.timezone', 'America/Chicago')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  $locutus.php.ini = $locutus.php.ini || {}\n  $locutus.php.ini[varname] = $locutus.php.ini[varname] || {}\n\n  var oldval = $locutus.php.ini[varname].local_value\n\n  var lowerStr = (newvalue + '').toLowerCase().trim()\n  if (newvalue === true || lowerStr === 'on' || lowerStr === '1') {\n    newvalue = 'on'\n  }\n  if (newvalue === false || lowerStr === 'off' || lowerStr === '0') {\n    newvalue = 'off'\n  }\n\n  var _setArr = function (oldval) {\n    // Although these are set individually, they are all accumulated\n    if (typeof oldval === 'undefined') {\n      $locutus.ini[varname].local_value = []\n    }\n    $locutus.ini[varname].local_value.push(newvalue)\n  }\n\n  switch (varname) {\n    case 'extension':\n      _setArr(oldval, newvalue)\n      break\n    default:\n      $locutus.php.ini[varname].local_value = newvalue\n      break\n  }\n\n  return oldval\n}\n","source":"php/info/ini_set.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    ini_set('date.timezone', 'Asia/Hong_Kong')\n    ini_set('date.timezone', 'America/Chicago')\nestarget: es5\nreturns:\n  - '''Asia/Hong_Kong'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - This will not set a global_value or access level for the ini item\nlayout: function\ntitle: php'sini_set in JavaScript\nfunction: ini_set\ncategory: info\nlanguage: php\npermalink: php/info/ini_set/\nalias:\n  - /functions/php/ini_set/\n  - /functions/info/ini_set/\n  - /php/ini_set/\n  - /functions/ini_set/\n---\nmodule.exports = function ini_set (varname, newvalue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_set/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This will not set a global_value or access level for the ini item\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_set('date.timezone', 'America/Chicago')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  $locutus.php.ini = $locutus.php.ini || {}\n  $locutus.php.ini[varname] = $locutus.php.ini[varname] || {}\n\n  var oldval = $locutus.php.ini[varname].local_value\n\n  var lowerStr = (newvalue + '').toLowerCase().trim()\n  if (newvalue === true || lowerStr === 'on' || lowerStr === '1') {\n    newvalue = 'on'\n  }\n  if (newvalue === false || lowerStr === 'off' || lowerStr === '0') {\n    newvalue = 'off'\n  }\n\n  var _setArr = function (oldval) {\n    // Although these are set individually, they are all accumulated\n    if (typeof oldval === 'undefined') {\n      $locutus.ini[varname].local_value = []\n    }\n    $locutus.ini[varname].local_value.push(newvalue)\n  }\n\n  switch (varname) {\n    case 'extension':\n      _setArr(oldval, newvalue)\n      break\n    default:\n      $locutus.php.ini[varname].local_value = newvalue\n      break\n  }\n\n  return oldval\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/ini_set/index.html","comments":1,"_id":"cinoeja0e003tou9ybrat0mw0","content":"module.exports = function ini_set (varname, newvalue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_set/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This will not set a global_value or access level for the ini item\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_set('date.timezone', 'America/Chicago')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  $locutus.php.ini = $locutus.php.ini || {}\n  $locutus.php.ini[varname] = $locutus.php.ini[varname] || {}\n\n  var oldval = $locutus.php.ini[varname].local_value\n\n  var lowerStr = (newvalue + '').toLowerCase().trim()\n  if (newvalue === true || lowerStr === 'on' || lowerStr === '1') {\n    newvalue = 'on'\n  }\n  if (newvalue === false || lowerStr === 'off' || lowerStr === '0') {\n    newvalue = 'off'\n  }\n\n  var _setArr = function (oldval) {\n    // Although these are set individually, they are all accumulated\n    if (typeof oldval === 'undefined') {\n      $locutus.ini[varname].local_value = []\n    }\n    $locutus.ini[varname].local_value.push(newvalue)\n  }\n\n  switch (varname) {\n    case 'extension':\n      _setArr(oldval, newvalue)\n      break\n    default:\n      $locutus.php.ini[varname].local_value = newvalue\n      break\n  }\n\n  return oldval\n}\n","excerpt":"","more":"module.exports = function ini_set (varname, newvalue) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/ini_set/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This will not set a global_value or access level for the ini item\n  //   example 1: ini_set('date.timezone', 'Asia/Hong_Kong')\n  //   example 1: ini_set('date.timezone', 'America/Chicago')\n  //   returns 1: 'Asia/Hong_Kong'\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n  $locutus.php.ini = $locutus.php.ini || {}\n\n  $locutus.php.ini = $locutus.php.ini || {}\n  $locutus.php.ini[varname] = $locutus.php.ini[varname] || {}\n\n  var oldval = $locutus.php.ini[varname].local_value\n\n  var lowerStr = (newvalue + '').toLowerCase().trim()\n  if (newvalue === true || lowerStr === 'on' || lowerStr === '1') {\n    newvalue = 'on'\n  }\n  if (newvalue === false || lowerStr === 'off' || lowerStr === '0') {\n    newvalue = 'off'\n  }\n\n  var _setArr = function (oldval) {\n    // Although these are set individually, they are all accumulated\n    if (typeof oldval === 'undefined') {\n      $locutus.ini[varname].local_value = []\n    }\n    $locutus.ini[varname].local_value.push(newvalue)\n  }\n\n  switch (varname) {\n    case 'extension':\n      _setArr(oldval, newvalue)\n      break\n    default:\n      $locutus.php.ini[varname].local_value = newvalue\n      break\n  }\n\n  return oldval\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["set_time_limit(4)"],"estarget":"es5","returns":["undefined"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sset_time_limit in JavaScript","function":"set_time_limit","category":"info","language":"php","alias":["/functions/php/set_time_limit/","/functions/info/set_time_limit/","/php/set_time_limit/","/functions/set_time_limit/"],"_content":"module.exports = function set_time_limit (seconds) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/set_time_limit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //        test: skip-all\n  //   example 1: set_time_limit(4)\n  //   returns 1: undefined\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setTimeout(function () {\n    if (!$locutus.php.timeoutStatus) {\n      $locutus.php.timeoutStatus = true\n    }\n    throw new Error('Maximum execution time exceeded')\n  }, seconds * 1000)\n}\n","source":"php/info/set_time_limit.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - set_time_limit(4)\nestarget: es5\nreturns:\n  - undefined\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sset_time_limit in JavaScript\nfunction: set_time_limit\ncategory: info\nlanguage: php\npermalink: php/info/set_time_limit/\nalias:\n  - /functions/php/set_time_limit/\n  - /functions/info/set_time_limit/\n  - /php/set_time_limit/\n  - /functions/set_time_limit/\n---\nmodule.exports = function set_time_limit (seconds) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/set_time_limit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //        test: skip-all\n  //   example 1: set_time_limit(4)\n  //   returns 1: undefined\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setTimeout(function () {\n    if (!$locutus.php.timeoutStatus) {\n      $locutus.php.timeoutStatus = true\n    }\n    throw new Error('Maximum execution time exceeded')\n  }, seconds * 1000)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/set_time_limit/index.html","comments":1,"_id":"cinoeja0f003uou9yed5bk909","content":"module.exports = function set_time_limit (seconds) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/set_time_limit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //        test: skip-all\n  //   example 1: set_time_limit(4)\n  //   returns 1: undefined\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setTimeout(function () {\n    if (!$locutus.php.timeoutStatus) {\n      $locutus.php.timeoutStatus = true\n    }\n    throw new Error('Maximum execution time exceeded')\n  }, seconds * 1000)\n}\n","excerpt":"","more":"module.exports = function set_time_limit (seconds) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/set_time_limit/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //        test: skip-all\n  //   example 1: set_time_limit(4)\n  //   returns 1: undefined\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setTimeout(function () {\n    if (!$locutus.php.timeoutStatus) {\n      $locutus.php.timeoutStatus = true\n    }\n    throw new Error('Maximum execution time exceeded')\n  }, seconds * 1000)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["version_compare('8.2.5rc', '8.2.5a')","version_compare('8.2.50', '8.2.52', '<')","version_compare('5.3.0-dev', '5.3.0')","version_compare('4.1.0.52','4.01.0.51')"],"estarget":"es5","returns":["1","true","-1","1"],"dependencies":[],"authors":{"original by":["Philippe Jausions (http://pear.php.net/user/jausions)","Aidan Lister (http://aidanlister.com/)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Scott Baker","Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'sversion_compare in JavaScript","function":"version_compare","category":"info","language":"php","alias":["/functions/php/version_compare/","/functions/info/version_compare/","/php/version_compare/","/functions/version_compare/"],"_content":"module.exports = function version_compare (v1, v2, operator) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/version_compare/\n  //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n  //      original by: Aidan Lister (http://aidanlister.com/)\n  // reimplemented by: Kankrelune (http://www.webfaktory.info/)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Scott Baker\n  //      improved by: Theriault (https://github.com/Theriault)\n  //        example 1: version_compare('8.2.5rc', '8.2.5a')\n  //        returns 1: 1\n  //        example 2: version_compare('8.2.50', '8.2.52', '<')\n  //        returns 2: true\n  //        example 3: version_compare('5.3.0-dev', '5.3.0')\n  //        returns 3: -1\n  //        example 4: version_compare('4.1.0.52','4.01.0.51')\n  //        returns 4: 1\n\n  // Important: compare must be initialized at 0.\n  var i\n  var x\n  var compare = 0\n\n  // vm maps textual PHP versions to negatives so they're less than 0.\n  // PHP currently defines these as CASE-SENSITIVE. It is important to\n  // leave these as negatives so that they can come before numerical versions\n  // and as if no letters were there to begin with.\n  // (1alpha is < 1 and < 1.1 but > 1dev1)\n  // If a non-numerical value can't be mapped to this table, it receives\n  // -7 as its value.\n  var vm = {\n    'dev': -6,\n    'alpha': -5,\n    'a': -5,\n    'beta': -4,\n    'b': -4,\n    'RC': -3,\n    'rc': -3,\n    '#': -2,\n    'p': 1,\n    'pl': 1\n  }\n\n  // This function will be called to prepare each version argument.\n  // It replaces every _, -, and + with a dot.\n  // It surrounds any nonsequence of numbers/dots with dots.\n  // It replaces sequences of dots with a single dot.\n  //    version_compare('4..0', '4.0') === 0\n  // Important: A string of 0 length needs to be converted into a value\n  // even less than an unexisting value in vm (-7), hence [-8].\n  // It's also important to not strip spaces because of this.\n  //   version_compare('', ' ') === 1\n  var _prepVersion = function (v) {\n    v = ('' + v).replace(/[_\\-+]/g, '.')\n    v = v.replace(/([^.\\d]+)/g, '.$1.').replace(/\\.{2,}/g, '.')\n    return (!v.length ? [-8] : v.split('.'))\n  }\n  // This converts a version component to a number.\n  // Empty component becomes 0.\n  // Non-numerical component becomes a negative number.\n  // Numerical component becomes itself as an integer.\n  var _numVersion = function (v) {\n    return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10))\n  }\n\n  v1 = _prepVersion(v1)\n  v2 = _prepVersion(v2)\n  x = Math.max(v1.length, v2.length)\n  for (i = 0; i < x; i++) {\n    if (v1[i] === v2[i]) {\n      continue\n    }\n    v1[i] = _numVersion(v1[i])\n    v2[i] = _numVersion(v2[i])\n    if (v1[i] < v2[i]) {\n      compare = -1\n      break\n    } else if (v1[i] > v2[i]) {\n      compare = 1\n      break\n    }\n  }\n  if (!operator) {\n    return compare\n  }\n\n  // Important: operator is CASE-SENSITIVE.\n  // \"No operator\" seems to be treated as \"<.\"\n  // Any other values seem to make the function return null.\n  switch (operator) {\n    case '>':\n    case 'gt':\n      return (compare > 0)\n    case '>=':\n    case 'ge':\n      return (compare >= 0)\n    case '<=':\n    case 'le':\n      return (compare <= 0)\n    case '===':\n    case '=':\n    case 'eq':\n      return (compare === 0)\n    case '<>':\n    case '!==':\n    case 'ne':\n      return (compare !== 0)\n    case '':\n    case '<':\n    case 'lt':\n      return (compare < 0)\n    default:\n      return null\n  }\n}\n","source":"php/info/version_compare.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'version_compare(''8.2.5rc'', ''8.2.5a'')'\n  - 'version_compare(''8.2.50'', ''8.2.52'', ''<'')'\n  - 'version_compare(''5.3.0-dev'', ''5.3.0'')'\n  - 'version_compare(''4.1.0.52'',''4.01.0.51'')'\nestarget: es5\nreturns:\n  - '1'\n  - 'true'\n  - '-1'\n  - '1'\ndependencies: []\nauthors:\n  original by:\n    - 'Philippe Jausions (http://pear.php.net/user/jausions)'\n    - 'Aidan Lister (http://aidanlister.com/)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Scott Baker\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'sversion_compare in JavaScript\nfunction: version_compare\ncategory: info\nlanguage: php\npermalink: php/info/version_compare/\nalias:\n  - /functions/php/version_compare/\n  - /functions/info/version_compare/\n  - /php/version_compare/\n  - /functions/version_compare/\n---\nmodule.exports = function version_compare (v1, v2, operator) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/version_compare/\n  //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n  //      original by: Aidan Lister (http://aidanlister.com/)\n  // reimplemented by: Kankrelune (http://www.webfaktory.info/)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Scott Baker\n  //      improved by: Theriault (https://github.com/Theriault)\n  //        example 1: version_compare('8.2.5rc', '8.2.5a')\n  //        returns 1: 1\n  //        example 2: version_compare('8.2.50', '8.2.52', '<')\n  //        returns 2: true\n  //        example 3: version_compare('5.3.0-dev', '5.3.0')\n  //        returns 3: -1\n  //        example 4: version_compare('4.1.0.52','4.01.0.51')\n  //        returns 4: 1\n\n  // Important: compare must be initialized at 0.\n  var i\n  var x\n  var compare = 0\n\n  // vm maps textual PHP versions to negatives so they're less than 0.\n  // PHP currently defines these as CASE-SENSITIVE. It is important to\n  // leave these as negatives so that they can come before numerical versions\n  // and as if no letters were there to begin with.\n  // (1alpha is < 1 and < 1.1 but > 1dev1)\n  // If a non-numerical value can't be mapped to this table, it receives\n  // -7 as its value.\n  var vm = {\n    'dev': -6,\n    'alpha': -5,\n    'a': -5,\n    'beta': -4,\n    'b': -4,\n    'RC': -3,\n    'rc': -3,\n    '#': -2,\n    'p': 1,\n    'pl': 1\n  }\n\n  // This function will be called to prepare each version argument.\n  // It replaces every _, -, and + with a dot.\n  // It surrounds any nonsequence of numbers/dots with dots.\n  // It replaces sequences of dots with a single dot.\n  //    version_compare('4..0', '4.0') === 0\n  // Important: A string of 0 length needs to be converted into a value\n  // even less than an unexisting value in vm (-7), hence [-8].\n  // It's also important to not strip spaces because of this.\n  //   version_compare('', ' ') === 1\n  var _prepVersion = function (v) {\n    v = ('' + v).replace(/[_\\-+]/g, '.')\n    v = v.replace(/([^.\\d]+)/g, '.$1.').replace(/\\.{2,}/g, '.')\n    return (!v.length ? [-8] : v.split('.'))\n  }\n  // This converts a version component to a number.\n  // Empty component becomes 0.\n  // Non-numerical component becomes a negative number.\n  // Numerical component becomes itself as an integer.\n  var _numVersion = function (v) {\n    return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10))\n  }\n\n  v1 = _prepVersion(v1)\n  v2 = _prepVersion(v2)\n  x = Math.max(v1.length, v2.length)\n  for (i = 0; i < x; i++) {\n    if (v1[i] === v2[i]) {\n      continue\n    }\n    v1[i] = _numVersion(v1[i])\n    v2[i] = _numVersion(v2[i])\n    if (v1[i] < v2[i]) {\n      compare = -1\n      break\n    } else if (v1[i] > v2[i]) {\n      compare = 1\n      break\n    }\n  }\n  if (!operator) {\n    return compare\n  }\n\n  // Important: operator is CASE-SENSITIVE.\n  // \"No operator\" seems to be treated as \"<.\"\n  // Any other values seem to make the function return null.\n  switch (operator) {\n    case '>':\n    case 'gt':\n      return (compare > 0)\n    case '>=':\n    case 'ge':\n      return (compare >= 0)\n    case '<=':\n    case 'le':\n      return (compare <= 0)\n    case '===':\n    case '=':\n    case 'eq':\n      return (compare === 0)\n    case '<>':\n    case '!==':\n    case 'ne':\n      return (compare !== 0)\n    case '':\n    case '<':\n    case 'lt':\n      return (compare < 0)\n    default:\n      return null\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/info/version_compare/index.html","comments":1,"_id":"cinoeja0f003vou9yzga4l7d4","content":"module.exports = function version_compare (v1, v2, operator) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/version_compare/\n  //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n  //      original by: Aidan Lister (http://aidanlister.com/)\n  // reimplemented by: Kankrelune (http://www.webfaktory.info/)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Scott Baker\n  //      improved by: Theriault (https://github.com/Theriault)\n  //        example 1: version_compare('8.2.5rc', '8.2.5a')\n  //        returns 1: 1\n  //        example 2: version_compare('8.2.50', '8.2.52', '<') 1=\"\" returns=\"\" 2:=\"\" true=\"\" example=\"\" 3:=\"\" version_compare('5.3.0-dev',=\"\" '5.3.0')=\"\" -1=\"\" 4:=\"\" version_compare('4.1.0.52','4.01.0.51')=\"\" important:=\"\" compare=\"\" must=\"\" be=\"\" initialized=\"\" at=\"\" 0.=\"\" var=\"\" i=\"\" x=\"\" vm=\"\" maps=\"\" textual=\"\" php=\"\" versions=\"\" to=\"\" negatives=\"\" so=\"\" they're=\"\" less=\"\" than=\"\" currently=\"\" defines=\"\" these=\"\" as=\"\" case-sensitive.=\"\" it=\"\" is=\"\" important=\"\" leave=\"\" that=\"\" they=\"\" can=\"\" come=\"\" before=\"\" numerical=\"\" and=\"\" if=\"\" no=\"\" letters=\"\" were=\"\" there=\"\" begin=\"\" with.=\"\" (1alpha=\"\" <=\"\" 1.1=\"\" but=\"\"> 1dev1)\n  // If a non-numerical value can't be mapped to this table, it receives\n  // -7 as its value.\n  var vm = {\n    'dev': -6,\n    'alpha': -5,\n    'a': -5,\n    'beta': -4,\n    'b': -4,\n    'RC': -3,\n    'rc': -3,\n    '#': -2,\n    'p': 1,\n    'pl': 1\n  }\n\n  // This function will be called to prepare each version argument.\n  // It replaces every _, -, and + with a dot.\n  // It surrounds any nonsequence of numbers/dots with dots.\n  // It replaces sequences of dots with a single dot.\n  //    version_compare('4..0', '4.0') === 0\n  // Important: A string of 0 length needs to be converted into a value\n  // even less than an unexisting value in vm (-7), hence [-8].\n  // It's also important to not strip spaces because of this.\n  //   version_compare('', ' ') === 1\n  var _prepVersion = function (v) {\n    v = ('' + v).replace(/[_\\-+]/g, '.')\n    v = v.replace(/([^.\\d]+)/g, '.$1.').replace(/\\.{2,}/g, '.')\n    return (!v.length ? [-8] : v.split('.'))\n  }\n  // This converts a version component to a number.\n  // Empty component becomes 0.\n  // Non-numerical component becomes a negative number.\n  // Numerical component becomes itself as an integer.\n  var _numVersion = function (v) {\n    return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10))\n  }\n\n  v1 = _prepVersion(v1)\n  v2 = _prepVersion(v2)\n  x = Math.max(v1.length, v2.length)\n  for (i = 0; i < x; i++) {\n    if (v1[i] === v2[i]) {\n      continue\n    }\n    v1[i] = _numVersion(v1[i])\n    v2[i] = _numVersion(v2[i])\n    if (v1[i] < v2[i]) {\n      compare = -1\n      break\n    } else if (v1[i] > v2[i]) {\n      compare = 1\n      break\n    }\n  }\n  if (!operator) {\n    return compare\n  }\n\n  // Important: operator is CASE-SENSITIVE.\n  // \"No operator\" seems to be treated as \"<.\" any=\"\" other=\"\" values=\"\" seem=\"\" to=\"\" make=\"\" the=\"\" function=\"\" return=\"\" null.=\"\" switch=\"\" (operator)=\"\" {=\"\" case=\"\" '=\"\">':\n    case 'gt':\n      return (compare > 0)\n    case '>=':\n    case 'ge':\n      return (compare >= 0)\n    case '<=': case=\"\" 'le':=\"\" return=\"\" (compare=\"\" <=\"0)\" '=\"==':\" eq':=\"\" 0)=\"\" '<=\"\">':\n    case '!==':\n    case 'ne':\n      return (compare !== 0)\n    case '':\n    case '</=':></.\"></')>","excerpt":"","more":"module.exports = function version_compare (v1, v2, operator) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/version_compare/\n  //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n  //      original by: Aidan Lister (http://aidanlister.com/)\n  // reimplemented by: Kankrelune (http://www.webfaktory.info/)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Scott Baker\n  //      improved by: Theriault (https://github.com/Theriault)\n  //        example 1: version_compare('8.2.5rc', '8.2.5a')\n  //        returns 1: 1\n  //        example 2: version_compare('8.2.50', '8.2.52', '<')\n  //        returns 2: true\n  //        example 3: version_compare('5.3.0-dev', '5.3.0')\n  //        returns 3: -1\n  //        example 4: version_compare('4.1.0.52','4.01.0.51')\n  //        returns 4: 1\n\n  // Important: compare must be initialized at 0.\n  var i\n  var x\n  var compare = 0\n\n  // vm maps textual PHP versions to negatives so they're less than 0.\n  // PHP currently defines these as CASE-SENSITIVE. It is important to\n  // leave these as negatives so that they can come before numerical versions\n  // and as if no letters were there to begin with.\n  // (1alpha is < 1 and < 1.1 but > 1dev1)\n  // If a non-numerical value can't be mapped to this table, it receives\n  // -7 as its value.\n  var vm = {\n    'dev': -6,\n    'alpha': -5,\n    'a': -5,\n    'beta': -4,\n    'b': -4,\n    'RC': -3,\n    'rc': -3,\n    '#': -2,\n    'p': 1,\n    'pl': 1\n  }\n\n  // This function will be called to prepare each version argument.\n  // It replaces every _, -, and + with a dot.\n  // It surrounds any nonsequence of numbers/dots with dots.\n  // It replaces sequences of dots with a single dot.\n  //    version_compare('4..0', '4.0') === 0\n  // Important: A string of 0 length needs to be converted into a value\n  // even less than an unexisting value in vm (-7), hence [-8].\n  // It's also important to not strip spaces because of this.\n  //   version_compare('', ' ') === 1\n  var _prepVersion = function (v) {\n    v = ('' + v).replace(/[_\\-+]/g, '.')\n    v = v.replace(/([^.\\d]+)/g, '.$1.').replace(/\\.{2,}/g, '.')\n    return (!v.length ? [-8] : v.split('.'))\n  }\n  // This converts a version component to a number.\n  // Empty component becomes 0.\n  // Non-numerical component becomes a negative number.\n  // Numerical component becomes itself as an integer.\n  var _numVersion = function (v) {\n    return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10))\n  }\n\n  v1 = _prepVersion(v1)\n  v2 = _prepVersion(v2)\n  x = Math.max(v1.length, v2.length)\n  for (i = 0; i < x; i++) {\n    if (v1[i] === v2[i]) {\n      continue\n    }\n    v1[i] = _numVersion(v1[i])\n    v2[i] = _numVersion(v2[i])\n    if (v1[i] < v2[i]) {\n      compare = -1\n      break\n    } else if (v1[i] > v2[i]) {\n      compare = 1\n      break\n    }\n  }\n  if (!operator) {\n    return compare\n  }\n\n  // Important: operator is CASE-SENSITIVE.\n  // \"No operator\" seems to be treated as \"<.\"\n  // Any other values seem to make the function return null.\n  switch (operator) {\n    case '>':\n    case 'gt':\n      return (compare > 0)\n    case '>=':\n    case 'ge':\n      return (compare >= 0)\n    case '<=':\n    case 'le':\n      return (compare <= 0)\n    case '===':\n    case '=':\n    case 'eq':\n      return (compare === 0)\n    case '<>':\n    case '!==':\n    case 'ne':\n      return (compare !== 0)\n    case '':\n    case '<':\n    case 'lt':\n      return (compare < 0)\n    default:\n      return null\n  }\n}\n"},{"type":"category","language":"php","category":"json","title":"json","_content":"","source":"php/json/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: json\ntitle: json\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/json/index.html","comments":1,"layout":"page","_id":"cinoeja0f003wou9y0szc7g76","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["json_decode('[ 1 ]')"],"estarget":"es5","returns":["[1]"],"dependencies":[],"authors":{"original by":["Public Domain (http://www.json.org/json2.js)"],"improved by":["T.J. Leahy","Michael White"]},"notes":["If node or the browser does not offer JSON.parse,\nthis function falls backslash\nto its own implementation using eval, and hence should be considered unsafe"],"layout":"function","title":"php'sjson_decode in JavaScript","function":"json_decode","category":"json","language":"php","alias":["/functions/php/json_decode/","/functions/json/json_decode/","/php/json_decode/","/functions/json_decode/"],"_content":"module.exports = function json_decode (strJson) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_decode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: T.J. Leahy\n  //      improved by: Michael White\n  //           note 1: If node or the browser does not offer JSON.parse,\n  //           note 1: this function falls backslash\n  //           note 1: to its own implementation using eval, and hence should be considered unsafe\n  //        example 1: json_decode('[ 1 ]')\n  //        returns 1: [1]\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  if (typeof json === 'object' && typeof json.parse === 'function') {\n    try {\n      return json.parse(strJson)\n    } catch (err) {\n      if (!(err instanceof SyntaxError)) {\n        throw new Error('Unexpected error type in json_decode()')\n      }\n\n      // usable by json_last_error()\n      $locutus.php.last_error_json = 4\n      return null\n    }\n  }\n\n  var chars = [\n    '\\u0000',\n    '\\u00ad',\n    '\\u0600-\\u0604',\n    '\\u070f',\n    '\\u17b4',\n    '\\u17b5',\n    '\\u200c-\\u200f',\n    '\\u2028-\\u202f',\n    '\\u2060-\\u206f',\n    '\\ufeff',\n    '\\ufff0-\\uffff'\n  ].join('')\n  var cx = new RegExp('[' + chars + ']', 'g')\n  var j\n  var text = strJson\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n  cx.lastIndex = 0\n  if (cx.test(text)) {\n    text = text.replace(cx, function (a) {\n      return '\\\\u' + ('0000' + a.charCodeAt(0)\n        .toString(16))\n        .slice(-4)\n    })\n  }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  var m = (/^[\\],:{}\\s]*$/)\n    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n    .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n    .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\n  if (m) {\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')') // eslint-disable-line no-eval\n    return j\n  }\n\n  // usable by json_last_error()\n  $locutus.php.last_error_json = 4\n  return null\n}\n","source":"php/json/json_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'json_decode(''[ 1 ]'')'\nestarget: es5\nreturns:\n  - '[1]'\ndependencies: []\nauthors:\n  original by:\n    - 'Public Domain (http://www.json.org/json2.js)'\n  improved by:\n    - T.J. Leahy\n    - Michael White\nnotes:\n  - |-\n    If node or the browser does not offer JSON.parse,\n    this function falls backslash\n    to its own implementation using eval, and hence should be considered unsafe\nlayout: function\ntitle: php'sjson_decode in JavaScript\nfunction: json_decode\ncategory: json\nlanguage: php\npermalink: php/json/json_decode/\nalias:\n  - /functions/php/json_decode/\n  - /functions/json/json_decode/\n  - /php/json_decode/\n  - /functions/json_decode/\n---\nmodule.exports = function json_decode (strJson) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_decode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: T.J. Leahy\n  //      improved by: Michael White\n  //           note 1: If node or the browser does not offer JSON.parse,\n  //           note 1: this function falls backslash\n  //           note 1: to its own implementation using eval, and hence should be considered unsafe\n  //        example 1: json_decode('[ 1 ]')\n  //        returns 1: [1]\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  if (typeof json === 'object' && typeof json.parse === 'function') {\n    try {\n      return json.parse(strJson)\n    } catch (err) {\n      if (!(err instanceof SyntaxError)) {\n        throw new Error('Unexpected error type in json_decode()')\n      }\n\n      // usable by json_last_error()\n      $locutus.php.last_error_json = 4\n      return null\n    }\n  }\n\n  var chars = [\n    '\\u0000',\n    '\\u00ad',\n    '\\u0600-\\u0604',\n    '\\u070f',\n    '\\u17b4',\n    '\\u17b5',\n    '\\u200c-\\u200f',\n    '\\u2028-\\u202f',\n    '\\u2060-\\u206f',\n    '\\ufeff',\n    '\\ufff0-\\uffff'\n  ].join('')\n  var cx = new RegExp('[' + chars + ']', 'g')\n  var j\n  var text = strJson\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n  cx.lastIndex = 0\n  if (cx.test(text)) {\n    text = text.replace(cx, function (a) {\n      return '\\\\u' + ('0000' + a.charCodeAt(0)\n        .toString(16))\n        .slice(-4)\n    })\n  }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  var m = (/^[\\],:{}\\s]*$/)\n    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n    .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n    .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\n  if (m) {\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')') // eslint-disable-line no-eval\n    return j\n  }\n\n  // usable by json_last_error()\n  $locutus.php.last_error_json = 4\n  return null\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/json/json_decode/index.html","comments":1,"_id":"cinoeja0g003xou9y4n1uym4g","content":"module.exports = function json_decode (strJson) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_decode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: T.J. Leahy\n  //      improved by: Michael White\n  //           note 1: If node or the browser does not offer JSON.parse,\n  //           note 1: this function falls backslash\n  //           note 1: to its own implementation using eval, and hence should be considered unsafe\n  //        example 1: json_decode('[ 1 ]')\n  //        returns 1: [1]\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  if (typeof json === 'object' && typeof json.parse === 'function') {\n    try {\n      return json.parse(strJson)\n    } catch (err) {\n      if (!(err instanceof SyntaxError)) {\n        throw new Error('Unexpected error type in json_decode()')\n      }\n\n      // usable by json_last_error()\n      $locutus.php.last_error_json = 4\n      return null\n    }\n  }\n\n  var chars = [\n    '\\u0000',\n    '\\u00ad',\n    '\\u0600-\\u0604',\n    '\\u070f',\n    '\\u17b4',\n    '\\u17b5',\n    '\\u200c-\\u200f',\n    '\\u2028-\\u202f',\n    '\\u2060-\\u206f',\n    '\\ufeff',\n    '\\ufff0-\\uffff'\n  ].join('')\n  var cx = new RegExp('[' + chars + ']', 'g')\n  var j\n  var text = strJson\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n  cx.lastIndex = 0\n  if (cx.test(text)) {\n    text = text.replace(cx, function (a) {\n      return '\\\\u' + ('0000' + a.charCodeAt(0)\n        .toString(16))\n        .slice(-4)\n    })\n  }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  var m = (/^[\\],:{}\\s]*$/)\n    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n    .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n    .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\n  if (m) {\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')') // eslint-disable-line no-eval\n    return j\n  }\n\n  // usable by json_last_error()\n  $locutus.php.last_error_json = 4\n  return null\n}\n","excerpt":"","more":"module.exports = function json_decode (strJson) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_decode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: T.J. Leahy\n  //      improved by: Michael White\n  //           note 1: If node or the browser does not offer JSON.parse,\n  //           note 1: this function falls backslash\n  //           note 1: to its own implementation using eval, and hence should be considered unsafe\n  //        example 1: json_decode('[ 1 ]')\n  //        returns 1: [1]\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  if (typeof json === 'object' && typeof json.parse === 'function') {\n    try {\n      return json.parse(strJson)\n    } catch (err) {\n      if (!(err instanceof SyntaxError)) {\n        throw new Error('Unexpected error type in json_decode()')\n      }\n\n      // usable by json_last_error()\n      $locutus.php.last_error_json = 4\n      return null\n    }\n  }\n\n  var chars = [\n    '\\u0000',\n    '\\u00ad',\n    '\\u0600-\\u0604',\n    '\\u070f',\n    '\\u17b4',\n    '\\u17b5',\n    '\\u200c-\\u200f',\n    '\\u2028-\\u202f',\n    '\\u2060-\\u206f',\n    '\\ufeff',\n    '\\ufff0-\\uffff'\n  ].join('')\n  var cx = new RegExp('[' + chars + ']', 'g')\n  var j\n  var text = strJson\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n  cx.lastIndex = 0\n  if (cx.test(text)) {\n    text = text.replace(cx, function (a) {\n      return '\\\\u' + ('0000' + a.charCodeAt(0)\n        .toString(16))\n        .slice(-4)\n    })\n  }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  var m = (/^[\\],:{}\\s]*$/)\n    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n    .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n    .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))\n\n  if (m) {\n    // In the third stage we use the eval function to compile the text into a\n    // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n    // in JavaScript: it can begin a block or an object literal. We wrap the text\n    // in parens to eliminate the ambiguity.\n    j = eval('(' + text + ')') // eslint-disable-line no-eval\n    return j\n  }\n\n  // usable by json_last_error()\n  $locutus.php.last_error_json = 4\n  return null\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["json_encode('Kevin')"],"estarget":"es5","returns":["'\"Kevin\"'"],"dependencies":[],"authors":{"original by":["Public Domain (http://www.json.org/json2.js)"],"improved by":["Michael White"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["felix"]},"notes":[],"layout":"function","title":"php'sjson_encode in JavaScript","function":"json_encode","category":"json","language":"php","alias":["/functions/php/json_encode/","/functions/json/json_encode/","/php/json_encode/","/functions/json_encode/"],"_content":"module.exports = function json_encode (mixedVal) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_encode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: Michael White\n  //         input by: felix\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: json_encode('Kevin')\n  //        returns 1: '\"Kevin\"'\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  var retVal\n  try {\n    if (typeof json === 'object' && typeof json.stringify === 'function') {\n      // Errors will not be caught here if our own equivalent to resource\n      retVal = json.stringify(mixedVal)\n      if (retVal === undefined) {\n        throw new SyntaxError('json_encode')\n      }\n      return retVal\n    }\n\n    var value = mixedVal\n\n    var quote = function (string) {\n      var escapeChars = [\n        '\\u0000-\\u001f',\n        '\\u007f-\\u009f',\n        '\\u00ad',\n        '\\u0600-\\u0604',\n        '\\u070f',\n        '\\u17b4',\n        '\\u17b5',\n        '\\u200c-\\u200f',\n        '\\u2028-\\u202f',\n        '\\u2060-\\u206f',\n        '\\ufeff',\n        '\\ufff0-\\uffff'\n      ].join('')\n      var escapable = new RegExp('[\\\\\"' + escapeChars + ']', 'g')\n      var meta = {\n        // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      }\n\n      escapable.lastIndex = 0\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a]\n        return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0)\n          .toString(16))\n          .slice(-4)\n      }) + '\"' : '\"' + string + '\"'\n    }\n\n    var _str = function (key, holder) {\n      var gap = ''\n      var indent = '    '\n      // The loop counter.\n      var i = 0\n      // The member key.\n      var k = ''\n      // The member value.\n      var v = ''\n      var length = 0\n      var mind = gap\n      var partial = []\n      var value = holder[key]\n\n      // If the value has a toJSON method, call it to obtain a replacement value.\n      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n        value = value.toJSON(key)\n      }\n\n      // What happens next depends on the value's type.\n      switch (typeof value) {\n        case 'string':\n          return quote(value)\n\n        case 'number':\n          // JSON numbers must be finite. Encode non-finite numbers as null.\n          return isFinite(value) ? String(value) : 'null'\n\n        case 'boolean':\n        case 'null':\n          // If the value is a boolean or null, convert it to a string. Note:\n          // typeof null does not produce 'null'. The case is included here in\n          // the remote chance that this gets fixed someday.\n          return String(value)\n\n        case 'object':\n          // If the type is 'object', we might be dealing with an object or an array or\n          // null.\n          // Due to a specification blunder in ECMAScript, typeof null is 'object',\n          // so watch out for that case.\n          if (!value) {\n            return 'null'\n          }\n\n          // Make an array to hold the partial results of stringifying this object value.\n          gap += indent\n          partial = []\n\n          // Is the value an array?\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            // The value is an array. Stringify every element. Use null as a placeholder\n            // for non-JSON values.\n            length = value.length\n            for (i = 0; i < length; i += 1) {\n              partial[i] = _str(i, value) || 'null'\n            }\n\n            // Join all of the elements together, separated with commas, and wrap them in\n            // brackets.\n            v = partial.length === 0 ? '[]' : gap\n              ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n              : '[' + partial.join(',') + ']'\n            gap = mind\n            return v\n          }\n\n          // Iterate through all of the keys in the object.\n          for (k in value) {\n            if (Object.hasOwnProperty.call(value, k)) {\n              v = _str(k, value)\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v)\n              }\n            }\n          }\n\n          // Join all of the member texts together, separated with commas,\n          // and wrap them in braces.\n          v = partial.length === 0 ? '{}' : gap\n            ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n            : '{' + partial.join(',') + '}'\n          gap = mind\n          return v\n        case 'undefined':\n        case 'function':\n        default:\n          throw new SyntaxError('json_encode')\n      }\n    }\n\n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return _str('', {\n      '': value\n    })\n  } catch (err) {\n    // @todo: ensure error handling above throws a SyntaxError in all cases where it could\n    // (i.e., when the JSON global is not available and there is an error)\n    if (!(err instanceof SyntaxError)) {\n      throw new Error('Unexpected error type in json_encode()')\n    }\n    // usable by json_last_error()\n    $locutus.php.last_error_json = 4\n    return null\n  }\n}\n","source":"php/json/json_encode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - json_encode('Kevin')\nestarget: es5\nreturns:\n  - '''\"Kevin\"'''\ndependencies: []\nauthors:\n  original by:\n    - 'Public Domain (http://www.json.org/json2.js)'\n  improved by:\n    - Michael White\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - felix\nnotes: []\nlayout: function\ntitle: php'sjson_encode in JavaScript\nfunction: json_encode\ncategory: json\nlanguage: php\npermalink: php/json/json_encode/\nalias:\n  - /functions/php/json_encode/\n  - /functions/json/json_encode/\n  - /php/json_encode/\n  - /functions/json_encode/\n---\nmodule.exports = function json_encode (mixedVal) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_encode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: Michael White\n  //         input by: felix\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: json_encode('Kevin')\n  //        returns 1: '\"Kevin\"'\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  var retVal\n  try {\n    if (typeof json === 'object' && typeof json.stringify === 'function') {\n      // Errors will not be caught here if our own equivalent to resource\n      retVal = json.stringify(mixedVal)\n      if (retVal === undefined) {\n        throw new SyntaxError('json_encode')\n      }\n      return retVal\n    }\n\n    var value = mixedVal\n\n    var quote = function (string) {\n      var escapeChars = [\n        '\\u0000-\\u001f',\n        '\\u007f-\\u009f',\n        '\\u00ad',\n        '\\u0600-\\u0604',\n        '\\u070f',\n        '\\u17b4',\n        '\\u17b5',\n        '\\u200c-\\u200f',\n        '\\u2028-\\u202f',\n        '\\u2060-\\u206f',\n        '\\ufeff',\n        '\\ufff0-\\uffff'\n      ].join('')\n      var escapable = new RegExp('[\\\\\"' + escapeChars + ']', 'g')\n      var meta = {\n        // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      }\n\n      escapable.lastIndex = 0\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a]\n        return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0)\n          .toString(16))\n          .slice(-4)\n      }) + '\"' : '\"' + string + '\"'\n    }\n\n    var _str = function (key, holder) {\n      var gap = ''\n      var indent = '    '\n      // The loop counter.\n      var i = 0\n      // The member key.\n      var k = ''\n      // The member value.\n      var v = ''\n      var length = 0\n      var mind = gap\n      var partial = []\n      var value = holder[key]\n\n      // If the value has a toJSON method, call it to obtain a replacement value.\n      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n        value = value.toJSON(key)\n      }\n\n      // What happens next depends on the value's type.\n      switch (typeof value) {\n        case 'string':\n          return quote(value)\n\n        case 'number':\n          // JSON numbers must be finite. Encode non-finite numbers as null.\n          return isFinite(value) ? String(value) : 'null'\n\n        case 'boolean':\n        case 'null':\n          // If the value is a boolean or null, convert it to a string. Note:\n          // typeof null does not produce 'null'. The case is included here in\n          // the remote chance that this gets fixed someday.\n          return String(value)\n\n        case 'object':\n          // If the type is 'object', we might be dealing with an object or an array or\n          // null.\n          // Due to a specification blunder in ECMAScript, typeof null is 'object',\n          // so watch out for that case.\n          if (!value) {\n            return 'null'\n          }\n\n          // Make an array to hold the partial results of stringifying this object value.\n          gap += indent\n          partial = []\n\n          // Is the value an array?\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            // The value is an array. Stringify every element. Use null as a placeholder\n            // for non-JSON values.\n            length = value.length\n            for (i = 0; i < length; i += 1) {\n              partial[i] = _str(i, value) || 'null'\n            }\n\n            // Join all of the elements together, separated with commas, and wrap them in\n            // brackets.\n            v = partial.length === 0 ? '[]' : gap\n              ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n              : '[' + partial.join(',') + ']'\n            gap = mind\n            return v\n          }\n\n          // Iterate through all of the keys in the object.\n          for (k in value) {\n            if (Object.hasOwnProperty.call(value, k)) {\n              v = _str(k, value)\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v)\n              }\n            }\n          }\n\n          // Join all of the member texts together, separated with commas,\n          // and wrap them in braces.\n          v = partial.length === 0 ? '{}' : gap\n            ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n            : '{' + partial.join(',') + '}'\n          gap = mind\n          return v\n        case 'undefined':\n        case 'function':\n        default:\n          throw new SyntaxError('json_encode')\n      }\n    }\n\n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return _str('', {\n      '': value\n    })\n  } catch (err) {\n    // @todo: ensure error handling above throws a SyntaxError in all cases where it could\n    // (i.e., when the JSON global is not available and there is an error)\n    if (!(err instanceof SyntaxError)) {\n      throw new Error('Unexpected error type in json_encode()')\n    }\n    // usable by json_last_error()\n    $locutus.php.last_error_json = 4\n    return null\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/json/json_encode/index.html","comments":1,"_id":"cinoeja0g003you9yx1jxbcl2","content":"module.exports = function json_encode (mixedVal) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_encode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: Michael White\n  //         input by: felix\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: json_encode('Kevin')\n  //        returns 1: '\"Kevin\"'\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  var retVal\n  try {\n    if (typeof json === 'object' && typeof json.stringify === 'function') {\n      // Errors will not be caught here if our own equivalent to resource\n      retVal = json.stringify(mixedVal)\n      if (retVal === undefined) {\n        throw new SyntaxError('json_encode')\n      }\n      return retVal\n    }\n\n    var value = mixedVal\n\n    var quote = function (string) {\n      var escapeChars = [\n        '\\u0000-\\u001f',\n        '\\u007f-\\u009f',\n        '\\u00ad',\n        '\\u0600-\\u0604',\n        '\\u070f',\n        '\\u17b4',\n        '\\u17b5',\n        '\\u200c-\\u200f',\n        '\\u2028-\\u202f',\n        '\\u2060-\\u206f',\n        '\\ufeff',\n        '\\ufff0-\\uffff'\n      ].join('')\n      var escapable = new RegExp('[\\\\\"' + escapeChars + ']', 'g')\n      var meta = {\n        // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      }\n\n      escapable.lastIndex = 0\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a]\n        return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0)\n          .toString(16))\n          .slice(-4)\n      }) + '\"' : '\"' + string + '\"'\n    }\n\n    var _str = function (key, holder) {\n      var gap = ''\n      var indent = '    '\n      // The loop counter.\n      var i = 0\n      // The member key.\n      var k = ''\n      // The member value.\n      var v = ''\n      var length = 0\n      var mind = gap\n      var partial = []\n      var value = holder[key]\n\n      // If the value has a toJSON method, call it to obtain a replacement value.\n      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n        value = value.toJSON(key)\n      }\n\n      // What happens next depends on the value's type.\n      switch (typeof value) {\n        case 'string':\n          return quote(value)\n\n        case 'number':\n          // JSON numbers must be finite. Encode non-finite numbers as null.\n          return isFinite(value) ? String(value) : 'null'\n\n        case 'boolean':\n        case 'null':\n          // If the value is a boolean or null, convert it to a string. Note:\n          // typeof null does not produce 'null'. The case is included here in\n          // the remote chance that this gets fixed someday.\n          return String(value)\n\n        case 'object':\n          // If the type is 'object', we might be dealing with an object or an array or\n          // null.\n          // Due to a specification blunder in ECMAScript, typeof null is 'object',\n          // so watch out for that case.\n          if (!value) {\n            return 'null'\n          }\n\n          // Make an array to hold the partial results of stringifying this object value.\n          gap += indent\n          partial = []\n\n          // Is the value an array?\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            // The value is an array. Stringify every element. Use null as a placeholder\n            // for non-JSON values.\n            length = value.length\n            for (i = 0; i < length; i += 1) {\n              partial[i] = _str(i, value) || 'null'\n            }\n\n            // Join all of the elements together, separated with commas, and wrap them in\n            // brackets.\n            v = partial.length === 0 ? '[]' : gap\n              ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n              : '[' + partial.join(',') + ']'\n            gap = mind\n            return v\n          }\n\n          // Iterate through all of the keys in the object.\n          for (k in value) {\n            if (Object.hasOwnProperty.call(value, k)) {\n              v = _str(k, value)\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v)\n              }\n            }\n          }\n\n          // Join all of the member texts together, separated with commas,\n          // and wrap them in braces.\n          v = partial.length === 0 ? '{}' : gap\n            ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n            : '{' + partial.join(',') + '}'\n          gap = mind\n          return v\n        case 'undefined':\n        case 'function':\n        default:\n          throw new SyntaxError('json_encode')\n      }\n    }\n\n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return _str('', {\n      '': value\n    })\n  } catch (err) {\n    // @todo: ensure error handling above throws a SyntaxError in all cases where it could\n    // (i.e., when the JSON global is not available and there is an error)\n    if (!(err instanceof SyntaxError)) {\n      throw new Error('Unexpected error type in json_encode()')\n    }\n    // usable by json_last_error()\n    $locutus.php.last_error_json = 4\n    return null\n  }\n}\n","excerpt":"","more":"module.exports = function json_encode (mixedVal) { // eslint-disable-line camelcase\n  //       discuss at: http://phpjs.org/functions/json_encode/\n  //      original by: Public Domain (http://www.json.org/json2.js)\n  // reimplemented by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  //      improved by: Michael White\n  //         input by: felix\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: json_encode('Kevin')\n  //        returns 1: '\"Kevin\"'\n\n  /*\n    http://www.JSON.org/json2.js\n    2008-11-19\n    Public Domain.\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n    See http://www.JSON.org/js.html\n  */\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var json = $global.JSON\n  var retVal\n  try {\n    if (typeof json === 'object' && typeof json.stringify === 'function') {\n      // Errors will not be caught here if our own equivalent to resource\n      retVal = json.stringify(mixedVal)\n      if (retVal === undefined) {\n        throw new SyntaxError('json_encode')\n      }\n      return retVal\n    }\n\n    var value = mixedVal\n\n    var quote = function (string) {\n      var escapeChars = [\n        '\\u0000-\\u001f',\n        '\\u007f-\\u009f',\n        '\\u00ad',\n        '\\u0600-\\u0604',\n        '\\u070f',\n        '\\u17b4',\n        '\\u17b5',\n        '\\u200c-\\u200f',\n        '\\u2028-\\u202f',\n        '\\u2060-\\u206f',\n        '\\ufeff',\n        '\\ufff0-\\uffff'\n      ].join('')\n      var escapable = new RegExp('[\\\\\"' + escapeChars + ']', 'g')\n      var meta = {\n        // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      }\n\n      escapable.lastIndex = 0\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a]\n        return typeof c === 'string' ? c : '\\\\u' + ('0000' + a.charCodeAt(0)\n          .toString(16))\n          .slice(-4)\n      }) + '\"' : '\"' + string + '\"'\n    }\n\n    var _str = function (key, holder) {\n      var gap = ''\n      var indent = '    '\n      // The loop counter.\n      var i = 0\n      // The member key.\n      var k = ''\n      // The member value.\n      var v = ''\n      var length = 0\n      var mind = gap\n      var partial = []\n      var value = holder[key]\n\n      // If the value has a toJSON method, call it to obtain a replacement value.\n      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n        value = value.toJSON(key)\n      }\n\n      // What happens next depends on the value's type.\n      switch (typeof value) {\n        case 'string':\n          return quote(value)\n\n        case 'number':\n          // JSON numbers must be finite. Encode non-finite numbers as null.\n          return isFinite(value) ? String(value) : 'null'\n\n        case 'boolean':\n        case 'null':\n          // If the value is a boolean or null, convert it to a string. Note:\n          // typeof null does not produce 'null'. The case is included here in\n          // the remote chance that this gets fixed someday.\n          return String(value)\n\n        case 'object':\n          // If the type is 'object', we might be dealing with an object or an array or\n          // null.\n          // Due to a specification blunder in ECMAScript, typeof null is 'object',\n          // so watch out for that case.\n          if (!value) {\n            return 'null'\n          }\n\n          // Make an array to hold the partial results of stringifying this object value.\n          gap += indent\n          partial = []\n\n          // Is the value an array?\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n            // The value is an array. Stringify every element. Use null as a placeholder\n            // for non-JSON values.\n            length = value.length\n            for (i = 0; i < length; i += 1) {\n              partial[i] = _str(i, value) || 'null'\n            }\n\n            // Join all of the elements together, separated with commas, and wrap them in\n            // brackets.\n            v = partial.length === 0 ? '[]' : gap\n              ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n              : '[' + partial.join(',') + ']'\n            gap = mind\n            return v\n          }\n\n          // Iterate through all of the keys in the object.\n          for (k in value) {\n            if (Object.hasOwnProperty.call(value, k)) {\n              v = _str(k, value)\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v)\n              }\n            }\n          }\n\n          // Join all of the member texts together, separated with commas,\n          // and wrap them in braces.\n          v = partial.length === 0 ? '{}' : gap\n            ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n            : '{' + partial.join(',') + '}'\n          gap = mind\n          return v\n        case 'undefined':\n        case 'function':\n        default:\n          throw new SyntaxError('json_encode')\n      }\n    }\n\n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return _str('', {\n      '': value\n    })\n  } catch (err) {\n    // @todo: ensure error handling above throws a SyntaxError in all cases where it could\n    // (i.e., when the JSON global is not available and there is an error)\n    if (!(err instanceof SyntaxError)) {\n      throw new Error('Unexpected error type in json_encode()')\n    }\n    // usable by json_last_error()\n    $locutus.php.last_error_json = 4\n    return null\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["json_last_error()"],"estarget":"es5","returns":["0"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sjson_last_error in JavaScript","function":"json_last_error","category":"json","language":"php","alias":["/functions/php/json_last_error/","/functions/json/json_last_error/","/php/json_last_error/","/functions/json_last_error/"],"_content":"module.exports = function json_last_error () { // eslint-disable-line camelcase\n  //  discuss at: http://phpjs.org/functions/json_last_error/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: json_last_error()\n  //   returns 1: 0\n\n  // JSON_ERROR_NONE = 0\n  // max depth limit to be removed per PHP comments in json.c (not possible in JS?):\n  // JSON_ERROR_DEPTH = 1\n  // internal use? also not documented:\n  // JSON_ERROR_STATE_MISMATCH = 2\n  // [\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F] if used directly within json_decode():\n  // JSON_ERROR_CTRL_CHAR = 3\n  // but JSON functions auto-escape these, so error not possible in JavaScript\n  // JSON_ERROR_SYNTAX = 4\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  return $locutus.php && $locutus.php.last_error_json ? $locutus.php.last_error_json : 0\n}\n","source":"php/json/json_last_error.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - json_last_error()\nestarget: es5\nreturns:\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sjson_last_error in JavaScript\nfunction: json_last_error\ncategory: json\nlanguage: php\npermalink: php/json/json_last_error/\nalias:\n  - /functions/php/json_last_error/\n  - /functions/json/json_last_error/\n  - /php/json_last_error/\n  - /functions/json_last_error/\n---\nmodule.exports = function json_last_error () { // eslint-disable-line camelcase\n  //  discuss at: http://phpjs.org/functions/json_last_error/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: json_last_error()\n  //   returns 1: 0\n\n  // JSON_ERROR_NONE = 0\n  // max depth limit to be removed per PHP comments in json.c (not possible in JS?):\n  // JSON_ERROR_DEPTH = 1\n  // internal use? also not documented:\n  // JSON_ERROR_STATE_MISMATCH = 2\n  // [\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F] if used directly within json_decode():\n  // JSON_ERROR_CTRL_CHAR = 3\n  // but JSON functions auto-escape these, so error not possible in JavaScript\n  // JSON_ERROR_SYNTAX = 4\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  return $locutus.php && $locutus.php.last_error_json ? $locutus.php.last_error_json : 0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/json/json_last_error/index.html","comments":1,"_id":"cinoeja0g003zou9yf8vgxhsr","content":"module.exports = function json_last_error () { // eslint-disable-line camelcase\n  //  discuss at: http://phpjs.org/functions/json_last_error/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: json_last_error()\n  //   returns 1: 0\n\n  // JSON_ERROR_NONE = 0\n  // max depth limit to be removed per PHP comments in json.c (not possible in JS?):\n  // JSON_ERROR_DEPTH = 1\n  // internal use? also not documented:\n  // JSON_ERROR_STATE_MISMATCH = 2\n  // [\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F] if used directly within json_decode():\n  // JSON_ERROR_CTRL_CHAR = 3\n  // but JSON functions auto-escape these, so error not possible in JavaScript\n  // JSON_ERROR_SYNTAX = 4\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  return $locutus.php && $locutus.php.last_error_json ? $locutus.php.last_error_json : 0\n}\n","excerpt":"","more":"module.exports = function json_last_error () { // eslint-disable-line camelcase\n  //  discuss at: http://phpjs.org/functions/json_last_error/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: json_last_error()\n  //   returns 1: 0\n\n  // JSON_ERROR_NONE = 0\n  // max depth limit to be removed per PHP comments in json.c (not possible in JS?):\n  // JSON_ERROR_DEPTH = 1\n  // internal use? also not documented:\n  // JSON_ERROR_STATE_MISMATCH = 2\n  // [\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F] if used directly within json_decode():\n  // JSON_ERROR_CTRL_CHAR = 3\n  // but JSON functions auto-escape these, so error not possible in JavaScript\n  // JSON_ERROR_SYNTAX = 4\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  return $locutus.php && $locutus.php.last_error_json ? $locutus.php.last_error_json : 0\n}\n"},{"type":"category","language":"php","category":"misc","title":"misc","_content":"","source":"php/misc/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: misc\ntitle: misc\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/misc/index.html","comments":1,"layout":"page","_id":"cinoeja0h0040ou9y1ck9nypk","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["pack('nvc*', 0x1234, 0x5678, 65, 66)","pack('H4', '2345')","pack('H*', 'D5')","pack('d', -100.876)"],"estarget":"es5","returns":["'\\u00124xVAB'","'#E'","'Õ'","\"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\""],"dependencies":[],"authors":{"original by":["Tim de Koning (http://www.kingsquare.nl)"],"parts by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"bugfixed by":["Tim de Koning (http://www.kingsquare.nl)"]},"notes":["Float encoding by: Jonas Raoni Soares Silva\nHome: http://www.kingsquare.nl/blog/12-12-2009/13507444\nFeedback: phpjs-pack@kingsquare.nl\n\"machine dependent byte order and size\" aren't\napplicable for JavaScript; pack works as on a 32bit,\nlittle endian machine."],"layout":"function","title":"php'spack in JavaScript","function":"pack","category":"misc","language":"php","alias":["/functions/php/pack/","/functions/misc/pack/","/php/pack/","/functions/pack/"],"_content":"module.exports = function pack (format) {\n  //  discuss at: http://locutusjs.io/php/pack/\n  // original by: Tim de Koning (http://www.kingsquare.nl)\n  //    parts by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Tim de Koning (http://www.kingsquare.nl)\n  //      note 1: Float encoding by: Jonas Raoni Soares Silva\n  //      note 1: Home: http://www.kingsquare.nl/blog/12-12-2009/13507444\n  //      note 1: Feedback: phpjs-pack@kingsquare.nl\n  //      note 1: \"machine dependent byte order and size\" aren't\n  //      note 1: applicable for JavaScript; pack works as on a 32bit,\n  //      note 1: little endian machine.\n  //   example 1: pack('nvc*', 0x1234, 0x5678, 65, 66)\n  //   returns 1: '\\u00124xVAB'\n  //   example 2: pack('H4', '2345')\n  //   returns 2: '#E'\n  //   example 3: pack('H*', 'D5')\n  //   returns 3: 'Õ'\n  //   example 4: pack('d', -100.876)\n  //   returns 4: \"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\"\n  //        test: skip-1\n\n  var formatPointer = 0\n  var argumentPointer = 1\n  var result = ''\n  var argument = ''\n  var i = 0\n  var r = []\n  var instruction, quantifier, word, precisionBits, exponentBits, extraNullCount\n\n  // vars used by float encoding\n  var bias\n  var minExp\n  var maxExp\n  var minUnnormExp\n  var status\n  var exp\n  var len\n  var bin\n  var signal\n  var n\n  var intPart\n  var floatPart\n  var lastBit\n  var rounded\n  var j\n  var k\n  var tmpResult\n\n  while (formatPointer < format.length) {\n    instruction = format.charAt(formatPointer)\n    quantifier = ''\n    formatPointer++\n    while ((formatPointer < format.length) && (format.charAt(formatPointer)\n        .match(/[\\d\\*]/) !== null)) {\n      quantifier += format.charAt(formatPointer)\n      formatPointer++\n    }\n    if (quantifier === '') {\n      quantifier = '1'\n    }\n\n    // Now pack variables: 'quantifier' times 'instruction'\n    switch (instruction) {\n      case 'a':\n      case 'A':\n        // NUL-padded string\n        // SPACE-padded string\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning:  pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = String(arguments[argumentPointer])\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (typeof argument[i] === 'undefined') {\n            if (instruction === 'a') {\n              result += String.fromCharCode(0)\n            } else {\n              result += ' '\n            }\n          } else {\n            result += argument[i]\n          }\n        }\n        argumentPointer++\n        break\n      case 'h':\n      case 'H':\n        // Hex string, low nibble first\n        // Hex string, high nibble first\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning: pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = arguments[argumentPointer]\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        if (quantifier > argument.length) {\n          var msg = 'Warning: pack() Type ' + instruction + ': not enough characters in string'\n          throw new Error(msg)\n        }\n\n        for (i = 0; i < quantifier; i += 2) {\n          // Always get per 2 bytes...\n          word = argument[i]\n          if (((i + 1) >= quantifier) || typeof argument[i + 1] === 'undefined') {\n            word += '0'\n          } else {\n            word += argument[i + 1]\n          }\n          // The fastest way to reverse?\n          if (instruction === 'h') {\n            word = word[1] + word[0]\n          }\n          result += String.fromCharCode(parseInt(word, 16))\n        }\n        argumentPointer++\n        break\n\n      case 'c':\n      case 'C':\n        // signed char\n        // unsigned char\n        // c and C is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer])\n          argumentPointer++\n        }\n        break\n\n      case 's':\n      case 'S':\n      case 'v':\n        // signed short (always 16 bit, machine byte order)\n        // unsigned short (always 16 bit, machine byte order)\n        // s and S is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'n':\n        // unsigned short (always 16 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning: pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'i':\n      case 'I':\n      case 'l':\n      case 'L':\n      case 'V':\n        // signed integer (machine dependent size and byte order)\n        // unsigned integer (machine dependent size and byte order)\n        // signed long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, little endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          argumentPointer++\n        }\n\n        break\n      case 'N':\n        // unsigned long (always 32 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'f':\n      case 'd':\n        // float (machine dependent size and representation)\n        // double (machine dependent size and representation)\n        // version based on IEEE754\n        precisionBits = 23\n        exponentBits = 8\n        if (instruction === 'd') {\n          precisionBits = 52\n          exponentBits = 11\n        }\n\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n        for (i = 0; i < quantifier; i++) {\n          argument = arguments[argumentPointer]\n          bias = Math.pow(2, exponentBits - 1) - 1\n          minExp = -bias + 1\n          maxExp = bias\n          minUnnormExp = minExp - precisionBits\n          status = isNaN(n = parseFloat(argument)) || n === -Infinity || n === +Infinity ? n : 0\n          exp = 0\n          len = 2 * bias + 1 + precisionBits + 3\n          bin = new Array(len)\n          signal = (n = status !== 0 ? 0 : n) < 0\n          n = Math.abs(n)\n          intPart = Math.floor(n)\n          floatPart = n - intPart\n\n          for (k = len; k;) {\n            bin[--k] = 0\n          }\n          for (k = bias + 2; intPart && k;) {\n            bin[--k] = intPart % 2\n            intPart = Math.floor(intPart / 2)\n          }\n          for (k = bias + 1; floatPart > 0 && k; --floatPart) {\n            (bin[++k] = ((floatPart *= 2) >= 1) - 0)\n          }\n          for (k = -1; ++k < len && !bin[k];) {}\n\n          // @todo: Make this more readable:\n          var key = (lastBit = precisionBits - 1 +\n            (k =\n              (exp = bias + 1 - k) >= minExp &&\n              exp <= maxExp ? k + 1 : bias + 1 - (exp = minExp - 1))) + 1\n\n          if (bin[key]) {\n            if (!(rounded = bin[lastBit])) {\n              for (j = lastBit + 2; !rounded && j < len; rounded = bin[j++]) {}\n            }\n            for (j = lastBit + 1; rounded && --j >= 0;\n            (bin[j] = !bin[j] - 0) && (rounded = 0)) {}\n          }\n\n          for (k = k - 2 < 0 ? -1 : k - 3; ++k < len && !bin[k];) {}\n\n          if ((exp = bias + 1 - k) >= minExp && exp <= maxExp) {\n            ++k\n          } else {\n            if (exp < minExp) {\n              if (exp !== bias + 1 - len && exp < minUnnormExp) {\n                // \"encodeFloat::float underflow\"\n              }\n              k = bias + 1 - (exp = minExp - 1)\n            }\n          }\n\n          if (intPart || status !== 0) {\n            exp = maxExp + 1\n            k = bias + 2\n            if (status === -Infinity) {\n              signal = 1\n            } else if (isNaN(status)) {\n              bin[k] = 1\n            }\n          }\n\n          n = Math.abs(exp + bias)\n          tmpResult = ''\n\n          for (j = exponentBits + 1; --j;) {\n            tmpResult = (n % 2) + tmpResult\n            n = n >>= 1\n          }\n\n          n = 0\n          j = 0\n          k = (tmpResult = (signal ? '1' : '0') + tmpResult + (bin\n            .slice(k, k + precisionBits)\n            .join(''))\n          ).length\n          r = []\n\n          for (; k;) {\n            n += (1 << j) * tmpResult.charAt(--k)\n            if (j === 7) {\n              r[r.length] = String.fromCharCode(n)\n              n = 0\n            }\n            j = (j + 1) % 8\n          }\n\n          r[r.length] = n ? String.fromCharCode(n) : ''\n          result += r.join('')\n          argumentPointer++\n        }\n        break\n\n      case 'x':\n        // NUL byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type x: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(0)\n        }\n        break\n\n      case 'X':\n        // Back up one byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (result.length === 0) {\n            throw new Error('Warning: pack(): Type X:' + ' outside of string')\n          } else {\n            result = result.substring(0, result.length - 1)\n          }\n        }\n        break\n\n      case '@':\n        // NUL-fill to absolute position\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        if (quantifier > result.length) {\n          extraNullCount = quantifier - result.length\n          for (i = 0; i < extraNullCount; i++) {\n            result += String.fromCharCode(0)\n          }\n        }\n        if (quantifier < result.length) {\n          result = result.substring(0, quantifier)\n        }\n        break\n\n      default:\n        throw new Error('Warning: pack() Type ' + instruction + ': unknown format code')\n    }\n  }\n  if (argumentPointer < arguments.length) {\n    var msg2 = 'Warning: pack(): ' + (arguments.length - argumentPointer) + ' arguments unused'\n    throw new Error(msg2)\n  }\n\n  return result\n}\n","source":"php/misc/pack.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'pack(''nvc*'', 0x1234, 0x5678, 65, 66)'\n  - 'pack(''H4'', ''2345'')'\n  - 'pack(''H*'', ''D5'')'\n  - 'pack(''d'', -100.876)'\nestarget: es5\nreturns:\n  - '''\\u00124xVAB'''\n  - '''#E'''\n  - '''Õ'''\n  - '\"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Tim de Koning (http://www.kingsquare.nl)'\n  parts by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  bugfixed by:\n    - 'Tim de Koning (http://www.kingsquare.nl)'\nnotes:\n  - |-\n    Float encoding by: Jonas Raoni Soares Silva\n    Home: http://www.kingsquare.nl/blog/12-12-2009/13507444\n    Feedback: phpjs-pack@kingsquare.nl\n    \"machine dependent byte order and size\" aren't\n    applicable for JavaScript; pack works as on a 32bit,\n    little endian machine.\nlayout: function\ntitle: php'spack in JavaScript\nfunction: pack\ncategory: misc\nlanguage: php\npermalink: php/misc/pack/\nalias:\n  - /functions/php/pack/\n  - /functions/misc/pack/\n  - /php/pack/\n  - /functions/pack/\n---\nmodule.exports = function pack (format) {\n  //  discuss at: http://locutusjs.io/php/pack/\n  // original by: Tim de Koning (http://www.kingsquare.nl)\n  //    parts by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Tim de Koning (http://www.kingsquare.nl)\n  //      note 1: Float encoding by: Jonas Raoni Soares Silva\n  //      note 1: Home: http://www.kingsquare.nl/blog/12-12-2009/13507444\n  //      note 1: Feedback: phpjs-pack@kingsquare.nl\n  //      note 1: \"machine dependent byte order and size\" aren't\n  //      note 1: applicable for JavaScript; pack works as on a 32bit,\n  //      note 1: little endian machine.\n  //   example 1: pack('nvc*', 0x1234, 0x5678, 65, 66)\n  //   returns 1: '\\u00124xVAB'\n  //   example 2: pack('H4', '2345')\n  //   returns 2: '#E'\n  //   example 3: pack('H*', 'D5')\n  //   returns 3: 'Õ'\n  //   example 4: pack('d', -100.876)\n  //   returns 4: \"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\"\n  //        test: skip-1\n\n  var formatPointer = 0\n  var argumentPointer = 1\n  var result = ''\n  var argument = ''\n  var i = 0\n  var r = []\n  var instruction, quantifier, word, precisionBits, exponentBits, extraNullCount\n\n  // vars used by float encoding\n  var bias\n  var minExp\n  var maxExp\n  var minUnnormExp\n  var status\n  var exp\n  var len\n  var bin\n  var signal\n  var n\n  var intPart\n  var floatPart\n  var lastBit\n  var rounded\n  var j\n  var k\n  var tmpResult\n\n  while (formatPointer < format.length) {\n    instruction = format.charAt(formatPointer)\n    quantifier = ''\n    formatPointer++\n    while ((formatPointer < format.length) && (format.charAt(formatPointer)\n        .match(/[\\d\\*]/) !== null)) {\n      quantifier += format.charAt(formatPointer)\n      formatPointer++\n    }\n    if (quantifier === '') {\n      quantifier = '1'\n    }\n\n    // Now pack variables: 'quantifier' times 'instruction'\n    switch (instruction) {\n      case 'a':\n      case 'A':\n        // NUL-padded string\n        // SPACE-padded string\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning:  pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = String(arguments[argumentPointer])\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (typeof argument[i] === 'undefined') {\n            if (instruction === 'a') {\n              result += String.fromCharCode(0)\n            } else {\n              result += ' '\n            }\n          } else {\n            result += argument[i]\n          }\n        }\n        argumentPointer++\n        break\n      case 'h':\n      case 'H':\n        // Hex string, low nibble first\n        // Hex string, high nibble first\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning: pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = arguments[argumentPointer]\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        if (quantifier > argument.length) {\n          var msg = 'Warning: pack() Type ' + instruction + ': not enough characters in string'\n          throw new Error(msg)\n        }\n\n        for (i = 0; i < quantifier; i += 2) {\n          // Always get per 2 bytes...\n          word = argument[i]\n          if (((i + 1) >= quantifier) || typeof argument[i + 1] === 'undefined') {\n            word += '0'\n          } else {\n            word += argument[i + 1]\n          }\n          // The fastest way to reverse?\n          if (instruction === 'h') {\n            word = word[1] + word[0]\n          }\n          result += String.fromCharCode(parseInt(word, 16))\n        }\n        argumentPointer++\n        break\n\n      case 'c':\n      case 'C':\n        // signed char\n        // unsigned char\n        // c and C is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer])\n          argumentPointer++\n        }\n        break\n\n      case 's':\n      case 'S':\n      case 'v':\n        // signed short (always 16 bit, machine byte order)\n        // unsigned short (always 16 bit, machine byte order)\n        // s and S is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'n':\n        // unsigned short (always 16 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning: pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'i':\n      case 'I':\n      case 'l':\n      case 'L':\n      case 'V':\n        // signed integer (machine dependent size and byte order)\n        // unsigned integer (machine dependent size and byte order)\n        // signed long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, little endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          argumentPointer++\n        }\n\n        break\n      case 'N':\n        // unsigned long (always 32 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'f':\n      case 'd':\n        // float (machine dependent size and representation)\n        // double (machine dependent size and representation)\n        // version based on IEEE754\n        precisionBits = 23\n        exponentBits = 8\n        if (instruction === 'd') {\n          precisionBits = 52\n          exponentBits = 11\n        }\n\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n        for (i = 0; i < quantifier; i++) {\n          argument = arguments[argumentPointer]\n          bias = Math.pow(2, exponentBits - 1) - 1\n          minExp = -bias + 1\n          maxExp = bias\n          minUnnormExp = minExp - precisionBits\n          status = isNaN(n = parseFloat(argument)) || n === -Infinity || n === +Infinity ? n : 0\n          exp = 0\n          len = 2 * bias + 1 + precisionBits + 3\n          bin = new Array(len)\n          signal = (n = status !== 0 ? 0 : n) < 0\n          n = Math.abs(n)\n          intPart = Math.floor(n)\n          floatPart = n - intPart\n\n          for (k = len; k;) {\n            bin[--k] = 0\n          }\n          for (k = bias + 2; intPart && k;) {\n            bin[--k] = intPart % 2\n            intPart = Math.floor(intPart / 2)\n          }\n          for (k = bias + 1; floatPart > 0 && k; --floatPart) {\n            (bin[++k] = ((floatPart *= 2) >= 1) - 0)\n          }\n          for (k = -1; ++k < len && !bin[k];) {}\n\n          // @todo: Make this more readable:\n          var key = (lastBit = precisionBits - 1 +\n            (k =\n              (exp = bias + 1 - k) >= minExp &&\n              exp <= maxExp ? k + 1 : bias + 1 - (exp = minExp - 1))) + 1\n\n          if (bin[key]) {\n            if (!(rounded = bin[lastBit])) {\n              for (j = lastBit + 2; !rounded && j < len; rounded = bin[j++]) {}\n            }\n            for (j = lastBit + 1; rounded && --j >= 0;\n            (bin[j] = !bin[j] - 0) && (rounded = 0)) {}\n          }\n\n          for (k = k - 2 < 0 ? -1 : k - 3; ++k < len && !bin[k];) {}\n\n          if ((exp = bias + 1 - k) >= minExp && exp <= maxExp) {\n            ++k\n          } else {\n            if (exp < minExp) {\n              if (exp !== bias + 1 - len && exp < minUnnormExp) {\n                // \"encodeFloat::float underflow\"\n              }\n              k = bias + 1 - (exp = minExp - 1)\n            }\n          }\n\n          if (intPart || status !== 0) {\n            exp = maxExp + 1\n            k = bias + 2\n            if (status === -Infinity) {\n              signal = 1\n            } else if (isNaN(status)) {\n              bin[k] = 1\n            }\n          }\n\n          n = Math.abs(exp + bias)\n          tmpResult = ''\n\n          for (j = exponentBits + 1; --j;) {\n            tmpResult = (n % 2) + tmpResult\n            n = n >>= 1\n          }\n\n          n = 0\n          j = 0\n          k = (tmpResult = (signal ? '1' : '0') + tmpResult + (bin\n            .slice(k, k + precisionBits)\n            .join(''))\n          ).length\n          r = []\n\n          for (; k;) {\n            n += (1 << j) * tmpResult.charAt(--k)\n            if (j === 7) {\n              r[r.length] = String.fromCharCode(n)\n              n = 0\n            }\n            j = (j + 1) % 8\n          }\n\n          r[r.length] = n ? String.fromCharCode(n) : ''\n          result += r.join('')\n          argumentPointer++\n        }\n        break\n\n      case 'x':\n        // NUL byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type x: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(0)\n        }\n        break\n\n      case 'X':\n        // Back up one byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (result.length === 0) {\n            throw new Error('Warning: pack(): Type X:' + ' outside of string')\n          } else {\n            result = result.substring(0, result.length - 1)\n          }\n        }\n        break\n\n      case '@':\n        // NUL-fill to absolute position\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        if (quantifier > result.length) {\n          extraNullCount = quantifier - result.length\n          for (i = 0; i < extraNullCount; i++) {\n            result += String.fromCharCode(0)\n          }\n        }\n        if (quantifier < result.length) {\n          result = result.substring(0, quantifier)\n        }\n        break\n\n      default:\n        throw new Error('Warning: pack() Type ' + instruction + ': unknown format code')\n    }\n  }\n  if (argumentPointer < arguments.length) {\n    var msg2 = 'Warning: pack(): ' + (arguments.length - argumentPointer) + ' arguments unused'\n    throw new Error(msg2)\n  }\n\n  return result\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/misc/pack/index.html","comments":1,"_id":"cinoeja0h0041ou9yxzw0u2ey","content":"module.exports = function pack (format) {\n  //  discuss at: http://locutusjs.io/php/pack/\n  // original by: Tim de Koning (http://www.kingsquare.nl)\n  //    parts by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Tim de Koning (http://www.kingsquare.nl)\n  //      note 1: Float encoding by: Jonas Raoni Soares Silva\n  //      note 1: Home: http://www.kingsquare.nl/blog/12-12-2009/13507444\n  //      note 1: Feedback: phpjs-pack@kingsquare.nl\n  //      note 1: \"machine dependent byte order and size\" aren't\n  //      note 1: applicable for JavaScript; pack works as on a 32bit,\n  //      note 1: little endian machine.\n  //   example 1: pack('nvc*', 0x1234, 0x5678, 65, 66)\n  //   returns 1: '\\u00124xVAB'\n  //   example 2: pack('H4', '2345')\n  //   returns 2: '#E'\n  //   example 3: pack('H*', 'D5')\n  //   returns 3: 'Õ'\n  //   example 4: pack('d', -100.876)\n  //   returns 4: \"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\"\n  //        test: skip-1\n\n  var formatPointer = 0\n  var argumentPointer = 1\n  var result = ''\n  var argument = ''\n  var i = 0\n  var r = []\n  var instruction, quantifier, word, precisionBits, exponentBits, extraNullCount\n\n  // vars used by float encoding\n  var bias\n  var minExp\n  var maxExp\n  var minUnnormExp\n  var status\n  var exp\n  var len\n  var bin\n  var signal\n  var n\n  var intPart\n  var floatPart\n  var lastBit\n  var rounded\n  var j\n  var k\n  var tmpResult\n\n  while (formatPointer < format.length) {\n    instruction = format.charAt(formatPointer)\n    quantifier = ''\n    formatPointer++\n    while ((formatPointer < format.length) && (format.charAt(formatPointer)\n        .match(/[\\d\\*]/) !== null)) {\n      quantifier += format.charAt(formatPointer)\n      formatPointer++\n    }\n    if (quantifier === '') {\n      quantifier = '1'\n    }\n\n    // Now pack variables: 'quantifier' times 'instruction'\n    switch (instruction) {\n      case 'a':\n      case 'A':\n        // NUL-padded string\n        // SPACE-padded string\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning:  pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = String(arguments[argumentPointer])\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (typeof argument[i] === 'undefined') {\n            if (instruction === 'a') {\n              result += String.fromCharCode(0)\n            } else {\n              result += ' '\n            }\n          } else {\n            result += argument[i]\n          }\n        }\n        argumentPointer++\n        break\n      case 'h':\n      case 'H':\n        // Hex string, low nibble first\n        // Hex string, high nibble first\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning: pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = arguments[argumentPointer]\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        if (quantifier > argument.length) {\n          var msg = 'Warning: pack() Type ' + instruction + ': not enough characters in string'\n          throw new Error(msg)\n        }\n\n        for (i = 0; i < quantifier; i += 2) {\n          // Always get per 2 bytes...\n          word = argument[i]\n          if (((i + 1) >= quantifier) || typeof argument[i + 1] === 'undefined') {\n            word += '0'\n          } else {\n            word += argument[i + 1]\n          }\n          // The fastest way to reverse?\n          if (instruction === 'h') {\n            word = word[1] + word[0]\n          }\n          result += String.fromCharCode(parseInt(word, 16))\n        }\n        argumentPointer++\n        break\n\n      case 'c':\n      case 'C':\n        // signed char\n        // unsigned char\n        // c and C is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer])\n          argumentPointer++\n        }\n        break\n\n      case 's':\n      case 'S':\n      case 'v':\n        // signed short (always 16 bit, machine byte order)\n        // unsigned short (always 16 bit, machine byte order)\n        // s and S is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'n':\n        // unsigned short (always 16 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning: pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'i':\n      case 'I':\n      case 'l':\n      case 'L':\n      case 'V':\n        // signed integer (machine dependent size and byte order)\n        // unsigned integer (machine dependent size and byte order)\n        // signed long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, little endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          argumentPointer++\n        }\n\n        break\n      case 'N':\n        // unsigned long (always 32 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'f':\n      case 'd':\n        // float (machine dependent size and representation)\n        // double (machine dependent size and representation)\n        // version based on IEEE754\n        precisionBits = 23\n        exponentBits = 8\n        if (instruction === 'd') {\n          precisionBits = 52\n          exponentBits = 11\n        }\n\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n        for (i = 0; i < quantifier; i++) {\n          argument = arguments[argumentPointer]\n          bias = Math.pow(2, exponentBits - 1) - 1\n          minExp = -bias + 1\n          maxExp = bias\n          minUnnormExp = minExp - precisionBits\n          status = isNaN(n = parseFloat(argument)) || n === -Infinity || n === +Infinity ? n : 0\n          exp = 0\n          len = 2 * bias + 1 + precisionBits + 3\n          bin = new Array(len)\n          signal = (n = status !== 0 ? 0 : n) < 0\n          n = Math.abs(n)\n          intPart = Math.floor(n)\n          floatPart = n - intPart\n\n          for (k = len; k;) {\n            bin[--k] = 0\n          }\n          for (k = bias + 2; intPart && k;) {\n            bin[--k] = intPart % 2\n            intPart = Math.floor(intPart / 2)\n          }\n          for (k = bias + 1; floatPart > 0 && k; --floatPart) {\n            (bin[++k] = ((floatPart *= 2) >= 1) - 0)\n          }\n          for (k = -1; ++k < len && !bin[k];) {}\n\n          // @todo: Make this more readable:\n          var key = (lastBit = precisionBits - 1 +\n            (k =\n              (exp = bias + 1 - k) >= minExp &&\n              exp <= 1=\"\" maxexp=\"\" ?=\"\" k=\"\" +=\"\" :=\"\" bias=\"\" -=\"\" (exp=\"minExp\" 1)))=\"\" if=\"\" (bin[key])=\"\" {=\"\" (!(rounded=\"bin[lastBit]))\" for=\"\" (j=\"lastBit\" 2;=\"\" !rounded=\"\" &&=\"\" j=\"\" <=\"\" len;=\"\" rounded=\"bin[j++])\" {}=\"\" }=\"\" 1;=\"\" --j=\"\">= 0;\n            (bin[j] = !bin[j] - 0) && (rounded = 0)) {}\n          }\n\n          for (k = k - 2 < 0 ? -1 : k - 3; ++k < len && !bin[k];) {}\n\n          if ((exp = bias + 1 - k) >= minExp && exp <= 1=\"\" 2=\"\" maxexp)=\"\" {=\"\" ++k=\"\" }=\"\" else=\"\" if=\"\" (exp=\"\" <=\"\" minexp)=\"\" !=\"=\" bias=\"\" +=\"\" -=\"\" len=\"\" &&=\"\" exp=\"\" minunnormexp)=\"\" \"encodefloat::float=\"\" underflow\"=\"\" k=\"bias\" 1)=\"\" (intpart=\"\" ||=\"\" status=\"\" 0)=\"\" (status=\"==\" -infinity)=\"\" signal=\"1\" (isnan(status))=\"\" bin[k]=\"1\" n=\"Math.abs(exp\" bias)=\"\" tmpresult=\"\" for=\"\" (j=\"exponentBits\" 1;=\"\" --j;)=\"\" %=\"\" 2)=\"\">>= 1\n          }\n\n          n = 0\n          j = 0\n          k = (tmpResult = (signal ? '1' : '0') + tmpResult + (bin\n            .slice(k, k + precisionBits)\n            .join(''))\n          ).length\n          r = []\n\n          for (; k;) {\n            n += (1 << j) * tmpResult.charAt(--k)\n            if (j === 7) {\n              r[r.length] = String.fromCharCode(n)\n              n = 0\n            }\n            j = (j + 1) % 8\n          }\n\n          r[r.length] = n ? String.fromCharCode(n) : ''\n          result += r.join('')\n          argumentPointer++\n        }\n        break\n\n      case 'x':\n        // NUL byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type x: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(0)\n        }\n        break\n\n      case 'X':\n        // Back up one byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (result.length === 0) {\n            throw new Error('Warning: pack(): Type X:' + ' outside of string')\n          } else {\n            result = result.substring(0, result.length - 1)\n          }\n        }\n        break\n\n      case '@':\n        // NUL-fill to absolute position\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        if (quantifier > result.length) {\n          extraNullCount = quantifier - result.length\n          for (i = 0; i < extraNullCount; i++) {\n            result += String.fromCharCode(0)\n          }\n        }\n        if (quantifier < result.length) {\n          result = result.substring(0, quantifier)\n        }\n        break\n\n      default:\n        throw new Error('Warning: pack() Type ' + instruction + ': unknown format code')\n    }\n  }\n  if (argumentPointer < arguments.length) {\n    var msg2 = 'Warning: pack(): ' + (arguments.length - argumentPointer) + ' arguments unused'\n    throw new Error(msg2)\n  }\n\n  return result\n}\n</=></=>","excerpt":"","more":"module.exports = function pack (format) {\n  //  discuss at: http://locutusjs.io/php/pack/\n  // original by: Tim de Koning (http://www.kingsquare.nl)\n  //    parts by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Tim de Koning (http://www.kingsquare.nl)\n  //      note 1: Float encoding by: Jonas Raoni Soares Silva\n  //      note 1: Home: http://www.kingsquare.nl/blog/12-12-2009/13507444\n  //      note 1: Feedback: phpjs-pack@kingsquare.nl\n  //      note 1: \"machine dependent byte order and size\" aren't\n  //      note 1: applicable for JavaScript; pack works as on a 32bit,\n  //      note 1: little endian machine.\n  //   example 1: pack('nvc*', 0x1234, 0x5678, 65, 66)\n  //   returns 1: '\\u00124xVAB'\n  //   example 2: pack('H4', '2345')\n  //   returns 2: '#E'\n  //   example 3: pack('H*', 'D5')\n  //   returns 3: 'Õ'\n  //   example 4: pack('d', -100.876)\n  //   returns 4: \"\\u0000\\u0000\\u0000\\u0000\\u00008YÀ\"\n  //        test: skip-1\n\n  var formatPointer = 0\n  var argumentPointer = 1\n  var result = ''\n  var argument = ''\n  var i = 0\n  var r = []\n  var instruction, quantifier, word, precisionBits, exponentBits, extraNullCount\n\n  // vars used by float encoding\n  var bias\n  var minExp\n  var maxExp\n  var minUnnormExp\n  var status\n  var exp\n  var len\n  var bin\n  var signal\n  var n\n  var intPart\n  var floatPart\n  var lastBit\n  var rounded\n  var j\n  var k\n  var tmpResult\n\n  while (formatPointer < format.length) {\n    instruction = format.charAt(formatPointer)\n    quantifier = ''\n    formatPointer++\n    while ((formatPointer < format.length) && (format.charAt(formatPointer)\n        .match(/[\\d\\*]/) !== null)) {\n      quantifier += format.charAt(formatPointer)\n      formatPointer++\n    }\n    if (quantifier === '') {\n      quantifier = '1'\n    }\n\n    // Now pack variables: 'quantifier' times 'instruction'\n    switch (instruction) {\n      case 'a':\n      case 'A':\n        // NUL-padded string\n        // SPACE-padded string\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning:  pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = String(arguments[argumentPointer])\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (typeof argument[i] === 'undefined') {\n            if (instruction === 'a') {\n              result += String.fromCharCode(0)\n            } else {\n              result += ' '\n            }\n          } else {\n            result += argument[i]\n          }\n        }\n        argumentPointer++\n        break\n      case 'h':\n      case 'H':\n        // Hex string, low nibble first\n        // Hex string, high nibble first\n        if (typeof arguments[argumentPointer] === 'undefined') {\n          throw new Error('Warning: pack() Type ' + instruction + ': not enough arguments')\n        } else {\n          argument = arguments[argumentPointer]\n        }\n        if (quantifier === '*') {\n          quantifier = argument.length\n        }\n        if (quantifier > argument.length) {\n          var msg = 'Warning: pack() Type ' + instruction + ': not enough characters in string'\n          throw new Error(msg)\n        }\n\n        for (i = 0; i < quantifier; i += 2) {\n          // Always get per 2 bytes...\n          word = argument[i]\n          if (((i + 1) >= quantifier) || typeof argument[i + 1] === 'undefined') {\n            word += '0'\n          } else {\n            word += argument[i + 1]\n          }\n          // The fastest way to reverse?\n          if (instruction === 'h') {\n            word = word[1] + word[0]\n          }\n          result += String.fromCharCode(parseInt(word, 16))\n        }\n        argumentPointer++\n        break\n\n      case 'c':\n      case 'C':\n        // signed char\n        // unsigned char\n        // c and C is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer])\n          argumentPointer++\n        }\n        break\n\n      case 's':\n      case 'S':\n      case 'v':\n        // signed short (always 16 bit, machine byte order)\n        // unsigned short (always 16 bit, machine byte order)\n        // s and S is the same in pack\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'n':\n        // unsigned short (always 16 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning: pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'i':\n      case 'I':\n      case 'l':\n      case 'L':\n      case 'V':\n        // signed integer (machine dependent size and byte order)\n        // unsigned integer (machine dependent size and byte order)\n        // signed long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, machine byte order)\n        // unsigned long (always 32 bit, little endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          argumentPointer++\n        }\n\n        break\n      case 'N':\n        // unsigned long (always 32 bit, big endian byte order)\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(arguments[argumentPointer] >> 24 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 16 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] >> 8 & 0xFF)\n          result += String.fromCharCode(arguments[argumentPointer] & 0xFF)\n          argumentPointer++\n        }\n        break\n\n      case 'f':\n      case 'd':\n        // float (machine dependent size and representation)\n        // double (machine dependent size and representation)\n        // version based on IEEE754\n        precisionBits = 23\n        exponentBits = 8\n        if (instruction === 'd') {\n          precisionBits = 52\n          exponentBits = 11\n        }\n\n        if (quantifier === '*') {\n          quantifier = arguments.length - argumentPointer\n        }\n        if (quantifier > (arguments.length - argumentPointer)) {\n          throw new Error('Warning:  pack() Type ' + instruction + ': too few arguments')\n        }\n        for (i = 0; i < quantifier; i++) {\n          argument = arguments[argumentPointer]\n          bias = Math.pow(2, exponentBits - 1) - 1\n          minExp = -bias + 1\n          maxExp = bias\n          minUnnormExp = minExp - precisionBits\n          status = isNaN(n = parseFloat(argument)) || n === -Infinity || n === +Infinity ? n : 0\n          exp = 0\n          len = 2 * bias + 1 + precisionBits + 3\n          bin = new Array(len)\n          signal = (n = status !== 0 ? 0 : n) < 0\n          n = Math.abs(n)\n          intPart = Math.floor(n)\n          floatPart = n - intPart\n\n          for (k = len; k;) {\n            bin[--k] = 0\n          }\n          for (k = bias + 2; intPart && k;) {\n            bin[--k] = intPart % 2\n            intPart = Math.floor(intPart / 2)\n          }\n          for (k = bias + 1; floatPart > 0 && k; --floatPart) {\n            (bin[++k] = ((floatPart *= 2) >= 1) - 0)\n          }\n          for (k = -1; ++k < len && !bin[k];) {}\n\n          // @todo: Make this more readable:\n          var key = (lastBit = precisionBits - 1 +\n            (k =\n              (exp = bias + 1 - k) >= minExp &&\n              exp <= maxExp ? k + 1 : bias + 1 - (exp = minExp - 1))) + 1\n\n          if (bin[key]) {\n            if (!(rounded = bin[lastBit])) {\n              for (j = lastBit + 2; !rounded && j < len; rounded = bin[j++]) {}\n            }\n            for (j = lastBit + 1; rounded && --j >= 0;\n            (bin[j] = !bin[j] - 0) && (rounded = 0)) {}\n          }\n\n          for (k = k - 2 < 0 ? -1 : k - 3; ++k < len && !bin[k];) {}\n\n          if ((exp = bias + 1 - k) >= minExp && exp <= maxExp) {\n            ++k\n          } else {\n            if (exp < minExp) {\n              if (exp !== bias + 1 - len && exp < minUnnormExp) {\n                // \"encodeFloat::float underflow\"\n              }\n              k = bias + 1 - (exp = minExp - 1)\n            }\n          }\n\n          if (intPart || status !== 0) {\n            exp = maxExp + 1\n            k = bias + 2\n            if (status === -Infinity) {\n              signal = 1\n            } else if (isNaN(status)) {\n              bin[k] = 1\n            }\n          }\n\n          n = Math.abs(exp + bias)\n          tmpResult = ''\n\n          for (j = exponentBits + 1; --j;) {\n            tmpResult = (n % 2) + tmpResult\n            n = n >>= 1\n          }\n\n          n = 0\n          j = 0\n          k = (tmpResult = (signal ? '1' : '0') + tmpResult + (bin\n            .slice(k, k + precisionBits)\n            .join(''))\n          ).length\n          r = []\n\n          for (; k;) {\n            n += (1 << j) * tmpResult.charAt(--k)\n            if (j === 7) {\n              r[r.length] = String.fromCharCode(n)\n              n = 0\n            }\n            j = (j + 1) % 8\n          }\n\n          r[r.length] = n ? String.fromCharCode(n) : ''\n          result += r.join('')\n          argumentPointer++\n        }\n        break\n\n      case 'x':\n        // NUL byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type x: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          result += String.fromCharCode(0)\n        }\n        break\n\n      case 'X':\n        // Back up one byte\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        for (i = 0; i < quantifier; i++) {\n          if (result.length === 0) {\n            throw new Error('Warning: pack(): Type X:' + ' outside of string')\n          } else {\n            result = result.substring(0, result.length - 1)\n          }\n        }\n        break\n\n      case '@':\n        // NUL-fill to absolute position\n        if (quantifier === '*') {\n          throw new Error('Warning: pack(): Type X: \\'*\\' ignored')\n        }\n        if (quantifier > result.length) {\n          extraNullCount = quantifier - result.length\n          for (i = 0; i < extraNullCount; i++) {\n            result += String.fromCharCode(0)\n          }\n        }\n        if (quantifier < result.length) {\n          result = result.substring(0, quantifier)\n        }\n        break\n\n      default:\n        throw new Error('Warning: pack() Type ' + instruction + ': unknown format code')\n    }\n  }\n  if (argumentPointer < arguments.length) {\n    var msg2 = 'Warning: pack(): ' + (arguments.length - argumentPointer) + ' arguments unused'\n    throw new Error(msg2)\n  }\n\n  return result\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $id = uniqid()\nvar $result = $id.length === 13","var $id = uniqid('foo')\nvar $result = $id.length === (13 + 'foo'.length)","var $id = uniqid('bar', true)\nvar $result = $id.length === (23 + 'bar'.length)"],"estarget":"es5","returns":["true","true","true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"revised by":["Kankrelune (http://www.webfaktory.info/)"]},"notes":["Uses an internal counter (in locutus global) to avoid collision"],"layout":"function","title":"php'suniqid in JavaScript","function":"uniqid","category":"misc","language":"php","alias":["/functions/php/uniqid/","/functions/misc/uniqid/","/php/uniqid/","/functions/uniqid/"],"_content":"module.exports = function uniqid (prefix, moreEntropy) {\n  //  discuss at: http://locutusjs.io/php/uniqid/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kankrelune (http://www.webfaktory.info/)\n  //      note 1: Uses an internal counter (in locutus global) to avoid collision\n  //   example 1: var $id = uniqid()\n  //   example 1: var $result = $id.length === 13\n  //   returns 1: true\n  //   example 2: var $id = uniqid('foo')\n  //   example 2: var $result = $id.length === (13 + 'foo'.length)\n  //   returns 2: true\n  //   example 3: var $id = uniqid('bar', true)\n  //   example 3: var $result = $id.length === (23 + 'bar'.length)\n  //   returns 3: true\n\n  if (typeof prefix === 'undefined') {\n    prefix = ''\n  }\n\n  var retId\n  var _formatSeed = function (seed, reqWidth) {\n    seed = parseInt(seed, 10).toString(16) // to hex str\n    if (reqWidth < seed.length) {\n      // so long we split\n      return seed.slice(seed.length - reqWidth)\n    }\n    if (reqWidth > seed.length) {\n      // so short we pad\n      return Array(1 + (reqWidth - seed.length)).join('0') + seed\n    }\n    return seed\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!$locutus.php.uniqidSeed) {\n    // init seed with big random int\n    $locutus.php.uniqidSeed = Math.floor(Math.random() * 0x75bcd15)\n  }\n  $locutus.php.uniqidSeed++\n\n  // start with prefix, add current milliseconds hex string\n  retId = prefix\n  retId += _formatSeed(parseInt(new Date().getTime() / 1000, 10), 8)\n  // add seed hex string\n  retId += _formatSeed($locutus.php.uniqidSeed, 5)\n  if (moreEntropy) {\n    // for more entropy we add a float lower to 10\n    retId += (Math.random() * 10).toFixed(8).toString()\n  }\n\n  return retId\n}\n","source":"php/misc/uniqid.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $id = uniqid()\n    var $result = $id.length === 13\n  - |-\n    var $id = uniqid('foo')\n    var $result = $id.length === (13 + 'foo'.length)\n  - |-\n    var $id = uniqid('bar', true)\n    var $result = $id.length === (23 + 'bar'.length)\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - 'Kankrelune (http://www.webfaktory.info/)'\nnotes:\n  - Uses an internal counter (in locutus global) to avoid collision\nlayout: function\ntitle: php'suniqid in JavaScript\nfunction: uniqid\ncategory: misc\nlanguage: php\npermalink: php/misc/uniqid/\nalias:\n  - /functions/php/uniqid/\n  - /functions/misc/uniqid/\n  - /php/uniqid/\n  - /functions/uniqid/\n---\nmodule.exports = function uniqid (prefix, moreEntropy) {\n  //  discuss at: http://locutusjs.io/php/uniqid/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kankrelune (http://www.webfaktory.info/)\n  //      note 1: Uses an internal counter (in locutus global) to avoid collision\n  //   example 1: var $id = uniqid()\n  //   example 1: var $result = $id.length === 13\n  //   returns 1: true\n  //   example 2: var $id = uniqid('foo')\n  //   example 2: var $result = $id.length === (13 + 'foo'.length)\n  //   returns 2: true\n  //   example 3: var $id = uniqid('bar', true)\n  //   example 3: var $result = $id.length === (23 + 'bar'.length)\n  //   returns 3: true\n\n  if (typeof prefix === 'undefined') {\n    prefix = ''\n  }\n\n  var retId\n  var _formatSeed = function (seed, reqWidth) {\n    seed = parseInt(seed, 10).toString(16) // to hex str\n    if (reqWidth < seed.length) {\n      // so long we split\n      return seed.slice(seed.length - reqWidth)\n    }\n    if (reqWidth > seed.length) {\n      // so short we pad\n      return Array(1 + (reqWidth - seed.length)).join('0') + seed\n    }\n    return seed\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!$locutus.php.uniqidSeed) {\n    // init seed with big random int\n    $locutus.php.uniqidSeed = Math.floor(Math.random() * 0x75bcd15)\n  }\n  $locutus.php.uniqidSeed++\n\n  // start with prefix, add current milliseconds hex string\n  retId = prefix\n  retId += _formatSeed(parseInt(new Date().getTime() / 1000, 10), 8)\n  // add seed hex string\n  retId += _formatSeed($locutus.php.uniqidSeed, 5)\n  if (moreEntropy) {\n    // for more entropy we add a float lower to 10\n    retId += (Math.random() * 10).toFixed(8).toString()\n  }\n\n  return retId\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/misc/uniqid/index.html","comments":1,"_id":"cinoeja0h0042ou9yqczcht8r","content":"module.exports = function uniqid (prefix, moreEntropy) {\n  //  discuss at: http://locutusjs.io/php/uniqid/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kankrelune (http://www.webfaktory.info/)\n  //      note 1: Uses an internal counter (in locutus global) to avoid collision\n  //   example 1: var $id = uniqid()\n  //   example 1: var $result = $id.length === 13\n  //   returns 1: true\n  //   example 2: var $id = uniqid('foo')\n  //   example 2: var $result = $id.length === (13 + 'foo'.length)\n  //   returns 2: true\n  //   example 3: var $id = uniqid('bar', true)\n  //   example 3: var $result = $id.length === (23 + 'bar'.length)\n  //   returns 3: true\n\n  if (typeof prefix === 'undefined') {\n    prefix = ''\n  }\n\n  var retId\n  var _formatSeed = function (seed, reqWidth) {\n    seed = parseInt(seed, 10).toString(16) // to hex str\n    if (reqWidth < seed.length) {\n      // so long we split\n      return seed.slice(seed.length - reqWidth)\n    }\n    if (reqWidth > seed.length) {\n      // so short we pad\n      return Array(1 + (reqWidth - seed.length)).join('0') + seed\n    }\n    return seed\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!$locutus.php.uniqidSeed) {\n    // init seed with big random int\n    $locutus.php.uniqidSeed = Math.floor(Math.random() * 0x75bcd15)\n  }\n  $locutus.php.uniqidSeed++\n\n  // start with prefix, add current milliseconds hex string\n  retId = prefix\n  retId += _formatSeed(parseInt(new Date().getTime() / 1000, 10), 8)\n  // add seed hex string\n  retId += _formatSeed($locutus.php.uniqidSeed, 5)\n  if (moreEntropy) {\n    // for more entropy we add a float lower to 10\n    retId += (Math.random() * 10).toFixed(8).toString()\n  }\n\n  return retId\n}\n","excerpt":"","more":"module.exports = function uniqid (prefix, moreEntropy) {\n  //  discuss at: http://locutusjs.io/php/uniqid/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kankrelune (http://www.webfaktory.info/)\n  //      note 1: Uses an internal counter (in locutus global) to avoid collision\n  //   example 1: var $id = uniqid()\n  //   example 1: var $result = $id.length === 13\n  //   returns 1: true\n  //   example 2: var $id = uniqid('foo')\n  //   example 2: var $result = $id.length === (13 + 'foo'.length)\n  //   returns 2: true\n  //   example 3: var $id = uniqid('bar', true)\n  //   example 3: var $result = $id.length === (23 + 'bar'.length)\n  //   returns 3: true\n\n  if (typeof prefix === 'undefined') {\n    prefix = ''\n  }\n\n  var retId\n  var _formatSeed = function (seed, reqWidth) {\n    seed = parseInt(seed, 10).toString(16) // to hex str\n    if (reqWidth < seed.length) {\n      // so long we split\n      return seed.slice(seed.length - reqWidth)\n    }\n    if (reqWidth > seed.length) {\n      // so short we pad\n      return Array(1 + (reqWidth - seed.length)).join('0') + seed\n    }\n    return seed\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!$locutus.php.uniqidSeed) {\n    // init seed with big random int\n    $locutus.php.uniqidSeed = Math.floor(Math.random() * 0x75bcd15)\n  }\n  $locutus.php.uniqidSeed++\n\n  // start with prefix, add current milliseconds hex string\n  retId = prefix\n  retId += _formatSeed(parseInt(new Date().getTime() / 1000, 10), 8)\n  // add seed hex string\n  retId += _formatSeed($locutus.php.uniqidSeed, 5)\n  if (moreEntropy) {\n    // for more entropy we add a float lower to 10\n    retId += (Math.random() * 10).toFixed(8).toString()\n  }\n\n  return retId\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["abs(4.2)","abs(-4.2)","abs(-5)","abs('_argos')"],"estarget":"es5","returns":["4.2","4.2","5","0"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"],"improved by":["Karol Kowalski","Kevin van Zonneveld (http://kvz.io)","Jonas Raoni Soares Silva (http://www.jsfromhell.com)"]},"notes":[],"layout":"function","title":"php'sabs in JavaScript","function":"abs","category":"math","language":"php","alias":["/functions/php/abs/","/functions/math/abs/","/php/abs/","/functions/abs/"],"_content":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/php/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","source":"php/math/abs.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - abs(4.2)\n  - abs(-4.2)\n  - abs(-5)\n  - abs('_argos')\nestarget: es5\nreturns:\n  - '4.2'\n  - '4.2'\n  - '5'\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n  improved by:\n    - Karol Kowalski\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\nnotes: []\nlayout: function\ntitle: php'sabs in JavaScript\nfunction: abs\ncategory: math\nlanguage: php\npermalink: php/math/abs/\nalias:\n  - /functions/php/abs/\n  - /functions/math/abs/\n  - /php/abs/\n  - /functions/abs/\n---\nmodule.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/php/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/abs/index.html","comments":1,"_id":"cinoeja0i0043ou9y40vpmvvj","content":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/php/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n","excerpt":"","more":"module.exports = function abs (mixedNumber) {\n  //  discuss at: http://locutusjs.io/php/abs/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Karol Kowalski\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //   example 1: abs(4.2)\n  //   returns 1: 4.2\n  //   example 2: abs(-4.2)\n  //   returns 2: 4.2\n  //   example 3: abs(-5)\n  //   returns 3: 5\n  //   example 4: abs('_argos')\n  //   returns 4: 0\n\n  return Math.abs(mixedNumber) || 0\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["(acos(0.3) + '').substr(0, 17)"],"estarget":"es5","returns":["\"1.266103672779499\""],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Sorry about the crippled test. Needed because precision differs accross platforms."],"layout":"function","title":"php'sacos in JavaScript","function":"acos","category":"math","language":"php","alias":["/functions/php/acos/","/functions/math/acos/","/php/acos/","/functions/acos/"],"_content":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/php/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: \"1.266103672779499\"\n\n  return Math.acos(arg)\n}\n","source":"php/math/acos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - '(acos(0.3) + '''').substr(0, 17)'\nestarget: es5\nreturns:\n  - '\"1.266103672779499\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - >-\n    Sorry about the crippled test. Needed because precision differs accross\n    platforms.\nlayout: function\ntitle: php'sacos in JavaScript\nfunction: acos\ncategory: math\nlanguage: php\npermalink: php/math/acos/\nalias:\n  - /functions/php/acos/\n  - /functions/math/acos/\n  - /php/acos/\n  - /functions/acos/\n---\nmodule.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/php/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: \"1.266103672779499\"\n\n  return Math.acos(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/acos/index.html","comments":1,"_id":"cinoeja0i0044ou9ymxm1zou5","content":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/php/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: \"1.266103672779499\"\n\n  return Math.acos(arg)\n}\n","excerpt":"","more":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/php/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: \"1.266103672779499\"\n\n  return Math.acos(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["acosh(8723321.4)"],"estarget":"es5","returns":["16.674657798418625"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sacosh in JavaScript","function":"acosh","category":"math","language":"php","alias":["/functions/php/acosh/","/functions/math/acosh/","/php/acosh/","/functions/acosh/"],"_content":"module.exports = function acosh (arg) {\n  //  discuss at: http://locutusjs.io/php/acosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: acosh(8723321.4)\n  //   returns 1: 16.674657798418625\n\n  return Math.log(arg + Math.sqrt(arg * arg - 1))\n}\n","source":"php/math/acosh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - acosh(8723321.4)\nestarget: es5\nreturns:\n  - '16.674657798418625'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sacosh in JavaScript\nfunction: acosh\ncategory: math\nlanguage: php\npermalink: php/math/acosh/\nalias:\n  - /functions/php/acosh/\n  - /functions/math/acosh/\n  - /php/acosh/\n  - /functions/acosh/\n---\nmodule.exports = function acosh (arg) {\n  //  discuss at: http://locutusjs.io/php/acosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: acosh(8723321.4)\n  //   returns 1: 16.674657798418625\n\n  return Math.log(arg + Math.sqrt(arg * arg - 1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/acosh/index.html","comments":1,"_id":"cinoeja0i0045ou9yqg7gdqn3","content":"module.exports = function acosh (arg) {\n  //  discuss at: http://locutusjs.io/php/acosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: acosh(8723321.4)\n  //   returns 1: 16.674657798418625\n\n  return Math.log(arg + Math.sqrt(arg * arg - 1))\n}\n","excerpt":"","more":"module.exports = function acosh (arg) {\n  //  discuss at: http://locutusjs.io/php/acosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: acosh(8723321.4)\n  //   returns 1: 16.674657798418625\n\n  return Math.log(arg + Math.sqrt(arg * arg - 1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["(asin(0.3) + '').substr(0, 17)"],"estarget":"es5","returns":["\"0.304692654015397\""],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Sorry about the crippled test. Needed because precision differs accross platforms."],"layout":"function","title":"php'sasin in JavaScript","function":"asin","category":"math","language":"php","alias":["/functions/php/asin/","/functions/math/asin/","/php/asin/","/functions/asin/"],"_content":"module.exports = function asin (arg) {\n  //  discuss at: http://locutusjs.io/php/asin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (asin(0.3) + '').substr(0, 17)\n  //   returns 1: \"0.304692654015397\"\n\n  return Math.asin(arg)\n}\n","source":"php/math/asin.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - '(asin(0.3) + '''').substr(0, 17)'\nestarget: es5\nreturns:\n  - '\"0.304692654015397\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - >-\n    Sorry about the crippled test. Needed because precision differs accross\n    platforms.\nlayout: function\ntitle: php'sasin in JavaScript\nfunction: asin\ncategory: math\nlanguage: php\npermalink: php/math/asin/\nalias:\n  - /functions/php/asin/\n  - /functions/math/asin/\n  - /php/asin/\n  - /functions/asin/\n---\nmodule.exports = function asin (arg) {\n  //  discuss at: http://locutusjs.io/php/asin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (asin(0.3) + '').substr(0, 17)\n  //   returns 1: \"0.304692654015397\"\n\n  return Math.asin(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/asin/index.html","comments":1,"_id":"cinoeja0j0046ou9yehwlouvh","content":"module.exports = function asin (arg) {\n  //  discuss at: http://locutusjs.io/php/asin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (asin(0.3) + '').substr(0, 17)\n  //   returns 1: \"0.304692654015397\"\n\n  return Math.asin(arg)\n}\n","excerpt":"","more":"module.exports = function asin (arg) {\n  //  discuss at: http://locutusjs.io/php/asin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test. Needed because precision differs accross platforms.\n  //   example 1: (asin(0.3) + '').substr(0, 17)\n  //   returns 1: \"0.304692654015397\"\n\n  return Math.asin(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["asinh(8723321.4)"],"estarget":"es5","returns":["16.67465779841863"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sasinh in JavaScript","function":"asinh","category":"math","language":"php","alias":["/functions/php/asinh/","/functions/math/asinh/","/php/asinh/","/functions/asinh/"],"_content":"module.exports = function asinh (arg) {\n  //  discuss at: http://locutusjs.io/php/asinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: asinh(8723321.4)\n  //   returns 1: 16.67465779841863\n\n  return Math.log(arg + Math.sqrt(arg * arg + 1))\n}\n","source":"php/math/asinh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - asinh(8723321.4)\nestarget: es5\nreturns:\n  - '16.67465779841863'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sasinh in JavaScript\nfunction: asinh\ncategory: math\nlanguage: php\npermalink: php/math/asinh/\nalias:\n  - /functions/php/asinh/\n  - /functions/math/asinh/\n  - /php/asinh/\n  - /functions/asinh/\n---\nmodule.exports = function asinh (arg) {\n  //  discuss at: http://locutusjs.io/php/asinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: asinh(8723321.4)\n  //   returns 1: 16.67465779841863\n\n  return Math.log(arg + Math.sqrt(arg * arg + 1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/asinh/index.html","comments":1,"_id":"cinoeja0j0047ou9ydsw8r4ur","content":"module.exports = function asinh (arg) {\n  //  discuss at: http://locutusjs.io/php/asinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: asinh(8723321.4)\n  //   returns 1: 16.67465779841863\n\n  return Math.log(arg + Math.sqrt(arg * arg + 1))\n}\n","excerpt":"","more":"module.exports = function asinh (arg) {\n  //  discuss at: http://locutusjs.io/php/asinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: asinh(8723321.4)\n  //   returns 1: 16.67465779841863\n\n  return Math.log(arg + Math.sqrt(arg * arg + 1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["atan(8723321.4)"],"estarget":"es5","returns":["1.5707962121596615"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'satan in JavaScript","function":"atan","category":"math","language":"php","alias":["/functions/php/atan/","/functions/math/atan/","/php/atan/","/functions/atan/"],"_content":"module.exports = function atan (arg) {\n  //  discuss at: http://locutusjs.io/php/atan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atan(8723321.4)\n  //   returns 1: 1.5707962121596615\n\n  return Math.atan(arg)\n}\n","source":"php/math/atan.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - atan(8723321.4)\nestarget: es5\nreturns:\n  - '1.5707962121596615'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'satan in JavaScript\nfunction: atan\ncategory: math\nlanguage: php\npermalink: php/math/atan/\nalias:\n  - /functions/php/atan/\n  - /functions/math/atan/\n  - /php/atan/\n  - /functions/atan/\n---\nmodule.exports = function atan (arg) {\n  //  discuss at: http://locutusjs.io/php/atan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atan(8723321.4)\n  //   returns 1: 1.5707962121596615\n\n  return Math.atan(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/atan/index.html","comments":1,"_id":"cinoeja0j0048ou9y0bipbp1a","content":"module.exports = function atan (arg) {\n  //  discuss at: http://locutusjs.io/php/atan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atan(8723321.4)\n  //   returns 1: 1.5707962121596615\n\n  return Math.atan(arg)\n}\n","excerpt":"","more":"module.exports = function atan (arg) {\n  //  discuss at: http://locutusjs.io/php/atan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atan(8723321.4)\n  //   returns 1: 1.5707962121596615\n\n  return Math.atan(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["atan2(1, 1)"],"estarget":"es5","returns":["0.7853981633974483"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'satan2 in JavaScript","function":"atan2","category":"math","language":"php","alias":["/functions/php/atan2/","/functions/math/atan2/","/php/atan2/","/functions/atan2/"],"_content":"module.exports = function atan2 (y, x) {\n  //  discuss at: http://locutusjs.io/php/atan2/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: atan2(1, 1)\n  //   returns 1: 0.7853981633974483\n\n  return Math.atan2(y, x)\n}\n","source":"php/math/atan2.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'atan2(1, 1)'\nestarget: es5\nreturns:\n  - '0.7853981633974483'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'satan2 in JavaScript\nfunction: atan2\ncategory: math\nlanguage: php\npermalink: php/math/atan2/\nalias:\n  - /functions/php/atan2/\n  - /functions/math/atan2/\n  - /php/atan2/\n  - /functions/atan2/\n---\nmodule.exports = function atan2 (y, x) {\n  //  discuss at: http://locutusjs.io/php/atan2/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: atan2(1, 1)\n  //   returns 1: 0.7853981633974483\n\n  return Math.atan2(y, x)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/atan2/index.html","comments":1,"_id":"cinoeja0k0049ou9y7yx0gzhl","content":"module.exports = function atan2 (y, x) {\n  //  discuss at: http://locutusjs.io/php/atan2/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: atan2(1, 1)\n  //   returns 1: 0.7853981633974483\n\n  return Math.atan2(y, x)\n}\n","excerpt":"","more":"module.exports = function atan2 (y, x) {\n  //  discuss at: http://locutusjs.io/php/atan2/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: atan2(1, 1)\n  //   returns 1: 0.7853981633974483\n\n  return Math.atan2(y, x)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["atanh(0.3)"],"estarget":"es5","returns":["0.3095196042031118"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'satanh in JavaScript","function":"atanh","category":"math","language":"php","alias":["/functions/php/atanh/","/functions/math/atanh/","/php/atanh/","/functions/atanh/"],"_content":"module.exports = function atanh (arg) {\n  //  discuss at: http://locutusjs.io/php/atanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atanh(0.3)\n  //   returns 1: 0.3095196042031118\n\n  return 0.5 * Math.log((1 + arg) / (1 - arg))\n}\n","source":"php/math/atanh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - atanh(0.3)\nestarget: es5\nreturns:\n  - '0.3095196042031118'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'satanh in JavaScript\nfunction: atanh\ncategory: math\nlanguage: php\npermalink: php/math/atanh/\nalias:\n  - /functions/php/atanh/\n  - /functions/math/atanh/\n  - /php/atanh/\n  - /functions/atanh/\n---\nmodule.exports = function atanh (arg) {\n  //  discuss at: http://locutusjs.io/php/atanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atanh(0.3)\n  //   returns 1: 0.3095196042031118\n\n  return 0.5 * Math.log((1 + arg) / (1 - arg))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/atanh/index.html","comments":1,"_id":"cinoeja0k004aou9yx6jcicnq","content":"module.exports = function atanh (arg) {\n  //  discuss at: http://locutusjs.io/php/atanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atanh(0.3)\n  //   returns 1: 0.3095196042031118\n\n  return 0.5 * Math.log((1 + arg) / (1 - arg))\n}\n","excerpt":"","more":"module.exports = function atanh (arg) {\n  //  discuss at: http://locutusjs.io/php/atanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: atanh(0.3)\n  //   returns 1: 0.3095196042031118\n\n  return 0.5 * Math.log((1 + arg) / (1 - arg))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["base_convert('A37334', 16, 2)"],"estarget":"es5","returns":["'101000110111001100110100'"],"dependencies":[],"authors":{"original by":["Philippe Baumann"],"improved by":["Rafał Kukawski (http://blog.kukawski.pl)"]},"notes":[],"layout":"function","title":"php'sbase_convert in JavaScript","function":"base_convert","category":"math","language":"php","alias":["/functions/php/base_convert/","/functions/math/base_convert/","/php/base_convert/","/functions/base_convert/"],"_content":"module.exports = function base_convert (number, frombase, tobase) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base_convert/\n  // original by: Philippe Baumann\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: base_convert('A37334', 16, 2)\n  //   returns 1: '101000110111001100110100'\n\n  return parseInt(number + '', frombase | 0)\n    .toString(tobase | 0)\n}\n","source":"php/math/base_convert.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'base_convert(''A37334'', 16, 2)'\nestarget: es5\nreturns:\n  - '''101000110111001100110100'''\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\n  improved by:\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\nnotes: []\nlayout: function\ntitle: php'sbase_convert in JavaScript\nfunction: base_convert\ncategory: math\nlanguage: php\npermalink: php/math/base_convert/\nalias:\n  - /functions/php/base_convert/\n  - /functions/math/base_convert/\n  - /php/base_convert/\n  - /functions/base_convert/\n---\nmodule.exports = function base_convert (number, frombase, tobase) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base_convert/\n  // original by: Philippe Baumann\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: base_convert('A37334', 16, 2)\n  //   returns 1: '101000110111001100110100'\n\n  return parseInt(number + '', frombase | 0)\n    .toString(tobase | 0)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/base_convert/index.html","comments":1,"_id":"cinoeja0l004bou9ybsth6j5p","content":"module.exports = function base_convert (number, frombase, tobase) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base_convert/\n  // original by: Philippe Baumann\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: base_convert('A37334', 16, 2)\n  //   returns 1: '101000110111001100110100'\n\n  return parseInt(number + '', frombase | 0)\n    .toString(tobase | 0)\n}\n","excerpt":"","more":"module.exports = function base_convert (number, frombase, tobase) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base_convert/\n  // original by: Philippe Baumann\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: base_convert('A37334', 16, 2)\n  //   returns 1: '101000110111001100110100'\n\n  return parseInt(number + '', frombase | 0)\n    .toString(tobase | 0)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bindec('110011')","bindec('000110011')","bindec('111')"],"estarget":"es5","returns":["51","51","7"],"dependencies":[],"authors":{"original by":["Philippe Baumann"]},"notes":[],"layout":"function","title":"php'sbindec in JavaScript","function":"bindec","category":"math","language":"php","alias":["/functions/php/bindec/","/functions/math/bindec/","/php/bindec/","/functions/bindec/"],"_content":"module.exports = function bindec (binaryString) {\n  //  discuss at: http://locutusjs.io/php/bindec/\n  // original by: Philippe Baumann\n  //   example 1: bindec('110011')\n  //   returns 1: 51\n  //   example 2: bindec('000110011')\n  //   returns 2: 51\n  //   example 3: bindec('111')\n  //   returns 3: 7\n\n  binaryString = (binaryString + '').replace(/[^01]/gi, '')\n\n  return parseInt(binaryString, 2)\n}\n","source":"php/math/bindec.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - bindec('110011')\n  - bindec('000110011')\n  - bindec('111')\nestarget: es5\nreturns:\n  - '51'\n  - '51'\n  - '7'\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\nnotes: []\nlayout: function\ntitle: php'sbindec in JavaScript\nfunction: bindec\ncategory: math\nlanguage: php\npermalink: php/math/bindec/\nalias:\n  - /functions/php/bindec/\n  - /functions/math/bindec/\n  - /php/bindec/\n  - /functions/bindec/\n---\nmodule.exports = function bindec (binaryString) {\n  //  discuss at: http://locutusjs.io/php/bindec/\n  // original by: Philippe Baumann\n  //   example 1: bindec('110011')\n  //   returns 1: 51\n  //   example 2: bindec('000110011')\n  //   returns 2: 51\n  //   example 3: bindec('111')\n  //   returns 3: 7\n\n  binaryString = (binaryString + '').replace(/[^01]/gi, '')\n\n  return parseInt(binaryString, 2)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/bindec/index.html","comments":1,"_id":"cinoeja0l004cou9yhsexeldt","content":"module.exports = function bindec (binaryString) {\n  //  discuss at: http://locutusjs.io/php/bindec/\n  // original by: Philippe Baumann\n  //   example 1: bindec('110011')\n  //   returns 1: 51\n  //   example 2: bindec('000110011')\n  //   returns 2: 51\n  //   example 3: bindec('111')\n  //   returns 3: 7\n\n  binaryString = (binaryString + '').replace(/[^01]/gi, '')\n\n  return parseInt(binaryString, 2)\n}\n","excerpt":"","more":"module.exports = function bindec (binaryString) {\n  //  discuss at: http://locutusjs.io/php/bindec/\n  // original by: Philippe Baumann\n  //   example 1: bindec('110011')\n  //   returns 1: 51\n  //   example 2: bindec('000110011')\n  //   returns 2: 51\n  //   example 3: bindec('111')\n  //   returns 3: 7\n\n  binaryString = (binaryString + '').replace(/[^01]/gi, '')\n\n  return parseInt(binaryString, 2)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ceil(8723321.4)"],"estarget":"es5","returns":["8723322"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sceil in JavaScript","function":"ceil","category":"math","language":"php","alias":["/functions/php/ceil/","/functions/math/ceil/","/php/ceil/","/functions/ceil/"],"_content":"module.exports = function ceil (value) {\n  //  discuss at: http://locutusjs.io/php/ceil/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ceil(8723321.4)\n  //   returns 1: 8723322\n\n  return Math.ceil(value)\n}\n","source":"php/math/ceil.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ceil(8723321.4)\nestarget: es5\nreturns:\n  - '8723322'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sceil in JavaScript\nfunction: ceil\ncategory: math\nlanguage: php\npermalink: php/math/ceil/\nalias:\n  - /functions/php/ceil/\n  - /functions/math/ceil/\n  - /php/ceil/\n  - /functions/ceil/\n---\nmodule.exports = function ceil (value) {\n  //  discuss at: http://locutusjs.io/php/ceil/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ceil(8723321.4)\n  //   returns 1: 8723322\n\n  return Math.ceil(value)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/ceil/index.html","comments":1,"_id":"cinoeja0l004dou9y53tebbiz","content":"module.exports = function ceil (value) {\n  //  discuss at: http://locutusjs.io/php/ceil/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ceil(8723321.4)\n  //   returns 1: 8723322\n\n  return Math.ceil(value)\n}\n","excerpt":"","more":"module.exports = function ceil (value) {\n  //  discuss at: http://locutusjs.io/php/ceil/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ceil(8723321.4)\n  //   returns 1: 8723322\n\n  return Math.ceil(value)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["Math.ceil(cos(8723321.4) * 10000000)"],"estarget":"es5","returns":["-1812718"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'scos in JavaScript","function":"cos","category":"math","language":"php","alias":["/functions/php/cos/","/functions/math/cos/","/php/cos/","/functions/cos/"],"_content":"module.exports = function cos (arg) {\n  //  discuss at: http://locutusjs.io/php/cos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(cos(8723321.4) * 10000000)\n  //   returns 1: -1812718\n\n  return Math.cos(arg)\n}\n","source":"php/math/cos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - Math.ceil(cos(8723321.4) * 10000000)\nestarget: es5\nreturns:\n  - '-1812718'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'scos in JavaScript\nfunction: cos\ncategory: math\nlanguage: php\npermalink: php/math/cos/\nalias:\n  - /functions/php/cos/\n  - /functions/math/cos/\n  - /php/cos/\n  - /functions/cos/\n---\nmodule.exports = function cos (arg) {\n  //  discuss at: http://locutusjs.io/php/cos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(cos(8723321.4) * 10000000)\n  //   returns 1: -1812718\n\n  return Math.cos(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/cos/index.html","comments":1,"_id":"cinoeja0m004eou9ycqgb3lk6","content":"module.exports = function cos (arg) {\n  //  discuss at: http://locutusjs.io/php/cos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(cos(8723321.4) * 10000000)\n  //   returns 1: -1812718\n\n  return Math.cos(arg)\n}\n","excerpt":"","more":"module.exports = function cos (arg) {\n  //  discuss at: http://locutusjs.io/php/cos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(cos(8723321.4) * 10000000)\n  //   returns 1: -1812718\n\n  return Math.cos(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["cosh(-0.18127180117607017)"],"estarget":"es5","returns":["1.0164747716114113"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'scosh in JavaScript","function":"cosh","category":"math","language":"php","alias":["/functions/php/cosh/","/functions/math/cosh/","/php/cosh/","/functions/cosh/"],"_content":"module.exports = function cosh (arg) {\n  //  discuss at: http://locutusjs.io/php/cosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: cosh(-0.18127180117607017)\n  //   returns 1: 1.0164747716114113\n\n  return (Math.exp(arg) + Math.exp(-arg)) / 2\n}\n","source":"php/math/cosh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - cosh(-0.18127180117607017)\nestarget: es5\nreturns:\n  - '1.0164747716114113'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'scosh in JavaScript\nfunction: cosh\ncategory: math\nlanguage: php\npermalink: php/math/cosh/\nalias:\n  - /functions/php/cosh/\n  - /functions/math/cosh/\n  - /php/cosh/\n  - /functions/cosh/\n---\nmodule.exports = function cosh (arg) {\n  //  discuss at: http://locutusjs.io/php/cosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: cosh(-0.18127180117607017)\n  //   returns 1: 1.0164747716114113\n\n  return (Math.exp(arg) + Math.exp(-arg)) / 2\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/cosh/index.html","comments":1,"_id":"cinoeja0m004fou9ydr3otws4","content":"module.exports = function cosh (arg) {\n  //  discuss at: http://locutusjs.io/php/cosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: cosh(-0.18127180117607017)\n  //   returns 1: 1.0164747716114113\n\n  return (Math.exp(arg) + Math.exp(-arg)) / 2\n}\n","excerpt":"","more":"module.exports = function cosh (arg) {\n  //  discuss at: http://locutusjs.io/php/cosh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: cosh(-0.18127180117607017)\n  //   returns 1: 1.0164747716114113\n\n  return (Math.exp(arg) + Math.exp(-arg)) / 2\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["decbin(12)","decbin(26)","decbin('26')"],"estarget":"es5","returns":["'1100'","'11010'","'11010'"],"dependencies":[],"authors":{"original by":["Enrique Gonzalez"],"improved by":["http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["pilus","nord_ua"]},"notes":[],"layout":"function","title":"php'sdecbin in JavaScript","function":"decbin","category":"math","language":"php","alias":["/functions/php/decbin/","/functions/math/decbin/","/php/decbin/","/functions/decbin/"],"_content":"module.exports = function decbin (number) {\n  //  discuss at: http://locutusjs.io/php/decbin/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //    input by: nord_ua\n  //   example 1: decbin(12)\n  //   returns 1: '1100'\n  //   example 2: decbin(26)\n  //   returns 2: '11010'\n  //   example 3: decbin('26')\n  //   returns 3: '11010'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(2)\n}\n","source":"php/math/decbin.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - decbin(12)\n  - decbin(26)\n  - decbin('26')\nestarget: es5\nreturns:\n  - '''1100'''\n  - '''11010'''\n  - '''11010'''\ndependencies: []\nauthors:\n  original by:\n    - Enrique Gonzalez\n  improved by:\n    - >-\n      http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - pilus\n    - nord_ua\nnotes: []\nlayout: function\ntitle: php'sdecbin in JavaScript\nfunction: decbin\ncategory: math\nlanguage: php\npermalink: php/math/decbin/\nalias:\n  - /functions/php/decbin/\n  - /functions/math/decbin/\n  - /php/decbin/\n  - /functions/decbin/\n---\nmodule.exports = function decbin (number) {\n  //  discuss at: http://locutusjs.io/php/decbin/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //    input by: nord_ua\n  //   example 1: decbin(12)\n  //   returns 1: '1100'\n  //   example 2: decbin(26)\n  //   returns 2: '11010'\n  //   example 3: decbin('26')\n  //   returns 3: '11010'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(2)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/decbin/index.html","comments":1,"_id":"cinoeja0m004gou9y63nuxwck","content":"module.exports = function decbin (number) {\n  //  discuss at: http://locutusjs.io/php/decbin/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //    input by: nord_ua\n  //   example 1: decbin(12)\n  //   returns 1: '1100'\n  //   example 2: decbin(26)\n  //   returns 2: '11010'\n  //   example 3: decbin('26')\n  //   returns 3: '11010'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(2)\n}\n","excerpt":"","more":"module.exports = function decbin (number) {\n  //  discuss at: http://locutusjs.io/php/decbin/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //    input by: nord_ua\n  //   example 1: decbin(12)\n  //   returns 1: '1100'\n  //   example 2: decbin(26)\n  //   returns 2: '11010'\n  //   example 3: decbin('26')\n  //   returns 3: '11010'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(2)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["dechex(10)","dechex(47)","dechex(-1415723993)"],"estarget":"es5","returns":["'a'","'2f'","'ab9dc427'"],"dependencies":[],"authors":{"original by":["Philippe Baumann"],"improved by":["http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["pilus"]},"notes":[],"layout":"function","title":"php'sdechex in JavaScript","function":"dechex","category":"math","language":"php","alias":["/functions/php/dechex/","/functions/math/dechex/","/php/dechex/","/functions/dechex/"],"_content":"module.exports = function dechex (number) {\n  //  discuss at: http://locutusjs.io/php/dechex/\n  // original by: Philippe Baumann\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: dechex(10)\n  //   returns 1: 'a'\n  //   example 2: dechex(47)\n  //   returns 2: '2f'\n  //   example 3: dechex(-1415723993)\n  //   returns 3: 'ab9dc427'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(16)\n}\n","source":"php/math/dechex.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - dechex(10)\n  - dechex(47)\n  - dechex(-1415723993)\nestarget: es5\nreturns:\n  - '''a'''\n  - '''2f'''\n  - '''ab9dc427'''\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\n  improved by:\n    - >-\n      http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - pilus\nnotes: []\nlayout: function\ntitle: php'sdechex in JavaScript\nfunction: dechex\ncategory: math\nlanguage: php\npermalink: php/math/dechex/\nalias:\n  - /functions/php/dechex/\n  - /functions/math/dechex/\n  - /php/dechex/\n  - /functions/dechex/\n---\nmodule.exports = function dechex (number) {\n  //  discuss at: http://locutusjs.io/php/dechex/\n  // original by: Philippe Baumann\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: dechex(10)\n  //   returns 1: 'a'\n  //   example 2: dechex(47)\n  //   returns 2: '2f'\n  //   example 3: dechex(-1415723993)\n  //   returns 3: 'ab9dc427'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(16)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/dechex/index.html","comments":1,"_id":"cinoeja0m004hou9ygb0diy2y","content":"module.exports = function dechex (number) {\n  //  discuss at: http://locutusjs.io/php/dechex/\n  // original by: Philippe Baumann\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: dechex(10)\n  //   returns 1: 'a'\n  //   example 2: dechex(47)\n  //   returns 2: '2f'\n  //   example 3: dechex(-1415723993)\n  //   returns 3: 'ab9dc427'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(16)\n}\n","excerpt":"","more":"module.exports = function dechex (number) {\n  //  discuss at: http://locutusjs.io/php/dechex/\n  // original by: Philippe Baumann\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: dechex(10)\n  //   returns 1: 'a'\n  //   example 2: dechex(47)\n  //   returns 2: '2f'\n  //   example 3: dechex(-1415723993)\n  //   returns 3: 'ab9dc427'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(16)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["decoct(15)","decoct(264)"],"estarget":"es5","returns":["'17'","'410'"],"dependencies":[],"authors":{"original by":["Enrique Gonzalez"],"improved by":["http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["pilus"]},"notes":[],"layout":"function","title":"php'sdecoct in JavaScript","function":"decoct","category":"math","language":"php","alias":["/functions/php/decoct/","/functions/math/decoct/","/php/decoct/","/functions/decoct/"],"_content":"module.exports = function decoct (number) {\n  //  discuss at: http://locutusjs.io/php/decoct/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: decoct(15)\n  //   returns 1: '17'\n  //   example 2: decoct(264)\n  //   returns 2: '410'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(8)\n}\n","source":"php/math/decoct.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - decoct(15)\n  - decoct(264)\nestarget: es5\nreturns:\n  - '''17'''\n  - '''410'''\ndependencies: []\nauthors:\n  original by:\n    - Enrique Gonzalez\n  improved by:\n    - >-\n      http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - pilus\nnotes: []\nlayout: function\ntitle: php'sdecoct in JavaScript\nfunction: decoct\ncategory: math\nlanguage: php\npermalink: php/math/decoct/\nalias:\n  - /functions/php/decoct/\n  - /functions/math/decoct/\n  - /php/decoct/\n  - /functions/decoct/\n---\nmodule.exports = function decoct (number) {\n  //  discuss at: http://locutusjs.io/php/decoct/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: decoct(15)\n  //   returns 1: '17'\n  //   example 2: decoct(264)\n  //   returns 2: '410'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(8)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/decoct/index.html","comments":1,"_id":"cinoeja0n004iou9y5dnj2w4f","content":"module.exports = function decoct (number) {\n  //  discuss at: http://locutusjs.io/php/decoct/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: decoct(15)\n  //   returns 1: '17'\n  //   example 2: decoct(264)\n  //   returns 2: '410'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(8)\n}\n","excerpt":"","more":"module.exports = function decoct (number) {\n  //  discuss at: http://locutusjs.io/php/decoct/\n  // original by: Enrique Gonzalez\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript\n  //    input by: pilus\n  //   example 1: decoct(15)\n  //   returns 1: '17'\n  //   example 2: decoct(264)\n  //   returns 2: '410'\n\n  if (number < 0) {\n    number = 0xFFFFFFFF + number + 1\n  }\n  return parseInt(number, 10)\n    .toString(8)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["deg2rad(45)"],"estarget":"es5","returns":["0.7853981633974483"],"dependencies":[],"authors":{"original by":["Enrique Gonzalez"],"improved by":["Thomas Grainger (http://graingert.co.uk)"]},"notes":[],"layout":"function","title":"php'sdeg2rad in JavaScript","function":"deg2rad","category":"math","language":"php","alias":["/functions/php/deg2rad/","/functions/math/deg2rad/","/php/deg2rad/","/functions/deg2rad/"],"_content":"module.exports = function deg2rad (angle) {\n  //  discuss at: http://locutusjs.io/php/deg2rad/\n  // original by: Enrique Gonzalez\n  // improved by: Thomas Grainger (http://graingert.co.uk)\n  //   example 1: deg2rad(45)\n  //   returns 1: 0.7853981633974483\n\n  return angle * 0.017453292519943295 // (angle / 180) * Math.PI;\n}\n","source":"php/math/deg2rad.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - deg2rad(45)\nestarget: es5\nreturns:\n  - '0.7853981633974483'\ndependencies: []\nauthors:\n  original by:\n    - Enrique Gonzalez\n  improved by:\n    - 'Thomas Grainger (http://graingert.co.uk)'\nnotes: []\nlayout: function\ntitle: php'sdeg2rad in JavaScript\nfunction: deg2rad\ncategory: math\nlanguage: php\npermalink: php/math/deg2rad/\nalias:\n  - /functions/php/deg2rad/\n  - /functions/math/deg2rad/\n  - /php/deg2rad/\n  - /functions/deg2rad/\n---\nmodule.exports = function deg2rad (angle) {\n  //  discuss at: http://locutusjs.io/php/deg2rad/\n  // original by: Enrique Gonzalez\n  // improved by: Thomas Grainger (http://graingert.co.uk)\n  //   example 1: deg2rad(45)\n  //   returns 1: 0.7853981633974483\n\n  return angle * 0.017453292519943295 // (angle / 180) * Math.PI;\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/deg2rad/index.html","comments":1,"_id":"cinoeja0n004jou9yiykpxajy","content":"module.exports = function deg2rad (angle) {\n  //  discuss at: http://locutusjs.io/php/deg2rad/\n  // original by: Enrique Gonzalez\n  // improved by: Thomas Grainger (http://graingert.co.uk)\n  //   example 1: deg2rad(45)\n  //   returns 1: 0.7853981633974483\n\n  return angle * 0.017453292519943295 // (angle / 180) * Math.PI;\n}\n","excerpt":"","more":"module.exports = function deg2rad (angle) {\n  //  discuss at: http://locutusjs.io/php/deg2rad/\n  // original by: Enrique Gonzalez\n  // improved by: Thomas Grainger (http://graingert.co.uk)\n  //   example 1: deg2rad(45)\n  //   returns 1: 0.7853981633974483\n\n  return angle * 0.017453292519943295 // (angle / 180) * Math.PI;\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["exp(0.3)"],"estarget":"es5","returns":["1.3498588075760032"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sexp in JavaScript","function":"exp","category":"math","language":"php","alias":["/functions/php/exp/","/functions/math/exp/","/php/exp/","/functions/exp/"],"_content":"module.exports = function exp (arg) {\n  //  discuss at: http://locutusjs.io/php/exp/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: exp(0.3)\n  //   returns 1: 1.3498588075760032\n\n  return Math.exp(arg)\n}\n","source":"php/math/exp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - exp(0.3)\nestarget: es5\nreturns:\n  - '1.3498588075760032'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sexp in JavaScript\nfunction: exp\ncategory: math\nlanguage: php\npermalink: php/math/exp/\nalias:\n  - /functions/php/exp/\n  - /functions/math/exp/\n  - /php/exp/\n  - /functions/exp/\n---\nmodule.exports = function exp (arg) {\n  //  discuss at: http://locutusjs.io/php/exp/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: exp(0.3)\n  //   returns 1: 1.3498588075760032\n\n  return Math.exp(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/exp/index.html","comments":1,"_id":"cinoeja0n004kou9ydfxsm7yp","content":"module.exports = function exp (arg) {\n  //  discuss at: http://locutusjs.io/php/exp/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: exp(0.3)\n  //   returns 1: 1.3498588075760032\n\n  return Math.exp(arg)\n}\n","excerpt":"","more":"module.exports = function exp (arg) {\n  //  discuss at: http://locutusjs.io/php/exp/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: exp(0.3)\n  //   returns 1: 1.3498588075760032\n\n  return Math.exp(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["expm1(1e-15)"],"estarget":"es5","returns":["1.0000000000000007e-15"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Robert Eisele (http://www.xarg.org/)"]},"notes":["Precision 'n' can be adjusted as desired"],"layout":"function","title":"php'sexpm1 in JavaScript","function":"expm1","category":"math","language":"php","alias":["/functions/php/expm1/","/functions/math/expm1/","/php/expm1/","/functions/expm1/"],"_content":"module.exports = function expm1 (x) {\n  //  discuss at: http://locutusjs.io/php/expm1/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: expm1(1e-15)\n  //   returns 1: 1.0000000000000007e-15\n\n  return (x < 1e-5 && x > -1e-5)\n    ? x + 0.5 * x * x\n    : Math.exp(x) - 1\n}\n","source":"php/math/expm1.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - expm1(1e-15)\nestarget: es5\nreturns:\n  - '1.0000000000000007e-15'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Robert Eisele (http://www.xarg.org/)'\nnotes:\n  - Precision 'n' can be adjusted as desired\nlayout: function\ntitle: php'sexpm1 in JavaScript\nfunction: expm1\ncategory: math\nlanguage: php\npermalink: php/math/expm1/\nalias:\n  - /functions/php/expm1/\n  - /functions/math/expm1/\n  - /php/expm1/\n  - /functions/expm1/\n---\nmodule.exports = function expm1 (x) {\n  //  discuss at: http://locutusjs.io/php/expm1/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: expm1(1e-15)\n  //   returns 1: 1.0000000000000007e-15\n\n  return (x < 1e-5 && x > -1e-5)\n    ? x + 0.5 * x * x\n    : Math.exp(x) - 1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/expm1/index.html","comments":1,"_id":"cinoeja0o004lou9y3dlgkzao","content":"module.exports = function expm1 (x) {\n  //  discuss at: http://locutusjs.io/php/expm1/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: expm1(1e-15)\n  //   returns 1: 1.0000000000000007e-15\n\n  return (x < 1e-5 && x > -1e-5)\n    ? x + 0.5 * x * x\n    : Math.exp(x) - 1\n}\n","excerpt":"","more":"module.exports = function expm1 (x) {\n  //  discuss at: http://locutusjs.io/php/expm1/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: expm1(1e-15)\n  //   returns 1: 1.0000000000000007e-15\n\n  return (x < 1e-5 && x > -1e-5)\n    ? x + 0.5 * x * x\n    : Math.exp(x) - 1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["floor(8723321.4)"],"estarget":"es5","returns":["8723321"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sfloor in JavaScript","function":"floor","category":"math","language":"php","alias":["/functions/php/floor/","/functions/math/floor/","/php/floor/","/functions/floor/"],"_content":"module.exports = function floor (value) {\n  //  discuss at: http://locutusjs.io/php/floor/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: floor(8723321.4)\n  //   returns 1: 8723321\n\n  return Math.floor(value)\n}\n","source":"php/math/floor.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - floor(8723321.4)\nestarget: es5\nreturns:\n  - '8723321'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sfloor in JavaScript\nfunction: floor\ncategory: math\nlanguage: php\npermalink: php/math/floor/\nalias:\n  - /functions/php/floor/\n  - /functions/math/floor/\n  - /php/floor/\n  - /functions/floor/\n---\nmodule.exports = function floor (value) {\n  //  discuss at: http://locutusjs.io/php/floor/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: floor(8723321.4)\n  //   returns 1: 8723321\n\n  return Math.floor(value)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/floor/index.html","comments":1,"_id":"cinoeja0o004mou9yj2sknux9","content":"module.exports = function floor (value) {\n  //  discuss at: http://locutusjs.io/php/floor/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: floor(8723321.4)\n  //   returns 1: 8723321\n\n  return Math.floor(value)\n}\n","excerpt":"","more":"module.exports = function floor (value) {\n  //  discuss at: http://locutusjs.io/php/floor/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: floor(8723321.4)\n  //   returns 1: 8723321\n\n  return Math.floor(value)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["fmod(5.7, 1.3)"],"estarget":"es5","returns":["0.5"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sfmod in JavaScript","function":"fmod","category":"math","language":"php","alias":["/functions/php/fmod/","/functions/math/fmod/","/php/fmod/","/functions/fmod/"],"_content":"module.exports = function fmod (x, y) {\n  //  discuss at: http://locutusjs.io/php/fmod/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: fmod(5.7, 1.3)\n  //   returns 1: 0.5\n\n  var tmp\n  var tmp2\n  var p = 0\n  var pY = 0\n  var l = 0.0\n  var l2 = 0.0\n\n  tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  p = parseInt(tmp[2], 10) - (tmp[1] + '').length\n  tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  pY = parseInt(tmp[2], 10) - (tmp[1] + '').length\n\n  if (pY > p) {\n    p = pY\n  }\n\n  tmp2 = (x % y)\n\n  if (p < -100 || p > 20) {\n    // toFixed will give an out of bound error so we fix it like this:\n    l = Math.round(Math.log(tmp2) / Math.log(10))\n    l2 = Math.pow(10, l)\n\n    return (tmp2 / l2).toFixed(l - p) * l2\n  } else {\n    return parseFloat(tmp2.toFixed(-p))\n  }\n}\n","source":"php/math/fmod.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'fmod(5.7, 1.3)'\nestarget: es5\nreturns:\n  - '0.5'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sfmod in JavaScript\nfunction: fmod\ncategory: math\nlanguage: php\npermalink: php/math/fmod/\nalias:\n  - /functions/php/fmod/\n  - /functions/math/fmod/\n  - /php/fmod/\n  - /functions/fmod/\n---\nmodule.exports = function fmod (x, y) {\n  //  discuss at: http://locutusjs.io/php/fmod/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: fmod(5.7, 1.3)\n  //   returns 1: 0.5\n\n  var tmp\n  var tmp2\n  var p = 0\n  var pY = 0\n  var l = 0.0\n  var l2 = 0.0\n\n  tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  p = parseInt(tmp[2], 10) - (tmp[1] + '').length\n  tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  pY = parseInt(tmp[2], 10) - (tmp[1] + '').length\n\n  if (pY > p) {\n    p = pY\n  }\n\n  tmp2 = (x % y)\n\n  if (p < -100 || p > 20) {\n    // toFixed will give an out of bound error so we fix it like this:\n    l = Math.round(Math.log(tmp2) / Math.log(10))\n    l2 = Math.pow(10, l)\n\n    return (tmp2 / l2).toFixed(l - p) * l2\n  } else {\n    return parseFloat(tmp2.toFixed(-p))\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/fmod/index.html","comments":1,"_id":"cinoeja0o004nou9y99t7518z","content":"module.exports = function fmod (x, y) {\n  //  discuss at: http://locutusjs.io/php/fmod/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: fmod(5.7, 1.3)\n  //   returns 1: 0.5\n\n  var tmp\n  var tmp2\n  var p = 0\n  var pY = 0\n  var l = 0.0\n  var l2 = 0.0\n\n  tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  p = parseInt(tmp[2], 10) - (tmp[1] + '').length\n  tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  pY = parseInt(tmp[2], 10) - (tmp[1] + '').length\n\n  if (pY > p) {\n    p = pY\n  }\n\n  tmp2 = (x % y)\n\n  if (p < -100 || p > 20) {\n    // toFixed will give an out of bound error so we fix it like this:\n    l = Math.round(Math.log(tmp2) / Math.log(10))\n    l2 = Math.pow(10, l)\n\n    return (tmp2 / l2).toFixed(l - p) * l2\n  } else {\n    return parseFloat(tmp2.toFixed(-p))\n  }\n}\n","excerpt":"","more":"module.exports = function fmod (x, y) {\n  //  discuss at: http://locutusjs.io/php/fmod/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: fmod(5.7, 1.3)\n  //   returns 1: 0.5\n\n  var tmp\n  var tmp2\n  var p = 0\n  var pY = 0\n  var l = 0.0\n  var l2 = 0.0\n\n  tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  p = parseInt(tmp[2], 10) - (tmp[1] + '').length\n  tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/)\n  pY = parseInt(tmp[2], 10) - (tmp[1] + '').length\n\n  if (pY > p) {\n    p = pY\n  }\n\n  tmp2 = (x % y)\n\n  if (p < -100 || p > 20) {\n    // toFixed will give an out of bound error so we fix it like this:\n    l = Math.round(Math.log(tmp2) / Math.log(10))\n    l2 = Math.pow(10, l)\n\n    return (tmp2 / l2).toFixed(l - p) * l2\n  } else {\n    return parseFloat(tmp2.toFixed(-p))\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["getrandmax()"],"estarget":"es5","returns":["2147483647"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sgetrandmax in JavaScript","function":"getrandmax","category":"math","language":"php","alias":["/functions/php/getrandmax/","/functions/math/getrandmax/","/php/getrandmax/","/functions/getrandmax/"],"_content":"module.exports = function getrandmax () {\n  //  discuss at: http://locutusjs.io/php/getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","source":"php/math/getrandmax.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - getrandmax()\nestarget: es5\nreturns:\n  - '2147483647'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sgetrandmax in JavaScript\nfunction: getrandmax\ncategory: math\nlanguage: php\npermalink: php/math/getrandmax/\nalias:\n  - /functions/php/getrandmax/\n  - /functions/math/getrandmax/\n  - /php/getrandmax/\n  - /functions/getrandmax/\n---\nmodule.exports = function getrandmax () {\n  //  discuss at: http://locutusjs.io/php/getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/getrandmax/index.html","comments":1,"_id":"cinoeja0p004oou9yibaduriu","content":"module.exports = function getrandmax () {\n  //  discuss at: http://locutusjs.io/php/getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","excerpt":"","more":"module.exports = function getrandmax () {\n  //  discuss at: http://locutusjs.io/php/getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["hexdec('that')","hexdec('a0')"],"estarget":"es5","returns":["10","160"],"dependencies":[],"authors":{"original by":["Philippe Baumann"]},"notes":[],"layout":"function","title":"php'shexdec in JavaScript","function":"hexdec","category":"math","language":"php","alias":["/functions/php/hexdec/","/functions/math/hexdec/","/php/hexdec/","/functions/hexdec/"],"_content":"module.exports = function hexdec (hexString) {\n  //  discuss at: http://locutusjs.io/php/hexdec/\n  // original by: Philippe Baumann\n  //   example 1: hexdec('that')\n  //   returns 1: 10\n  //   example 2: hexdec('a0')\n  //   returns 2: 160\n\n  hexString = (hexString + '').replace(/[^a-f0-9]/gi, '')\n  return parseInt(hexString, 16)\n}\n","source":"php/math/hexdec.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - hexdec('that')\n  - hexdec('a0')\nestarget: es5\nreturns:\n  - '10'\n  - '160'\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\nnotes: []\nlayout: function\ntitle: php'shexdec in JavaScript\nfunction: hexdec\ncategory: math\nlanguage: php\npermalink: php/math/hexdec/\nalias:\n  - /functions/php/hexdec/\n  - /functions/math/hexdec/\n  - /php/hexdec/\n  - /functions/hexdec/\n---\nmodule.exports = function hexdec (hexString) {\n  //  discuss at: http://locutusjs.io/php/hexdec/\n  // original by: Philippe Baumann\n  //   example 1: hexdec('that')\n  //   returns 1: 10\n  //   example 2: hexdec('a0')\n  //   returns 2: 160\n\n  hexString = (hexString + '').replace(/[^a-f0-9]/gi, '')\n  return parseInt(hexString, 16)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/hexdec/index.html","comments":1,"_id":"cinoeja0p004pou9y0ciqdt1n","content":"module.exports = function hexdec (hexString) {\n  //  discuss at: http://locutusjs.io/php/hexdec/\n  // original by: Philippe Baumann\n  //   example 1: hexdec('that')\n  //   returns 1: 10\n  //   example 2: hexdec('a0')\n  //   returns 2: 160\n\n  hexString = (hexString + '').replace(/[^a-f0-9]/gi, '')\n  return parseInt(hexString, 16)\n}\n","excerpt":"","more":"module.exports = function hexdec (hexString) {\n  //  discuss at: http://locutusjs.io/php/hexdec/\n  // original by: Philippe Baumann\n  //   example 1: hexdec('that')\n  //   returns 1: 10\n  //   example 2: hexdec('a0')\n  //   returns 2: 160\n\n  hexString = (hexString + '').replace(/[^a-f0-9]/gi, '')\n  return parseInt(hexString, 16)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["hypot(3, 4)","hypot([], 'a')"],"estarget":"es5","returns":["5","null"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'shypot in JavaScript","function":"hypot","category":"math","language":"php","alias":["/functions/php/hypot/","/functions/math/hypot/","/php/hypot/","/functions/hypot/"],"_content":"module.exports = function hypot (x, y) {\n  //  discuss at: http://locutusjs.io/php/hypot/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: hypot(3, 4)\n  //   returns 1: 5\n  //   example 2: hypot([], 'a')\n  //   returns 2: null\n\n  x = Math.abs(x)\n  y = Math.abs(y)\n\n  var t = Math.min(x, y)\n  x = Math.max(x, y)\n  t = t / x\n\n  return x * Math.sqrt(1 + t * t) || null\n}\n","source":"php/math/hypot.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'hypot(3, 4)'\n  - 'hypot([], ''a'')'\nestarget: es5\nreturns:\n  - '5'\n  - 'null'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'shypot in JavaScript\nfunction: hypot\ncategory: math\nlanguage: php\npermalink: php/math/hypot/\nalias:\n  - /functions/php/hypot/\n  - /functions/math/hypot/\n  - /php/hypot/\n  - /functions/hypot/\n---\nmodule.exports = function hypot (x, y) {\n  //  discuss at: http://locutusjs.io/php/hypot/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: hypot(3, 4)\n  //   returns 1: 5\n  //   example 2: hypot([], 'a')\n  //   returns 2: null\n\n  x = Math.abs(x)\n  y = Math.abs(y)\n\n  var t = Math.min(x, y)\n  x = Math.max(x, y)\n  t = t / x\n\n  return x * Math.sqrt(1 + t * t) || null\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/hypot/index.html","comments":1,"_id":"cinoeja0p004qou9yrmiaoqz2","content":"module.exports = function hypot (x, y) {\n  //  discuss at: http://locutusjs.io/php/hypot/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: hypot(3, 4)\n  //   returns 1: 5\n  //   example 2: hypot([], 'a')\n  //   returns 2: null\n\n  x = Math.abs(x)\n  y = Math.abs(y)\n\n  var t = Math.min(x, y)\n  x = Math.max(x, y)\n  t = t / x\n\n  return x * Math.sqrt(1 + t * t) || null\n}\n","excerpt":"","more":"module.exports = function hypot (x, y) {\n  //  discuss at: http://locutusjs.io/php/hypot/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: hypot(3, 4)\n  //   returns 1: 5\n  //   example 2: hypot([], 'a')\n  //   returns 2: null\n\n  x = Math.abs(x)\n  y = Math.abs(y)\n\n  var t = Math.min(x, y)\n  x = Math.max(x, y)\n  t = t / x\n\n  return x * Math.sqrt(1 + t * t) || null\n}\n"},{"type":"category","language":"php","category":"math","title":"math","_content":"","source":"php/math/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: math\ntitle: math\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/index.html","comments":1,"layout":"page","_id":"cinoeja0q004rou9yaahxhiuv","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_finite(Infinity)","is_finite(-Infinity)","is_finite(0)"],"estarget":"es5","returns":["false","false","true"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sis_finite in JavaScript","function":"is_finite","category":"math","language":"php","alias":["/functions/php/is_finite/","/functions/math/is_finite/","/php/is_finite/","/functions/is_finite/"],"_content":"module.exports = function is_finite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_finite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_finite(Infinity)\n  //   returns 1: false\n  //   example 2: is_finite(-Infinity)\n  //   returns 2: false\n  //   example 3: is_finite(0)\n  //   returns 3: true\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return false\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_finite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return true\n}\n","source":"php/math/is_finite.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_finite(Infinity)\n  - is_finite(-Infinity)\n  - is_finite(0)\nestarget: es5\nreturns:\n  - 'false'\n  - 'false'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sis_finite in JavaScript\nfunction: is_finite\ncategory: math\nlanguage: php\npermalink: php/math/is_finite/\nalias:\n  - /functions/php/is_finite/\n  - /functions/math/is_finite/\n  - /php/is_finite/\n  - /functions/is_finite/\n---\nmodule.exports = function is_finite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_finite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_finite(Infinity)\n  //   returns 1: false\n  //   example 2: is_finite(-Infinity)\n  //   returns 2: false\n  //   example 3: is_finite(0)\n  //   returns 3: true\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return false\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_finite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/is_finite/index.html","comments":1,"_id":"cinoeja0q004sou9yjwu1jcko","content":"module.exports = function is_finite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_finite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_finite(Infinity)\n  //   returns 1: false\n  //   example 2: is_finite(-Infinity)\n  //   returns 2: false\n  //   example 3: is_finite(0)\n  //   returns 3: true\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return false\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_finite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return true\n}\n","excerpt":"","more":"module.exports = function is_finite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_finite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_finite(Infinity)\n  //   returns 1: false\n  //   example 2: is_finite(-Infinity)\n  //   returns 2: false\n  //   example 3: is_finite(0)\n  //   returns 3: true\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return false\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_finite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_infinite(Infinity)","is_infinite(-Infinity)","is_infinite(0)"],"estarget":"es5","returns":["true","true","false"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sis_infinite in JavaScript","function":"is_infinite","category":"math","language":"php","alias":["/functions/php/is_infinite/","/functions/math/is_infinite/","/php/is_infinite/","/functions/is_infinite/"],"_content":"module.exports = function is_infinite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_infinite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_infinite(Infinity)\n  //   returns 1: true\n  //   example 2: is_infinite(-Infinity)\n  //   returns 2: true\n  //   example 3: is_infinite(0)\n  //   returns 3: false\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return true\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_infinite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return false\n}\n","source":"php/math/is_infinite.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_infinite(Infinity)\n  - is_infinite(-Infinity)\n  - is_infinite(0)\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sis_infinite in JavaScript\nfunction: is_infinite\ncategory: math\nlanguage: php\npermalink: php/math/is_infinite/\nalias:\n  - /functions/php/is_infinite/\n  - /functions/math/is_infinite/\n  - /php/is_infinite/\n  - /functions/is_infinite/\n---\nmodule.exports = function is_infinite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_infinite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_infinite(Infinity)\n  //   returns 1: true\n  //   example 2: is_infinite(-Infinity)\n  //   returns 2: true\n  //   example 3: is_infinite(0)\n  //   returns 3: false\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return true\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_infinite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/is_infinite/index.html","comments":1,"_id":"cinoeja0q004tou9yu4qlt4ar","content":"module.exports = function is_infinite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_infinite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_infinite(Infinity)\n  //   returns 1: true\n  //   example 2: is_infinite(-Infinity)\n  //   returns 2: true\n  //   example 3: is_infinite(0)\n  //   returns 3: false\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return true\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_infinite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function is_infinite (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_infinite/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: is_infinite(Infinity)\n  //   returns 1: true\n  //   example 2: is_infinite(-Infinity)\n  //   returns 2: true\n  //   example 3: is_infinite(0)\n  //   returns 3: false\n\n  var warningType = ''\n\n  if (val === Infinity || val === -Infinity) {\n    return true\n  }\n\n  // Some warnings for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    var msg = 'Warning: is_infinite() expects parameter 1 to be double, ' + warningType + ' given'\n    throw new Error(msg)\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_nan(NaN)","is_nan(0)"],"estarget":"es5","returns":["true","false"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["Robin"]},"notes":[],"layout":"function","title":"php'sis_nan in JavaScript","function":"is_nan","category":"math","language":"php","alias":["/functions/php/is_nan/","/functions/math/is_nan/","/php/is_nan/","/functions/is_nan/"],"_content":"module.exports = function is_nan (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_nan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Robin\n  //   example 1: is_nan(NaN)\n  //   returns 1: true\n  //   example 2: is_nan(0)\n  //   returns 2: false\n\n  var warningType = ''\n\n  if (typeof val === 'number' && isNaN(val)) {\n    return true\n  }\n\n  // Some errors for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    throw new Error('Warning: is_nan() expects parameter 1 to be double, ' + warningType + ' given')\n  }\n\n  return false\n}\n","source":"php/math/is_nan.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_nan(NaN)\n  - is_nan(0)\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - Robin\nnotes: []\nlayout: function\ntitle: php'sis_nan in JavaScript\nfunction: is_nan\ncategory: math\nlanguage: php\npermalink: php/math/is_nan/\nalias:\n  - /functions/php/is_nan/\n  - /functions/math/is_nan/\n  - /php/is_nan/\n  - /functions/is_nan/\n---\nmodule.exports = function is_nan (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_nan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Robin\n  //   example 1: is_nan(NaN)\n  //   returns 1: true\n  //   example 2: is_nan(0)\n  //   returns 2: false\n\n  var warningType = ''\n\n  if (typeof val === 'number' && isNaN(val)) {\n    return true\n  }\n\n  // Some errors for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    throw new Error('Warning: is_nan() expects parameter 1 to be double, ' + warningType + ' given')\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/is_nan/index.html","comments":1,"_id":"cinoeja0r004uou9y4lgeuc61","content":"module.exports = function is_nan (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_nan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Robin\n  //   example 1: is_nan(NaN)\n  //   returns 1: true\n  //   example 2: is_nan(0)\n  //   returns 2: false\n\n  var warningType = ''\n\n  if (typeof val === 'number' && isNaN(val)) {\n    return true\n  }\n\n  // Some errors for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    throw new Error('Warning: is_nan() expects parameter 1 to be double, ' + warningType + ' given')\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function is_nan (val) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_nan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Robin\n  //   example 1: is_nan(NaN)\n  //   returns 1: true\n  //   example 2: is_nan(0)\n  //   returns 2: false\n\n  var warningType = ''\n\n  if (typeof val === 'number' && isNaN(val)) {\n    return true\n  }\n\n  // Some errors for maximum PHP compatibility\n  if (typeof val === 'object') {\n    warningType = (Object.prototype.toString.call(val) === '[object Array]' ? 'array' : 'object')\n  } else if (typeof val === 'string' && !val.match(/^[\\+\\-]?\\d/)) {\n    // simulate PHP's behaviour: '-9a' doesn't give a warning, but 'a9' does.\n    warningType = 'string'\n  }\n  if (warningType) {\n    throw new Error('Warning: is_nan() expects parameter 1 to be double, ' + warningType + ' given')\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $rnd = lcg_value()\nvar $result = $rnd >= 0 && $rnd <= 1"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'slcg_value in JavaScript","function":"lcg_value","category":"math","language":"php","alias":["/functions/php/lcg_value/","/functions/math/lcg_value/","/php/lcg_value/","/functions/lcg_value/"],"_content":"module.exports = function lcg_value () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/lcg_value/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: var $rnd = lcg_value()\n  //   example 1: var $result = $rnd >= 0 && $rnd <= 1\n  //   returns 1: true\n\n  return Math.random()\n}\n","source":"php/math/lcg_value.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $rnd = lcg_value()\n    var $result = $rnd >= 0 && $rnd <= 1\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'slcg_value in JavaScript\nfunction: lcg_value\ncategory: math\nlanguage: php\npermalink: php/math/lcg_value/\nalias:\n  - /functions/php/lcg_value/\n  - /functions/math/lcg_value/\n  - /php/lcg_value/\n  - /functions/lcg_value/\n---\nmodule.exports = function lcg_value () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/lcg_value/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: var $rnd = lcg_value()\n  //   example 1: var $result = $rnd >= 0 && $rnd <= 1\n  //   returns 1: true\n\n  return Math.random()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/lcg_value/index.html","comments":1,"_id":"cinoeja0r004vou9y5133gvil","content":"module.exports = function lcg_value () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/lcg_value/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: var $rnd = lcg_value()\n  //   example 1: var $result = $rnd >= 0 && $rnd ","excerpt":"","more":"module.exports = function lcg_value () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/lcg_value/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: var $rnd = lcg_value()\n  //   example 1: var $result = $rnd >= 0 && $rnd <= 1\n  //   returns 1: true\n\n  return Math.random()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["log(8723321.4, 7)"],"estarget":"es5","returns":["8.212871815082147"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'slog in JavaScript","function":"log","category":"math","language":"php","alias":["/functions/php/log/","/functions/math/log/","/php/log/","/functions/log/"],"_content":"module.exports = function log (arg, base) {\n  //  discuss at: http://locutusjs.io/php/log/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log(8723321.4, 7)\n  //   returns 1: 8.212871815082147\n\n  return (typeof base === 'undefined')\n    ? Math.log(arg)\n    : Math.log(arg) / Math.log(base)\n}\n","source":"php/math/log.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'log(8723321.4, 7)'\nestarget: es5\nreturns:\n  - '8.212871815082147'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'slog in JavaScript\nfunction: log\ncategory: math\nlanguage: php\npermalink: php/math/log/\nalias:\n  - /functions/php/log/\n  - /functions/math/log/\n  - /php/log/\n  - /functions/log/\n---\nmodule.exports = function log (arg, base) {\n  //  discuss at: http://locutusjs.io/php/log/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log(8723321.4, 7)\n  //   returns 1: 8.212871815082147\n\n  return (typeof base === 'undefined')\n    ? Math.log(arg)\n    : Math.log(arg) / Math.log(base)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/log/index.html","comments":1,"_id":"cinoeja0r004wou9ylmtf0rb7","content":"module.exports = function log (arg, base) {\n  //  discuss at: http://locutusjs.io/php/log/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log(8723321.4, 7)\n  //   returns 1: 8.212871815082147\n\n  return (typeof base === 'undefined')\n    ? Math.log(arg)\n    : Math.log(arg) / Math.log(base)\n}\n","excerpt":"","more":"module.exports = function log (arg, base) {\n  //  discuss at: http://locutusjs.io/php/log/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log(8723321.4, 7)\n  //   returns 1: 8.212871815082147\n\n  return (typeof base === 'undefined')\n    ? Math.log(arg)\n    : Math.log(arg) / Math.log(base)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["log10(10)","log10(1)"],"estarget":"es5","returns":["1","0"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)","Tod Gentille","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'slog10 in JavaScript","function":"log10","category":"math","language":"php","alias":["/functions/php/log10/","/functions/math/log10/","/php/log10/","/functions/log10/"],"_content":"module.exports = function log10 (arg) {\n  //  discuss at: http://locutusjs.io/php/log10/\n  // original by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Tod Gentille\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log10(10)\n  //   returns 1: 1\n  //   example 2: log10(1)\n  //   returns 2: 0\n\n  return Math.log(arg) / 2.302585092994046 // Math.LN10\n}\n","source":"php/math/log10.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - log10(10)\n  - log10(1)\nestarget: es5\nreturns:\n  - '1'\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Tod Gentille\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'slog10 in JavaScript\nfunction: log10\ncategory: math\nlanguage: php\npermalink: php/math/log10/\nalias:\n  - /functions/php/log10/\n  - /functions/math/log10/\n  - /php/log10/\n  - /functions/log10/\n---\nmodule.exports = function log10 (arg) {\n  //  discuss at: http://locutusjs.io/php/log10/\n  // original by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Tod Gentille\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log10(10)\n  //   returns 1: 1\n  //   example 2: log10(1)\n  //   returns 2: 0\n\n  return Math.log(arg) / 2.302585092994046 // Math.LN10\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/log10/index.html","comments":1,"_id":"cinoeja0s004xou9y3m89n77b","content":"module.exports = function log10 (arg) {\n  //  discuss at: http://locutusjs.io/php/log10/\n  // original by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Tod Gentille\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log10(10)\n  //   returns 1: 1\n  //   example 2: log10(1)\n  //   returns 2: 0\n\n  return Math.log(arg) / 2.302585092994046 // Math.LN10\n}\n","excerpt":"","more":"module.exports = function log10 (arg) {\n  //  discuss at: http://locutusjs.io/php/log10/\n  // original by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Tod Gentille\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: log10(10)\n  //   returns 1: 1\n  //   example 2: log10(1)\n  //   returns 2: 0\n\n  return Math.log(arg) / 2.302585092994046 // Math.LN10\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["log1p(1e-15)"],"estarget":"es5","returns":["9.999999999999995e-16"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Robert Eisele (http://www.xarg.org/)"]},"notes":["Precision 'n' can be adjusted as desired"],"layout":"function","title":"php'slog1p in JavaScript","function":"log1p","category":"math","language":"php","alias":["/functions/php/log1p/","/functions/math/log1p/","/php/log1p/","/functions/log1p/"],"_content":"module.exports = function log1p (x) {\n  //  discuss at: http://locutusjs.io/php/log1p/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: log1p(1e-15)\n  //   returns 1: 9.999999999999995e-16\n\n  var ret = 0\n  // degree of precision\n  var n = 50\n\n  if (x <= -1) {\n    // JavaScript style would be to return Number.NEGATIVE_INFINITY\n    return '-INF'\n  }\n  if (x < 0 || x > 1) {\n    return Math.log(1 + x)\n  }\n  for (var i = 1; i < n; i++) {\n    ret += Math.pow(-x, i) / i\n  }\n\n  return -ret\n}\n","source":"php/math/log1p.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - log1p(1e-15)\nestarget: es5\nreturns:\n  - '9.999999999999995e-16'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Robert Eisele (http://www.xarg.org/)'\nnotes:\n  - Precision 'n' can be adjusted as desired\nlayout: function\ntitle: php'slog1p in JavaScript\nfunction: log1p\ncategory: math\nlanguage: php\npermalink: php/math/log1p/\nalias:\n  - /functions/php/log1p/\n  - /functions/math/log1p/\n  - /php/log1p/\n  - /functions/log1p/\n---\nmodule.exports = function log1p (x) {\n  //  discuss at: http://locutusjs.io/php/log1p/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: log1p(1e-15)\n  //   returns 1: 9.999999999999995e-16\n\n  var ret = 0\n  // degree of precision\n  var n = 50\n\n  if (x <= -1) {\n    // JavaScript style would be to return Number.NEGATIVE_INFINITY\n    return '-INF'\n  }\n  if (x < 0 || x > 1) {\n    return Math.log(1 + x)\n  }\n  for (var i = 1; i < n; i++) {\n    ret += Math.pow(-x, i) / i\n  }\n\n  return -ret\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/log1p/index.html","comments":1,"_id":"cinoeja0s004you9y9ww470wt","content":"module.exports = function log1p (x) {\n  //  discuss at: http://locutusjs.io/php/log1p/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: log1p(1e-15)\n  //   returns 1: 9.999999999999995e-16\n\n  var ret = 0\n  // degree of precision\n  var n = 50\n\n  if (x <= 0=\"\" -1)=\"\" {=\"\" javascript=\"\" style=\"\" would=\"\" be=\"\" to=\"\" return=\"\" number.negative_infinity=\"\" '-inf'=\"\" }=\"\" if=\"\" (x=\"\" <=\"\" ||=\"\" x=\"\"> 1) {\n    return Math.log(1 + x)\n  }\n  for (var i = 1; i < n; i++) {\n    ret += Math.pow(-x, i) / i\n  }\n\n  return -ret\n}\n</=>","excerpt":"","more":"module.exports = function log1p (x) {\n  //  discuss at: http://locutusjs.io/php/log1p/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Robert Eisele (http://www.xarg.org/)\n  //      note 1: Precision 'n' can be adjusted as desired\n  //   example 1: log1p(1e-15)\n  //   returns 1: 9.999999999999995e-16\n\n  var ret = 0\n  // degree of precision\n  var n = 50\n\n  if (x <= -1) {\n    // JavaScript style would be to return Number.NEGATIVE_INFINITY\n    return '-INF'\n  }\n  if (x < 0 || x > 1) {\n    return Math.log(1 + x)\n  }\n  for (var i = 1; i < n; i++) {\n    ret += Math.pow(-x, i) / i\n  }\n\n  return -ret\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["max(1, 3, 5, 6, 7)","max([2, 4, 5])","max(0, 'hello')","max('hello', 0)","max(-1, 'hello')","max([2, 4, 8], [2, 5, 7])"],"estarget":"es5","returns":["7","5","0","'hello'","'hello'","[2, 5, 7]"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["Jack"],"revised by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Long code cause we're aiming for maximum PHP compatibility"],"layout":"function","title":"php'smax in JavaScript","function":"max","category":"math","language":"php","alias":["/functions/php/max/","/functions/math/max/","/php/max/","/functions/max/"],"_content":"module.exports = function max () {\n  //  discuss at: http://locutusjs.io/php/max/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: max(1, 3, 5, 6, 7)\n  //   returns 1: 7\n  //   example 2: max([2, 4, 5])\n  //   returns 2: 5\n  //   example 3: max(0, 'hello')\n  //   returns 3: 0\n  //   example 4: max('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: max(-1, 'hello')\n  //   returns 5: 'hello'\n  //   example 6: max([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 5, 7]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    } else {\n      var ar = []\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ar.push(obj[i])\n        }\n      }\n      return ar\n    }\n  }\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to max()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for max()')\n    }\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for max()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === 1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","source":"php/math/max.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'max(1, 3, 5, 6, 7)'\n  - 'max([2, 4, 5])'\n  - 'max(0, ''hello'')'\n  - 'max(''hello'', 0)'\n  - 'max(-1, ''hello'')'\n  - 'max([2, 4, 8], [2, 5, 7])'\nestarget: es5\nreturns:\n  - '7'\n  - '5'\n  - '0'\n  - '''hello'''\n  - '''hello'''\n  - '[2, 5, 7]'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - Jack\n  revised by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - Long code cause we're aiming for maximum PHP compatibility\nlayout: function\ntitle: php'smax in JavaScript\nfunction: max\ncategory: math\nlanguage: php\npermalink: php/math/max/\nalias:\n  - /functions/php/max/\n  - /functions/math/max/\n  - /php/max/\n  - /functions/max/\n---\nmodule.exports = function max () {\n  //  discuss at: http://locutusjs.io/php/max/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: max(1, 3, 5, 6, 7)\n  //   returns 1: 7\n  //   example 2: max([2, 4, 5])\n  //   returns 2: 5\n  //   example 3: max(0, 'hello')\n  //   returns 3: 0\n  //   example 4: max('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: max(-1, 'hello')\n  //   returns 5: 'hello'\n  //   example 6: max([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 5, 7]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    } else {\n      var ar = []\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ar.push(obj[i])\n        }\n      }\n      return ar\n    }\n  }\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to max()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for max()')\n    }\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for max()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === 1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/max/index.html","comments":1,"_id":"cinoeja0s004zou9yj7w1jaoa","content":"module.exports = function max () {\n  //  discuss at: http://locutusjs.io/php/max/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: max(1, 3, 5, 6, 7)\n  //   returns 1: 7\n  //   example 2: max([2, 4, 5])\n  //   returns 2: 5\n  //   example 3: max(0, 'hello')\n  //   returns 3: 0\n  //   example 4: max('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: max(-1, 'hello')\n  //   returns 5: 'hello'\n  //   example 6: max([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 5, 7]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    } else {\n      var ar = []\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ar.push(obj[i])\n        }\n      }\n      return ar\n    }\n  }\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to max()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for max()')\n    }\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for max()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === 1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","excerpt":"","more":"module.exports = function max () {\n  //  discuss at: http://locutusjs.io/php/max/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: max(1, 3, 5, 6, 7)\n  //   returns 1: 7\n  //   example 2: max([2, 4, 5])\n  //   returns 2: 5\n  //   example 3: max(0, 'hello')\n  //   returns 3: 0\n  //   example 4: max('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: max(-1, 'hello')\n  //   returns 5: 'hello'\n  //   example 6: max([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 5, 7]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    } else {\n      var ar = []\n      for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ar.push(obj[i])\n        }\n      }\n      return ar\n    }\n  }\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to max()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for max()')\n    }\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for max()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === 1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["min(1, 3, 5, 6, 7)","min([2, 4, 5])","min(0, 'hello')","min('hello', 0)","min(-1, 'hello')","min([2, 4, 8], [2, 5, 7])"],"estarget":"es5","returns":["1","2","0","'hello'","-1","[2, 4, 8]"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["Jack"],"revised by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Long code cause we're aiming for maximum PHP compatibility"],"layout":"function","title":"php'smin in JavaScript","function":"min","category":"math","language":"php","alias":["/functions/php/min/","/functions/math/min/","/php/min/","/functions/min/"],"_content":"module.exports = function min () {\n  //  discuss at: http://locutusjs.io/php/min/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: min(1, 3, 5, 6, 7)\n  //   returns 1: 1\n  //   example 2: min([2, 4, 5])\n  //   returns 2: 2\n  //   example 3: min(0, 'hello')\n  //   returns 3: 0\n  //   example 4: min('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: min(-1, 'hello')\n  //   returns 5: -1\n  //   example 6: min([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 4, 8]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    }\n    var ar = []\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ar.push(obj[i])\n      }\n    }\n    return ar\n  }\n\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to min()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for min()')\n    }\n\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for min()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === -1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","source":"php/math/min.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'min(1, 3, 5, 6, 7)'\n  - 'min([2, 4, 5])'\n  - 'min(0, ''hello'')'\n  - 'min(''hello'', 0)'\n  - 'min(-1, ''hello'')'\n  - 'min([2, 4, 8], [2, 5, 7])'\nestarget: es5\nreturns:\n  - '1'\n  - '2'\n  - '0'\n  - '''hello'''\n  - '-1'\n  - '[2, 4, 8]'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - Jack\n  revised by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - Long code cause we're aiming for maximum PHP compatibility\nlayout: function\ntitle: php'smin in JavaScript\nfunction: min\ncategory: math\nlanguage: php\npermalink: php/math/min/\nalias:\n  - /functions/php/min/\n  - /functions/math/min/\n  - /php/min/\n  - /functions/min/\n---\nmodule.exports = function min () {\n  //  discuss at: http://locutusjs.io/php/min/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: min(1, 3, 5, 6, 7)\n  //   returns 1: 1\n  //   example 2: min([2, 4, 5])\n  //   returns 2: 2\n  //   example 3: min(0, 'hello')\n  //   returns 3: 0\n  //   example 4: min('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: min(-1, 'hello')\n  //   returns 5: -1\n  //   example 6: min([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 4, 8]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    }\n    var ar = []\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ar.push(obj[i])\n      }\n    }\n    return ar\n  }\n\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to min()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for min()')\n    }\n\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for min()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === -1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/min/index.html","comments":1,"_id":"cinoeja0t0050ou9yf51fm9qk","content":"module.exports = function min () {\n  //  discuss at: http://locutusjs.io/php/min/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: min(1, 3, 5, 6, 7)\n  //   returns 1: 1\n  //   example 2: min([2, 4, 5])\n  //   returns 2: 2\n  //   example 3: min(0, 'hello')\n  //   returns 3: 0\n  //   example 4: min('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: min(-1, 'hello')\n  //   returns 5: -1\n  //   example 6: min([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 4, 8]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    }\n    var ar = []\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ar.push(obj[i])\n      }\n    }\n    return ar\n  }\n\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to min()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for min()')\n    }\n\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for min()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === -1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n","excerpt":"","more":"module.exports = function min () {\n  //  discuss at: http://locutusjs.io/php/min/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Jack\n  //      note 1: Long code cause we're aiming for maximum PHP compatibility\n  //   example 1: min(1, 3, 5, 6, 7)\n  //   returns 1: 1\n  //   example 2: min([2, 4, 5])\n  //   returns 2: 2\n  //   example 3: min(0, 'hello')\n  //   returns 3: 0\n  //   example 4: min('hello', 0)\n  //   returns 4: 'hello'\n  //   example 5: min(-1, 'hello')\n  //   returns 5: -1\n  //   example 6: min([2, 4, 8], [2, 5, 7])\n  //   returns 6: [2, 4, 8]\n\n  var ar\n  var retVal\n  var i = 0\n  var n = 0\n  var argv = arguments\n  var argc = argv.length\n  var _obj2Array = function (obj) {\n    if (Object.prototype.toString.call(obj) === '[object Array]') {\n      return obj\n    }\n    var ar = []\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ar.push(obj[i])\n      }\n    }\n    return ar\n  }\n\n  var _compare = function (current, next) {\n    var i = 0\n    var n = 0\n    var tmp = 0\n    var nl = 0\n    var cl = 0\n\n    if (current === next) {\n      return 0\n    } else if (typeof current === 'object') {\n      if (typeof next === 'object') {\n        current = _obj2Array(current)\n        next = _obj2Array(next)\n        cl = current.length\n        nl = next.length\n        if (nl > cl) {\n          return 1\n        } else if (nl < cl) {\n          return -1\n        }\n        for (i = 0, n = cl; i < n; ++i) {\n          tmp = _compare(current[i], next[i])\n          if (tmp === 1) {\n            return 1\n          } else if (tmp === -1) {\n            return -1\n          }\n        }\n        return 0\n      }\n      return -1\n    } else if (typeof next === 'object') {\n      return 1\n    } else if (isNaN(next) && !isNaN(current)) {\n      if (current === 0) {\n        return 0\n      }\n      return (current < 0 ? 1 : -1)\n    } else if (isNaN(current) && !isNaN(next)) {\n      if (next === 0) {\n        return 0\n      }\n      return (next > 0 ? 1 : -1)\n    }\n\n    if (next === current) {\n      return 0\n    }\n\n    return (next > current ? 1 : -1)\n  }\n\n  if (argc === 0) {\n    throw new Error('At least one value should be passed to min()')\n  } else if (argc === 1) {\n    if (typeof argv[0] === 'object') {\n      ar = _obj2Array(argv[0])\n    } else {\n      throw new Error('Wrong parameter count for min()')\n    }\n\n    if (ar.length === 0) {\n      throw new Error('Array must contain at least one element for min()')\n    }\n  } else {\n    ar = argv\n  }\n\n  retVal = ar[0]\n\n  for (i = 1, n = ar.length; i < n; ++i) {\n    if (_compare(retVal, ar[i]) === -1) {\n      retVal = ar[i]\n    }\n  }\n\n  return retVal\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["mt_getrandmax()"],"estarget":"es5","returns":["2147483647"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'smt_getrandmax in JavaScript","function":"mt_getrandmax","category":"math","language":"php","alias":["/functions/php/mt_getrandmax/","/functions/math/mt_getrandmax/","/php/mt_getrandmax/","/functions/mt_getrandmax/"],"_content":"module.exports = function mt_getrandmax () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: mt_getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","source":"php/math/mt_getrandmax.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - mt_getrandmax()\nestarget: es5\nreturns:\n  - '2147483647'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'smt_getrandmax in JavaScript\nfunction: mt_getrandmax\ncategory: math\nlanguage: php\npermalink: php/math/mt_getrandmax/\nalias:\n  - /functions/php/mt_getrandmax/\n  - /functions/math/mt_getrandmax/\n  - /php/mt_getrandmax/\n  - /functions/mt_getrandmax/\n---\nmodule.exports = function mt_getrandmax () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: mt_getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/mt_getrandmax/index.html","comments":1,"_id":"cinoeja0t0051ou9yv7xi3zwo","content":"module.exports = function mt_getrandmax () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: mt_getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n","excerpt":"","more":"module.exports = function mt_getrandmax () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_getrandmax/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: mt_getrandmax()\n  //   returns 1: 2147483647\n\n  return 2147483647\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["mt_rand(1, 1)"],"estarget":"es5","returns":["1"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Kongo"]},"notes":[],"layout":"function","title":"php'smt_rand in JavaScript","function":"mt_rand","category":"math","language":"php","alias":["/functions/php/mt_rand/","/functions/math/mt_rand/","/php/mt_rand/","/functions/mt_rand/"],"_content":"module.exports = function mt_rand (min, max) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_rand/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Kongo\n  //   example 1: mt_rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: mt_rand() expects exactly 2 parameters, 1 given')\n  } else {\n    min = parseInt(min, 10)\n    max = parseInt(max, 10)\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","source":"php/math/mt_rand.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'mt_rand(1, 1)'\nestarget: es5\nreturns:\n  - '1'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Kongo\nnotes: []\nlayout: function\ntitle: php'smt_rand in JavaScript\nfunction: mt_rand\ncategory: math\nlanguage: php\npermalink: php/math/mt_rand/\nalias:\n  - /functions/php/mt_rand/\n  - /functions/math/mt_rand/\n  - /php/mt_rand/\n  - /functions/mt_rand/\n---\nmodule.exports = function mt_rand (min, max) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_rand/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Kongo\n  //   example 1: mt_rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: mt_rand() expects exactly 2 parameters, 1 given')\n  } else {\n    min = parseInt(min, 10)\n    max = parseInt(max, 10)\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/mt_rand/index.html","comments":1,"_id":"cinoeja0t0052ou9y99p0c58m","content":"module.exports = function mt_rand (min, max) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_rand/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Kongo\n  //   example 1: mt_rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: mt_rand() expects exactly 2 parameters, 1 given')\n  } else {\n    min = parseInt(min, 10)\n    max = parseInt(max, 10)\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","excerpt":"","more":"module.exports = function mt_rand (min, max) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/mt_rand/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Kongo\n  //   example 1: mt_rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: mt_rand() expects exactly 2 parameters, 1 given')\n  } else {\n    min = parseInt(min, 10)\n    max = parseInt(max, 10)\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["octdec('77')"],"estarget":"es5","returns":["63"],"dependencies":[],"authors":{"original by":["Philippe Baumann"]},"notes":[],"layout":"function","title":"php'soctdec in JavaScript","function":"octdec","category":"math","language":"php","alias":["/functions/php/octdec/","/functions/math/octdec/","/php/octdec/","/functions/octdec/"],"_content":"module.exports = function octdec (octString) {\n  //  discuss at: http://locutusjs.io/php/octdec/\n  // original by: Philippe Baumann\n  //   example 1: octdec('77')\n  //   returns 1: 63\n\n  octString = (octString + '').replace(/[^0-7]/gi, '')\n  return parseInt(octString, 8)\n}\n","source":"php/math/octdec.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - octdec('77')\nestarget: es5\nreturns:\n  - '63'\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\nnotes: []\nlayout: function\ntitle: php'soctdec in JavaScript\nfunction: octdec\ncategory: math\nlanguage: php\npermalink: php/math/octdec/\nalias:\n  - /functions/php/octdec/\n  - /functions/math/octdec/\n  - /php/octdec/\n  - /functions/octdec/\n---\nmodule.exports = function octdec (octString) {\n  //  discuss at: http://locutusjs.io/php/octdec/\n  // original by: Philippe Baumann\n  //   example 1: octdec('77')\n  //   returns 1: 63\n\n  octString = (octString + '').replace(/[^0-7]/gi, '')\n  return parseInt(octString, 8)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/octdec/index.html","comments":1,"_id":"cinoeja0u0053ou9yvurx2fro","content":"module.exports = function octdec (octString) {\n  //  discuss at: http://locutusjs.io/php/octdec/\n  // original by: Philippe Baumann\n  //   example 1: octdec('77')\n  //   returns 1: 63\n\n  octString = (octString + '').replace(/[^0-7]/gi, '')\n  return parseInt(octString, 8)\n}\n","excerpt":"","more":"module.exports = function octdec (octString) {\n  //  discuss at: http://locutusjs.io/php/octdec/\n  // original by: Philippe Baumann\n  //   example 1: octdec('77')\n  //   returns 1: 63\n\n  octString = (octString + '').replace(/[^0-7]/gi, '')\n  return parseInt(octString, 8)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["pi(8723321.4)"],"estarget":"es5","returns":["3.141592653589793"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["dude"]},"notes":[],"layout":"function","title":"php'spi in JavaScript","function":"pi","category":"math","language":"php","alias":["/functions/php/pi/","/functions/math/pi/","/php/pi/","/functions/pi/"],"_content":"module.exports = function pi () {\n  //  discuss at: http://locutusjs.io/php/pi/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: dude\n  //   example 1: pi(8723321.4)\n  //   returns 1: 3.141592653589793\n\n  return 3.141592653589793 // Math.PI\n}\n","source":"php/math/pi.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - pi(8723321.4)\nestarget: es5\nreturns:\n  - '3.141592653589793'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - dude\nnotes: []\nlayout: function\ntitle: php'spi in JavaScript\nfunction: pi\ncategory: math\nlanguage: php\npermalink: php/math/pi/\nalias:\n  - /functions/php/pi/\n  - /functions/math/pi/\n  - /php/pi/\n  - /functions/pi/\n---\nmodule.exports = function pi () {\n  //  discuss at: http://locutusjs.io/php/pi/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: dude\n  //   example 1: pi(8723321.4)\n  //   returns 1: 3.141592653589793\n\n  return 3.141592653589793 // Math.PI\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/pi/index.html","comments":1,"_id":"cinoeja0u0054ou9y7hpp1t1z","content":"module.exports = function pi () {\n  //  discuss at: http://locutusjs.io/php/pi/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: dude\n  //   example 1: pi(8723321.4)\n  //   returns 1: 3.141592653589793\n\n  return 3.141592653589793 // Math.PI\n}\n","excerpt":"","more":"module.exports = function pi () {\n  //  discuss at: http://locutusjs.io/php/pi/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: dude\n  //   example 1: pi(8723321.4)\n  //   returns 1: 3.141592653589793\n\n  return 3.141592653589793 // Math.PI\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["pow(8723321.4, 7)"],"estarget":"es5","returns":["3.8439091680778995e+48"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'spow in JavaScript","function":"pow","category":"math","language":"php","alias":["/functions/php/pow/","/functions/math/pow/","/php/pow/","/functions/pow/"],"_content":"module.exports = function pow (base, exp) {\n  //  discuss at: http://locutusjs.io/php/pow/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: pow(8723321.4, 7)\n  //   returns 1: 3.8439091680778995e+48\n\n  return Math.pow(base, exp)\n}\n","source":"php/math/pow.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'pow(8723321.4, 7)'\nestarget: es5\nreturns:\n  - '3.8439091680778995e+48'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'spow in JavaScript\nfunction: pow\ncategory: math\nlanguage: php\npermalink: php/math/pow/\nalias:\n  - /functions/php/pow/\n  - /functions/math/pow/\n  - /php/pow/\n  - /functions/pow/\n---\nmodule.exports = function pow (base, exp) {\n  //  discuss at: http://locutusjs.io/php/pow/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: pow(8723321.4, 7)\n  //   returns 1: 3.8439091680778995e+48\n\n  return Math.pow(base, exp)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/pow/index.html","comments":1,"_id":"cinoeja0u0055ou9yww40eoc4","content":"module.exports = function pow (base, exp) {\n  //  discuss at: http://locutusjs.io/php/pow/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: pow(8723321.4, 7)\n  //   returns 1: 3.8439091680778995e+48\n\n  return Math.pow(base, exp)\n}\n","excerpt":"","more":"module.exports = function pow (base, exp) {\n  //  discuss at: http://locutusjs.io/php/pow/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: pow(8723321.4, 7)\n  //   returns 1: 3.8439091680778995e+48\n\n  return Math.pow(base, exp)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["rad2deg(3.141592653589793)"],"estarget":"es5","returns":["180"],"dependencies":[],"authors":{"original by":["Enrique Gonzalez"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'srad2deg in JavaScript","function":"rad2deg","category":"math","language":"php","alias":["/functions/php/rad2deg/","/functions/math/rad2deg/","/php/rad2deg/","/functions/rad2deg/"],"_content":"module.exports = function rad2deg (angle) {\n  //  discuss at: http://locutusjs.io/php/rad2deg/\n  // original by: Enrique Gonzalez\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rad2deg(3.141592653589793)\n  //   returns 1: 180\n\n  return angle * 57.29577951308232 // angle / Math.PI * 180\n}\n","source":"php/math/rad2deg.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - rad2deg(3.141592653589793)\nestarget: es5\nreturns:\n  - '180'\ndependencies: []\nauthors:\n  original by:\n    - Enrique Gonzalez\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'srad2deg in JavaScript\nfunction: rad2deg\ncategory: math\nlanguage: php\npermalink: php/math/rad2deg/\nalias:\n  - /functions/php/rad2deg/\n  - /functions/math/rad2deg/\n  - /php/rad2deg/\n  - /functions/rad2deg/\n---\nmodule.exports = function rad2deg (angle) {\n  //  discuss at: http://locutusjs.io/php/rad2deg/\n  // original by: Enrique Gonzalez\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rad2deg(3.141592653589793)\n  //   returns 1: 180\n\n  return angle * 57.29577951308232 // angle / Math.PI * 180\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/rad2deg/index.html","comments":1,"_id":"cinoeja0u0056ou9y8ze430an","content":"module.exports = function rad2deg (angle) {\n  //  discuss at: http://locutusjs.io/php/rad2deg/\n  // original by: Enrique Gonzalez\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rad2deg(3.141592653589793)\n  //   returns 1: 180\n\n  return angle * 57.29577951308232 // angle / Math.PI * 180\n}\n","excerpt":"","more":"module.exports = function rad2deg (angle) {\n  //  discuss at: http://locutusjs.io/php/rad2deg/\n  // original by: Enrique Gonzalez\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rad2deg(3.141592653589793)\n  //   returns 1: 180\n\n  return angle * 57.29577951308232 // angle / Math.PI * 180\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["rand(1, 1)"],"estarget":"es5","returns":["1"],"dependencies":[],"authors":{"original by":["Leslie Hoare"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["See the commented out code below for a version which\nwill work with our experimental (though probably unnecessary)\nsrand() function)"],"layout":"function","title":"php'srand in JavaScript","function":"rand","category":"math","language":"php","alias":["/functions/php/rand/","/functions/math/rand/","/php/rand/","/functions/rand/"],"_content":"module.exports = function rand (min, max) {\n  //  discuss at: http://locutusjs.io/php/rand/\n  // original by: Leslie Hoare\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: See the commented out code below for a version which\n  //      note 1: will work with our experimental (though probably unnecessary)\n  //      note 1: srand() function)\n  //   example 1: rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: rand() expects exactly 2 parameters, 1 given')\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","source":"php/math/rand.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'rand(1, 1)'\nestarget: es5\nreturns:\n  - '1'\ndependencies: []\nauthors:\n  original by:\n    - Leslie Hoare\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - |-\n    See the commented out code below for a version which\n    will work with our experimental (though probably unnecessary)\n    srand() function)\nlayout: function\ntitle: php'srand in JavaScript\nfunction: rand\ncategory: math\nlanguage: php\npermalink: php/math/rand/\nalias:\n  - /functions/php/rand/\n  - /functions/math/rand/\n  - /php/rand/\n  - /functions/rand/\n---\nmodule.exports = function rand (min, max) {\n  //  discuss at: http://locutusjs.io/php/rand/\n  // original by: Leslie Hoare\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: See the commented out code below for a version which\n  //      note 1: will work with our experimental (though probably unnecessary)\n  //      note 1: srand() function)\n  //   example 1: rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: rand() expects exactly 2 parameters, 1 given')\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/rand/index.html","comments":1,"_id":"cinoeja0v0057ou9ylqdyfp10","content":"module.exports = function rand (min, max) {\n  //  discuss at: http://locutusjs.io/php/rand/\n  // original by: Leslie Hoare\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: See the commented out code below for a version which\n  //      note 1: will work with our experimental (though probably unnecessary)\n  //      note 1: srand() function)\n  //   example 1: rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: rand() expects exactly 2 parameters, 1 given')\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n","excerpt":"","more":"module.exports = function rand (min, max) {\n  //  discuss at: http://locutusjs.io/php/rand/\n  // original by: Leslie Hoare\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: See the commented out code below for a version which\n  //      note 1: will work with our experimental (though probably unnecessary)\n  //      note 1: srand() function)\n  //   example 1: rand(1, 1)\n  //   returns 1: 1\n\n  var argc = arguments.length\n  if (argc === 0) {\n    min = 0\n    max = 2147483647\n  } else if (argc === 1) {\n    throw new Error('Warning: rand() expects exactly 2 parameters, 1 given')\n  }\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["round(1241757, -3)","round(3.6)","round(2.835, 2)","round(1.1749999999999, 2)","round(58551.799999999996, 2)"],"estarget":"es5","returns":["1242000","4","2.84","1.17","58551.8"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"revised by":["Onno Marsman (https://twitter.com/onnomarsman)","T.Wild","Rafał Kukawski (http://blog.kukawski.pl)"],"input by":["Greenseed","meo","William","Josep Sanz (http://www.ws3.es/)"]},"notes":["Great work. Ideas for improvement:\n- code more compliant with developer guidelines\n- for implementing PHP constant arguments look at\nthe pathinfo() function, it offers the greatest\nflexibility & compatibility possible"],"layout":"function","title":"php'sround in JavaScript","function":"round","category":"math","language":"php","alias":["/functions/php/round/","/functions/math/round/","/php/round/","/functions/round/"],"_content":"module.exports = function round (value, precision, mode) {\n  //  discuss at: http://locutusjs.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (http://www.ws3.es/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Great work. Ideas for improvement:\n  //      note 1: - code more compliant with developer guidelines\n  //      note 1: - for implementing PHP constant arguments look at\n  //      note 1: the pathinfo() function, it offers the greatest\n  //      note 1: flexibility & compatibility possible\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n\n  var m, f, isHalf, sgn // helper variables\n  // making sure precision is integer\n  precision |= 0\n  m = Math.pow(10, precision)\n  value *= m\n  // sign of the number\n  sgn = (value > 0) | -(value < 0)\n  isHalf = value % 1 === 0.5 * sgn\n  f = Math.floor(value)\n\n  if (isHalf) {\n    switch (mode) {\n      case 'PHP_ROUND_HALF_DOWN':\n      // rounds .5 toward zero\n        value = f + (sgn < 0)\n        break\n      case 'PHP_ROUND_HALF_EVEN':\n      // rouds .5 towards the next even integer\n        value = f + (f % 2 * sgn)\n        break\n      case 'PHP_ROUND_HALF_ODD':\n      // rounds .5 towards the next odd integer\n        value = f + !(f % 2)\n        break\n      default:\n      // rounds .5 away from zero\n        value = f + (sgn > 0)\n    }\n  }\n\n  return (isHalf ? value : Math.round(value)) / m\n}\n","source":"php/math/round.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'round(1241757, -3)'\n  - round(3.6)\n  - 'round(2.835, 2)'\n  - 'round(1.1749999999999, 2)'\n  - 'round(58551.799999999996, 2)'\nestarget: es5\nreturns:\n  - '1242000'\n  - '4'\n  - '2.84'\n  - '1.17'\n  - '58551.8'\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - T.Wild\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  input by:\n    - Greenseed\n    - meo\n    - William\n    - 'Josep Sanz (http://www.ws3.es/)'\nnotes:\n  - |-\n    Great work. Ideas for improvement:\n    - code more compliant with developer guidelines\n    - for implementing PHP constant arguments look at\n    the pathinfo() function, it offers the greatest\n    flexibility & compatibility possible\nlayout: function\ntitle: php'sround in JavaScript\nfunction: round\ncategory: math\nlanguage: php\npermalink: php/math/round/\nalias:\n  - /functions/php/round/\n  - /functions/math/round/\n  - /php/round/\n  - /functions/round/\n---\nmodule.exports = function round (value, precision, mode) {\n  //  discuss at: http://locutusjs.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (http://www.ws3.es/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Great work. Ideas for improvement:\n  //      note 1: - code more compliant with developer guidelines\n  //      note 1: - for implementing PHP constant arguments look at\n  //      note 1: the pathinfo() function, it offers the greatest\n  //      note 1: flexibility & compatibility possible\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n\n  var m, f, isHalf, sgn // helper variables\n  // making sure precision is integer\n  precision |= 0\n  m = Math.pow(10, precision)\n  value *= m\n  // sign of the number\n  sgn = (value > 0) | -(value < 0)\n  isHalf = value % 1 === 0.5 * sgn\n  f = Math.floor(value)\n\n  if (isHalf) {\n    switch (mode) {\n      case 'PHP_ROUND_HALF_DOWN':\n      // rounds .5 toward zero\n        value = f + (sgn < 0)\n        break\n      case 'PHP_ROUND_HALF_EVEN':\n      // rouds .5 towards the next even integer\n        value = f + (f % 2 * sgn)\n        break\n      case 'PHP_ROUND_HALF_ODD':\n      // rounds .5 towards the next odd integer\n        value = f + !(f % 2)\n        break\n      default:\n      // rounds .5 away from zero\n        value = f + (sgn > 0)\n    }\n  }\n\n  return (isHalf ? value : Math.round(value)) / m\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/round/index.html","comments":1,"_id":"cinoeja0v0058ou9ys27s56m8","content":"module.exports = function round (value, precision, mode) {\n  //  discuss at: http://locutusjs.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (http://www.ws3.es/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Great work. Ideas for improvement:\n  //      note 1: - code more compliant with developer guidelines\n  //      note 1: - for implementing PHP constant arguments look at\n  //      note 1: the pathinfo() function, it offers the greatest\n  //      note 1: flexibility & compatibility possible\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n\n  var m, f, isHalf, sgn // helper variables\n  // making sure precision is integer\n  precision |= 0\n  m = Math.pow(10, precision)\n  value *= m\n  // sign of the number\n  sgn = (value > 0) | -(value < 0)\n  isHalf = value % 1 === 0.5 * sgn\n  f = Math.floor(value)\n\n  if (isHalf) {\n    switch (mode) {\n      case 'PHP_ROUND_HALF_DOWN':\n      // rounds .5 toward zero\n        value = f + (sgn < 0)\n        break\n      case 'PHP_ROUND_HALF_EVEN':\n      // rouds .5 towards the next even integer\n        value = f + (f % 2 * sgn)\n        break\n      case 'PHP_ROUND_HALF_ODD':\n      // rounds .5 towards the next odd integer\n        value = f + !(f % 2)\n        break\n      default:\n      // rounds .5 away from zero\n        value = f + (sgn > 0)\n    }\n  }\n\n  return (isHalf ? value : Math.round(value)) / m\n}\n","excerpt":"","more":"module.exports = function round (value, precision, mode) {\n  //  discuss at: http://locutusjs.io/php/round/\n  // original by: Philip Peterson\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: T.Wild\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Greenseed\n  //    input by: meo\n  //    input by: William\n  //    input by: Josep Sanz (http://www.ws3.es/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Great work. Ideas for improvement:\n  //      note 1: - code more compliant with developer guidelines\n  //      note 1: - for implementing PHP constant arguments look at\n  //      note 1: the pathinfo() function, it offers the greatest\n  //      note 1: flexibility & compatibility possible\n  //   example 1: round(1241757, -3)\n  //   returns 1: 1242000\n  //   example 2: round(3.6)\n  //   returns 2: 4\n  //   example 3: round(2.835, 2)\n  //   returns 3: 2.84\n  //   example 4: round(1.1749999999999, 2)\n  //   returns 4: 1.17\n  //   example 5: round(58551.799999999996, 2)\n  //   returns 5: 58551.8\n\n  var m, f, isHalf, sgn // helper variables\n  // making sure precision is integer\n  precision |= 0\n  m = Math.pow(10, precision)\n  value *= m\n  // sign of the number\n  sgn = (value > 0) | -(value < 0)\n  isHalf = value % 1 === 0.5 * sgn\n  f = Math.floor(value)\n\n  if (isHalf) {\n    switch (mode) {\n      case 'PHP_ROUND_HALF_DOWN':\n      // rounds .5 toward zero\n        value = f + (sgn < 0)\n        break\n      case 'PHP_ROUND_HALF_EVEN':\n      // rouds .5 towards the next even integer\n        value = f + (f % 2 * sgn)\n        break\n      case 'PHP_ROUND_HALF_ODD':\n      // rounds .5 towards the next odd integer\n        value = f + !(f % 2)\n        break\n      default:\n      // rounds .5 away from zero\n        value = f + (sgn > 0)\n    }\n  }\n\n  return (isHalf ? value : Math.round(value)) / m\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["Math.ceil(sin(8723321.4) * 10000000)"],"estarget":"es5","returns":["-9834330"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'ssin in JavaScript","function":"sin","category":"math","language":"php","alias":["/functions/php/sin/","/functions/math/sin/","/php/sin/","/functions/sin/"],"_content":"module.exports = function sin (arg) {\n  //  discuss at: http://locutusjs.io/php/sin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(sin(8723321.4) * 10000000)\n  //   returns 1: -9834330\n\n  return Math.sin(arg)\n}\n","source":"php/math/sin.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - Math.ceil(sin(8723321.4) * 10000000)\nestarget: es5\nreturns:\n  - '-9834330'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'ssin in JavaScript\nfunction: sin\ncategory: math\nlanguage: php\npermalink: php/math/sin/\nalias:\n  - /functions/php/sin/\n  - /functions/math/sin/\n  - /php/sin/\n  - /functions/sin/\n---\nmodule.exports = function sin (arg) {\n  //  discuss at: http://locutusjs.io/php/sin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(sin(8723321.4) * 10000000)\n  //   returns 1: -9834330\n\n  return Math.sin(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/sin/index.html","comments":1,"_id":"cinoeja0v0059ou9y7ii42q8t","content":"module.exports = function sin (arg) {\n  //  discuss at: http://locutusjs.io/php/sin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(sin(8723321.4) * 10000000)\n  //   returns 1: -9834330\n\n  return Math.sin(arg)\n}\n","excerpt":"","more":"module.exports = function sin (arg) {\n  //  discuss at: http://locutusjs.io/php/sin/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(sin(8723321.4) * 10000000)\n  //   returns 1: -9834330\n\n  return Math.sin(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sinh(-0.9834330348825909)"],"estarget":"es5","returns":["-1.1497971402636502"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'ssinh in JavaScript","function":"sinh","category":"math","language":"php","alias":["/functions/php/sinh/","/functions/math/sinh/","/php/sinh/","/functions/sinh/"],"_content":"module.exports = function sinh (arg) {\n  //  discuss at: http://locutusjs.io/php/sinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sinh(-0.9834330348825909)\n  //   returns 1: -1.1497971402636502\n\n  return (Math.exp(arg) - Math.exp(-arg)) / 2\n}\n","source":"php/math/sinh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - sinh(-0.9834330348825909)\nestarget: es5\nreturns:\n  - '-1.1497971402636502'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'ssinh in JavaScript\nfunction: sinh\ncategory: math\nlanguage: php\npermalink: php/math/sinh/\nalias:\n  - /functions/php/sinh/\n  - /functions/math/sinh/\n  - /php/sinh/\n  - /functions/sinh/\n---\nmodule.exports = function sinh (arg) {\n  //  discuss at: http://locutusjs.io/php/sinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sinh(-0.9834330348825909)\n  //   returns 1: -1.1497971402636502\n\n  return (Math.exp(arg) - Math.exp(-arg)) / 2\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/sinh/index.html","comments":1,"_id":"cinoeja0w005aou9yu0a9s3vf","content":"module.exports = function sinh (arg) {\n  //  discuss at: http://locutusjs.io/php/sinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sinh(-0.9834330348825909)\n  //   returns 1: -1.1497971402636502\n\n  return (Math.exp(arg) - Math.exp(-arg)) / 2\n}\n","excerpt":"","more":"module.exports = function sinh (arg) {\n  //  discuss at: http://locutusjs.io/php/sinh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sinh(-0.9834330348825909)\n  //   returns 1: -1.1497971402636502\n\n  return (Math.exp(arg) - Math.exp(-arg)) / 2\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sqrt(8723321.4)"],"estarget":"es5","returns":["2953.5269424875746"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'ssqrt in JavaScript","function":"sqrt","category":"math","language":"php","alias":["/functions/php/sqrt/","/functions/math/sqrt/","/php/sqrt/","/functions/sqrt/"],"_content":"module.exports = function sqrt (arg) {\n  //  discuss at: http://locutusjs.io/php/sqrt/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sqrt(8723321.4)\n  //   returns 1: 2953.5269424875746\n\n  return Math.sqrt(arg)\n}\n","source":"php/math/sqrt.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - sqrt(8723321.4)\nestarget: es5\nreturns:\n  - '2953.5269424875746'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'ssqrt in JavaScript\nfunction: sqrt\ncategory: math\nlanguage: php\npermalink: php/math/sqrt/\nalias:\n  - /functions/php/sqrt/\n  - /functions/math/sqrt/\n  - /php/sqrt/\n  - /functions/sqrt/\n---\nmodule.exports = function sqrt (arg) {\n  //  discuss at: http://locutusjs.io/php/sqrt/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sqrt(8723321.4)\n  //   returns 1: 2953.5269424875746\n\n  return Math.sqrt(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/sqrt/index.html","comments":1,"_id":"cinoeja0w005bou9yd2l3vh5e","content":"module.exports = function sqrt (arg) {\n  //  discuss at: http://locutusjs.io/php/sqrt/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sqrt(8723321.4)\n  //   returns 1: 2953.5269424875746\n\n  return Math.sqrt(arg)\n}\n","excerpt":"","more":"module.exports = function sqrt (arg) {\n  //  discuss at: http://locutusjs.io/php/sqrt/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: sqrt(8723321.4)\n  //   returns 1: 2953.5269424875746\n\n  return Math.sqrt(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["Math.ceil(tan(8723321.4) * 10000000)"],"estarget":"es5","returns":["54251849"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'stan in JavaScript","function":"tan","category":"math","language":"php","alias":["/functions/php/tan/","/functions/math/tan/","/php/tan/","/functions/tan/"],"_content":"module.exports = function tan (arg) {\n  //  discuss at: http://locutusjs.io/php/tan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(tan(8723321.4) * 10000000)\n  //   returns 1: 54251849\n\n  return Math.tan(arg)\n}\n","source":"php/math/tan.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - Math.ceil(tan(8723321.4) * 10000000)\nestarget: es5\nreturns:\n  - '54251849'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'stan in JavaScript\nfunction: tan\ncategory: math\nlanguage: php\npermalink: php/math/tan/\nalias:\n  - /functions/php/tan/\n  - /functions/math/tan/\n  - /php/tan/\n  - /functions/tan/\n---\nmodule.exports = function tan (arg) {\n  //  discuss at: http://locutusjs.io/php/tan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(tan(8723321.4) * 10000000)\n  //   returns 1: 54251849\n\n  return Math.tan(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/tan/index.html","comments":1,"_id":"cinoeja0w005cou9yipswzpc2","content":"module.exports = function tan (arg) {\n  //  discuss at: http://locutusjs.io/php/tan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(tan(8723321.4) * 10000000)\n  //   returns 1: 54251849\n\n  return Math.tan(arg)\n}\n","excerpt":"","more":"module.exports = function tan (arg) {\n  //  discuss at: http://locutusjs.io/php/tan/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: Math.ceil(tan(8723321.4) * 10000000)\n  //   returns 1: 54251849\n\n  return Math.tan(arg)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["tanh(5.4251848798444815)"],"estarget":"es5","returns":["0.9999612058841574"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'stanh in JavaScript","function":"tanh","category":"math","language":"php","alias":["/functions/php/tanh/","/functions/math/tanh/","/php/tanh/","/functions/tanh/"],"_content":"module.exports = function tanh (arg) {\n  //  discuss at: http://locutusjs.io/php/tanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: tanh(5.4251848798444815)\n  //   returns 1: 0.9999612058841574\n\n  return 1 - 2 / (Math.exp(2 * arg) + 1)\n}\n","source":"php/math/tanh.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - tanh(5.4251848798444815)\nestarget: es5\nreturns:\n  - '0.9999612058841574'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'stanh in JavaScript\nfunction: tanh\ncategory: math\nlanguage: php\npermalink: php/math/tanh/\nalias:\n  - /functions/php/tanh/\n  - /functions/math/tanh/\n  - /php/tanh/\n  - /functions/tanh/\n---\nmodule.exports = function tanh (arg) {\n  //  discuss at: http://locutusjs.io/php/tanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: tanh(5.4251848798444815)\n  //   returns 1: 0.9999612058841574\n\n  return 1 - 2 / (Math.exp(2 * arg) + 1)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/math/tanh/index.html","comments":1,"_id":"cinoeja0x005dou9ykw7oux41","content":"module.exports = function tanh (arg) {\n  //  discuss at: http://locutusjs.io/php/tanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: tanh(5.4251848798444815)\n  //   returns 1: 0.9999612058841574\n\n  return 1 - 2 / (Math.exp(2 * arg) + 1)\n}\n","excerpt":"","more":"module.exports = function tanh (arg) {\n  //  discuss at: http://locutusjs.io/php/tanh/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // imprived by: Robert Eisele (http://www.xarg.org/)\n  //   example 1: tanh(5.4251848798444815)\n  //   returns 1: 0.9999612058841574\n\n  return 1 - 2 / (Math.exp(2 * arg) + 1)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\nentry.title"],"estarget":"es5","returns":["'All about my gopher site.'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sgopher_parsedir in JavaScript","function":"gopher_parsedir","category":"net-gopher","language":"php","alias":["/functions/php/gopher_parsedir/","/functions/net-gopher/gopher_parsedir/","/php/gopher_parsedir/","/functions/gopher_parsedir/"],"_content":"module.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/gopher_parsedir/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  var entryPattern = /^(.)(.*?)\\t(.*?)\\t(.*?)\\t(.*?)\\u000d\\u000a$/\n  var entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  var type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n","source":"php/net-gopher/gopher_parsedir.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    var entry = gopher_parsedir('0All about my gopher\n    site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n\n    entry.title\nestarget: es5\nreturns:\n  - '''All about my gopher site.'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sgopher_parsedir in JavaScript\nfunction: gopher_parsedir\ncategory: net-gopher\nlanguage: php\npermalink: php/net-gopher/gopher_parsedir/\nalias:\n  - /functions/php/gopher_parsedir/\n  - /functions/net-gopher/gopher_parsedir/\n  - /php/gopher_parsedir/\n  - /functions/gopher_parsedir/\n---\nmodule.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/gopher_parsedir/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  var entryPattern = /^(.)(.*?)\\t(.*?)\\t(.*?)\\t(.*?)\\u000d\\u000a$/\n  var entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  var type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/net-gopher/gopher_parsedir/index.html","comments":1,"_id":"cinoeja0x005eou9ym1a28kot","content":"module.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/gopher_parsedir/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  var entryPattern = /^(.)(.*?)\\t(.*?)\\t(.*?)\\t(.*?)\\u000d\\u000a$/\n  var entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  var type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n","excerpt":"","more":"module.exports = function gopher_parsedir (dirent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/gopher_parsedir/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var entry = gopher_parsedir('0All about my gopher site.\\t/allabout.txt\\tgopher.example.com\\t70\\u000d\\u000a')\n  //   example 1: entry.title\n  //   returns 1: 'All about my gopher site.'\n\n  /* Types\n   * 0 = plain text file\n   * 1 = directory menu listing\n   * 2 = CSO search query\n   * 3 = error message\n   * 4 = BinHex encoded text file\n   * 5 = binary archive file\n   * 6 = UUEncoded text file\n   * 7 = search engine query\n   * 8 = telnet session pointer\n   * 9 = binary file\n   * g = Graphics file format, primarily a GIF file\n   * h = HTML file\n   * i = informational message\n   * s = Audio file format, primarily a WAV file\n   */\n\n  var entryPattern = /^(.)(.*?)\\t(.*?)\\t(.*?)\\t(.*?)\\u000d\\u000a$/\n  var entry = dirent.match(entryPattern)\n\n  if (entry === null) {\n    throw new Error('Could not parse the directory entry')\n    // return false;\n  }\n\n  var type = entry[1]\n  switch (type) {\n    case 'i':\n    // GOPHER_INFO\n      type = 255\n      break\n    case '1':\n    // GOPHER_DIRECTORY\n      type = 1\n      break\n    case '0':\n    // GOPHER_DOCUMENT\n      type = 0\n      break\n    case '4':\n    // GOPHER_BINHEX\n      type = 4\n      break\n    case '5':\n    // GOPHER_DOSBINARY\n      type = 5\n      break\n    case '6':\n    // GOPHER_UUENCODED\n      type = 6\n      break\n    case '9':\n    // GOPHER_BINARY\n      type = 9\n      break\n    case 'h':\n    // GOPHER_HTTP\n      type = 254\n      break\n    default:\n      return {\n        type: -1,\n        data: dirent\n      } // GOPHER_UNKNOWN\n  }\n  return {\n    type: type,\n    title: entry[2],\n    path: entry[3],\n    host: entry[4],\n    port: entry[5]\n  }\n}\n"},{"type":"category","language":"php","category":"net-gopher","title":"net-gopher","_content":"","source":"php/net-gopher/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: net-gopher\ntitle: net-gopher\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/net-gopher/index.html","comments":1,"layout":"page","_id":"cinoeja0x005fou9ygbs528q2","content":"","excerpt":"","more":""},{"type":"category","language":"php","category":"network","title":"network","_content":"","source":"php/network/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: network\ntitle: network\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/index.html","comments":1,"layout":"page","_id":"cinoeja0y005gou9y5c074903","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["inet_ntop('\\x7F\\x00\\x00\\x01')"],"estarget":"es5","returns":["'127.0.0.1'"],"dependencies":[],"authors":{"original by":["Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'sinet_ntop in JavaScript","function":"inet_ntop","category":"network","language":"php","alias":["/functions/php/inet_ntop/","/functions/network/inet_ntop/","/php/inet_ntop/","/functions/inet_ntop/"],"_content":"module.exports = function inet_ntop (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_ntop/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_ntop('\\x7F\\x00\\x00\\x01')\n  //   returns 1: '127.0.0.1'\n  //   _example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1')\n  //   _returns 2: '::1'\n\n  var i = 0\n  var m = ''\n  var c = []\n\n  a += ''\n  if (a.length === 4) {\n    // IPv4\n    return [\n      a.charCodeAt(0),\n      a.charCodeAt(1),\n      a.charCodeAt(2),\n      a.charCodeAt(3)\n    ].join('.')\n  } else if (a.length === 16) {\n    // IPv6\n    for (i = 0; i < 16; i++) {\n      c.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i)).toString(16))\n    }\n    return c.join(':')\n      .replace(/((^|:)0(?=:|$))+:?/g, function (t) {\n        m = (t.length > m.length) ? t : m\n        return t\n      })\n      .replace(m || ' ', '::')\n  } else {\n    // Invalid length\n    return false\n  }\n}\n","source":"php/network/inet_ntop.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - inet_ntop('\\x7F\\x00\\x00\\x01')\nestarget: es5\nreturns:\n  - '''127.0.0.1'''\ndependencies: []\nauthors:\n  original by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'sinet_ntop in JavaScript\nfunction: inet_ntop\ncategory: network\nlanguage: php\npermalink: php/network/inet_ntop/\nalias:\n  - /functions/php/inet_ntop/\n  - /functions/network/inet_ntop/\n  - /php/inet_ntop/\n  - /functions/inet_ntop/\n---\nmodule.exports = function inet_ntop (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_ntop/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_ntop('\\x7F\\x00\\x00\\x01')\n  //   returns 1: '127.0.0.1'\n  //   _example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1')\n  //   _returns 2: '::1'\n\n  var i = 0\n  var m = ''\n  var c = []\n\n  a += ''\n  if (a.length === 4) {\n    // IPv4\n    return [\n      a.charCodeAt(0),\n      a.charCodeAt(1),\n      a.charCodeAt(2),\n      a.charCodeAt(3)\n    ].join('.')\n  } else if (a.length === 16) {\n    // IPv6\n    for (i = 0; i < 16; i++) {\n      c.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i)).toString(16))\n    }\n    return c.join(':')\n      .replace(/((^|:)0(?=:|$))+:?/g, function (t) {\n        m = (t.length > m.length) ? t : m\n        return t\n      })\n      .replace(m || ' ', '::')\n  } else {\n    // Invalid length\n    return false\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/inet_ntop/index.html","comments":1,"_id":"cinoeja0y005hou9ym2g89l05","content":"module.exports = function inet_ntop (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_ntop/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_ntop('\\x7F\\x00\\x00\\x01')\n  //   returns 1: '127.0.0.1'\n  //   _example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1')\n  //   _returns 2: '::1'\n\n  var i = 0\n  var m = ''\n  var c = []\n\n  a += ''\n  if (a.length === 4) {\n    // IPv4\n    return [\n      a.charCodeAt(0),\n      a.charCodeAt(1),\n      a.charCodeAt(2),\n      a.charCodeAt(3)\n    ].join('.')\n  } else if (a.length === 16) {\n    // IPv6\n    for (i = 0; i < 16; i++) {\n      c.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i)).toString(16))\n    }\n    return c.join(':')\n      .replace(/((^|:)0(?=:|$))+:?/g, function (t) {\n        m = (t.length > m.length) ? t : m\n        return t\n      })\n      .replace(m || ' ', '::')\n  } else {\n    // Invalid length\n    return false\n  }\n}\n","excerpt":"","more":"module.exports = function inet_ntop (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_ntop/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_ntop('\\x7F\\x00\\x00\\x01')\n  //   returns 1: '127.0.0.1'\n  //   _example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1')\n  //   _returns 2: '::1'\n\n  var i = 0\n  var m = ''\n  var c = []\n\n  a += ''\n  if (a.length === 4) {\n    // IPv4\n    return [\n      a.charCodeAt(0),\n      a.charCodeAt(1),\n      a.charCodeAt(2),\n      a.charCodeAt(3)\n    ].join('.')\n  } else if (a.length === 16) {\n    // IPv6\n    for (i = 0; i < 16; i++) {\n      c.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i)).toString(16))\n    }\n    return c.join(':')\n      .replace(/((^|:)0(?=:|$))+:?/g, function (t) {\n        m = (t.length > m.length) ? t : m\n        return t\n      })\n      .replace(m || ' ', '::')\n  } else {\n    // Invalid length\n    return false\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["inet_pton('::')","inet_pton('127.0.0.1')"],"estarget":"es5","returns":["'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'","'\\x7F\\x00\\x00\\x01'"],"dependencies":[],"authors":{"original by":["Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'sinet_pton in JavaScript","function":"inet_pton","category":"network","language":"php","alias":["/functions/php/inet_pton/","/functions/network/inet_pton/","/php/inet_pton/","/functions/inet_pton/"],"_content":"module.exports = function inet_pton (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_pton/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_pton('::')\n  //   returns 1: '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'\n  //   example 2: inet_pton('127.0.0.1')\n  //   returns 2: '\\x7F\\x00\\x00\\x01'\n\n  var r\n  var m\n  var x\n  var i\n  var j\n  var f = String.fromCharCode\n\n  // IPv4\n  m = a.match(/^(?:\\d{1,3}(?:\\.|$)){4}/)\n  if (m) {\n    m = m[0].split('.')\n    m = f(m[0]) + f(m[1]) + f(m[2]) + f(m[3])\n    // Return if 4 bytes, otherwise false.\n    return m.length === 4 ? m : false\n  }\n  r = /^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$/\n\n  // IPv6\n  m = a.match(r)\n  if (m) {\n    // Translate each hexadecimal value.\n    for (j = 1; j < 4; j++) {\n      // Indice 2 is :: and if no length, continue.\n      if (j === 2 || m[j].length === 0) {\n        continue\n      }\n      m[j] = m[j].split(':')\n      for (i = 0; i < m[j].length; i++) {\n        m[j][i] = parseInt(m[j][i], 16)\n        // Would be NaN if it was blank, return false.\n        if (isNaN(m[j][i])) {\n          // Invalid IP.\n          return false\n        }\n        m[j][i] = f(m[j][i] >> 8) + f(m[j][i] & 0xFF)\n      }\n      m[j] = m[j].join('')\n    }\n    x = m[1].length + m[3].length\n    if (x === 16) {\n      return m[1] + m[3]\n    } else if (x < 16 && m[2].length > 0) {\n      return m[1] + (new Array(16 - x + 1))\n        .join('\\x00') + m[3]\n    }\n  }\n\n  // Invalid IP\n  return false\n}\n","source":"php/network/inet_pton.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'inet_pton(''::'')'\n  - inet_pton('127.0.0.1')\nestarget: es5\nreturns:\n  - '''\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'''\n  - '''\\x7F\\x00\\x00\\x01'''\ndependencies: []\nauthors:\n  original by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'sinet_pton in JavaScript\nfunction: inet_pton\ncategory: network\nlanguage: php\npermalink: php/network/inet_pton/\nalias:\n  - /functions/php/inet_pton/\n  - /functions/network/inet_pton/\n  - /php/inet_pton/\n  - /functions/inet_pton/\n---\nmodule.exports = function inet_pton (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_pton/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_pton('::')\n  //   returns 1: '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'\n  //   example 2: inet_pton('127.0.0.1')\n  //   returns 2: '\\x7F\\x00\\x00\\x01'\n\n  var r\n  var m\n  var x\n  var i\n  var j\n  var f = String.fromCharCode\n\n  // IPv4\n  m = a.match(/^(?:\\d{1,3}(?:\\.|$)){4}/)\n  if (m) {\n    m = m[0].split('.')\n    m = f(m[0]) + f(m[1]) + f(m[2]) + f(m[3])\n    // Return if 4 bytes, otherwise false.\n    return m.length === 4 ? m : false\n  }\n  r = /^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$/\n\n  // IPv6\n  m = a.match(r)\n  if (m) {\n    // Translate each hexadecimal value.\n    for (j = 1; j < 4; j++) {\n      // Indice 2 is :: and if no length, continue.\n      if (j === 2 || m[j].length === 0) {\n        continue\n      }\n      m[j] = m[j].split(':')\n      for (i = 0; i < m[j].length; i++) {\n        m[j][i] = parseInt(m[j][i], 16)\n        // Would be NaN if it was blank, return false.\n        if (isNaN(m[j][i])) {\n          // Invalid IP.\n          return false\n        }\n        m[j][i] = f(m[j][i] >> 8) + f(m[j][i] & 0xFF)\n      }\n      m[j] = m[j].join('')\n    }\n    x = m[1].length + m[3].length\n    if (x === 16) {\n      return m[1] + m[3]\n    } else if (x < 16 && m[2].length > 0) {\n      return m[1] + (new Array(16 - x + 1))\n        .join('\\x00') + m[3]\n    }\n  }\n\n  // Invalid IP\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/inet_pton/index.html","comments":1,"_id":"cinoeja0y005iou9yuaz6o5gy","content":"module.exports = function inet_pton (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_pton/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_pton('::')\n  //   returns 1: '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'\n  //   example 2: inet_pton('127.0.0.1')\n  //   returns 2: '\\x7F\\x00\\x00\\x01'\n\n  var r\n  var m\n  var x\n  var i\n  var j\n  var f = String.fromCharCode\n\n  // IPv4\n  m = a.match(/^(?:\\d{1,3}(?:\\.|$)){4}/)\n  if (m) {\n    m = m[0].split('.')\n    m = f(m[0]) + f(m[1]) + f(m[2]) + f(m[3])\n    // Return if 4 bytes, otherwise false.\n    return m.length === 4 ? m : false\n  }\n  r = /^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$/\n\n  // IPv6\n  m = a.match(r)\n  if (m) {\n    // Translate each hexadecimal value.\n    for (j = 1; j < 4; j++) {\n      // Indice 2 is :: and if no length, continue.\n      if (j === 2 || m[j].length === 0) {\n        continue\n      }\n      m[j] = m[j].split(':')\n      for (i = 0; i < m[j].length; i++) {\n        m[j][i] = parseInt(m[j][i], 16)\n        // Would be NaN if it was blank, return false.\n        if (isNaN(m[j][i])) {\n          // Invalid IP.\n          return false\n        }\n        m[j][i] = f(m[j][i] >> 8) + f(m[j][i] & 0xFF)\n      }\n      m[j] = m[j].join('')\n    }\n    x = m[1].length + m[3].length\n    if (x === 16) {\n      return m[1] + m[3]\n    } else if (x < 16 && m[2].length > 0) {\n      return m[1] + (new Array(16 - x + 1))\n        .join('\\x00') + m[3]\n    }\n  }\n\n  // Invalid IP\n  return false\n}\n","excerpt":"","more":"module.exports = function inet_pton (a) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/inet_pton/\n  // original by: Theriault (https://github.com/Theriault)\n  //   example 1: inet_pton('::')\n  //   returns 1: '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'\n  //   example 2: inet_pton('127.0.0.1')\n  //   returns 2: '\\x7F\\x00\\x00\\x01'\n\n  var r\n  var m\n  var x\n  var i\n  var j\n  var f = String.fromCharCode\n\n  // IPv4\n  m = a.match(/^(?:\\d{1,3}(?:\\.|$)){4}/)\n  if (m) {\n    m = m[0].split('.')\n    m = f(m[0]) + f(m[1]) + f(m[2]) + f(m[3])\n    // Return if 4 bytes, otherwise false.\n    return m.length === 4 ? m : false\n  }\n  r = /^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$/\n\n  // IPv6\n  m = a.match(r)\n  if (m) {\n    // Translate each hexadecimal value.\n    for (j = 1; j < 4; j++) {\n      // Indice 2 is :: and if no length, continue.\n      if (j === 2 || m[j].length === 0) {\n        continue\n      }\n      m[j] = m[j].split(':')\n      for (i = 0; i < m[j].length; i++) {\n        m[j][i] = parseInt(m[j][i], 16)\n        // Would be NaN if it was blank, return false.\n        if (isNaN(m[j][i])) {\n          // Invalid IP.\n          return false\n        }\n        m[j][i] = f(m[j][i] >> 8) + f(m[j][i] & 0xFF)\n      }\n      m[j] = m[j].join('')\n    }\n    x = m[1].length + m[3].length\n    if (x === 16) {\n      return m[1] + m[3]\n    } else if (x < 16 && m[2].length > 0) {\n      return m[1] + (new Array(16 - x + 1))\n        .join('\\x00') + m[3]\n    }\n  }\n\n  // Invalid IP\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ip2long('192.0.34.166')","ip2long('0.0xABCDEF')","ip2long('255.255.255.256')"],"estarget":"es2015","returns":["3221234342","11259375","false"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"],"improved by":["Victor"],"revised by":["fearphage (http://http/my.opera.com/fearphage/)","Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'sip2long in JavaScript","function":"ip2long","category":"network","language":"php","alias":["/functions/php/ip2long/","/functions/network/ip2long/","/php/ip2long/","/functions/ip2long/"],"_content":"module.exports = function ip2long (argIP) {\n  //  discuss at: http://locutusjs.io/php/ip2long/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Victor\n  //  revised by: fearphage (http://http/my.opera.com/fearphage/)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //    estarget: es2015\n  //   example 1: ip2long('192.0.34.166')\n  //   returns 1: 3221234342\n  //   example 2: ip2long('0.0xABCDEF')\n  //   returns 2: 11259375\n  //   example 3: ip2long('255.255.255.256')\n  //   returns 3: false\n\n  let i = 0\n  // PHP allows decimal, octal, and hexadecimal IP components.\n  // PHP allows between 1 (e.g. 127) to 4 (e.g 127.0.0.1) components.\n\n  const pattern = new RegExp([\n    '^([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+)',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?$'\n  ].join(''), 'i')\n\n  argIP = argIP.match(pattern) // Verify argIP format.\n  if (!argIP) {\n    // Invalid format.\n    return false\n  }\n  // Reuse argIP variable for component counter.\n  argIP[0] = 0\n  for (i = 1; i < 5; i += 1) {\n    argIP[0] += !!((argIP[i] || '').length)\n    argIP[i] = parseInt(argIP[i]) || 0\n  }\n  // Continue to use argIP for overflow values.\n  // PHP does not allow any component to overflow.\n  argIP.push(256, 256, 256, 256)\n  // Recalculate overflow of last component supplied to make up for missing components.\n  argIP[4 + argIP[0]] *= Math.pow(256, 4 - argIP[0])\n  if (argIP[1] >= argIP[5] ||\n    argIP[2] >= argIP[6] ||\n    argIP[3] >= argIP[7] ||\n    argIP[4] >= argIP[8]) {\n    return false\n  }\n\n  return argIP[1] * (argIP[0] === 1 || 16777216) +\n    argIP[2] * (argIP[0] <= 2 || 65536) +\n    argIP[3] * (argIP[0] <= 3 || 256) +\n    argIP[4] * 1\n}\n","source":"php/network/ip2long.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ip2long('192.0.34.166')\n  - ip2long('0.0xABCDEF')\n  - ip2long('255.255.255.256')\nestarget: es2015\nreturns:\n  - '3221234342'\n  - '11259375'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n  improved by:\n    - Victor\n  revised by:\n    - 'fearphage (http://http/my.opera.com/fearphage/)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'sip2long in JavaScript\nfunction: ip2long\ncategory: network\nlanguage: php\npermalink: php/network/ip2long/\nalias:\n  - /functions/php/ip2long/\n  - /functions/network/ip2long/\n  - /php/ip2long/\n  - /functions/ip2long/\n---\nmodule.exports = function ip2long (argIP) {\n  //  discuss at: http://locutusjs.io/php/ip2long/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Victor\n  //  revised by: fearphage (http://http/my.opera.com/fearphage/)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //    estarget: es2015\n  //   example 1: ip2long('192.0.34.166')\n  //   returns 1: 3221234342\n  //   example 2: ip2long('0.0xABCDEF')\n  //   returns 2: 11259375\n  //   example 3: ip2long('255.255.255.256')\n  //   returns 3: false\n\n  let i = 0\n  // PHP allows decimal, octal, and hexadecimal IP components.\n  // PHP allows between 1 (e.g. 127) to 4 (e.g 127.0.0.1) components.\n\n  const pattern = new RegExp([\n    '^([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+)',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?$'\n  ].join(''), 'i')\n\n  argIP = argIP.match(pattern) // Verify argIP format.\n  if (!argIP) {\n    // Invalid format.\n    return false\n  }\n  // Reuse argIP variable for component counter.\n  argIP[0] = 0\n  for (i = 1; i < 5; i += 1) {\n    argIP[0] += !!((argIP[i] || '').length)\n    argIP[i] = parseInt(argIP[i]) || 0\n  }\n  // Continue to use argIP for overflow values.\n  // PHP does not allow any component to overflow.\n  argIP.push(256, 256, 256, 256)\n  // Recalculate overflow of last component supplied to make up for missing components.\n  argIP[4 + argIP[0]] *= Math.pow(256, 4 - argIP[0])\n  if (argIP[1] >= argIP[5] ||\n    argIP[2] >= argIP[6] ||\n    argIP[3] >= argIP[7] ||\n    argIP[4] >= argIP[8]) {\n    return false\n  }\n\n  return argIP[1] * (argIP[0] === 1 || 16777216) +\n    argIP[2] * (argIP[0] <= 2 || 65536) +\n    argIP[3] * (argIP[0] <= 3 || 256) +\n    argIP[4] * 1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/ip2long/index.html","comments":1,"_id":"cinoeja0z005jou9y96vm5e67","content":"module.exports = function ip2long (argIP) {\n  //  discuss at: http://locutusjs.io/php/ip2long/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Victor\n  //  revised by: fearphage (http://http/my.opera.com/fearphage/)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //    estarget: es2015\n  //   example 1: ip2long('192.0.34.166')\n  //   returns 1: 3221234342\n  //   example 2: ip2long('0.0xABCDEF')\n  //   returns 2: 11259375\n  //   example 3: ip2long('255.255.255.256')\n  //   returns 3: false\n\n  let i = 0\n  // PHP allows decimal, octal, and hexadecimal IP components.\n  // PHP allows between 1 (e.g. 127) to 4 (e.g 127.0.0.1) components.\n\n  const pattern = new RegExp([\n    '^([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+)',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?$'\n  ].join(''), 'i')\n\n  argIP = argIP.match(pattern) // Verify argIP format.\n  if (!argIP) {\n    // Invalid format.\n    return false\n  }\n  // Reuse argIP variable for component counter.\n  argIP[0] = 0\n  for (i = 1; i < 5; i += 1) {\n    argIP[0] += !!((argIP[i] || '').length)\n    argIP[i] = parseInt(argIP[i]) || 0\n  }\n  // Continue to use argIP for overflow values.\n  // PHP does not allow any component to overflow.\n  argIP.push(256, 256, 256, 256)\n  // Recalculate overflow of last component supplied to make up for missing components.\n  argIP[4 + argIP[0]] *= Math.pow(256, 4 - argIP[0])\n  if (argIP[1] >= argIP[5] ||\n    argIP[2] >= argIP[6] ||\n    argIP[3] >= argIP[7] ||\n    argIP[4] >= argIP[8]) {\n    return false\n  }\n\n  return argIP[1] * (argIP[0] === 1 || 16777216) +\n    argIP[2] * (argIP[0] ","excerpt":"","more":"module.exports = function ip2long (argIP) {\n  //  discuss at: http://locutusjs.io/php/ip2long/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Victor\n  //  revised by: fearphage (http://http/my.opera.com/fearphage/)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //    estarget: es2015\n  //   example 1: ip2long('192.0.34.166')\n  //   returns 1: 3221234342\n  //   example 2: ip2long('0.0xABCDEF')\n  //   returns 2: 11259375\n  //   example 3: ip2long('255.255.255.256')\n  //   returns 3: false\n\n  let i = 0\n  // PHP allows decimal, octal, and hexadecimal IP components.\n  // PHP allows between 1 (e.g. 127) to 4 (e.g 127.0.0.1) components.\n\n  const pattern = new RegExp([\n    '^([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+)',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?',\n    '(?:\\\\.([1-9]\\\\d*|0[0-7]*|0x[\\\\da-f]+))?$'\n  ].join(''), 'i')\n\n  argIP = argIP.match(pattern) // Verify argIP format.\n  if (!argIP) {\n    // Invalid format.\n    return false\n  }\n  // Reuse argIP variable for component counter.\n  argIP[0] = 0\n  for (i = 1; i < 5; i += 1) {\n    argIP[0] += !!((argIP[i] || '').length)\n    argIP[i] = parseInt(argIP[i]) || 0\n  }\n  // Continue to use argIP for overflow values.\n  // PHP does not allow any component to overflow.\n  argIP.push(256, 256, 256, 256)\n  // Recalculate overflow of last component supplied to make up for missing components.\n  argIP[4 + argIP[0]] *= Math.pow(256, 4 - argIP[0])\n  if (argIP[1] >= argIP[5] ||\n    argIP[2] >= argIP[6] ||\n    argIP[3] >= argIP[7] ||\n    argIP[4] >= argIP[8]) {\n    return false\n  }\n\n  return argIP[1] * (argIP[0] === 1 || 16777216) +\n    argIP[2] * (argIP[0] <= 2 || 65536) +\n    argIP[3] * (argIP[0] <= 3 || 256) +\n    argIP[4] * 1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["long2ip( 3221234342 )"],"estarget":"es5","returns":["'192.0.34.166'"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"]},"notes":[],"layout":"function","title":"php'slong2ip in JavaScript","function":"long2ip","category":"network","language":"php","alias":["/functions/php/long2ip/","/functions/network/long2ip/","/php/long2ip/","/functions/long2ip/"],"_content":"module.exports = function long2ip (ip) {\n  //  discuss at: http://locutusjs.io/php/long2ip/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: long2ip( 3221234342 )\n  //   returns 1: '192.0.34.166'\n\n  if (!isFinite(ip)) {\n    return false\n  }\n\n  return [ip >>> 24, ip >>> 16 & 0xFF, ip >>> 8 & 0xFF, ip & 0xFF].join('.')\n}\n","source":"php/network/long2ip.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - long2ip( 3221234342 )\nestarget: es5\nreturns:\n  - '''192.0.34.166'''\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\nnotes: []\nlayout: function\ntitle: php'slong2ip in JavaScript\nfunction: long2ip\ncategory: network\nlanguage: php\npermalink: php/network/long2ip/\nalias:\n  - /functions/php/long2ip/\n  - /functions/network/long2ip/\n  - /php/long2ip/\n  - /functions/long2ip/\n---\nmodule.exports = function long2ip (ip) {\n  //  discuss at: http://locutusjs.io/php/long2ip/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: long2ip( 3221234342 )\n  //   returns 1: '192.0.34.166'\n\n  if (!isFinite(ip)) {\n    return false\n  }\n\n  return [ip >>> 24, ip >>> 16 & 0xFF, ip >>> 8 & 0xFF, ip & 0xFF].join('.')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/long2ip/index.html","comments":1,"_id":"cinoeja0z005kou9y5ptk68bf","content":"module.exports = function long2ip (ip) {\n  //  discuss at: http://locutusjs.io/php/long2ip/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: long2ip( 3221234342 )\n  //   returns 1: '192.0.34.166'\n\n  if (!isFinite(ip)) {\n    return false\n  }\n\n  return [ip >>> 24, ip >>> 16 & 0xFF, ip >>> 8 & 0xFF, ip & 0xFF].join('.')\n}\n","excerpt":"","more":"module.exports = function long2ip (ip) {\n  //  discuss at: http://locutusjs.io/php/long2ip/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //   example 1: long2ip( 3221234342 )\n  //   returns 1: '192.0.34.166'\n\n  if (!isFinite(ip)) {\n    return false\n  }\n\n  return [ip >>> 24, ip >>> 16 & 0xFF, ip >>> 8 & 0xFF, ip & 0xFF].join('.')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["setcookie('author_name', 'Kevin van Zonneveld')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Andreas","Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'ssetcookie in JavaScript","function":"setcookie","category":"network","language":"php","alias":["/functions/php/setcookie/","/functions/network/setcookie/","/php/setcookie/","/functions/setcookie/"],"_content":"module.exports = function setcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setcookie/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Andreas\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: setcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  var setrawcookie = require('../network/setrawcookie')\n  return setrawcookie(name, encodeURIComponent(value), expires, path, domain, secure)\n}\n","source":"php/network/setcookie.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'setcookie(''author_name'', ''Kevin van Zonneveld'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - Andreas\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'ssetcookie in JavaScript\nfunction: setcookie\ncategory: network\nlanguage: php\npermalink: php/network/setcookie/\nalias:\n  - /functions/php/setcookie/\n  - /functions/network/setcookie/\n  - /php/setcookie/\n  - /functions/setcookie/\n---\nmodule.exports = function setcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setcookie/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Andreas\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: setcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  var setrawcookie = require('../network/setrawcookie')\n  return setrawcookie(name, encodeURIComponent(value), expires, path, domain, secure)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/setcookie/index.html","comments":1,"_id":"cinoeja0z005lou9yomlgbl00","content":"module.exports = function setcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setcookie/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Andreas\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: setcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  var setrawcookie = require('../network/setrawcookie')\n  return setrawcookie(name, encodeURIComponent(value), expires, path, domain, secure)\n}\n","excerpt":"","more":"module.exports = function setcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setcookie/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Andreas\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: setcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  var setrawcookie = require('../network/setrawcookie')\n  return setrawcookie(name, encodeURIComponent(value), expires, path, domain, secure)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["setrawcookie('author_name', 'Kevin van Zonneveld')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","setcookie"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Michael"]},"notes":["This function requires access to the `window` global and is Browser-only"],"layout":"function","title":"php'ssetrawcookie in JavaScript","function":"setrawcookie","category":"network","language":"php","alias":["/functions/php/setrawcookie/","/functions/network/setrawcookie/","/php/setrawcookie/","/functions/setrawcookie/"],"_content":"module.exports = function setrawcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setrawcookie/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && (/^\\d+$/).test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = (new Date(expires * 1e3)).toUTCString()\n  }\n\n  var r = [name + '=' + value]\n  var i = ''\n  var s = {\n    expires: expires,\n    path: path,\n    domain: domain\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n","source":"php/network/setrawcookie.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'setrawcookie(''author_name'', ''Kevin van Zonneveld'')'\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - setcookie\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Michael\nnotes:\n  - This function requires access to the `window` global and is Browser-only\nlayout: function\ntitle: php'ssetrawcookie in JavaScript\nfunction: setrawcookie\ncategory: network\nlanguage: php\npermalink: php/network/setrawcookie/\nalias:\n  - /functions/php/setrawcookie/\n  - /functions/network/setrawcookie/\n  - /php/setrawcookie/\n  - /functions/setrawcookie/\n---\nmodule.exports = function setrawcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setrawcookie/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && (/^\\d+$/).test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = (new Date(expires * 1e3)).toUTCString()\n  }\n\n  var r = [name + '=' + value]\n  var i = ''\n  var s = {\n    expires: expires,\n    path: path,\n    domain: domain\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/network/setrawcookie/index.html","comments":1,"_id":"cinoeja10005mou9ya7e16y2c","content":"module.exports = function setrawcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setrawcookie/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && (/^\\d+$/).test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = (new Date(expires * 1e3)).toUTCString()\n  }\n\n  var r = [name + '=' + value]\n  var i = ''\n  var s = {\n    expires: expires,\n    path: path,\n    domain: domain\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n","excerpt":"","more":"module.exports = function setrawcookie (name, value, expires, path, domain, secure) {\n  //  discuss at: http://locutusjs.io/php/setrawcookie/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: setcookie\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Michael\n  //      note 1: This function requires access to the `window` global and is Browser-only\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setrawcookie('author_name', 'Kevin van Zonneveld')\n  //   returns 1: true\n\n  if (typeof window === 'undefined') {\n    return true\n  }\n\n  if (typeof expires === 'string' && (/^\\d+$/).test(expires)) {\n    expires = parseInt(expires, 10)\n  }\n\n  if (expires instanceof Date) {\n    expires = expires.toUTCString()\n  } else if (typeof expires === 'number') {\n    expires = (new Date(expires * 1e3)).toUTCString()\n  }\n\n  var r = [name + '=' + value]\n  var i = ''\n  var s = {\n    expires: expires,\n    path: path,\n    domain: domain\n  }\n  for (i in s) {\n    if (s.hasOwnProperty(i)) {\n      // Exclude items on Object.prototype\n      s[i] && r.push(i + '=' + s[i])\n    }\n  }\n\n  if (secure) {\n    r.push('secure')\n  }\n\n  window.document.cookie = r.join(';')\n\n  return true\n}\n"},{"type":"category","language":"php","category":"pcre","title":"pcre","_content":"","source":"php/pcre/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: pcre\ntitle: pcre\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/pcre/index.html","comments":1,"layout":"page","_id":"cinoeja10005nou9yx3j1m5kz","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["preg_quote(\"$40\")","preg_quote(\"*RRRING* Hello?\")","preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")"],"estarget":"es5","returns":["'\\\\$40'","'\\\\*RRRING\\\\* Hello\\\\?'","'\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'"],"dependencies":[],"authors":{"original by":["booeyOH"],"improved by":["Ates Goral (http://magnetiq.com)","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'spreg_quote in JavaScript","function":"preg_quote","category":"pcre","language":"php","alias":["/functions/php/preg_quote/","/functions/pcre/preg_quote/","/php/preg_quote/","/functions/preg_quote/"],"_content":"module.exports = function preg_quote (str, delimiter) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/preg_quote/\n  // original by: booeyOH\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: preg_quote(\"$40\")\n  //   returns 1: '\\\\$40'\n  //   example 2: preg_quote(\"*RRRING* Hello?\")\n  //   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n  //   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")\n  //   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n  return (str + '')\n    .replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&')\n}\n","source":"php/pcre/preg_quote.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - preg_quote(\"$40\")\n  - preg_quote(\"*RRRING* Hello?\")\n  - 'preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")'\nestarget: es5\nreturns:\n  - '''\\\\$40'''\n  - '''\\\\*RRRING\\\\* Hello\\\\?'''\n  - '''\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'''\ndependencies: []\nauthors:\n  original by:\n    - booeyOH\n  improved by:\n    - 'Ates Goral (http://magnetiq.com)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'spreg_quote in JavaScript\nfunction: preg_quote\ncategory: pcre\nlanguage: php\npermalink: php/pcre/preg_quote/\nalias:\n  - /functions/php/preg_quote/\n  - /functions/pcre/preg_quote/\n  - /php/preg_quote/\n  - /functions/preg_quote/\n---\nmodule.exports = function preg_quote (str, delimiter) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/preg_quote/\n  // original by: booeyOH\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: preg_quote(\"$40\")\n  //   returns 1: '\\\\$40'\n  //   example 2: preg_quote(\"*RRRING* Hello?\")\n  //   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n  //   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")\n  //   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n  return (str + '')\n    .replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/pcre/preg_quote/index.html","comments":1,"_id":"cinoeja10005oou9y8a7ox1ux","content":"module.exports = function preg_quote (str, delimiter) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/preg_quote/\n  // original by: booeyOH\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: preg_quote(\"$40\")\n  //   returns 1: '\\\\$40'\n  //   example 2: preg_quote(\"*RRRING* Hello?\")\n  //   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n  //   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")\n  //   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n  return (str + '')\n    .replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&')\n}\n</\\\\>","excerpt":"","more":"module.exports = function preg_quote (str, delimiter) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/preg_quote/\n  // original by: booeyOH\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: preg_quote(\"$40\")\n  //   returns 1: '\\\\$40'\n  //   example 2: preg_quote(\"*RRRING* Hello?\")\n  //   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n  //   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\")\n  //   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n  return (str + '')\n    .replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sql_regcase('Foo - bar.')"],"estarget":"es5","returns":["'[Ff][Oo][Oo] - [Bb][Aa][Rr].'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'ssql_regcase in JavaScript","function":"sql_regcase","category":"pcre","language":"php","alias":["/functions/php/sql_regcase/","/functions/pcre/sql_regcase/","/php/sql_regcase/","/functions/sql_regcase/"],"_content":"module.exports = function sql_regcase (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sql_regcase/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sql_regcase('Foo - bar.')\n  //   returns 1: '[Ff][Oo][Oo] - [Bb][Aa][Rr].'\n\n  var setlocale = require('../strings/setlocale')\n  var i = 0\n  var upper = ''\n  var lower = ''\n  var pos = 0\n  var retStr = ''\n\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  upper = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.upper\n  lower = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.lower\n\n  // @todo: Make this more readable\n  for (i = 0; i < str.length; i++) {\n    if (((pos = upper.indexOf(str.charAt(i))) !== -1) ||\n      ((pos = lower.indexOf(str.charAt(i))) !== -1)) {\n      retStr += '[' + upper.charAt(pos) + lower.charAt(pos) + ']'\n    } else {\n      retStr += str.charAt(i)\n    }\n  }\n\n  return retStr\n}\n","source":"php/pcre/sql_regcase.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - sql_regcase('Foo - bar.')\nestarget: es5\nreturns:\n  - '''[Ff][Oo][Oo] - [Bb][Aa][Rr].'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'ssql_regcase in JavaScript\nfunction: sql_regcase\ncategory: pcre\nlanguage: php\npermalink: php/pcre/sql_regcase/\nalias:\n  - /functions/php/sql_regcase/\n  - /functions/pcre/sql_regcase/\n  - /php/sql_regcase/\n  - /functions/sql_regcase/\n---\nmodule.exports = function sql_regcase (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sql_regcase/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sql_regcase('Foo - bar.')\n  //   returns 1: '[Ff][Oo][Oo] - [Bb][Aa][Rr].'\n\n  var setlocale = require('../strings/setlocale')\n  var i = 0\n  var upper = ''\n  var lower = ''\n  var pos = 0\n  var retStr = ''\n\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  upper = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.upper\n  lower = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.lower\n\n  // @todo: Make this more readable\n  for (i = 0; i < str.length; i++) {\n    if (((pos = upper.indexOf(str.charAt(i))) !== -1) ||\n      ((pos = lower.indexOf(str.charAt(i))) !== -1)) {\n      retStr += '[' + upper.charAt(pos) + lower.charAt(pos) + ']'\n    } else {\n      retStr += str.charAt(i)\n    }\n  }\n\n  return retStr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/pcre/sql_regcase/index.html","comments":1,"_id":"cinoeja11005pou9y8o25kyz8","content":"module.exports = function sql_regcase (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sql_regcase/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sql_regcase('Foo - bar.')\n  //   returns 1: '[Ff][Oo][Oo] - [Bb][Aa][Rr].'\n\n  var setlocale = require('../strings/setlocale')\n  var i = 0\n  var upper = ''\n  var lower = ''\n  var pos = 0\n  var retStr = ''\n\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  upper = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.upper\n  lower = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.lower\n\n  // @todo: Make this more readable\n  for (i = 0; i < str.length; i++) {\n    if (((pos = upper.indexOf(str.charAt(i))) !== -1) ||\n      ((pos = lower.indexOf(str.charAt(i))) !== -1)) {\n      retStr += '[' + upper.charAt(pos) + lower.charAt(pos) + ']'\n    } else {\n      retStr += str.charAt(i)\n    }\n  }\n\n  return retStr\n}\n","excerpt":"","more":"module.exports = function sql_regcase (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sql_regcase/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sql_regcase('Foo - bar.')\n  //   returns 1: '[Ff][Oo][Oo] - [Bb][Aa][Rr].'\n\n  var setlocale = require('../strings/setlocale')\n  var i = 0\n  var upper = ''\n  var lower = ''\n  var pos = 0\n  var retStr = ''\n\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  upper = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.upper\n  lower = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE].LC_CTYPE.lower\n\n  // @todo: Make this more readable\n  for (i = 0; i < str.length; i++) {\n    if (((pos = upper.indexOf(str.charAt(i))) !== -1) ||\n      ((pos = lower.indexOf(str.charAt(i))) !== -1)) {\n      retStr += '[' + upper.charAt(pos) + lower.charAt(pos) + ']'\n    } else {\n      retStr += str.charAt(i)\n    }\n  }\n\n  return retStr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower z range, including square brackets","addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since not a lower-to-higher range"],"estarget":"es5","returns":["\"\\\\f\\\\o\\\\o\\\\[ \\\\]\"","\"\\\\zoo['\\\\.']\""],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["We show double backslashes in the return value example\ncode below because a JavaScript string will not\nrender them as backslashes otherwise"],"layout":"function","title":"php'saddcslashes in JavaScript","function":"addcslashes","category":"strings","language":"php","alias":["/functions/php/addcslashes/","/functions/strings/addcslashes/","/php/addcslashes/","/functions/addcslashes/"],"_content":"module.exports = function addcslashes (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/addcslashes/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: We show double backslashes in the return value example\n  //      note 1: code below because a JavaScript string will not\n  //      note 1: render them as backslashes otherwise\n  //   example 1: addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower z range, including square brackets\n  //   returns 1: \"\\\\f\\\\o\\\\o\\\\[ \\\\]\"\n  //   example 2: addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since not a lower-to-higher range\n  //   returns 2: \"\\\\zoo['\\\\.']\"\n  //   _example 3: addcslashes(\"@a\\u0000\\u0010\\u00A9\", \"\\0..\\37!@\\177..\\377\"); // Escape as octals those specified and less than 32 (0x20) or greater than 126 (0x7E), but not otherwise\n  //   _returns 3: '\\\\@a\\\\000\\\\020\\\\302\\\\251'\n  //   _example 4: addcslashes(\"\\u0020\\u007E\", \"\\40..\\175\"); // Those between 32 (0x20 or 040) and 126 (0x7E or 0176) decimal value will be backslashed if specified (not octalized)\n  //   _returns 4: '\\\\ ~'\n  //   _example 5: addcslashes(\"\\r\\u0007\\n\", '\\0..\\37'); // Recognize C escape sequences if specified\n  //   _returns 5: \"\\\\r\\\\a\\\\n\"\n  //   _example 6: addcslashes(\"\\r\\u0007\\n\", '\\0'); // Do not recognize C escape sequences if not specified\n  //   _returns 6: \"\\r\\u0007\\n\"\n\n  var target = ''\n  var chrs = []\n  var i = 0\n  var j = 0\n  var c = ''\n  var next = ''\n  var rangeBegin = ''\n  var rangeEnd = ''\n  var chr = ''\n  var begin = 0\n  var end = 0\n  var octalLength = 0\n  var postOctalPos = 0\n  var cca = 0\n  var escHexGrp = []\n  var encoded = ''\n  var percentHex = /%([\\dA-Fa-f]+)/g\n\n  var _pad = function (n, c) {\n    if ((n = n + '').length < c) {\n      return new Array(++c - n.length).join('0') + n\n    }\n    return n\n  }\n\n  for (i = 0; i < charlist.length; i++) {\n    c = charlist.charAt(i)\n    next = charlist.charAt(i + 1)\n    if (c === '\\\\' && next && (/\\d/).test(next)) {\n      // Octal\n      rangeBegin = charlist.slice(i + 1).match(/^\\d+/)[0]\n      octalLength = rangeBegin.length\n      postOctalPos = i + octalLength + 1\n      if (charlist.charAt(postOctalPos) + charlist.charAt(postOctalPos + 1) === '..') {\n        // Octal begins range\n        begin = rangeBegin.charCodeAt(0)\n        if ((/\\\\\\d/).test(charlist.charAt(postOctalPos + 2) + charlist.charAt(postOctalPos + 3))) {\n          // Range ends with octal\n          rangeEnd = charlist.slice(postOctalPos + 3).match(/^\\d+/)[0]\n          // Skip range end backslash\n          i += 1\n        } else if (charlist.charAt(postOctalPos + 2)) {\n          // Range ends with character\n          rangeEnd = charlist.charAt(postOctalPos + 2)\n        } else {\n          throw new Error('Range with no end point')\n        }\n        end = rangeEnd.charCodeAt(0)\n        if (end > begin) {\n          // Treat as a range\n          for (j = begin; j <= end; j++) {\n            chrs.push(String.fromCharCode(j))\n          }\n        } else {\n          // Supposed to treat period, begin and end as individual characters only, not a range\n          chrs.push('.', rangeBegin, rangeEnd)\n        }\n        // Skip dots and range end (already skipped range end backslash if present)\n        i += rangeEnd.length + 2\n      } else {\n        // Octal is by itself\n        chr = String.fromCharCode(parseInt(rangeBegin, 8))\n        chrs.push(chr)\n      }\n      // Skip range begin\n      i += octalLength\n    } else if (next + charlist.charAt(i + 2) === '..') {\n      // Character begins range\n      rangeBegin = c\n      begin = rangeBegin.charCodeAt(0)\n      if ((/\\\\\\d/).test(charlist.charAt(i + 3) + charlist.charAt(i + 4))) {\n        // Range ends with octal\n        rangeEnd = charlist.slice(i + 4).match(/^\\d+/)[0]\n        // Skip range end backslash\n        i += 1\n      } else if (charlist.charAt(i + 3)) {\n        // Range ends with character\n        rangeEnd = charlist.charAt(i + 3)\n      } else {\n        throw new Error('Range with no end point')\n      }\n      end = rangeEnd.charCodeAt(0)\n      if (end > begin) {\n        // Treat as a range\n        for (j = begin; j <= end; j++) {\n          chrs.push(String.fromCharCode(j))\n        }\n      } else {\n        // Supposed to treat period, begin and end as individual characters only, not a range\n        chrs.push('.', rangeBegin, rangeEnd)\n      }\n      // Skip dots and range end (already skipped range end backslash if present)\n      i += rangeEnd.length + 2\n    } else {\n      // Character is by itself\n      chrs.push(c)\n    }\n  }\n\n  for (i = 0; i < str.length; i++) {\n    c = str.charAt(i)\n    if (chrs.indexOf(c) !== -1) {\n      target += '\\\\'\n      cca = c.charCodeAt(0)\n      if (cca < 32 || cca > 126) {\n        // Needs special escaping\n        switch (c) {\n          case '\\n':\n            target += 'n'\n            break\n          case '\\t':\n            target += 't'\n            break\n          case '\\u000D':\n            target += 'r'\n            break\n          case '\\u0007':\n            target += 'a'\n            break\n          case '\\v':\n            target += 'v'\n            break\n          case '\\b':\n            target += 'b'\n            break\n          case '\\f':\n            target += 'f'\n            break\n          default:\n            // target += _pad(cca.toString(8), 3);break; // Sufficient for UTF-16\n            encoded = encodeURIComponent(c)\n\n            // 3-length-padded UTF-8 octets\n            if ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              // already added a slash above:\n              target += _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            while ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              target += '\\\\' + _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            break\n        }\n      } else {\n        // Perform regular backslashed escaping\n        target += c\n      }\n    } else {\n      // Just add the character unescaped\n      target += c\n    }\n  }\n\n  return target\n}\n","source":"php/strings/addcslashes.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower\n    z range, including square brackets\n  - >-\n    addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since\n    not a lower-to-higher range\nestarget: es5\nreturns:\n  - '\"\\\\f\\\\o\\\\o\\\\[ \\\\]\"'\n  - '\"\\\\zoo[''\\\\.'']\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    We show double backslashes in the return value example\n    code below because a JavaScript string will not\n    render them as backslashes otherwise\nlayout: function\ntitle: php'saddcslashes in JavaScript\nfunction: addcslashes\ncategory: strings\nlanguage: php\npermalink: php/strings/addcslashes/\nalias:\n  - /functions/php/addcslashes/\n  - /functions/strings/addcslashes/\n  - /php/addcslashes/\n  - /functions/addcslashes/\n---\nmodule.exports = function addcslashes (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/addcslashes/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: We show double backslashes in the return value example\n  //      note 1: code below because a JavaScript string will not\n  //      note 1: render them as backslashes otherwise\n  //   example 1: addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower z range, including square brackets\n  //   returns 1: \"\\\\f\\\\o\\\\o\\\\[ \\\\]\"\n  //   example 2: addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since not a lower-to-higher range\n  //   returns 2: \"\\\\zoo['\\\\.']\"\n  //   _example 3: addcslashes(\"@a\\u0000\\u0010\\u00A9\", \"\\0..\\37!@\\177..\\377\"); // Escape as octals those specified and less than 32 (0x20) or greater than 126 (0x7E), but not otherwise\n  //   _returns 3: '\\\\@a\\\\000\\\\020\\\\302\\\\251'\n  //   _example 4: addcslashes(\"\\u0020\\u007E\", \"\\40..\\175\"); // Those between 32 (0x20 or 040) and 126 (0x7E or 0176) decimal value will be backslashed if specified (not octalized)\n  //   _returns 4: '\\\\ ~'\n  //   _example 5: addcslashes(\"\\r\\u0007\\n\", '\\0..\\37'); // Recognize C escape sequences if specified\n  //   _returns 5: \"\\\\r\\\\a\\\\n\"\n  //   _example 6: addcslashes(\"\\r\\u0007\\n\", '\\0'); // Do not recognize C escape sequences if not specified\n  //   _returns 6: \"\\r\\u0007\\n\"\n\n  var target = ''\n  var chrs = []\n  var i = 0\n  var j = 0\n  var c = ''\n  var next = ''\n  var rangeBegin = ''\n  var rangeEnd = ''\n  var chr = ''\n  var begin = 0\n  var end = 0\n  var octalLength = 0\n  var postOctalPos = 0\n  var cca = 0\n  var escHexGrp = []\n  var encoded = ''\n  var percentHex = /%([\\dA-Fa-f]+)/g\n\n  var _pad = function (n, c) {\n    if ((n = n + '').length < c) {\n      return new Array(++c - n.length).join('0') + n\n    }\n    return n\n  }\n\n  for (i = 0; i < charlist.length; i++) {\n    c = charlist.charAt(i)\n    next = charlist.charAt(i + 1)\n    if (c === '\\\\' && next && (/\\d/).test(next)) {\n      // Octal\n      rangeBegin = charlist.slice(i + 1).match(/^\\d+/)[0]\n      octalLength = rangeBegin.length\n      postOctalPos = i + octalLength + 1\n      if (charlist.charAt(postOctalPos) + charlist.charAt(postOctalPos + 1) === '..') {\n        // Octal begins range\n        begin = rangeBegin.charCodeAt(0)\n        if ((/\\\\\\d/).test(charlist.charAt(postOctalPos + 2) + charlist.charAt(postOctalPos + 3))) {\n          // Range ends with octal\n          rangeEnd = charlist.slice(postOctalPos + 3).match(/^\\d+/)[0]\n          // Skip range end backslash\n          i += 1\n        } else if (charlist.charAt(postOctalPos + 2)) {\n          // Range ends with character\n          rangeEnd = charlist.charAt(postOctalPos + 2)\n        } else {\n          throw new Error('Range with no end point')\n        }\n        end = rangeEnd.charCodeAt(0)\n        if (end > begin) {\n          // Treat as a range\n          for (j = begin; j <= end; j++) {\n            chrs.push(String.fromCharCode(j))\n          }\n        } else {\n          // Supposed to treat period, begin and end as individual characters only, not a range\n          chrs.push('.', rangeBegin, rangeEnd)\n        }\n        // Skip dots and range end (already skipped range end backslash if present)\n        i += rangeEnd.length + 2\n      } else {\n        // Octal is by itself\n        chr = String.fromCharCode(parseInt(rangeBegin, 8))\n        chrs.push(chr)\n      }\n      // Skip range begin\n      i += octalLength\n    } else if (next + charlist.charAt(i + 2) === '..') {\n      // Character begins range\n      rangeBegin = c\n      begin = rangeBegin.charCodeAt(0)\n      if ((/\\\\\\d/).test(charlist.charAt(i + 3) + charlist.charAt(i + 4))) {\n        // Range ends with octal\n        rangeEnd = charlist.slice(i + 4).match(/^\\d+/)[0]\n        // Skip range end backslash\n        i += 1\n      } else if (charlist.charAt(i + 3)) {\n        // Range ends with character\n        rangeEnd = charlist.charAt(i + 3)\n      } else {\n        throw new Error('Range with no end point')\n      }\n      end = rangeEnd.charCodeAt(0)\n      if (end > begin) {\n        // Treat as a range\n        for (j = begin; j <= end; j++) {\n          chrs.push(String.fromCharCode(j))\n        }\n      } else {\n        // Supposed to treat period, begin and end as individual characters only, not a range\n        chrs.push('.', rangeBegin, rangeEnd)\n      }\n      // Skip dots and range end (already skipped range end backslash if present)\n      i += rangeEnd.length + 2\n    } else {\n      // Character is by itself\n      chrs.push(c)\n    }\n  }\n\n  for (i = 0; i < str.length; i++) {\n    c = str.charAt(i)\n    if (chrs.indexOf(c) !== -1) {\n      target += '\\\\'\n      cca = c.charCodeAt(0)\n      if (cca < 32 || cca > 126) {\n        // Needs special escaping\n        switch (c) {\n          case '\\n':\n            target += 'n'\n            break\n          case '\\t':\n            target += 't'\n            break\n          case '\\u000D':\n            target += 'r'\n            break\n          case '\\u0007':\n            target += 'a'\n            break\n          case '\\v':\n            target += 'v'\n            break\n          case '\\b':\n            target += 'b'\n            break\n          case '\\f':\n            target += 'f'\n            break\n          default:\n            // target += _pad(cca.toString(8), 3);break; // Sufficient for UTF-16\n            encoded = encodeURIComponent(c)\n\n            // 3-length-padded UTF-8 octets\n            if ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              // already added a slash above:\n              target += _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            while ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              target += '\\\\' + _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            break\n        }\n      } else {\n        // Perform regular backslashed escaping\n        target += c\n      }\n    } else {\n      // Just add the character unescaped\n      target += c\n    }\n  }\n\n  return target\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/addcslashes/index.html","comments":1,"_id":"cinoeja11005qou9y62e09klo","content":"module.exports = function addcslashes (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/addcslashes/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: We show double backslashes in the return value example\n  //      note 1: code below because a JavaScript string will not\n  //      note 1: render them as backslashes otherwise\n  //   example 1: addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower z range, including square brackets\n  //   returns 1: \"\\\\f\\\\o\\\\o\\\\[ \\\\]\"\n  //   example 2: addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since not a lower-to-higher range\n  //   returns 2: \"\\\\zoo['\\\\.']\"\n  //   _example 3: addcslashes(\"@a\\u0000\\u0010\\u00A9\", \"\\0..\\37!@\\177..\\377\"); // Escape as octals those specified and less than 32 (0x20) or greater than 126 (0x7E), but not otherwise\n  //   _returns 3: '\\\\@a\\\\000\\\\020\\\\302\\\\251'\n  //   _example 4: addcslashes(\"\\u0020\\u007E\", \"\\40..\\175\"); // Those between 32 (0x20 or 040) and 126 (0x7E or 0176) decimal value will be backslashed if specified (not octalized)\n  //   _returns 4: '\\\\ ~'\n  //   _example 5: addcslashes(\"\\r\\u0007\\n\", '\\0..\\37'); // Recognize C escape sequences if specified\n  //   _returns 5: \"\\\\r\\\\a\\\\n\"\n  //   _example 6: addcslashes(\"\\r\\u0007\\n\", '\\0'); // Do not recognize C escape sequences if not specified\n  //   _returns 6: \"\\r\\u0007\\n\"\n\n  var target = ''\n  var chrs = []\n  var i = 0\n  var j = 0\n  var c = ''\n  var next = ''\n  var rangeBegin = ''\n  var rangeEnd = ''\n  var chr = ''\n  var begin = 0\n  var end = 0\n  var octalLength = 0\n  var postOctalPos = 0\n  var cca = 0\n  var escHexGrp = []\n  var encoded = ''\n  var percentHex = /%([\\dA-Fa-f]+)/g\n\n  var _pad = function (n, c) {\n    if ((n = n + '').length < c) {\n      return new Array(++c - n.length).join('0') + n\n    }\n    return n\n  }\n\n  for (i = 0; i < charlist.length; i++) {\n    c = charlist.charAt(i)\n    next = charlist.charAt(i + 1)\n    if (c === '\\\\' && next && (/\\d/).test(next)) {\n      // Octal\n      rangeBegin = charlist.slice(i + 1).match(/^\\d+/)[0]\n      octalLength = rangeBegin.length\n      postOctalPos = i + octalLength + 1\n      if (charlist.charAt(postOctalPos) + charlist.charAt(postOctalPos + 1) === '..') {\n        // Octal begins range\n        begin = rangeBegin.charCodeAt(0)\n        if ((/\\\\\\d/).test(charlist.charAt(postOctalPos + 2) + charlist.charAt(postOctalPos + 3))) {\n          // Range ends with octal\n          rangeEnd = charlist.slice(postOctalPos + 3).match(/^\\d+/)[0]\n          // Skip range end backslash\n          i += 1\n        } else if (charlist.charAt(postOctalPos + 2)) {\n          // Range ends with character\n          rangeEnd = charlist.charAt(postOctalPos + 2)\n        } else {\n          throw new Error('Range with no end point')\n        }\n        end = rangeEnd.charCodeAt(0)\n        if (end > begin) {\n          // Treat as a range\n          for (j = begin; j <= 2=\"\" end;=\"\" j++)=\"\" {=\"\" chrs.push(string.fromcharcode(j))=\"\" }=\"\" else=\"\" supposed=\"\" to=\"\" treat=\"\" period,=\"\" begin=\"\" and=\"\" end=\"\" as=\"\" individual=\"\" characters=\"\" only,=\"\" not=\"\" a=\"\" range=\"\" chrs.push('.',=\"\" rangebegin,=\"\" rangeend)=\"\" skip=\"\" dots=\"\" (already=\"\" skipped=\"\" backslash=\"\" if=\"\" present)=\"\" i=\"\" +=\"rangeEnd.length\" octal=\"\" is=\"\" by=\"\" itself=\"\" chr=\"String.fromCharCode(parseInt(rangeBegin,\" 8))=\"\" chrs.push(chr)=\"\" (next=\"\" charlist.charat(i=\"\" 2)=\"==\" '..')=\"\" character=\"\" begins=\"\" rangebegin=\"c\" ((=\"\" \\\\\\d=\"\" ).test(charlist.charat(i=\"\" 3)=\"\" 4)))=\"\" ends=\"\" with=\"\" rangeend=\"charlist.slice(i\" 4).match(=\"\" ^\\d+=\"\" )[0]=\"\" (charlist.charat(i=\"\" 3))=\"\" throw=\"\" new=\"\" error('range=\"\" no=\"\" point')=\"\" (end=\"\"> begin) {\n        // Treat as a range\n        for (j = begin; j <= 2=\"\" 32=\"\" end;=\"\" j++)=\"\" {=\"\" chrs.push(string.fromcharcode(j))=\"\" }=\"\" else=\"\" supposed=\"\" to=\"\" treat=\"\" period,=\"\" begin=\"\" and=\"\" end=\"\" as=\"\" individual=\"\" characters=\"\" only,=\"\" not=\"\" a=\"\" range=\"\" chrs.push('.',=\"\" rangebegin,=\"\" rangeend)=\"\" skip=\"\" dots=\"\" (already=\"\" skipped=\"\" backslash=\"\" if=\"\" present)=\"\" i=\"\" +=\"rangeEnd.length\" character=\"\" is=\"\" by=\"\" itself=\"\" chrs.push(c)=\"\" for=\"\" (i=\"0;\" <=\"\" str.length;=\"\" i++)=\"\" c=\"str.charAt(i)\" (chrs.indexof(c)=\"\" !=\"=\" -1)=\"\" target=\"\" cca=\"c.charCodeAt(0)\" (cca=\"\" ||=\"\"> 126) {\n        // Needs special escaping\n        switch (c) {\n          case '\\n':\n            target += 'n'\n            break\n          case '\\t':\n            target += 't'\n            break\n          case '\\u000D':\n            target += 'r'\n            break\n          case '\\u0007':\n            target += 'a'\n            break\n          case '\\v':\n            target += 'v'\n            break\n          case '\\b':\n            target += 'b'\n            break\n          case '\\f':\n            target += 'f'\n            break\n          default:\n            // target += _pad(cca.toString(8), 3);break; // Sufficient for UTF-16\n            encoded = encodeURIComponent(c)\n\n            // 3-length-padded UTF-8 octets\n            if ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              // already added a slash above:\n              target += _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            while ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              target += '\\\\' + _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            break\n        }\n      } else {\n        // Perform regular backslashed escaping\n        target += c\n      }\n    } else {\n      // Just add the character unescaped\n      target += c\n    }\n  }\n\n  return target\n}\n</=></=>","excerpt":"","more":"module.exports = function addcslashes (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/addcslashes/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: We show double backslashes in the return value example\n  //      note 1: code below because a JavaScript string will not\n  //      note 1: render them as backslashes otherwise\n  //   example 1: addcslashes('foo[ ]', 'A..z'); // Escape all ASCII within capital A to lower z range, including square brackets\n  //   returns 1: \"\\\\f\\\\o\\\\o\\\\[ \\\\]\"\n  //   example 2: addcslashes(\"zoo['.']\", 'z..A'); // Only escape z, period, and A here since not a lower-to-higher range\n  //   returns 2: \"\\\\zoo['\\\\.']\"\n  //   _example 3: addcslashes(\"@a\\u0000\\u0010\\u00A9\", \"\\0..\\37!@\\177..\\377\"); // Escape as octals those specified and less than 32 (0x20) or greater than 126 (0x7E), but not otherwise\n  //   _returns 3: '\\\\@a\\\\000\\\\020\\\\302\\\\251'\n  //   _example 4: addcslashes(\"\\u0020\\u007E\", \"\\40..\\175\"); // Those between 32 (0x20 or 040) and 126 (0x7E or 0176) decimal value will be backslashed if specified (not octalized)\n  //   _returns 4: '\\\\ ~'\n  //   _example 5: addcslashes(\"\\r\\u0007\\n\", '\\0..\\37'); // Recognize C escape sequences if specified\n  //   _returns 5: \"\\\\r\\\\a\\\\n\"\n  //   _example 6: addcslashes(\"\\r\\u0007\\n\", '\\0'); // Do not recognize C escape sequences if not specified\n  //   _returns 6: \"\\r\\u0007\\n\"\n\n  var target = ''\n  var chrs = []\n  var i = 0\n  var j = 0\n  var c = ''\n  var next = ''\n  var rangeBegin = ''\n  var rangeEnd = ''\n  var chr = ''\n  var begin = 0\n  var end = 0\n  var octalLength = 0\n  var postOctalPos = 0\n  var cca = 0\n  var escHexGrp = []\n  var encoded = ''\n  var percentHex = /%([\\dA-Fa-f]+)/g\n\n  var _pad = function (n, c) {\n    if ((n = n + '').length < c) {\n      return new Array(++c - n.length).join('0') + n\n    }\n    return n\n  }\n\n  for (i = 0; i < charlist.length; i++) {\n    c = charlist.charAt(i)\n    next = charlist.charAt(i + 1)\n    if (c === '\\\\' && next && (/\\d/).test(next)) {\n      // Octal\n      rangeBegin = charlist.slice(i + 1).match(/^\\d+/)[0]\n      octalLength = rangeBegin.length\n      postOctalPos = i + octalLength + 1\n      if (charlist.charAt(postOctalPos) + charlist.charAt(postOctalPos + 1) === '..') {\n        // Octal begins range\n        begin = rangeBegin.charCodeAt(0)\n        if ((/\\\\\\d/).test(charlist.charAt(postOctalPos + 2) + charlist.charAt(postOctalPos + 3))) {\n          // Range ends with octal\n          rangeEnd = charlist.slice(postOctalPos + 3).match(/^\\d+/)[0]\n          // Skip range end backslash\n          i += 1\n        } else if (charlist.charAt(postOctalPos + 2)) {\n          // Range ends with character\n          rangeEnd = charlist.charAt(postOctalPos + 2)\n        } else {\n          throw new Error('Range with no end point')\n        }\n        end = rangeEnd.charCodeAt(0)\n        if (end > begin) {\n          // Treat as a range\n          for (j = begin; j <= end; j++) {\n            chrs.push(String.fromCharCode(j))\n          }\n        } else {\n          // Supposed to treat period, begin and end as individual characters only, not a range\n          chrs.push('.', rangeBegin, rangeEnd)\n        }\n        // Skip dots and range end (already skipped range end backslash if present)\n        i += rangeEnd.length + 2\n      } else {\n        // Octal is by itself\n        chr = String.fromCharCode(parseInt(rangeBegin, 8))\n        chrs.push(chr)\n      }\n      // Skip range begin\n      i += octalLength\n    } else if (next + charlist.charAt(i + 2) === '..') {\n      // Character begins range\n      rangeBegin = c\n      begin = rangeBegin.charCodeAt(0)\n      if ((/\\\\\\d/).test(charlist.charAt(i + 3) + charlist.charAt(i + 4))) {\n        // Range ends with octal\n        rangeEnd = charlist.slice(i + 4).match(/^\\d+/)[0]\n        // Skip range end backslash\n        i += 1\n      } else if (charlist.charAt(i + 3)) {\n        // Range ends with character\n        rangeEnd = charlist.charAt(i + 3)\n      } else {\n        throw new Error('Range with no end point')\n      }\n      end = rangeEnd.charCodeAt(0)\n      if (end > begin) {\n        // Treat as a range\n        for (j = begin; j <= end; j++) {\n          chrs.push(String.fromCharCode(j))\n        }\n      } else {\n        // Supposed to treat period, begin and end as individual characters only, not a range\n        chrs.push('.', rangeBegin, rangeEnd)\n      }\n      // Skip dots and range end (already skipped range end backslash if present)\n      i += rangeEnd.length + 2\n    } else {\n      // Character is by itself\n      chrs.push(c)\n    }\n  }\n\n  for (i = 0; i < str.length; i++) {\n    c = str.charAt(i)\n    if (chrs.indexOf(c) !== -1) {\n      target += '\\\\'\n      cca = c.charCodeAt(0)\n      if (cca < 32 || cca > 126) {\n        // Needs special escaping\n        switch (c) {\n          case '\\n':\n            target += 'n'\n            break\n          case '\\t':\n            target += 't'\n            break\n          case '\\u000D':\n            target += 'r'\n            break\n          case '\\u0007':\n            target += 'a'\n            break\n          case '\\v':\n            target += 'v'\n            break\n          case '\\b':\n            target += 'b'\n            break\n          case '\\f':\n            target += 'f'\n            break\n          default:\n            // target += _pad(cca.toString(8), 3);break; // Sufficient for UTF-16\n            encoded = encodeURIComponent(c)\n\n            // 3-length-padded UTF-8 octets\n            if ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              // already added a slash above:\n              target += _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            while ((escHexGrp = percentHex.exec(encoded)) !== null) {\n              target += '\\\\' + _pad(parseInt(escHexGrp[1], 16).toString(8), 3)\n            }\n            break\n        }\n      } else {\n        // Perform regular backslashed escaping\n        target += c\n      }\n    } else {\n      // Just add the character unescaped\n      target += c\n    }\n  }\n\n  return target\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["addslashes(\"kevin's birthday\")"],"estarget":"es5","returns":["\"kevin\\\\'s birthday\""],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Ates Goral (http://magnetiq.com)","marrtins","Nate","Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","Oskar Larsson Högfeldt (http://oskar-lh.name/)"],"input by":["Denny Wardhana"]},"notes":[],"layout":"function","title":"php'saddslashes in JavaScript","function":"addslashes","category":"strings","language":"php","alias":["/functions/php/addslashes/","/functions/strings/addslashes/","/php/addslashes/","/functions/addslashes/"],"_content":"module.exports = function addslashes (str) {\n  //  discuss at: http://locutusjs.io/php/addslashes/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Nate\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Oskar Larsson Högfeldt (http://oskar-lh.name/)\n  //    input by: Denny Wardhana\n  //   example 1: addslashes(\"kevin's birthday\")\n  //   returns 1: \"kevin\\\\'s birthday\"\n\n  return (str + '')\n    .replace(/[\\\\\"']/g, '\\\\$&')\n    .replace(/\\u0000/g, '\\\\0')\n}\n","source":"php/strings/addslashes.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - addslashes(\"kevin's birthday\")\nestarget: es5\nreturns:\n  - '\"kevin\\\\''s birthday\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Ates Goral (http://magnetiq.com)'\n    - marrtins\n    - Nate\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Oskar Larsson Högfeldt (http://oskar-lh.name/)'\n  input by:\n    - Denny Wardhana\nnotes: []\nlayout: function\ntitle: php'saddslashes in JavaScript\nfunction: addslashes\ncategory: strings\nlanguage: php\npermalink: php/strings/addslashes/\nalias:\n  - /functions/php/addslashes/\n  - /functions/strings/addslashes/\n  - /php/addslashes/\n  - /functions/addslashes/\n---\nmodule.exports = function addslashes (str) {\n  //  discuss at: http://locutusjs.io/php/addslashes/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Nate\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Oskar Larsson Högfeldt (http://oskar-lh.name/)\n  //    input by: Denny Wardhana\n  //   example 1: addslashes(\"kevin's birthday\")\n  //   returns 1: \"kevin\\\\'s birthday\"\n\n  return (str + '')\n    .replace(/[\\\\\"']/g, '\\\\$&')\n    .replace(/\\u0000/g, '\\\\0')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/addslashes/index.html","comments":1,"_id":"cinoeja11005rou9yxwyaqdvu","content":"module.exports = function addslashes (str) {\n  //  discuss at: http://locutusjs.io/php/addslashes/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Nate\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Oskar Larsson Högfeldt (http://oskar-lh.name/)\n  //    input by: Denny Wardhana\n  //   example 1: addslashes(\"kevin's birthday\")\n  //   returns 1: \"kevin\\\\'s birthday\"\n\n  return (str + '')\n    .replace(/[\\\\\"']/g, '\\\\$&')\n    .replace(/\\u0000/g, '\\\\0')\n}\n","excerpt":"","more":"module.exports = function addslashes (str) {\n  //  discuss at: http://locutusjs.io/php/addslashes/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: marrtins\n  // improved by: Nate\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Oskar Larsson Högfeldt (http://oskar-lh.name/)\n  //    input by: Denny Wardhana\n  //   example 1: addslashes(\"kevin's birthday\")\n  //   returns 1: \"kevin\\\\'s birthday\"\n\n  return (str + '')\n    .replace(/[\\\\\"']/g, '\\\\$&')\n    .replace(/\\u0000/g, '\\\\0')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["bin2hex('Kev')","bin2hex(String.fromCharCode(0x00))"],"estarget":"es5","returns":["'4b6576'","'00'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Linuxworld"]},"notes":[],"layout":"function","title":"php'sbin2hex in JavaScript","function":"bin2hex","category":"strings","language":"php","alias":["/functions/php/bin2hex/","/functions/strings/bin2hex/","/php/bin2hex/","/functions/bin2hex/"],"_content":"module.exports = function bin2hex (s) {\n  //  discuss at: http://locutusjs.io/php/bin2hex/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Linuxworld\n  // improved by: ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)\n  //   example 1: bin2hex('Kev')\n  //   returns 1: '4b6576'\n  //   example 2: bin2hex(String.fromCharCode(0x00))\n  //   returns 2: '00'\n\n  var i\n  var l\n  var o = ''\n  var n\n\n  s += ''\n\n  for (i = 0, l = s.length; i < l; i++) {\n    n = s.charCodeAt(i)\n      .toString(16)\n    o += n.length < 2 ? '0' + n : n\n  }\n\n  return o\n}\n","source":"php/strings/bin2hex.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - bin2hex('Kev')\n  - bin2hex(String.fromCharCode(0x00))\nestarget: es5\nreturns:\n  - '''4b6576'''\n  - '''00'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Linuxworld\nnotes: []\nlayout: function\ntitle: php'sbin2hex in JavaScript\nfunction: bin2hex\ncategory: strings\nlanguage: php\npermalink: php/strings/bin2hex/\nalias:\n  - /functions/php/bin2hex/\n  - /functions/strings/bin2hex/\n  - /php/bin2hex/\n  - /functions/bin2hex/\n---\nmodule.exports = function bin2hex (s) {\n  //  discuss at: http://locutusjs.io/php/bin2hex/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Linuxworld\n  // improved by: ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)\n  //   example 1: bin2hex('Kev')\n  //   returns 1: '4b6576'\n  //   example 2: bin2hex(String.fromCharCode(0x00))\n  //   returns 2: '00'\n\n  var i\n  var l\n  var o = ''\n  var n\n\n  s += ''\n\n  for (i = 0, l = s.length; i < l; i++) {\n    n = s.charCodeAt(i)\n      .toString(16)\n    o += n.length < 2 ? '0' + n : n\n  }\n\n  return o\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/bin2hex/index.html","comments":1,"_id":"cinoeja12005sou9ywk48llqi","content":"module.exports = function bin2hex (s) {\n  //  discuss at: http://locutusjs.io/php/bin2hex/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Linuxworld\n  // improved by: ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)\n  //   example 1: bin2hex('Kev')\n  //   returns 1: '4b6576'\n  //   example 2: bin2hex(String.fromCharCode(0x00))\n  //   returns 2: '00'\n\n  var i\n  var l\n  var o = ''\n  var n\n\n  s += ''\n\n  for (i = 0, l = s.length; i < l; i++) {\n    n = s.charCodeAt(i)\n      .toString(16)\n    o += n.length < 2 ? '0' + n : n\n  }\n\n  return o\n}\n","excerpt":"","more":"module.exports = function bin2hex (s) {\n  //  discuss at: http://locutusjs.io/php/bin2hex/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Linuxworld\n  // improved by: ntoniazzi (http://locutusjs.io/php/bin2hex:361#comment_177616)\n  //   example 1: bin2hex('Kev')\n  //   returns 1: '4b6576'\n  //   example 2: bin2hex(String.fromCharCode(0x00))\n  //   returns 2: '00'\n\n  var i\n  var l\n  var o = ''\n  var n\n\n  s += ''\n\n  for (i = 0, l = s.length; i < l; i++) {\n    n = s.charCodeAt(i)\n      .toString(16)\n    o += n.length < 2 ? '0' + n : n\n  }\n\n  return o\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["chop('    Kevin van Zonneveld    ')"],"estarget":"es5","returns":["'    Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":[],"layout":"function","title":"php'schop in JavaScript","function":"chop","category":"strings","language":"php","alias":["/functions/php/chop/","/functions/strings/chop/","/php/chop/","/functions/chop/"],"_content":"module.exports = function chop (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/chop/\n  // original by: Paulo Freitas\n  //   example 1: chop('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  var rtrim = require('../strings/rtrim')\n  return rtrim(str, charlist)\n}\n","source":"php/strings/chop.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - chop('    Kevin van Zonneveld    ')\nestarget: es5\nreturns:\n  - '''    Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes: []\nlayout: function\ntitle: php'schop in JavaScript\nfunction: chop\ncategory: strings\nlanguage: php\npermalink: php/strings/chop/\nalias:\n  - /functions/php/chop/\n  - /functions/strings/chop/\n  - /php/chop/\n  - /functions/chop/\n---\nmodule.exports = function chop (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/chop/\n  // original by: Paulo Freitas\n  //   example 1: chop('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  var rtrim = require('../strings/rtrim')\n  return rtrim(str, charlist)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/chop/index.html","comments":1,"_id":"cinoeja12005tou9y0cebdygf","content":"module.exports = function chop (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/chop/\n  // original by: Paulo Freitas\n  //   example 1: chop('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  var rtrim = require('../strings/rtrim')\n  return rtrim(str, charlist)\n}\n","excerpt":"","more":"module.exports = function chop (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/chop/\n  // original by: Paulo Freitas\n  //   example 1: chop('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  var rtrim = require('../strings/rtrim')\n  return rtrim(str, charlist)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["chr(75) === 'K'\nchr(65536) === '\\uD800\\uDC00'"],"estarget":"es5","returns":["true\ntrue"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'schr in JavaScript","function":"chr","category":"strings","language":"php","alias":["/functions/php/chr/","/functions/strings/chr/","/php/chr/","/functions/chr/"],"_content":"module.exports = function chr (codePt) {\n  //  discuss at: http://locutusjs.io/php/chr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: chr(75) === 'K'\n  //   example 1: chr(65536) === '\\uD800\\uDC00'\n  //   returns 1: true\n  //   returns 1: true\n\n  if (codePt > 0xFFFF) { // Create a four-byte string (length 2) since this code point is high\n    //   enough for the UTF-16 encoding (JavaScript internal use), to\n    //   require representation with two surrogates (reserved non-characters\n    //   used for building other characters; the first is \"high\" and the next \"low\")\n    codePt -= 0x10000\n    return String.fromCharCode(0xD800 + (codePt >> 10), 0xDC00 + (codePt & 0x3FF))\n  }\n  return String.fromCharCode(codePt)\n}\n","source":"php/strings/chr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    chr(75) === 'K'\n    chr(65536) === '\\uD800\\uDC00'\nestarget: es5\nreturns:\n  - |-\n    true\n    true\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'schr in JavaScript\nfunction: chr\ncategory: strings\nlanguage: php\npermalink: php/strings/chr/\nalias:\n  - /functions/php/chr/\n  - /functions/strings/chr/\n  - /php/chr/\n  - /functions/chr/\n---\nmodule.exports = function chr (codePt) {\n  //  discuss at: http://locutusjs.io/php/chr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: chr(75) === 'K'\n  //   example 1: chr(65536) === '\\uD800\\uDC00'\n  //   returns 1: true\n  //   returns 1: true\n\n  if (codePt > 0xFFFF) { // Create a four-byte string (length 2) since this code point is high\n    //   enough for the UTF-16 encoding (JavaScript internal use), to\n    //   require representation with two surrogates (reserved non-characters\n    //   used for building other characters; the first is \"high\" and the next \"low\")\n    codePt -= 0x10000\n    return String.fromCharCode(0xD800 + (codePt >> 10), 0xDC00 + (codePt & 0x3FF))\n  }\n  return String.fromCharCode(codePt)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/chr/index.html","comments":1,"_id":"cinoeja12005uou9y5d9bjfp6","content":"module.exports = function chr (codePt) {\n  //  discuss at: http://locutusjs.io/php/chr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: chr(75) === 'K'\n  //   example 1: chr(65536) === '\\uD800\\uDC00'\n  //   returns 1: true\n  //   returns 1: true\n\n  if (codePt > 0xFFFF) { // Create a four-byte string (length 2) since this code point is high\n    //   enough for the UTF-16 encoding (JavaScript internal use), to\n    //   require representation with two surrogates (reserved non-characters\n    //   used for building other characters; the first is \"high\" and the next \"low\")\n    codePt -= 0x10000\n    return String.fromCharCode(0xD800 + (codePt >> 10), 0xDC00 + (codePt & 0x3FF))\n  }\n  return String.fromCharCode(codePt)\n}\n","excerpt":"","more":"module.exports = function chr (codePt) {\n  //  discuss at: http://locutusjs.io/php/chr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: chr(75) === 'K'\n  //   example 1: chr(65536) === '\\uD800\\uDC00'\n  //   returns 1: true\n  //   returns 1: true\n\n  if (codePt > 0xFFFF) { // Create a four-byte string (length 2) since this code point is high\n    //   enough for the UTF-16 encoding (JavaScript internal use), to\n    //   require representation with two surrogates (reserved non-characters\n    //   used for building other characters; the first is \"high\" and the next \"low\")\n    codePt -= 0x10000\n    return String.fromCharCode(0xD800 + (codePt >> 10), 0xDC00 + (codePt & 0x3FF))\n  }\n  return String.fromCharCode(codePt)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["chunk_split('Hello world!', 1, '*')","chunk_split('Hello world!', 10, '*')"],"estarget":"es5","returns":["'H*e*l*l*o* *w*o*r*l*d*!*'","'Hello worl*d!*'"],"dependencies":[],"authors":{"original by":["Paulo Freitas"],"improved by":["Theriault (https://github.com/Theriault)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'schunk_split in JavaScript","function":"chunk_split","category":"strings","language":"php","alias":["/functions/php/chunk_split/","/functions/strings/chunk_split/","/php/chunk_split/","/functions/chunk_split/"],"_content":"module.exports = function chunk_split (body, chunklen, end) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/chunk_split/\n  // original by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: chunk_split('Hello world!', 1, '*')\n  //   returns 1: 'H*e*l*l*o* *w*o*r*l*d*!*'\n  //   example 2: chunk_split('Hello world!', 10, '*')\n  //   returns 2: 'Hello worl*d!*'\n\n  chunklen = parseInt(chunklen, 10) || 76\n  end = end || '\\r\\n'\n\n  if (chunklen < 1) {\n    return false\n  }\n\n  return body.match(new RegExp('.{0,' + chunklen + '}', 'g'))\n    .join(end)\n}\n","source":"php/strings/chunk_split.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'chunk_split(''Hello world!'', 1, ''*'')'\n  - 'chunk_split(''Hello world!'', 10, ''*'')'\nestarget: es5\nreturns:\n  - '''H*e*l*l*o* *w*o*r*l*d*!*'''\n  - '''Hello worl*d!*'''\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\n  improved by:\n    - 'Theriault (https://github.com/Theriault)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'schunk_split in JavaScript\nfunction: chunk_split\ncategory: strings\nlanguage: php\npermalink: php/strings/chunk_split/\nalias:\n  - /functions/php/chunk_split/\n  - /functions/strings/chunk_split/\n  - /php/chunk_split/\n  - /functions/chunk_split/\n---\nmodule.exports = function chunk_split (body, chunklen, end) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/chunk_split/\n  // original by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: chunk_split('Hello world!', 1, '*')\n  //   returns 1: 'H*e*l*l*o* *w*o*r*l*d*!*'\n  //   example 2: chunk_split('Hello world!', 10, '*')\n  //   returns 2: 'Hello worl*d!*'\n\n  chunklen = parseInt(chunklen, 10) || 76\n  end = end || '\\r\\n'\n\n  if (chunklen < 1) {\n    return false\n  }\n\n  return body.match(new RegExp('.{0,' + chunklen + '}', 'g'))\n    .join(end)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/chunk_split/index.html","comments":1,"_id":"cinoeja13005vou9y6zmzq2fc","content":"module.exports = function chunk_split (body, chunklen, end) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/chunk_split/\n  // original by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: chunk_split('Hello world!', 1, '*')\n  //   returns 1: 'H*e*l*l*o* *w*o*r*l*d*!*'\n  //   example 2: chunk_split('Hello world!', 10, '*')\n  //   returns 2: 'Hello worl*d!*'\n\n  chunklen = parseInt(chunklen, 10) || 76\n  end = end || '\\r\\n'\n\n  if (chunklen < 1) {\n    return false\n  }\n\n  return body.match(new RegExp('.{0,' + chunklen + '}', 'g'))\n    .join(end)\n}\n","excerpt":"","more":"module.exports = function chunk_split (body, chunklen, end) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/chunk_split/\n  // original by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: chunk_split('Hello world!', 1, '*')\n  //   returns 1: 'H*e*l*l*o* *w*o*r*l*d*!*'\n  //   example 2: chunk_split('Hello world!', 10, '*')\n  //   returns 2: 'Hello worl*d!*'\n\n  chunklen = parseInt(chunklen, 10) || 76\n  end = end || '\\r\\n'\n\n  if (chunklen < 1) {\n    return false\n  }\n\n  return body.match(new RegExp('.{0,' + chunklen + '}', 'g'))\n    .join(end)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) === 230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Assumes and converts to Unicode strings with character\ncode equivalents of the same numbers as in the from or\ntarget character set; Note that neither the input or output\nshould be treated as actual Unicode, since the PHP function\nthis is original by does not either\nOne could easily represent (or convert the results) of a\nstring form as arrays of code points instead but since JavaScript\ncurrently has no clear binary data type, we chose to use strings\nas in PHP"],"layout":"function","title":"php'sconvert_cyr_string in JavaScript","function":"convert_cyr_string","category":"strings","language":"php","alias":["/functions/php/convert_cyr_string/","/functions/strings/convert_cyr_string/","/php/convert_cyr_string/","/functions/convert_cyr_string/"],"_content":"module.exports = function convert_cyr_string (str, from, to) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/convert_cyr_string/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Assumes and converts to Unicode strings with character\n  //      note 1: code equivalents of the same numbers as in the from or\n  //      note 1: target character set; Note that neither the input or output\n  //      note 1: should be treated as actual Unicode, since the PHP function\n  //      note 1: this is original by does not either\n  //      note 1: One could easily represent (or convert the results) of a\n  //      note 1: string form as arrays of code points instead but since JavaScript\n  //      note 1: currently has no clear binary data type, we chose to use strings\n  //      note 1: as in PHP\n  //   example 1: convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) === 230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251\n  //   returns 1: true\n\n  var _cyrWin1251 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    154,\n    174,\n    190,\n    46,\n    159,\n    189,\n    46,\n    46,\n    179,\n    191,\n    180,\n    157,\n    46,\n    46,\n    156,\n    183,\n    46,\n    46,\n    182,\n    166,\n    173,\n    46,\n    46,\n    158,\n    163,\n    152,\n    164,\n    155,\n    46,\n    46,\n    46,\n    167,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    184,\n    186,\n    32,\n    179,\n    191,\n    32,\n    32,\n    32,\n    32,\n    32,\n    180,\n    162,\n    32,\n    32,\n    32,\n    32,\n    168,\n    170,\n    32,\n    178,\n    175,\n    32,\n    32,\n    32,\n    32,\n    32,\n    165,\n    161,\n    169,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    255,\n    240,\n    241,\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    222,\n    192,\n    193,\n    214,\n    196,\n    197,\n    212,\n    195,\n    213,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    223,\n    208,\n    209,\n    210,\n    211,\n    198,\n    194,\n    220,\n    219,\n    199,\n    216,\n    221,\n    217,\n    215,\n    218\n  ]\n  var _cyrCp866 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    35,\n    35,\n    35,\n    124,\n    124,\n    124,\n    124,\n    43,\n    43,\n    124,\n    124,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    124,\n    124,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    45,\n    45,\n    45,\n    45,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    35,\n    35,\n    124,\n    124,\n    35,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    179,\n    163,\n    180,\n    164,\n    183,\n    167,\n    190,\n    174,\n    32,\n    149,\n    158,\n    32,\n    152,\n    159,\n    148,\n    154,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    205,\n    186,\n    213,\n    241,\n    243,\n    201,\n    32,\n    245,\n    187,\n    212,\n    211,\n    200,\n    190,\n    32,\n    247,\n    198,\n    199,\n    204,\n    181,\n    240,\n    242,\n    185,\n    32,\n    244,\n    203,\n    207,\n    208,\n    202,\n    216,\n    32,\n    246,\n    32,\n    238,\n    160,\n    161,\n    230,\n    164,\n    165,\n    228,\n    163,\n    229,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    239,\n    224,\n    225,\n    226,\n    227,\n    166,\n    162,\n    236,\n    235,\n    167,\n    232,\n    237,\n    233,\n    231,\n    234,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n  var _cyrIso88595 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    179,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    32,\n    163,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    241,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    161,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    238,\n    208,\n    209,\n    230,\n    212,\n    213,\n    228,\n    211,\n    229,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    239,\n    224,\n    225,\n    226,\n    227,\n    214,\n    210,\n    236,\n    235,\n    215,\n    232,\n    237,\n    233,\n    231,\n    234,\n    206,\n    176,\n    177,\n    198,\n    180,\n    181,\n    196,\n    179,\n    197,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    207,\n    192,\n    193,\n    194,\n    195,\n    182,\n    178,\n    204,\n    203,\n    183,\n    200,\n    205,\n    201,\n    199,\n    202\n  ]\n  var _cyrMac = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    160,\n    161,\n    162,\n    163,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    179,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    128,\n    129,\n    130,\n    131,\n    132,\n    133,\n    134,\n    135,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    144,\n    145,\n    146,\n    147,\n    148,\n    149,\n    150,\n    151,\n    152,\n    153,\n    154,\n    155,\n    156,\n    179,\n    163,\n    209,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n\n    255,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    192,\n    193,\n    194,\n    195,\n    196,\n    197,\n    198,\n    199,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    209,\n    210,\n    211,\n    212,\n    213,\n    214,\n    215,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    160,\n    161,\n    162,\n    222,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    221,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    223,\n    240,\n    241,\n\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n\n  var fromTable = null\n  var toTable = null\n  var tmp\n  var i = 0\n  var retStr = ''\n\n  switch (from.toUpperCase()) {\n    case 'W':\n      fromTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      fromTable = _cyrCp866\n      break\n    case 'I':\n      fromTable = _cyrIso88595\n      break\n    case 'M':\n      fromTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown source charset: ' + fromTable)\n  }\n\n  switch (to.toUpperCase()) {\n    case 'W':\n      toTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      toTable = _cyrCp866\n      break\n    case 'I':\n      toTable = _cyrIso88595\n      break\n    case 'M':\n      toTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown destination charset: ' + toTable)\n  }\n\n  if (!str) {\n    return str\n  }\n\n  for (i = 0; i < str.length; i++) {\n    tmp = (fromTable === null)\n      ? str.charAt(i)\n      : String.fromCharCode(fromTable[str.charAt(i).charCodeAt(0)])\n\n    retStr += (toTable === null)\n      ? tmp\n      : String.fromCharCode(toTable[tmp.charCodeAt(0) + 256])\n  }\n\n  return retStr\n}\n","source":"php/strings/convert_cyr_string.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) ===\n    230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    Assumes and converts to Unicode strings with character\n    code equivalents of the same numbers as in the from or\n    target character set; Note that neither the input or output\n    should be treated as actual Unicode, since the PHP function\n    this is original by does not either\n    One could easily represent (or convert the results) of a\n    string form as arrays of code points instead but since JavaScript\n    currently has no clear binary data type, we chose to use strings\n    as in PHP\nlayout: function\ntitle: php'sconvert_cyr_string in JavaScript\nfunction: convert_cyr_string\ncategory: strings\nlanguage: php\npermalink: php/strings/convert_cyr_string/\nalias:\n  - /functions/php/convert_cyr_string/\n  - /functions/strings/convert_cyr_string/\n  - /php/convert_cyr_string/\n  - /functions/convert_cyr_string/\n---\nmodule.exports = function convert_cyr_string (str, from, to) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/convert_cyr_string/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Assumes and converts to Unicode strings with character\n  //      note 1: code equivalents of the same numbers as in the from or\n  //      note 1: target character set; Note that neither the input or output\n  //      note 1: should be treated as actual Unicode, since the PHP function\n  //      note 1: this is original by does not either\n  //      note 1: One could easily represent (or convert the results) of a\n  //      note 1: string form as arrays of code points instead but since JavaScript\n  //      note 1: currently has no clear binary data type, we chose to use strings\n  //      note 1: as in PHP\n  //   example 1: convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) === 230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251\n  //   returns 1: true\n\n  var _cyrWin1251 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    154,\n    174,\n    190,\n    46,\n    159,\n    189,\n    46,\n    46,\n    179,\n    191,\n    180,\n    157,\n    46,\n    46,\n    156,\n    183,\n    46,\n    46,\n    182,\n    166,\n    173,\n    46,\n    46,\n    158,\n    163,\n    152,\n    164,\n    155,\n    46,\n    46,\n    46,\n    167,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    184,\n    186,\n    32,\n    179,\n    191,\n    32,\n    32,\n    32,\n    32,\n    32,\n    180,\n    162,\n    32,\n    32,\n    32,\n    32,\n    168,\n    170,\n    32,\n    178,\n    175,\n    32,\n    32,\n    32,\n    32,\n    32,\n    165,\n    161,\n    169,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    255,\n    240,\n    241,\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    222,\n    192,\n    193,\n    214,\n    196,\n    197,\n    212,\n    195,\n    213,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    223,\n    208,\n    209,\n    210,\n    211,\n    198,\n    194,\n    220,\n    219,\n    199,\n    216,\n    221,\n    217,\n    215,\n    218\n  ]\n  var _cyrCp866 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    35,\n    35,\n    35,\n    124,\n    124,\n    124,\n    124,\n    43,\n    43,\n    124,\n    124,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    124,\n    124,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    45,\n    45,\n    45,\n    45,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    35,\n    35,\n    124,\n    124,\n    35,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    179,\n    163,\n    180,\n    164,\n    183,\n    167,\n    190,\n    174,\n    32,\n    149,\n    158,\n    32,\n    152,\n    159,\n    148,\n    154,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    205,\n    186,\n    213,\n    241,\n    243,\n    201,\n    32,\n    245,\n    187,\n    212,\n    211,\n    200,\n    190,\n    32,\n    247,\n    198,\n    199,\n    204,\n    181,\n    240,\n    242,\n    185,\n    32,\n    244,\n    203,\n    207,\n    208,\n    202,\n    216,\n    32,\n    246,\n    32,\n    238,\n    160,\n    161,\n    230,\n    164,\n    165,\n    228,\n    163,\n    229,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    239,\n    224,\n    225,\n    226,\n    227,\n    166,\n    162,\n    236,\n    235,\n    167,\n    232,\n    237,\n    233,\n    231,\n    234,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n  var _cyrIso88595 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    179,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    32,\n    163,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    241,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    161,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    238,\n    208,\n    209,\n    230,\n    212,\n    213,\n    228,\n    211,\n    229,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    239,\n    224,\n    225,\n    226,\n    227,\n    214,\n    210,\n    236,\n    235,\n    215,\n    232,\n    237,\n    233,\n    231,\n    234,\n    206,\n    176,\n    177,\n    198,\n    180,\n    181,\n    196,\n    179,\n    197,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    207,\n    192,\n    193,\n    194,\n    195,\n    182,\n    178,\n    204,\n    203,\n    183,\n    200,\n    205,\n    201,\n    199,\n    202\n  ]\n  var _cyrMac = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    160,\n    161,\n    162,\n    163,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    179,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    128,\n    129,\n    130,\n    131,\n    132,\n    133,\n    134,\n    135,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    144,\n    145,\n    146,\n    147,\n    148,\n    149,\n    150,\n    151,\n    152,\n    153,\n    154,\n    155,\n    156,\n    179,\n    163,\n    209,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n\n    255,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    192,\n    193,\n    194,\n    195,\n    196,\n    197,\n    198,\n    199,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    209,\n    210,\n    211,\n    212,\n    213,\n    214,\n    215,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    160,\n    161,\n    162,\n    222,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    221,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    223,\n    240,\n    241,\n\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n\n  var fromTable = null\n  var toTable = null\n  var tmp\n  var i = 0\n  var retStr = ''\n\n  switch (from.toUpperCase()) {\n    case 'W':\n      fromTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      fromTable = _cyrCp866\n      break\n    case 'I':\n      fromTable = _cyrIso88595\n      break\n    case 'M':\n      fromTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown source charset: ' + fromTable)\n  }\n\n  switch (to.toUpperCase()) {\n    case 'W':\n      toTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      toTable = _cyrCp866\n      break\n    case 'I':\n      toTable = _cyrIso88595\n      break\n    case 'M':\n      toTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown destination charset: ' + toTable)\n  }\n\n  if (!str) {\n    return str\n  }\n\n  for (i = 0; i < str.length; i++) {\n    tmp = (fromTable === null)\n      ? str.charAt(i)\n      : String.fromCharCode(fromTable[str.charAt(i).charCodeAt(0)])\n\n    retStr += (toTable === null)\n      ? tmp\n      : String.fromCharCode(toTable[tmp.charCodeAt(0) + 256])\n  }\n\n  return retStr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/convert_cyr_string/index.html","comments":1,"_id":"cinoeja13005wou9yemu3adz5","content":"module.exports = function convert_cyr_string (str, from, to) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/convert_cyr_string/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Assumes and converts to Unicode strings with character\n  //      note 1: code equivalents of the same numbers as in the from or\n  //      note 1: target character set; Note that neither the input or output\n  //      note 1: should be treated as actual Unicode, since the PHP function\n  //      note 1: this is original by does not either\n  //      note 1: One could easily represent (or convert the results) of a\n  //      note 1: string form as arrays of code points instead but since JavaScript\n  //      note 1: currently has no clear binary data type, we chose to use strings\n  //      note 1: as in PHP\n  //   example 1: convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) === 230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251\n  //   returns 1: true\n\n  var _cyrWin1251 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    154,\n    174,\n    190,\n    46,\n    159,\n    189,\n    46,\n    46,\n    179,\n    191,\n    180,\n    157,\n    46,\n    46,\n    156,\n    183,\n    46,\n    46,\n    182,\n    166,\n    173,\n    46,\n    46,\n    158,\n    163,\n    152,\n    164,\n    155,\n    46,\n    46,\n    46,\n    167,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    184,\n    186,\n    32,\n    179,\n    191,\n    32,\n    32,\n    32,\n    32,\n    32,\n    180,\n    162,\n    32,\n    32,\n    32,\n    32,\n    168,\n    170,\n    32,\n    178,\n    175,\n    32,\n    32,\n    32,\n    32,\n    32,\n    165,\n    161,\n    169,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    255,\n    240,\n    241,\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    222,\n    192,\n    193,\n    214,\n    196,\n    197,\n    212,\n    195,\n    213,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    223,\n    208,\n    209,\n    210,\n    211,\n    198,\n    194,\n    220,\n    219,\n    199,\n    216,\n    221,\n    217,\n    215,\n    218\n  ]\n  var _cyrCp866 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    35,\n    35,\n    35,\n    124,\n    124,\n    124,\n    124,\n    43,\n    43,\n    124,\n    124,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    124,\n    124,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    45,\n    45,\n    45,\n    45,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    35,\n    35,\n    124,\n    124,\n    35,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    179,\n    163,\n    180,\n    164,\n    183,\n    167,\n    190,\n    174,\n    32,\n    149,\n    158,\n    32,\n    152,\n    159,\n    148,\n    154,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    205,\n    186,\n    213,\n    241,\n    243,\n    201,\n    32,\n    245,\n    187,\n    212,\n    211,\n    200,\n    190,\n    32,\n    247,\n    198,\n    199,\n    204,\n    181,\n    240,\n    242,\n    185,\n    32,\n    244,\n    203,\n    207,\n    208,\n    202,\n    216,\n    32,\n    246,\n    32,\n    238,\n    160,\n    161,\n    230,\n    164,\n    165,\n    228,\n    163,\n    229,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    239,\n    224,\n    225,\n    226,\n    227,\n    166,\n    162,\n    236,\n    235,\n    167,\n    232,\n    237,\n    233,\n    231,\n    234,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n  var _cyrIso88595 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    179,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    32,\n    163,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    241,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    161,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    238,\n    208,\n    209,\n    230,\n    212,\n    213,\n    228,\n    211,\n    229,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    239,\n    224,\n    225,\n    226,\n    227,\n    214,\n    210,\n    236,\n    235,\n    215,\n    232,\n    237,\n    233,\n    231,\n    234,\n    206,\n    176,\n    177,\n    198,\n    180,\n    181,\n    196,\n    179,\n    197,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    207,\n    192,\n    193,\n    194,\n    195,\n    182,\n    178,\n    204,\n    203,\n    183,\n    200,\n    205,\n    201,\n    199,\n    202\n  ]\n  var _cyrMac = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    160,\n    161,\n    162,\n    163,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    179,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    128,\n    129,\n    130,\n    131,\n    132,\n    133,\n    134,\n    135,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    144,\n    145,\n    146,\n    147,\n    148,\n    149,\n    150,\n    151,\n    152,\n    153,\n    154,\n    155,\n    156,\n    179,\n    163,\n    209,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n\n    255,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    192,\n    193,\n    194,\n    195,\n    196,\n    197,\n    198,\n    199,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    209,\n    210,\n    211,\n    212,\n    213,\n    214,\n    215,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    160,\n    161,\n    162,\n    222,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    221,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    223,\n    240,\n    241,\n\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n\n  var fromTable = null\n  var toTable = null\n  var tmp\n  var i = 0\n  var retStr = ''\n\n  switch (from.toUpperCase()) {\n    case 'W':\n      fromTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      fromTable = _cyrCp866\n      break\n    case 'I':\n      fromTable = _cyrIso88595\n      break\n    case 'M':\n      fromTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown source charset: ' + fromTable)\n  }\n\n  switch (to.toUpperCase()) {\n    case 'W':\n      toTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      toTable = _cyrCp866\n      break\n    case 'I':\n      toTable = _cyrIso88595\n      break\n    case 'M':\n      toTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown destination charset: ' + toTable)\n  }\n\n  if (!str) {\n    return str\n  }\n\n  for (i = 0; i < str.length; i++) {\n    tmp = (fromTable === null)\n      ? str.charAt(i)\n      : String.fromCharCode(fromTable[str.charAt(i).charCodeAt(0)])\n\n    retStr += (toTable === null)\n      ? tmp\n      : String.fromCharCode(toTable[tmp.charCodeAt(0) + 256])\n  }\n\n  return retStr\n}\n","excerpt":"","more":"module.exports = function convert_cyr_string (str, from, to) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/convert_cyr_string/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Assumes and converts to Unicode strings with character\n  //      note 1: code equivalents of the same numbers as in the from or\n  //      note 1: target character set; Note that neither the input or output\n  //      note 1: should be treated as actual Unicode, since the PHP function\n  //      note 1: this is original by does not either\n  //      note 1: One could easily represent (or convert the results) of a\n  //      note 1: string form as arrays of code points instead but since JavaScript\n  //      note 1: currently has no clear binary data type, we chose to use strings\n  //      note 1: as in PHP\n  //   example 1: convert_cyr_string(String.fromCharCode(214), 'k', 'w').charCodeAt(0) === 230; // Char. 214 of KOI8-R gives equivalent number value 230 in win1251\n  //   returns 1: true\n\n  var _cyrWin1251 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    46,\n    154,\n    174,\n    190,\n    46,\n    159,\n    189,\n    46,\n    46,\n    179,\n    191,\n    180,\n    157,\n    46,\n    46,\n    156,\n    183,\n    46,\n    46,\n    182,\n    166,\n    173,\n    46,\n    46,\n    158,\n    163,\n    152,\n    164,\n    155,\n    46,\n    46,\n    46,\n    167,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    184,\n    186,\n    32,\n    179,\n    191,\n    32,\n    32,\n    32,\n    32,\n    32,\n    180,\n    162,\n    32,\n    32,\n    32,\n    32,\n    168,\n    170,\n    32,\n    178,\n    175,\n    32,\n    32,\n    32,\n    32,\n    32,\n    165,\n    161,\n    169,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    255,\n    240,\n    241,\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    222,\n    192,\n    193,\n    214,\n    196,\n    197,\n    212,\n    195,\n    213,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    223,\n    208,\n    209,\n    210,\n    211,\n    198,\n    194,\n    220,\n    219,\n    199,\n    216,\n    221,\n    217,\n    215,\n    218\n  ]\n  var _cyrCp866 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    35,\n    35,\n    35,\n    124,\n    124,\n    124,\n    124,\n    43,\n    43,\n    124,\n    124,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    124,\n    124,\n    43,\n    43,\n    45,\n    45,\n    124,\n    45,\n    43,\n    45,\n    45,\n    45,\n    45,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    43,\n    35,\n    35,\n    124,\n    124,\n    35,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    179,\n    163,\n    180,\n    164,\n    183,\n    167,\n    190,\n    174,\n    32,\n    149,\n    158,\n    32,\n    152,\n    159,\n    148,\n    154,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    205,\n    186,\n    213,\n    241,\n    243,\n    201,\n    32,\n    245,\n    187,\n    212,\n    211,\n    200,\n    190,\n    32,\n    247,\n    198,\n    199,\n    204,\n    181,\n    240,\n    242,\n    185,\n    32,\n    244,\n    203,\n    207,\n    208,\n    202,\n    216,\n    32,\n    246,\n    32,\n    238,\n    160,\n    161,\n    230,\n    164,\n    165,\n    228,\n    163,\n    229,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    239,\n    224,\n    225,\n    226,\n    227,\n    166,\n    162,\n    236,\n    235,\n    167,\n    232,\n    237,\n    233,\n    231,\n    234,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n  var _cyrIso88595 = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    179,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n    209,\n    32,\n    163,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    241,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    161,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    32,\n    238,\n    208,\n    209,\n    230,\n    212,\n    213,\n    228,\n    211,\n    229,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    239,\n    224,\n    225,\n    226,\n    227,\n    214,\n    210,\n    236,\n    235,\n    215,\n    232,\n    237,\n    233,\n    231,\n    234,\n    206,\n    176,\n    177,\n    198,\n    180,\n    181,\n    196,\n    179,\n    197,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    207,\n    192,\n    193,\n    194,\n    195,\n    182,\n    178,\n    204,\n    203,\n    183,\n    200,\n    205,\n    201,\n    199,\n    202\n  ]\n  var _cyrMac = [\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    225,\n    226,\n    247,\n    231,\n    228,\n    229,\n    246,\n    250,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    240,\n    242,\n    243,\n    244,\n    245,\n    230,\n    232,\n    227,\n    254,\n    251,\n    253,\n    255,\n    249,\n    248,\n    252,\n    224,\n    241,\n    160,\n    161,\n    162,\n    163,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    179,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    128,\n    129,\n    130,\n    131,\n    132,\n    133,\n    134,\n    135,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    144,\n    145,\n    146,\n    147,\n    148,\n    149,\n    150,\n    151,\n    152,\n    153,\n    154,\n    155,\n    156,\n    179,\n    163,\n    209,\n    193,\n    194,\n    215,\n    199,\n    196,\n    197,\n    214,\n    218,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    210,\n    211,\n    212,\n    213,\n    198,\n    200,\n    195,\n    222,\n    219,\n    221,\n    223,\n    217,\n    216,\n    220,\n    192,\n\n    255,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124,\n    125,\n    126,\n    127,\n    192,\n    193,\n    194,\n    195,\n    196,\n    197,\n    198,\n    199,\n    200,\n    201,\n    202,\n    203,\n    204,\n    205,\n    206,\n    207,\n    208,\n    209,\n    210,\n    211,\n    212,\n    213,\n    214,\n    215,\n    216,\n    217,\n    218,\n    219,\n    220,\n    221,\n    222,\n    223,\n    160,\n    161,\n    162,\n    222,\n    164,\n    165,\n    166,\n    167,\n    168,\n    169,\n    170,\n    171,\n    172,\n    173,\n    174,\n    175,\n    176,\n    177,\n    178,\n    221,\n    180,\n    181,\n    182,\n    183,\n    184,\n    185,\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    254,\n    224,\n    225,\n    246,\n    228,\n    229,\n    244,\n    227,\n    245,\n    232,\n    233,\n    234,\n    235,\n    236,\n    237,\n    238,\n    239,\n    223,\n    240,\n    241,\n\n    242,\n    243,\n    230,\n    226,\n    252,\n    251,\n    231,\n    248,\n    253,\n    249,\n    247,\n    250,\n    158,\n    128,\n    129,\n    150,\n    132,\n    133,\n    148,\n    131,\n    149,\n    136,\n    137,\n    138,\n    139,\n    140,\n    141,\n    142,\n    143,\n    159,\n    144,\n    145,\n    146,\n    147,\n    134,\n    130,\n    156,\n    155,\n    135,\n    152,\n    157,\n    153,\n    151,\n    154\n  ]\n\n  var fromTable = null\n  var toTable = null\n  var tmp\n  var i = 0\n  var retStr = ''\n\n  switch (from.toUpperCase()) {\n    case 'W':\n      fromTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      fromTable = _cyrCp866\n      break\n    case 'I':\n      fromTable = _cyrIso88595\n      break\n    case 'M':\n      fromTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown source charset: ' + fromTable)\n  }\n\n  switch (to.toUpperCase()) {\n    case 'W':\n      toTable = _cyrWin1251\n      break\n    case 'A':\n    case 'D':\n      toTable = _cyrCp866\n      break\n    case 'I':\n      toTable = _cyrIso88595\n      break\n    case 'M':\n      toTable = _cyrMac\n      break\n    case 'K':\n      break\n    default:\n      // Can we throw a warning instead? That would be more in line with PHP\n      throw new Error('Unknown destination charset: ' + toTable)\n  }\n\n  if (!str) {\n    return str\n  }\n\n  for (i = 0; i < str.length; i++) {\n    tmp = (fromTable === null)\n      ? str.charAt(i)\n      : String.fromCharCode(fromTable[str.charAt(i).charCodeAt(0)])\n\n    retStr += (toTable === null)\n      ? tmp\n      : String.fromCharCode(toTable[tmp.charCodeAt(0) + 256])\n  }\n\n  return retStr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["convert_uuencode(\"test\\ntext text\\r\\n\")"],"estarget":"es5","returns":["\"0=&5S=`IT97AT('1E>'0-\\\"@\\n`\\n\""],"dependencies":[],"authors":{"original by":["Ole Vrijenhoek"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sconvert_uuencode in JavaScript","function":"convert_uuencode","category":"strings","language":"php","alias":["/functions/php/convert_uuencode/","/functions/strings/convert_uuencode/","/php/convert_uuencode/","/functions/convert_uuencode/"],"_content":"module.exports = function convert_uuencode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/convert_uuencode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Ole Vrijenhoek\n  //        example 1: convert_uuencode(\"test\\ntext text\\r\\n\")\n  //        returns 1: \"0=&5S=`IT97AT('1E>'0-\\\"@\\n`\\n\"\n\n  var isScalar = require('../var/is_scalar')\n\n  var chr = function (c) {\n    return String.fromCharCode(c)\n  }\n\n  if (!str || str === '') {\n    return chr(0)\n  } else if (!isScalar(str)) {\n    return false\n  }\n\n  var c = 0\n  var u = 0\n  var i = 0\n  var a = 0\n  var encoded = ''\n  var tmp1 = ''\n  var tmp2 = ''\n  var bytes = {}\n\n  // divide string into chunks of 45 characters\n  var chunk = function () {\n    bytes = str.substr(u, 45).split('')\n    for (i in bytes) {\n      bytes[i] = bytes[i].charCodeAt(0)\n    }\n    return bytes.length || 0\n  }\n\n  while ((c = chunk()) !== 0) {\n    u += 45\n\n    // New line encoded data starts with number of bytes encoded.\n    encoded += chr(c + 32)\n\n    // Convert each char in bytes[] to a byte\n    for (i in bytes) {\n      tmp1 = bytes[i].toString(2)\n      while (tmp1.length < 8) {\n        tmp1 = '0' + tmp1\n      }\n      tmp2 += tmp1\n    }\n\n    while (tmp2.length % 6) {\n      tmp2 = tmp2 + '0'\n    }\n\n    for (i = 0; i <= (tmp2.length / 6) - 1; i++) {\n      tmp1 = tmp2.substr(a, 6)\n      if (tmp1 === '000000') {\n        encoded += chr(96)\n      } else {\n        encoded += chr(parseInt(tmp1, 2) + 32)\n      }\n      a += 6\n    }\n    a = 0\n    tmp2 = ''\n    encoded += '\\n'\n  }\n\n  // Add termination characters\n  encoded += chr(96) + '\\n'\n\n  return encoded\n}\n","source":"php/strings/convert_uuencode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - convert_uuencode(\"test\\ntext text\\r\\n\")\nestarget: es5\nreturns:\n  - '\"0=&5S=`IT97AT(''1E>''0-\\\"@\\n`\\n\"'\ndependencies: []\nauthors:\n  original by:\n    - Ole Vrijenhoek\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sconvert_uuencode in JavaScript\nfunction: convert_uuencode\ncategory: strings\nlanguage: php\npermalink: php/strings/convert_uuencode/\nalias:\n  - /functions/php/convert_uuencode/\n  - /functions/strings/convert_uuencode/\n  - /php/convert_uuencode/\n  - /functions/convert_uuencode/\n---\nmodule.exports = function convert_uuencode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/convert_uuencode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Ole Vrijenhoek\n  //        example 1: convert_uuencode(\"test\\ntext text\\r\\n\")\n  //        returns 1: \"0=&5S=`IT97AT('1E>'0-\\\"@\\n`\\n\"\n\n  var isScalar = require('../var/is_scalar')\n\n  var chr = function (c) {\n    return String.fromCharCode(c)\n  }\n\n  if (!str || str === '') {\n    return chr(0)\n  } else if (!isScalar(str)) {\n    return false\n  }\n\n  var c = 0\n  var u = 0\n  var i = 0\n  var a = 0\n  var encoded = ''\n  var tmp1 = ''\n  var tmp2 = ''\n  var bytes = {}\n\n  // divide string into chunks of 45 characters\n  var chunk = function () {\n    bytes = str.substr(u, 45).split('')\n    for (i in bytes) {\n      bytes[i] = bytes[i].charCodeAt(0)\n    }\n    return bytes.length || 0\n  }\n\n  while ((c = chunk()) !== 0) {\n    u += 45\n\n    // New line encoded data starts with number of bytes encoded.\n    encoded += chr(c + 32)\n\n    // Convert each char in bytes[] to a byte\n    for (i in bytes) {\n      tmp1 = bytes[i].toString(2)\n      while (tmp1.length < 8) {\n        tmp1 = '0' + tmp1\n      }\n      tmp2 += tmp1\n    }\n\n    while (tmp2.length % 6) {\n      tmp2 = tmp2 + '0'\n    }\n\n    for (i = 0; i <= (tmp2.length / 6) - 1; i++) {\n      tmp1 = tmp2.substr(a, 6)\n      if (tmp1 === '000000') {\n        encoded += chr(96)\n      } else {\n        encoded += chr(parseInt(tmp1, 2) + 32)\n      }\n      a += 6\n    }\n    a = 0\n    tmp2 = ''\n    encoded += '\\n'\n  }\n\n  // Add termination characters\n  encoded += chr(96) + '\\n'\n\n  return encoded\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/convert_uuencode/index.html","comments":1,"_id":"cinoeja13005xou9ytvivt7nq","content":"module.exports = function convert_uuencode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/convert_uuencode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Ole Vrijenhoek\n  //        example 1: convert_uuencode(\"test\\ntext text\\r\\n\")\n  //        returns 1: \"0=&5S=`IT97AT('1E>'0-\\\"@\\n`\\n\"\n\n  var isScalar = require('../var/is_scalar')\n\n  var chr = function (c) {\n    return String.fromCharCode(c)\n  }\n\n  if (!str || str === '') {\n    return chr(0)\n  } else if (!isScalar(str)) {\n    return false\n  }\n\n  var c = 0\n  var u = 0\n  var i = 0\n  var a = 0\n  var encoded = ''\n  var tmp1 = ''\n  var tmp2 = ''\n  var bytes = {}\n\n  // divide string into chunks of 45 characters\n  var chunk = function () {\n    bytes = str.substr(u, 45).split('')\n    for (i in bytes) {\n      bytes[i] = bytes[i].charCodeAt(0)\n    }\n    return bytes.length || 0\n  }\n\n  while ((c = chunk()) !== 0) {\n    u += 45\n\n    // New line encoded data starts with number of bytes encoded.\n    encoded += chr(c + 32)\n\n    // Convert each char in bytes[] to a byte\n    for (i in bytes) {\n      tmp1 = bytes[i].toString(2)\n      while (tmp1.length < 8) {\n        tmp1 = '0' + tmp1\n      }\n      tmp2 += tmp1\n    }\n\n    while (tmp2.length % 6) {\n      tmp2 = tmp2 + '0'\n    }\n\n    for (i = 0; i ","excerpt":"","more":"module.exports = function convert_uuencode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/convert_uuencode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Ole Vrijenhoek\n  //        example 1: convert_uuencode(\"test\\ntext text\\r\\n\")\n  //        returns 1: \"0=&5S=`IT97AT('1E>'0-\\\"@\\n`\\n\"\n\n  var isScalar = require('../var/is_scalar')\n\n  var chr = function (c) {\n    return String.fromCharCode(c)\n  }\n\n  if (!str || str === '') {\n    return chr(0)\n  } else if (!isScalar(str)) {\n    return false\n  }\n\n  var c = 0\n  var u = 0\n  var i = 0\n  var a = 0\n  var encoded = ''\n  var tmp1 = ''\n  var tmp2 = ''\n  var bytes = {}\n\n  // divide string into chunks of 45 characters\n  var chunk = function () {\n    bytes = str.substr(u, 45).split('')\n    for (i in bytes) {\n      bytes[i] = bytes[i].charCodeAt(0)\n    }\n    return bytes.length || 0\n  }\n\n  while ((c = chunk()) !== 0) {\n    u += 45\n\n    // New line encoded data starts with number of bytes encoded.\n    encoded += chr(c + 32)\n\n    // Convert each char in bytes[] to a byte\n    for (i in bytes) {\n      tmp1 = bytes[i].toString(2)\n      while (tmp1.length < 8) {\n        tmp1 = '0' + tmp1\n      }\n      tmp2 += tmp1\n    }\n\n    while (tmp2.length % 6) {\n      tmp2 = tmp2 + '0'\n    }\n\n    for (i = 0; i <= (tmp2.length / 6) - 1; i++) {\n      tmp1 = tmp2.substr(a, 6)\n      if (tmp1 === '000000') {\n        encoded += chr(96)\n      } else {\n        encoded += chr(parseInt(tmp1, 2) + 32)\n      }\n      a += 6\n    }\n    a = 0\n    tmp2 = ''\n    encoded += '\\n'\n  }\n\n  // Add termination characters\n  encoded += chr(96) + '\\n'\n\n  return encoded\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["count_chars(\"Hello World!\", 3)","count_chars(\"Hello World!\", 1)"],"estarget":"es5","returns":["\" !HWdelor\"","{32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}"],"dependencies":[],"authors":{"original by":["Ates Goral (http://magnetiq.com)"],"improved by":["Jack"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Kevin van Zonneveld (http://kvz.io)"],"revised by":["Theriault (https://github.com/Theriault)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'scount_chars in JavaScript","function":"count_chars","category":"strings","language":"php","alias":["/functions/php/count_chars/","/functions/strings/count_chars/","/php/count_chars/","/functions/count_chars/"],"_content":"module.exports = function count_chars (str, mode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/count_chars/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: count_chars(\"Hello World!\", 3)\n  //   returns 1: \" !HWdelor\"\n  //   example 2: count_chars(\"Hello World!\", 1)\n  //   returns 2: {32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}\n\n  var result = {}\n  var resultArr = []\n  var i\n\n  str = ('' + str)\n    .split('')\n    .sort()\n    .join('')\n    .match(/(.)\\1*/g)\n\n  if ((mode & 1) === 0) {\n    for (i = 0; i !== 256; i++) {\n      result[i] = 0\n    }\n  }\n\n  if (mode === 2 || mode === 4) {\n    for (i = 0; i !== str.length; i += 1) {\n      delete result[str[i].charCodeAt(0)]\n    }\n    for (i in result) {\n      result[i] = (mode === 4) ? String.fromCharCode(i) : 0\n    }\n  } else if (mode === 3) {\n    for (i = 0; i !== str.length; i += 1) {\n      result[i] = str[i].slice(0, 1)\n    }\n  } else {\n    for (i = 0; i !== str.length; i += 1) {\n      result[str[i].charCodeAt(0)] = str[i].length\n    }\n  }\n  if (mode < 3) {\n    return result\n  }\n\n  for (i in result) {\n    resultArr.push(result[i])\n  }\n\n  return resultArr.join('')\n}\n","source":"php/strings/count_chars.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'count_chars(\"Hello World!\", 3)'\n  - 'count_chars(\"Hello World!\", 1)'\nestarget: es5\nreturns:\n  - '\" !HWdelor\"'\n  - '{32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}'\ndependencies: []\nauthors:\n  original by:\n    - 'Ates Goral (http://magnetiq.com)'\n  improved by:\n    - Jack\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - 'Theriault (https://github.com/Theriault)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'scount_chars in JavaScript\nfunction: count_chars\ncategory: strings\nlanguage: php\npermalink: php/strings/count_chars/\nalias:\n  - /functions/php/count_chars/\n  - /functions/strings/count_chars/\n  - /php/count_chars/\n  - /functions/count_chars/\n---\nmodule.exports = function count_chars (str, mode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/count_chars/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: count_chars(\"Hello World!\", 3)\n  //   returns 1: \" !HWdelor\"\n  //   example 2: count_chars(\"Hello World!\", 1)\n  //   returns 2: {32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}\n\n  var result = {}\n  var resultArr = []\n  var i\n\n  str = ('' + str)\n    .split('')\n    .sort()\n    .join('')\n    .match(/(.)\\1*/g)\n\n  if ((mode & 1) === 0) {\n    for (i = 0; i !== 256; i++) {\n      result[i] = 0\n    }\n  }\n\n  if (mode === 2 || mode === 4) {\n    for (i = 0; i !== str.length; i += 1) {\n      delete result[str[i].charCodeAt(0)]\n    }\n    for (i in result) {\n      result[i] = (mode === 4) ? String.fromCharCode(i) : 0\n    }\n  } else if (mode === 3) {\n    for (i = 0; i !== str.length; i += 1) {\n      result[i] = str[i].slice(0, 1)\n    }\n  } else {\n    for (i = 0; i !== str.length; i += 1) {\n      result[str[i].charCodeAt(0)] = str[i].length\n    }\n  }\n  if (mode < 3) {\n    return result\n  }\n\n  for (i in result) {\n    resultArr.push(result[i])\n  }\n\n  return resultArr.join('')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/count_chars/index.html","comments":1,"_id":"cinoeja14005you9yw8gkktm2","content":"module.exports = function count_chars (str, mode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/count_chars/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: count_chars(\"Hello World!\", 3)\n  //   returns 1: \" !HWdelor\"\n  //   example 2: count_chars(\"Hello World!\", 1)\n  //   returns 2: {32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}\n\n  var result = {}\n  var resultArr = []\n  var i\n\n  str = ('' + str)\n    .split('')\n    .sort()\n    .join('')\n    .match(/(.)\\1*/g)\n\n  if ((mode & 1) === 0) {\n    for (i = 0; i !== 256; i++) {\n      result[i] = 0\n    }\n  }\n\n  if (mode === 2 || mode === 4) {\n    for (i = 0; i !== str.length; i += 1) {\n      delete result[str[i].charCodeAt(0)]\n    }\n    for (i in result) {\n      result[i] = (mode === 4) ? String.fromCharCode(i) : 0\n    }\n  } else if (mode === 3) {\n    for (i = 0; i !== str.length; i += 1) {\n      result[i] = str[i].slice(0, 1)\n    }\n  } else {\n    for (i = 0; i !== str.length; i += 1) {\n      result[str[i].charCodeAt(0)] = str[i].length\n    }\n  }\n  if (mode < 3) {\n    return result\n  }\n\n  for (i in result) {\n    resultArr.push(result[i])\n  }\n\n  return resultArr.join('')\n}\n","excerpt":"","more":"module.exports = function count_chars (str, mode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/count_chars/\n  // original by: Ates Goral (http://magnetiq.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //   example 1: count_chars(\"Hello World!\", 3)\n  //   returns 1: \" !HWdelor\"\n  //   example 2: count_chars(\"Hello World!\", 1)\n  //   returns 2: {32:1,33:1,72:1,87:1,100:1,101:1,108:3,111:2,114:1}\n\n  var result = {}\n  var resultArr = []\n  var i\n\n  str = ('' + str)\n    .split('')\n    .sort()\n    .join('')\n    .match(/(.)\\1*/g)\n\n  if ((mode & 1) === 0) {\n    for (i = 0; i !== 256; i++) {\n      result[i] = 0\n    }\n  }\n\n  if (mode === 2 || mode === 4) {\n    for (i = 0; i !== str.length; i += 1) {\n      delete result[str[i].charCodeAt(0)]\n    }\n    for (i in result) {\n      result[i] = (mode === 4) ? String.fromCharCode(i) : 0\n    }\n  } else if (mode === 3) {\n    for (i = 0; i !== str.length; i += 1) {\n      result[i] = str[i].slice(0, 1)\n    }\n  } else {\n    for (i = 0; i !== str.length; i += 1) {\n      result[str[i].charCodeAt(0)] = str[i].length\n    }\n  }\n  if (mode < 3) {\n    return result\n  }\n\n  for (i in result) {\n    resultArr.push(result[i])\n  }\n\n  return resultArr.join('')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["crc32('Kevin van Zonneveld')"],"estarget":"es5","returns":["1249991249"],"dependencies":[],"authors":{"original by":["Webtoolkit.info (http://www.webtoolkit.info/)"],"improved by":["T0bsn"]},"notes":[],"layout":"function","title":"php'scrc32 in JavaScript","function":"crc32","category":"strings","language":"php","alias":["/functions/php/crc32/","/functions/strings/crc32/","/php/crc32/","/functions/crc32/"],"_content":"module.exports = function crc32 (str) {\n  //  discuss at: http://locutusjs.io/php/crc32/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: T0bsn\n  //   example 1: crc32('Kevin van Zonneveld')\n  //   returns 1: 1249991249\n\n  var utf8Encode = require('../xml/utf8_encode')\n  str = utf8Encode(str)\n  var table = [\n    '00000000',\n    '77073096',\n    'EE0E612C',\n    '990951BA',\n    '076DC419',\n    '706AF48F',\n    'E963A535',\n    '9E6495A3',\n    '0EDB8832',\n    '79DCB8A4',\n    'E0D5E91E',\n    '97D2D988',\n    '09B64C2B',\n    '7EB17CBD',\n    'E7B82D07',\n    '90BF1D91',\n    '1DB71064',\n    '6AB020F2',\n    'F3B97148',\n    '84BE41DE',\n    '1ADAD47D',\n    '6DDDE4EB',\n    'F4D4B551',\n    '83D385C7',\n    '136C9856',\n    '646BA8C0',\n    'FD62F97A',\n    '8A65C9EC',\n    '14015C4F',\n    '63066CD9',\n    'FA0F3D63',\n    '8D080DF5',\n    '3B6E20C8',\n    '4C69105E',\n    'D56041E4',\n    'A2677172',\n    '3C03E4D1',\n    '4B04D447',\n    'D20D85FD',\n    'A50AB56B',\n    '35B5A8FA',\n    '42B2986C',\n    'DBBBC9D6',\n    'ACBCF940',\n    '32D86CE3',\n    '45DF5C75',\n    'DCD60DCF',\n    'ABD13D59',\n    '26D930AC',\n    '51DE003A',\n    'C8D75180',\n    'BFD06116',\n    '21B4F4B5',\n    '56B3C423',\n    'CFBA9599',\n    'B8BDA50F',\n    '2802B89E',\n    '5F058808',\n    'C60CD9B2',\n    'B10BE924',\n    '2F6F7C87',\n    '58684C11',\n    'C1611DAB',\n    'B6662D3D',\n    '76DC4190',\n    '01DB7106',\n    '98D220BC',\n    'EFD5102A',\n    '71B18589',\n    '06B6B51F',\n    '9FBFE4A5',\n    'E8B8D433',\n    '7807C9A2',\n    '0F00F934',\n    '9609A88E',\n    'E10E9818',\n    '7F6A0DBB',\n    '086D3D2D',\n    '91646C97',\n    'E6635C01',\n    '6B6B51F4',\n    '1C6C6162',\n    '856530D8',\n    'F262004E',\n    '6C0695ED',\n    '1B01A57B',\n    '8208F4C1',\n    'F50FC457',\n    '65B0D9C6',\n    '12B7E950',\n    '8BBEB8EA',\n    'FCB9887C',\n    '62DD1DDF',\n    '15DA2D49',\n    '8CD37CF3',\n    'FBD44C65',\n    '4DB26158',\n    '3AB551CE',\n    'A3BC0074',\n    'D4BB30E2',\n    '4ADFA541',\n    '3DD895D7',\n    'A4D1C46D',\n    'D3D6F4FB',\n    '4369E96A',\n    '346ED9FC',\n    'AD678846',\n    'DA60B8D0',\n    '44042D73',\n    '33031DE5',\n    'AA0A4C5F',\n    'DD0D7CC9',\n    '5005713C',\n    '270241AA',\n    'BE0B1010',\n    'C90C2086',\n    '5768B525',\n    '206F85B3',\n    'B966D409',\n    'CE61E49F',\n    '5EDEF90E',\n    '29D9C998',\n    'B0D09822',\n    'C7D7A8B4',\n    '59B33D17',\n    '2EB40D81',\n    'B7BD5C3B',\n    'C0BA6CAD',\n    'EDB88320',\n    '9ABFB3B6',\n    '03B6E20C',\n    '74B1D29A',\n    'EAD54739',\n    '9DD277AF',\n    '04DB2615',\n    '73DC1683',\n    'E3630B12',\n    '94643B84',\n    '0D6D6A3E',\n    '7A6A5AA8',\n    'E40ECF0B',\n    '9309FF9D',\n    '0A00AE27',\n    '7D079EB1',\n    'F00F9344',\n    '8708A3D2',\n    '1E01F268',\n    '6906C2FE',\n    'F762575D',\n    '806567CB',\n    '196C3671',\n    '6E6B06E7',\n    'FED41B76',\n    '89D32BE0',\n    '10DA7A5A',\n    '67DD4ACC',\n    'F9B9DF6F',\n    '8EBEEFF9',\n    '17B7BE43',\n    '60B08ED5',\n    'D6D6A3E8',\n    'A1D1937E',\n    '38D8C2C4',\n    '4FDFF252',\n    'D1BB67F1',\n    'A6BC5767',\n    '3FB506DD',\n    '48B2364B',\n    'D80D2BDA',\n    'AF0A1B4C',\n    '36034AF6',\n    '41047A60',\n    'DF60EFC3',\n    'A867DF55',\n    '316E8EEF',\n    '4669BE79',\n    'CB61B38C',\n    'BC66831A',\n    '256FD2A0',\n    '5268E236',\n    'CC0C7795',\n    'BB0B4703',\n    '220216B9',\n    '5505262F',\n    'C5BA3BBE',\n    'B2BD0B28',\n    '2BB45A92',\n    '5CB36A04',\n    'C2D7FFA7',\n    'B5D0CF31',\n    '2CD99E8B',\n    '5BDEAE1D',\n    '9B64C2B0',\n    'EC63F226',\n    '756AA39C',\n    '026D930A',\n    '9C0906A9',\n    'EB0E363F',\n    '72076785',\n    '05005713',\n    '95BF4A82',\n    'E2B87A14',\n    '7BB12BAE',\n    '0CB61B38',\n    '92D28E9B',\n    'E5D5BE0D',\n    '7CDCEFB7',\n    '0BDBDF21',\n    '86D3D2D4',\n    'F1D4E242',\n    '68DDB3F8',\n    '1FDA836E',\n    '81BE16CD',\n    'F6B9265B',\n    '6FB077E1',\n    '18B74777',\n    '88085AE6',\n    'FF0F6A70',\n    '66063BCA',\n    '11010B5C',\n    '8F659EFF',\n    'F862AE69',\n    '616BFFD3',\n    '166CCF45',\n    'A00AE278',\n    'D70DD2EE',\n    '4E048354',\n    '3903B3C2',\n    'A7672661',\n    'D06016F7',\n    '4969474D',\n    '3E6E77DB',\n    'AED16A4A',\n    'D9D65ADC',\n    '40DF0B66',\n    '37D83BF0',\n    'A9BCAE53',\n    'DEBB9EC5',\n    '47B2CF7F',\n    '30B5FFE9',\n    'BDBDF21C',\n    'CABAC28A',\n    '53B39330',\n    '24B4A3A6',\n    'BAD03605',\n    'CDD70693',\n    '54DE5729',\n    '23D967BF',\n    'B3667A2E',\n    'C4614AB8',\n    '5D681B02',\n    '2A6F2B94',\n    'B40BBE37',\n    'C30C8EA1',\n    '5A05DF1B',\n    '2D02EF8D'\n  ].join(' ')\n  // @todo: ^-- Now that `table` is an array, maybe we can use that directly using slices,\n  // instead of converting it to a string and substringing\n\n  var crc = 0\n  var x = 0\n  var y = 0\n\n  crc = crc ^ (-1)\n  for (var i = 0, iTop = str.length; i < iTop; i++) {\n    y = (crc ^ str.charCodeAt(i)) & 0xFF\n    x = '0x' + table.substr(y * 9, 8)\n    crc = (crc >>> 8) ^ x\n  }\n\n  return crc ^ (-1)\n}\n","source":"php/strings/crc32.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - crc32('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '1249991249'\ndependencies: []\nauthors:\n  original by:\n    - 'Webtoolkit.info (http://www.webtoolkit.info/)'\n  improved by:\n    - T0bsn\nnotes: []\nlayout: function\ntitle: php'scrc32 in JavaScript\nfunction: crc32\ncategory: strings\nlanguage: php\npermalink: php/strings/crc32/\nalias:\n  - /functions/php/crc32/\n  - /functions/strings/crc32/\n  - /php/crc32/\n  - /functions/crc32/\n---\nmodule.exports = function crc32 (str) {\n  //  discuss at: http://locutusjs.io/php/crc32/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: T0bsn\n  //   example 1: crc32('Kevin van Zonneveld')\n  //   returns 1: 1249991249\n\n  var utf8Encode = require('../xml/utf8_encode')\n  str = utf8Encode(str)\n  var table = [\n    '00000000',\n    '77073096',\n    'EE0E612C',\n    '990951BA',\n    '076DC419',\n    '706AF48F',\n    'E963A535',\n    '9E6495A3',\n    '0EDB8832',\n    '79DCB8A4',\n    'E0D5E91E',\n    '97D2D988',\n    '09B64C2B',\n    '7EB17CBD',\n    'E7B82D07',\n    '90BF1D91',\n    '1DB71064',\n    '6AB020F2',\n    'F3B97148',\n    '84BE41DE',\n    '1ADAD47D',\n    '6DDDE4EB',\n    'F4D4B551',\n    '83D385C7',\n    '136C9856',\n    '646BA8C0',\n    'FD62F97A',\n    '8A65C9EC',\n    '14015C4F',\n    '63066CD9',\n    'FA0F3D63',\n    '8D080DF5',\n    '3B6E20C8',\n    '4C69105E',\n    'D56041E4',\n    'A2677172',\n    '3C03E4D1',\n    '4B04D447',\n    'D20D85FD',\n    'A50AB56B',\n    '35B5A8FA',\n    '42B2986C',\n    'DBBBC9D6',\n    'ACBCF940',\n    '32D86CE3',\n    '45DF5C75',\n    'DCD60DCF',\n    'ABD13D59',\n    '26D930AC',\n    '51DE003A',\n    'C8D75180',\n    'BFD06116',\n    '21B4F4B5',\n    '56B3C423',\n    'CFBA9599',\n    'B8BDA50F',\n    '2802B89E',\n    '5F058808',\n    'C60CD9B2',\n    'B10BE924',\n    '2F6F7C87',\n    '58684C11',\n    'C1611DAB',\n    'B6662D3D',\n    '76DC4190',\n    '01DB7106',\n    '98D220BC',\n    'EFD5102A',\n    '71B18589',\n    '06B6B51F',\n    '9FBFE4A5',\n    'E8B8D433',\n    '7807C9A2',\n    '0F00F934',\n    '9609A88E',\n    'E10E9818',\n    '7F6A0DBB',\n    '086D3D2D',\n    '91646C97',\n    'E6635C01',\n    '6B6B51F4',\n    '1C6C6162',\n    '856530D8',\n    'F262004E',\n    '6C0695ED',\n    '1B01A57B',\n    '8208F4C1',\n    'F50FC457',\n    '65B0D9C6',\n    '12B7E950',\n    '8BBEB8EA',\n    'FCB9887C',\n    '62DD1DDF',\n    '15DA2D49',\n    '8CD37CF3',\n    'FBD44C65',\n    '4DB26158',\n    '3AB551CE',\n    'A3BC0074',\n    'D4BB30E2',\n    '4ADFA541',\n    '3DD895D7',\n    'A4D1C46D',\n    'D3D6F4FB',\n    '4369E96A',\n    '346ED9FC',\n    'AD678846',\n    'DA60B8D0',\n    '44042D73',\n    '33031DE5',\n    'AA0A4C5F',\n    'DD0D7CC9',\n    '5005713C',\n    '270241AA',\n    'BE0B1010',\n    'C90C2086',\n    '5768B525',\n    '206F85B3',\n    'B966D409',\n    'CE61E49F',\n    '5EDEF90E',\n    '29D9C998',\n    'B0D09822',\n    'C7D7A8B4',\n    '59B33D17',\n    '2EB40D81',\n    'B7BD5C3B',\n    'C0BA6CAD',\n    'EDB88320',\n    '9ABFB3B6',\n    '03B6E20C',\n    '74B1D29A',\n    'EAD54739',\n    '9DD277AF',\n    '04DB2615',\n    '73DC1683',\n    'E3630B12',\n    '94643B84',\n    '0D6D6A3E',\n    '7A6A5AA8',\n    'E40ECF0B',\n    '9309FF9D',\n    '0A00AE27',\n    '7D079EB1',\n    'F00F9344',\n    '8708A3D2',\n    '1E01F268',\n    '6906C2FE',\n    'F762575D',\n    '806567CB',\n    '196C3671',\n    '6E6B06E7',\n    'FED41B76',\n    '89D32BE0',\n    '10DA7A5A',\n    '67DD4ACC',\n    'F9B9DF6F',\n    '8EBEEFF9',\n    '17B7BE43',\n    '60B08ED5',\n    'D6D6A3E8',\n    'A1D1937E',\n    '38D8C2C4',\n    '4FDFF252',\n    'D1BB67F1',\n    'A6BC5767',\n    '3FB506DD',\n    '48B2364B',\n    'D80D2BDA',\n    'AF0A1B4C',\n    '36034AF6',\n    '41047A60',\n    'DF60EFC3',\n    'A867DF55',\n    '316E8EEF',\n    '4669BE79',\n    'CB61B38C',\n    'BC66831A',\n    '256FD2A0',\n    '5268E236',\n    'CC0C7795',\n    'BB0B4703',\n    '220216B9',\n    '5505262F',\n    'C5BA3BBE',\n    'B2BD0B28',\n    '2BB45A92',\n    '5CB36A04',\n    'C2D7FFA7',\n    'B5D0CF31',\n    '2CD99E8B',\n    '5BDEAE1D',\n    '9B64C2B0',\n    'EC63F226',\n    '756AA39C',\n    '026D930A',\n    '9C0906A9',\n    'EB0E363F',\n    '72076785',\n    '05005713',\n    '95BF4A82',\n    'E2B87A14',\n    '7BB12BAE',\n    '0CB61B38',\n    '92D28E9B',\n    'E5D5BE0D',\n    '7CDCEFB7',\n    '0BDBDF21',\n    '86D3D2D4',\n    'F1D4E242',\n    '68DDB3F8',\n    '1FDA836E',\n    '81BE16CD',\n    'F6B9265B',\n    '6FB077E1',\n    '18B74777',\n    '88085AE6',\n    'FF0F6A70',\n    '66063BCA',\n    '11010B5C',\n    '8F659EFF',\n    'F862AE69',\n    '616BFFD3',\n    '166CCF45',\n    'A00AE278',\n    'D70DD2EE',\n    '4E048354',\n    '3903B3C2',\n    'A7672661',\n    'D06016F7',\n    '4969474D',\n    '3E6E77DB',\n    'AED16A4A',\n    'D9D65ADC',\n    '40DF0B66',\n    '37D83BF0',\n    'A9BCAE53',\n    'DEBB9EC5',\n    '47B2CF7F',\n    '30B5FFE9',\n    'BDBDF21C',\n    'CABAC28A',\n    '53B39330',\n    '24B4A3A6',\n    'BAD03605',\n    'CDD70693',\n    '54DE5729',\n    '23D967BF',\n    'B3667A2E',\n    'C4614AB8',\n    '5D681B02',\n    '2A6F2B94',\n    'B40BBE37',\n    'C30C8EA1',\n    '5A05DF1B',\n    '2D02EF8D'\n  ].join(' ')\n  // @todo: ^-- Now that `table` is an array, maybe we can use that directly using slices,\n  // instead of converting it to a string and substringing\n\n  var crc = 0\n  var x = 0\n  var y = 0\n\n  crc = crc ^ (-1)\n  for (var i = 0, iTop = str.length; i < iTop; i++) {\n    y = (crc ^ str.charCodeAt(i)) & 0xFF\n    x = '0x' + table.substr(y * 9, 8)\n    crc = (crc >>> 8) ^ x\n  }\n\n  return crc ^ (-1)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/crc32/index.html","comments":1,"_id":"cinoeja14005zou9ysio42v8o","content":"module.exports = function crc32 (str) {\n  //  discuss at: http://locutusjs.io/php/crc32/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: T0bsn\n  //   example 1: crc32('Kevin van Zonneveld')\n  //   returns 1: 1249991249\n\n  var utf8Encode = require('../xml/utf8_encode')\n  str = utf8Encode(str)\n  var table = [\n    '00000000',\n    '77073096',\n    'EE0E612C',\n    '990951BA',\n    '076DC419',\n    '706AF48F',\n    'E963A535',\n    '9E6495A3',\n    '0EDB8832',\n    '79DCB8A4',\n    'E0D5E91E',\n    '97D2D988',\n    '09B64C2B',\n    '7EB17CBD',\n    'E7B82D07',\n    '90BF1D91',\n    '1DB71064',\n    '6AB020F2',\n    'F3B97148',\n    '84BE41DE',\n    '1ADAD47D',\n    '6DDDE4EB',\n    'F4D4B551',\n    '83D385C7',\n    '136C9856',\n    '646BA8C0',\n    'FD62F97A',\n    '8A65C9EC',\n    '14015C4F',\n    '63066CD9',\n    'FA0F3D63',\n    '8D080DF5',\n    '3B6E20C8',\n    '4C69105E',\n    'D56041E4',\n    'A2677172',\n    '3C03E4D1',\n    '4B04D447',\n    'D20D85FD',\n    'A50AB56B',\n    '35B5A8FA',\n    '42B2986C',\n    'DBBBC9D6',\n    'ACBCF940',\n    '32D86CE3',\n    '45DF5C75',\n    'DCD60DCF',\n    'ABD13D59',\n    '26D930AC',\n    '51DE003A',\n    'C8D75180',\n    'BFD06116',\n    '21B4F4B5',\n    '56B3C423',\n    'CFBA9599',\n    'B8BDA50F',\n    '2802B89E',\n    '5F058808',\n    'C60CD9B2',\n    'B10BE924',\n    '2F6F7C87',\n    '58684C11',\n    'C1611DAB',\n    'B6662D3D',\n    '76DC4190',\n    '01DB7106',\n    '98D220BC',\n    'EFD5102A',\n    '71B18589',\n    '06B6B51F',\n    '9FBFE4A5',\n    'E8B8D433',\n    '7807C9A2',\n    '0F00F934',\n    '9609A88E',\n    'E10E9818',\n    '7F6A0DBB',\n    '086D3D2D',\n    '91646C97',\n    'E6635C01',\n    '6B6B51F4',\n    '1C6C6162',\n    '856530D8',\n    'F262004E',\n    '6C0695ED',\n    '1B01A57B',\n    '8208F4C1',\n    'F50FC457',\n    '65B0D9C6',\n    '12B7E950',\n    '8BBEB8EA',\n    'FCB9887C',\n    '62DD1DDF',\n    '15DA2D49',\n    '8CD37CF3',\n    'FBD44C65',\n    '4DB26158',\n    '3AB551CE',\n    'A3BC0074',\n    'D4BB30E2',\n    '4ADFA541',\n    '3DD895D7',\n    'A4D1C46D',\n    'D3D6F4FB',\n    '4369E96A',\n    '346ED9FC',\n    'AD678846',\n    'DA60B8D0',\n    '44042D73',\n    '33031DE5',\n    'AA0A4C5F',\n    'DD0D7CC9',\n    '5005713C',\n    '270241AA',\n    'BE0B1010',\n    'C90C2086',\n    '5768B525',\n    '206F85B3',\n    'B966D409',\n    'CE61E49F',\n    '5EDEF90E',\n    '29D9C998',\n    'B0D09822',\n    'C7D7A8B4',\n    '59B33D17',\n    '2EB40D81',\n    'B7BD5C3B',\n    'C0BA6CAD',\n    'EDB88320',\n    '9ABFB3B6',\n    '03B6E20C',\n    '74B1D29A',\n    'EAD54739',\n    '9DD277AF',\n    '04DB2615',\n    '73DC1683',\n    'E3630B12',\n    '94643B84',\n    '0D6D6A3E',\n    '7A6A5AA8',\n    'E40ECF0B',\n    '9309FF9D',\n    '0A00AE27',\n    '7D079EB1',\n    'F00F9344',\n    '8708A3D2',\n    '1E01F268',\n    '6906C2FE',\n    'F762575D',\n    '806567CB',\n    '196C3671',\n    '6E6B06E7',\n    'FED41B76',\n    '89D32BE0',\n    '10DA7A5A',\n    '67DD4ACC',\n    'F9B9DF6F',\n    '8EBEEFF9',\n    '17B7BE43',\n    '60B08ED5',\n    'D6D6A3E8',\n    'A1D1937E',\n    '38D8C2C4',\n    '4FDFF252',\n    'D1BB67F1',\n    'A6BC5767',\n    '3FB506DD',\n    '48B2364B',\n    'D80D2BDA',\n    'AF0A1B4C',\n    '36034AF6',\n    '41047A60',\n    'DF60EFC3',\n    'A867DF55',\n    '316E8EEF',\n    '4669BE79',\n    'CB61B38C',\n    'BC66831A',\n    '256FD2A0',\n    '5268E236',\n    'CC0C7795',\n    'BB0B4703',\n    '220216B9',\n    '5505262F',\n    'C5BA3BBE',\n    'B2BD0B28',\n    '2BB45A92',\n    '5CB36A04',\n    'C2D7FFA7',\n    'B5D0CF31',\n    '2CD99E8B',\n    '5BDEAE1D',\n    '9B64C2B0',\n    'EC63F226',\n    '756AA39C',\n    '026D930A',\n    '9C0906A9',\n    'EB0E363F',\n    '72076785',\n    '05005713',\n    '95BF4A82',\n    'E2B87A14',\n    '7BB12BAE',\n    '0CB61B38',\n    '92D28E9B',\n    'E5D5BE0D',\n    '7CDCEFB7',\n    '0BDBDF21',\n    '86D3D2D4',\n    'F1D4E242',\n    '68DDB3F8',\n    '1FDA836E',\n    '81BE16CD',\n    'F6B9265B',\n    '6FB077E1',\n    '18B74777',\n    '88085AE6',\n    'FF0F6A70',\n    '66063BCA',\n    '11010B5C',\n    '8F659EFF',\n    'F862AE69',\n    '616BFFD3',\n    '166CCF45',\n    'A00AE278',\n    'D70DD2EE',\n    '4E048354',\n    '3903B3C2',\n    'A7672661',\n    'D06016F7',\n    '4969474D',\n    '3E6E77DB',\n    'AED16A4A',\n    'D9D65ADC',\n    '40DF0B66',\n    '37D83BF0',\n    'A9BCAE53',\n    'DEBB9EC5',\n    '47B2CF7F',\n    '30B5FFE9',\n    'BDBDF21C',\n    'CABAC28A',\n    '53B39330',\n    '24B4A3A6',\n    'BAD03605',\n    'CDD70693',\n    '54DE5729',\n    '23D967BF',\n    'B3667A2E',\n    'C4614AB8',\n    '5D681B02',\n    '2A6F2B94',\n    'B40BBE37',\n    'C30C8EA1',\n    '5A05DF1B',\n    '2D02EF8D'\n  ].join(' ')\n  // @todo: ^-- Now that `table` is an array, maybe we can use that directly using slices,\n  // instead of converting it to a string and substringing\n\n  var crc = 0\n  var x = 0\n  var y = 0\n\n  crc = crc ^ (-1)\n  for (var i = 0, iTop = str.length; i < iTop; i++) {\n    y = (crc ^ str.charCodeAt(i)) & 0xFF\n    x = '0x' + table.substr(y * 9, 8)\n    crc = (crc >>> 8) ^ x\n  }\n\n  return crc ^ (-1)\n}\n","excerpt":"","more":"module.exports = function crc32 (str) {\n  //  discuss at: http://locutusjs.io/php/crc32/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: T0bsn\n  //   example 1: crc32('Kevin van Zonneveld')\n  //   returns 1: 1249991249\n\n  var utf8Encode = require('../xml/utf8_encode')\n  str = utf8Encode(str)\n  var table = [\n    '00000000',\n    '77073096',\n    'EE0E612C',\n    '990951BA',\n    '076DC419',\n    '706AF48F',\n    'E963A535',\n    '9E6495A3',\n    '0EDB8832',\n    '79DCB8A4',\n    'E0D5E91E',\n    '97D2D988',\n    '09B64C2B',\n    '7EB17CBD',\n    'E7B82D07',\n    '90BF1D91',\n    '1DB71064',\n    '6AB020F2',\n    'F3B97148',\n    '84BE41DE',\n    '1ADAD47D',\n    '6DDDE4EB',\n    'F4D4B551',\n    '83D385C7',\n    '136C9856',\n    '646BA8C0',\n    'FD62F97A',\n    '8A65C9EC',\n    '14015C4F',\n    '63066CD9',\n    'FA0F3D63',\n    '8D080DF5',\n    '3B6E20C8',\n    '4C69105E',\n    'D56041E4',\n    'A2677172',\n    '3C03E4D1',\n    '4B04D447',\n    'D20D85FD',\n    'A50AB56B',\n    '35B5A8FA',\n    '42B2986C',\n    'DBBBC9D6',\n    'ACBCF940',\n    '32D86CE3',\n    '45DF5C75',\n    'DCD60DCF',\n    'ABD13D59',\n    '26D930AC',\n    '51DE003A',\n    'C8D75180',\n    'BFD06116',\n    '21B4F4B5',\n    '56B3C423',\n    'CFBA9599',\n    'B8BDA50F',\n    '2802B89E',\n    '5F058808',\n    'C60CD9B2',\n    'B10BE924',\n    '2F6F7C87',\n    '58684C11',\n    'C1611DAB',\n    'B6662D3D',\n    '76DC4190',\n    '01DB7106',\n    '98D220BC',\n    'EFD5102A',\n    '71B18589',\n    '06B6B51F',\n    '9FBFE4A5',\n    'E8B8D433',\n    '7807C9A2',\n    '0F00F934',\n    '9609A88E',\n    'E10E9818',\n    '7F6A0DBB',\n    '086D3D2D',\n    '91646C97',\n    'E6635C01',\n    '6B6B51F4',\n    '1C6C6162',\n    '856530D8',\n    'F262004E',\n    '6C0695ED',\n    '1B01A57B',\n    '8208F4C1',\n    'F50FC457',\n    '65B0D9C6',\n    '12B7E950',\n    '8BBEB8EA',\n    'FCB9887C',\n    '62DD1DDF',\n    '15DA2D49',\n    '8CD37CF3',\n    'FBD44C65',\n    '4DB26158',\n    '3AB551CE',\n    'A3BC0074',\n    'D4BB30E2',\n    '4ADFA541',\n    '3DD895D7',\n    'A4D1C46D',\n    'D3D6F4FB',\n    '4369E96A',\n    '346ED9FC',\n    'AD678846',\n    'DA60B8D0',\n    '44042D73',\n    '33031DE5',\n    'AA0A4C5F',\n    'DD0D7CC9',\n    '5005713C',\n    '270241AA',\n    'BE0B1010',\n    'C90C2086',\n    '5768B525',\n    '206F85B3',\n    'B966D409',\n    'CE61E49F',\n    '5EDEF90E',\n    '29D9C998',\n    'B0D09822',\n    'C7D7A8B4',\n    '59B33D17',\n    '2EB40D81',\n    'B7BD5C3B',\n    'C0BA6CAD',\n    'EDB88320',\n    '9ABFB3B6',\n    '03B6E20C',\n    '74B1D29A',\n    'EAD54739',\n    '9DD277AF',\n    '04DB2615',\n    '73DC1683',\n    'E3630B12',\n    '94643B84',\n    '0D6D6A3E',\n    '7A6A5AA8',\n    'E40ECF0B',\n    '9309FF9D',\n    '0A00AE27',\n    '7D079EB1',\n    'F00F9344',\n    '8708A3D2',\n    '1E01F268',\n    '6906C2FE',\n    'F762575D',\n    '806567CB',\n    '196C3671',\n    '6E6B06E7',\n    'FED41B76',\n    '89D32BE0',\n    '10DA7A5A',\n    '67DD4ACC',\n    'F9B9DF6F',\n    '8EBEEFF9',\n    '17B7BE43',\n    '60B08ED5',\n    'D6D6A3E8',\n    'A1D1937E',\n    '38D8C2C4',\n    '4FDFF252',\n    'D1BB67F1',\n    'A6BC5767',\n    '3FB506DD',\n    '48B2364B',\n    'D80D2BDA',\n    'AF0A1B4C',\n    '36034AF6',\n    '41047A60',\n    'DF60EFC3',\n    'A867DF55',\n    '316E8EEF',\n    '4669BE79',\n    'CB61B38C',\n    'BC66831A',\n    '256FD2A0',\n    '5268E236',\n    'CC0C7795',\n    'BB0B4703',\n    '220216B9',\n    '5505262F',\n    'C5BA3BBE',\n    'B2BD0B28',\n    '2BB45A92',\n    '5CB36A04',\n    'C2D7FFA7',\n    'B5D0CF31',\n    '2CD99E8B',\n    '5BDEAE1D',\n    '9B64C2B0',\n    'EC63F226',\n    '756AA39C',\n    '026D930A',\n    '9C0906A9',\n    'EB0E363F',\n    '72076785',\n    '05005713',\n    '95BF4A82',\n    'E2B87A14',\n    '7BB12BAE',\n    '0CB61B38',\n    '92D28E9B',\n    'E5D5BE0D',\n    '7CDCEFB7',\n    '0BDBDF21',\n    '86D3D2D4',\n    'F1D4E242',\n    '68DDB3F8',\n    '1FDA836E',\n    '81BE16CD',\n    'F6B9265B',\n    '6FB077E1',\n    '18B74777',\n    '88085AE6',\n    'FF0F6A70',\n    '66063BCA',\n    '11010B5C',\n    '8F659EFF',\n    'F862AE69',\n    '616BFFD3',\n    '166CCF45',\n    'A00AE278',\n    'D70DD2EE',\n    '4E048354',\n    '3903B3C2',\n    'A7672661',\n    'D06016F7',\n    '4969474D',\n    '3E6E77DB',\n    'AED16A4A',\n    'D9D65ADC',\n    '40DF0B66',\n    '37D83BF0',\n    'A9BCAE53',\n    'DEBB9EC5',\n    '47B2CF7F',\n    '30B5FFE9',\n    'BDBDF21C',\n    'CABAC28A',\n    '53B39330',\n    '24B4A3A6',\n    'BAD03605',\n    'CDD70693',\n    '54DE5729',\n    '23D967BF',\n    'B3667A2E',\n    'C4614AB8',\n    '5D681B02',\n    '2A6F2B94',\n    'B40BBE37',\n    'C30C8EA1',\n    '5A05DF1B',\n    '2D02EF8D'\n  ].join(' ')\n  // @todo: ^-- Now that `table` is an array, maybe we can use that directly using slices,\n  // instead of converting it to a string and substringing\n\n  var crc = 0\n  var x = 0\n  var y = 0\n\n  crc = crc ^ (-1)\n  for (var i = 0, iTop = str.length; i < iTop; i++) {\n    y = (crc ^ str.charCodeAt(i)) & 0xFF\n    x = '0x' + table.substr(y * 9, 8)\n    crc = (crc >>> 8) ^ x\n  }\n\n  return crc ^ (-1)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["echo('Hello world')"],"estarget":"es5","returns":["undefined"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["echo is bad","Nate","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Eugene Bulkin (http://doubleaw.com/)","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)","EdorFaus"],"revised by":["Der Simon (http://innerdom.sourceforge.net/)","Kevin van Zonneveld (http://kvz.io)"],"input by":["JB"]},"notes":["In 1.3.2 and earlier, this function wrote to the body of the document when it\nwas called in webbrowsers, in addition to supporting XUL.\nThis involved >100 lines of boilerplate to do this in a safe way.\nSince I can't imageine a complelling use-case for this, and XUL is deprecated\nI have removed this behavior in favor of just calling `console.log`","You'll see functions depends on `echo` instead of `console.log` as we'll want\nto have 1 contact point to interface with the outside world, so that it's easy\nto support other ways of printing output."],"layout":"function","title":"php'secho in JavaScript","function":"echo","category":"strings","language":"php","alias":["/functions/php/echo/","/functions/strings/echo/","/php/echo/","/functions/echo/"],"_content":"module.exports = function echo () {\n  //  discuss at: http://locutusjs.io/php/echo/\n  // original by: Philip Peterson\n  // improved by: echo is bad\n  // improved by: Nate\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Der Simon (http://innerdom.sourceforge.net/)\n  // bugfixed by: Eugene Bulkin (http://doubleaw.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: EdorFaus\n  //      note 1: In 1.3.2 and earlier, this function wrote to the body of the document when it\n  //      note 1: was called in webbrowsers, in addition to supporting XUL.\n  //      note 1: This involved >100 lines of boilerplate to do this in a safe way.\n  //      note 1: Since I can't imageine a complelling use-case for this, and XUL is deprecated\n  //      note 1: I have removed this behavior in favor of just calling `console.log`\n  //      note 2: You'll see functions depends on `echo` instead of `console.log` as we'll want\n  //      note 2: to have 1 contact point to interface with the outside world, so that it's easy\n  //      note 2: to support other ways of printing output.\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: JB\n  //   example 1: echo('Hello world')\n  //   returns 1: undefined\n\n  var args = Array.prototype.slice.call(arguments)\n  return console.log(args.join(' '))\n}\n","source":"php/strings/echo.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - echo('Hello world')\nestarget: es5\nreturns:\n  - undefined\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - echo is bad\n    - Nate\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Eugene Bulkin (http://doubleaw.com/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - EdorFaus\n  revised by:\n    - 'Der Simon (http://innerdom.sourceforge.net/)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - JB\nnotes:\n  - >-\n    In 1.3.2 and earlier, this function wrote to the body of the document when\n    it\n\n    was called in webbrowsers, in addition to supporting XUL.\n\n    This involved >100 lines of boilerplate to do this in a safe way.\n\n    Since I can't imageine a complelling use-case for this, and XUL is\n    deprecated\n\n    I have removed this behavior in favor of just calling `console.log`\n  - >-\n    You'll see functions depends on `echo` instead of `console.log` as we'll\n    want\n\n    to have 1 contact point to interface with the outside world, so that it's\n    easy\n\n    to support other ways of printing output.\nlayout: function\ntitle: php'secho in JavaScript\nfunction: echo\ncategory: strings\nlanguage: php\npermalink: php/strings/echo/\nalias:\n  - /functions/php/echo/\n  - /functions/strings/echo/\n  - /php/echo/\n  - /functions/echo/\n---\nmodule.exports = function echo () {\n  //  discuss at: http://locutusjs.io/php/echo/\n  // original by: Philip Peterson\n  // improved by: echo is bad\n  // improved by: Nate\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Der Simon (http://innerdom.sourceforge.net/)\n  // bugfixed by: Eugene Bulkin (http://doubleaw.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: EdorFaus\n  //      note 1: In 1.3.2 and earlier, this function wrote to the body of the document when it\n  //      note 1: was called in webbrowsers, in addition to supporting XUL.\n  //      note 1: This involved >100 lines of boilerplate to do this in a safe way.\n  //      note 1: Since I can't imageine a complelling use-case for this, and XUL is deprecated\n  //      note 1: I have removed this behavior in favor of just calling `console.log`\n  //      note 2: You'll see functions depends on `echo` instead of `console.log` as we'll want\n  //      note 2: to have 1 contact point to interface with the outside world, so that it's easy\n  //      note 2: to support other ways of printing output.\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: JB\n  //   example 1: echo('Hello world')\n  //   returns 1: undefined\n\n  var args = Array.prototype.slice.call(arguments)\n  return console.log(args.join(' '))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/echo/index.html","comments":1,"_id":"cinoeja140060ou9ybmzqwjgx","content":"module.exports = function echo () {\n  //  discuss at: http://locutusjs.io/php/echo/\n  // original by: Philip Peterson\n  // improved by: echo is bad\n  // improved by: Nate\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Der Simon (http://innerdom.sourceforge.net/)\n  // bugfixed by: Eugene Bulkin (http://doubleaw.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: EdorFaus\n  //      note 1: In 1.3.2 and earlier, this function wrote to the body of the document when it\n  //      note 1: was called in webbrowsers, in addition to supporting XUL.\n  //      note 1: This involved >100 lines of boilerplate to do this in a safe way.\n  //      note 1: Since I can't imageine a complelling use-case for this, and XUL is deprecated\n  //      note 1: I have removed this behavior in favor of just calling `console.log`\n  //      note 2: You'll see functions depends on `echo` instead of `console.log` as we'll want\n  //      note 2: to have 1 contact point to interface with the outside world, so that it's easy\n  //      note 2: to support other ways of printing output.\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: JB\n  //   example 1: echo('Hello world')\n  //   returns 1: undefined\n\n  var args = Array.prototype.slice.call(arguments)\n  return console.log(args.join(' '))\n}\n","excerpt":"","more":"module.exports = function echo () {\n  //  discuss at: http://locutusjs.io/php/echo/\n  // original by: Philip Peterson\n  // improved by: echo is bad\n  // improved by: Nate\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Der Simon (http://innerdom.sourceforge.net/)\n  // bugfixed by: Eugene Bulkin (http://doubleaw.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: EdorFaus\n  //      note 1: In 1.3.2 and earlier, this function wrote to the body of the document when it\n  //      note 1: was called in webbrowsers, in addition to supporting XUL.\n  //      note 1: This involved >100 lines of boilerplate to do this in a safe way.\n  //      note 1: Since I can't imageine a complelling use-case for this, and XUL is deprecated\n  //      note 1: I have removed this behavior in favor of just calling `console.log`\n  //      note 2: You'll see functions depends on `echo` instead of `console.log` as we'll want\n  //      note 2: to have 1 contact point to interface with the outside world, so that it's easy\n  //      note 2: to support other ways of printing output.\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: JB\n  //   example 1: echo('Hello world')\n  //   returns 1: undefined\n\n  var args = Array.prototype.slice.call(arguments)\n  return console.log(args.join(' '))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["explode(' ', 'Kevin van Zonneveld')"],"estarget":"es5","returns":["[ 'Kevin', 'van', 'Zonneveld' ]"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"php'sexplode in JavaScript","function":"explode","category":"strings","language":"php","alias":["/functions/php/explode/","/functions/strings/explode/","/php/explode/","/functions/explode/"],"_content":"module.exports = function explode (delimiter, string, limit) {\n  //  discuss at: http://locutusjs.io/php/explode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: explode(' ', 'Kevin van Zonneveld')\n  //   returns 1: [ 'Kevin', 'van', 'Zonneveld' ]\n\n  if (arguments.length < 2 ||\n    typeof delimiter === 'undefined' ||\n    typeof string === 'undefined') {\n    return null\n  }\n  if (delimiter === '' ||\n    delimiter === false ||\n    delimiter === null) {\n    return false\n  }\n  if (typeof delimiter === 'function' ||\n    typeof delimiter === 'object' ||\n    typeof string === 'function' ||\n    typeof string === 'object') {\n    return {\n      0: ''\n    }\n  }\n  if (delimiter === true) {\n    delimiter = '1'\n  }\n\n  // Here we go...\n  delimiter += ''\n  string += ''\n\n  var s = string.split(delimiter)\n\n  if (typeof limit === 'undefined') return s\n\n  // Support for limit\n  if (limit === 0) limit = 1\n\n  // Positive limit\n  if (limit > 0) {\n    if (limit >= s.length) {\n      return s\n    }\n    return s\n      .slice(0, limit - 1)\n      .concat([s.slice(limit - 1)\n        .join(delimiter)\n      ])\n  }\n\n  // Negative limit\n  if (-limit >= s.length) {\n    return []\n  }\n\n  s.splice(s.length + limit)\n  return s\n}\n","source":"php/strings/explode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'explode('' '', ''Kevin van Zonneveld'')'\nestarget: es5\nreturns:\n  - '[ ''Kevin'', ''van'', ''Zonneveld'' ]'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: php'sexplode in JavaScript\nfunction: explode\ncategory: strings\nlanguage: php\npermalink: php/strings/explode/\nalias:\n  - /functions/php/explode/\n  - /functions/strings/explode/\n  - /php/explode/\n  - /functions/explode/\n---\nmodule.exports = function explode (delimiter, string, limit) {\n  //  discuss at: http://locutusjs.io/php/explode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: explode(' ', 'Kevin van Zonneveld')\n  //   returns 1: [ 'Kevin', 'van', 'Zonneveld' ]\n\n  if (arguments.length < 2 ||\n    typeof delimiter === 'undefined' ||\n    typeof string === 'undefined') {\n    return null\n  }\n  if (delimiter === '' ||\n    delimiter === false ||\n    delimiter === null) {\n    return false\n  }\n  if (typeof delimiter === 'function' ||\n    typeof delimiter === 'object' ||\n    typeof string === 'function' ||\n    typeof string === 'object') {\n    return {\n      0: ''\n    }\n  }\n  if (delimiter === true) {\n    delimiter = '1'\n  }\n\n  // Here we go...\n  delimiter += ''\n  string += ''\n\n  var s = string.split(delimiter)\n\n  if (typeof limit === 'undefined') return s\n\n  // Support for limit\n  if (limit === 0) limit = 1\n\n  // Positive limit\n  if (limit > 0) {\n    if (limit >= s.length) {\n      return s\n    }\n    return s\n      .slice(0, limit - 1)\n      .concat([s.slice(limit - 1)\n        .join(delimiter)\n      ])\n  }\n\n  // Negative limit\n  if (-limit >= s.length) {\n    return []\n  }\n\n  s.splice(s.length + limit)\n  return s\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/explode/index.html","comments":1,"_id":"cinoeja150061ou9yepikr4xl","content":"module.exports = function explode (delimiter, string, limit) {\n  //  discuss at: http://locutusjs.io/php/explode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: explode(' ', 'Kevin van Zonneveld')\n  //   returns 1: [ 'Kevin', 'van', 'Zonneveld' ]\n\n  if (arguments.length < 2 ||\n    typeof delimiter === 'undefined' ||\n    typeof string === 'undefined') {\n    return null\n  }\n  if (delimiter === '' ||\n    delimiter === false ||\n    delimiter === null) {\n    return false\n  }\n  if (typeof delimiter === 'function' ||\n    typeof delimiter === 'object' ||\n    typeof string === 'function' ||\n    typeof string === 'object') {\n    return {\n      0: ''\n    }\n  }\n  if (delimiter === true) {\n    delimiter = '1'\n  }\n\n  // Here we go...\n  delimiter += ''\n  string += ''\n\n  var s = string.split(delimiter)\n\n  if (typeof limit === 'undefined') return s\n\n  // Support for limit\n  if (limit === 0) limit = 1\n\n  // Positive limit\n  if (limit > 0) {\n    if (limit >= s.length) {\n      return s\n    }\n    return s\n      .slice(0, limit - 1)\n      .concat([s.slice(limit - 1)\n        .join(delimiter)\n      ])\n  }\n\n  // Negative limit\n  if (-limit >= s.length) {\n    return []\n  }\n\n  s.splice(s.length + limit)\n  return s\n}\n","excerpt":"","more":"module.exports = function explode (delimiter, string, limit) {\n  //  discuss at: http://locutusjs.io/php/explode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: explode(' ', 'Kevin van Zonneveld')\n  //   returns 1: [ 'Kevin', 'van', 'Zonneveld' ]\n\n  if (arguments.length < 2 ||\n    typeof delimiter === 'undefined' ||\n    typeof string === 'undefined') {\n    return null\n  }\n  if (delimiter === '' ||\n    delimiter === false ||\n    delimiter === null) {\n    return false\n  }\n  if (typeof delimiter === 'function' ||\n    typeof delimiter === 'object' ||\n    typeof string === 'function' ||\n    typeof string === 'object') {\n    return {\n      0: ''\n    }\n  }\n  if (delimiter === true) {\n    delimiter = '1'\n  }\n\n  // Here we go...\n  delimiter += ''\n  string += ''\n\n  var s = string.split(delimiter)\n\n  if (typeof limit === 'undefined') return s\n\n  // Support for limit\n  if (limit === 0) limit = 1\n\n  // Positive limit\n  if (limit > 0) {\n    if (limit >= s.length) {\n      return s\n    }\n    return s\n      .slice(0, limit - 1)\n      .concat([s.slice(limit - 1)\n        .join(delimiter)\n      ])\n  }\n\n  // Negative limit\n  if (-limit >= s.length) {\n    return []\n  }\n\n  s.splice(s.length + limit)\n  return s\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["get_html_translation_table('HTML_SPECIALCHARS')"],"estarget":"es5","returns":["{'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["KELAN","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["noname","Alex","Marco","madipta","Brett Zamir (http://brett-zamir.me)","T.Wild"],"revised by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Frank Forte","Ratheous"]},"notes":["It has been decided that we're not going to add global\ndependencies to Locutus, meaning the constants are not\nreal constants, but strings instead. Integers are also supported if someone\nchooses to create the constants themselves."],"layout":"function","title":"php'sget_html_translation_table in JavaScript","function":"get_html_translation_table","category":"strings","language":"php","alias":["/functions/php/get_html_translation_table/","/functions/strings/get_html_translation_table/","/php/get_html_translation_table/","/functions/get_html_translation_table/"],"_content":"module.exports = function get_html_translation_table (table, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_html_translation_table/\n  // original by: Philip Peterson\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: noname\n  // bugfixed by: Alex\n  // bugfixed by: Marco\n  // bugfixed by: madipta\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: T.Wild\n  // improved by: KELAN\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Frank Forte\n  //    input by: Ratheous\n  //      note 1: It has been decided that we're not going to add global\n  //      note 1: dependencies to Locutus, meaning the constants are not\n  //      note 1: real constants, but strings instead. Integers are also supported if someone\n  //      note 1: chooses to create the constants themselves.\n  //   example 1: get_html_translation_table('HTML_SPECIALCHARS')\n  //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n  var entities = {}\n  var hashMap = {}\n  var decimal\n  var constMappingTable = {}\n  var constMappingQuoteStyle = {}\n  var useTable = {}\n  var useQuoteStyle = {}\n\n  // Translate arguments\n  constMappingTable[0] = 'HTML_SPECIALCHARS'\n  constMappingTable[1] = 'HTML_ENTITIES'\n  constMappingQuoteStyle[0] = 'ENT_NOQUOTES'\n  constMappingQuoteStyle[2] = 'ENT_COMPAT'\n  constMappingQuoteStyle[3] = 'ENT_QUOTES'\n\n  useTable = !isNaN(table)\n    ? constMappingTable[table]\n    : table\n      ? table.toUpperCase()\n      : 'HTML_SPECIALCHARS'\n\n  useQuoteStyle = !isNaN(quoteStyle)\n    ? constMappingQuoteStyle[quoteStyle]\n    : quoteStyle\n      ? quoteStyle.toUpperCase()\n      : 'ENT_COMPAT'\n\n  if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n    throw new Error('Table: ' + useTable + ' not supported')\n  }\n\n  entities['38'] = '&amp;'\n  if (useTable === 'HTML_ENTITIES') {\n    entities['160'] = '&nbsp;'\n    entities['161'] = '&iexcl;'\n    entities['162'] = '&cent;'\n    entities['163'] = '&pound;'\n    entities['164'] = '&curren;'\n    entities['165'] = '&yen;'\n    entities['166'] = '&brvbar;'\n    entities['167'] = '&sect;'\n    entities['168'] = '&uml;'\n    entities['169'] = '&copy;'\n    entities['170'] = '&ordf;'\n    entities['171'] = '&laquo;'\n    entities['172'] = '&not;'\n    entities['173'] = '&shy;'\n    entities['174'] = '&reg;'\n    entities['175'] = '&macr;'\n    entities['176'] = '&deg;'\n    entities['177'] = '&plusmn;'\n    entities['178'] = '&sup2;'\n    entities['179'] = '&sup3;'\n    entities['180'] = '&acute;'\n    entities['181'] = '&micro;'\n    entities['182'] = '&para;'\n    entities['183'] = '&middot;'\n    entities['184'] = '&cedil;'\n    entities['185'] = '&sup1;'\n    entities['186'] = '&ordm;'\n    entities['187'] = '&raquo;'\n    entities['188'] = '&frac14;'\n    entities['189'] = '&frac12;'\n    entities['190'] = '&frac34;'\n    entities['191'] = '&iquest;'\n    entities['192'] = '&Agrave;'\n    entities['193'] = '&Aacute;'\n    entities['194'] = '&Acirc;'\n    entities['195'] = '&Atilde;'\n    entities['196'] = '&Auml;'\n    entities['197'] = '&Aring;'\n    entities['198'] = '&AElig;'\n    entities['199'] = '&Ccedil;'\n    entities['200'] = '&Egrave;'\n    entities['201'] = '&Eacute;'\n    entities['202'] = '&Ecirc;'\n    entities['203'] = '&Euml;'\n    entities['204'] = '&Igrave;'\n    entities['205'] = '&Iacute;'\n    entities['206'] = '&Icirc;'\n    entities['207'] = '&Iuml;'\n    entities['208'] = '&ETH;'\n    entities['209'] = '&Ntilde;'\n    entities['210'] = '&Ograve;'\n    entities['211'] = '&Oacute;'\n    entities['212'] = '&Ocirc;'\n    entities['213'] = '&Otilde;'\n    entities['214'] = '&Ouml;'\n    entities['215'] = '&times;'\n    entities['216'] = '&Oslash;'\n    entities['217'] = '&Ugrave;'\n    entities['218'] = '&Uacute;'\n    entities['219'] = '&Ucirc;'\n    entities['220'] = '&Uuml;'\n    entities['221'] = '&Yacute;'\n    entities['222'] = '&THORN;'\n    entities['223'] = '&szlig;'\n    entities['224'] = '&agrave;'\n    entities['225'] = '&aacute;'\n    entities['226'] = '&acirc;'\n    entities['227'] = '&atilde;'\n    entities['228'] = '&auml;'\n    entities['229'] = '&aring;'\n    entities['230'] = '&aelig;'\n    entities['231'] = '&ccedil;'\n    entities['232'] = '&egrave;'\n    entities['233'] = '&eacute;'\n    entities['234'] = '&ecirc;'\n    entities['235'] = '&euml;'\n    entities['236'] = '&igrave;'\n    entities['237'] = '&iacute;'\n    entities['238'] = '&icirc;'\n    entities['239'] = '&iuml;'\n    entities['240'] = '&eth;'\n    entities['241'] = '&ntilde;'\n    entities['242'] = '&ograve;'\n    entities['243'] = '&oacute;'\n    entities['244'] = '&ocirc;'\n    entities['245'] = '&otilde;'\n    entities['246'] = '&ouml;'\n    entities['247'] = '&divide;'\n    entities['248'] = '&oslash;'\n    entities['249'] = '&ugrave;'\n    entities['250'] = '&uacute;'\n    entities['251'] = '&ucirc;'\n    entities['252'] = '&uuml;'\n    entities['253'] = '&yacute;'\n    entities['254'] = '&thorn;'\n    entities['255'] = '&yuml;'\n  }\n\n  if (useQuoteStyle !== 'ENT_NOQUOTES') {\n    entities['34'] = '&quot;'\n  }\n  if (useQuoteStyle === 'ENT_QUOTES') {\n    entities['39'] = '&#39;'\n  }\n  entities['60'] = '&lt;'\n  entities['62'] = '&gt;'\n\n  // ascii decimals to real symbols\n  for (decimal in entities) {\n    if (entities.hasOwnProperty(decimal)) {\n      hashMap[String.fromCharCode(decimal)] = entities[decimal]\n    }\n  }\n\n  return hashMap\n}\n","source":"php/strings/get_html_translation_table.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - get_html_translation_table('HTML_SPECIALCHARS')\nestarget: es5\nreturns:\n  - '{''\"'': ''&quot;'', ''&'': ''&amp;'', ''<'': ''&lt;'', ''>'': ''&gt;''}'\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - KELAN\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - noname\n    - Alex\n    - Marco\n    - madipta\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - T.Wild\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Frank Forte\n    - Ratheous\nnotes:\n  - |-\n    It has been decided that we're not going to add global\n    dependencies to Locutus, meaning the constants are not\n    real constants, but strings instead. Integers are also supported if someone\n    chooses to create the constants themselves.\nlayout: function\ntitle: php'sget_html_translation_table in JavaScript\nfunction: get_html_translation_table\ncategory: strings\nlanguage: php\npermalink: php/strings/get_html_translation_table/\nalias:\n  - /functions/php/get_html_translation_table/\n  - /functions/strings/get_html_translation_table/\n  - /php/get_html_translation_table/\n  - /functions/get_html_translation_table/\n---\nmodule.exports = function get_html_translation_table (table, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_html_translation_table/\n  // original by: Philip Peterson\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: noname\n  // bugfixed by: Alex\n  // bugfixed by: Marco\n  // bugfixed by: madipta\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: T.Wild\n  // improved by: KELAN\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Frank Forte\n  //    input by: Ratheous\n  //      note 1: It has been decided that we're not going to add global\n  //      note 1: dependencies to Locutus, meaning the constants are not\n  //      note 1: real constants, but strings instead. Integers are also supported if someone\n  //      note 1: chooses to create the constants themselves.\n  //   example 1: get_html_translation_table('HTML_SPECIALCHARS')\n  //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n  var entities = {}\n  var hashMap = {}\n  var decimal\n  var constMappingTable = {}\n  var constMappingQuoteStyle = {}\n  var useTable = {}\n  var useQuoteStyle = {}\n\n  // Translate arguments\n  constMappingTable[0] = 'HTML_SPECIALCHARS'\n  constMappingTable[1] = 'HTML_ENTITIES'\n  constMappingQuoteStyle[0] = 'ENT_NOQUOTES'\n  constMappingQuoteStyle[2] = 'ENT_COMPAT'\n  constMappingQuoteStyle[3] = 'ENT_QUOTES'\n\n  useTable = !isNaN(table)\n    ? constMappingTable[table]\n    : table\n      ? table.toUpperCase()\n      : 'HTML_SPECIALCHARS'\n\n  useQuoteStyle = !isNaN(quoteStyle)\n    ? constMappingQuoteStyle[quoteStyle]\n    : quoteStyle\n      ? quoteStyle.toUpperCase()\n      : 'ENT_COMPAT'\n\n  if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n    throw new Error('Table: ' + useTable + ' not supported')\n  }\n\n  entities['38'] = '&amp;'\n  if (useTable === 'HTML_ENTITIES') {\n    entities['160'] = '&nbsp;'\n    entities['161'] = '&iexcl;'\n    entities['162'] = '&cent;'\n    entities['163'] = '&pound;'\n    entities['164'] = '&curren;'\n    entities['165'] = '&yen;'\n    entities['166'] = '&brvbar;'\n    entities['167'] = '&sect;'\n    entities['168'] = '&uml;'\n    entities['169'] = '&copy;'\n    entities['170'] = '&ordf;'\n    entities['171'] = '&laquo;'\n    entities['172'] = '&not;'\n    entities['173'] = '&shy;'\n    entities['174'] = '&reg;'\n    entities['175'] = '&macr;'\n    entities['176'] = '&deg;'\n    entities['177'] = '&plusmn;'\n    entities['178'] = '&sup2;'\n    entities['179'] = '&sup3;'\n    entities['180'] = '&acute;'\n    entities['181'] = '&micro;'\n    entities['182'] = '&para;'\n    entities['183'] = '&middot;'\n    entities['184'] = '&cedil;'\n    entities['185'] = '&sup1;'\n    entities['186'] = '&ordm;'\n    entities['187'] = '&raquo;'\n    entities['188'] = '&frac14;'\n    entities['189'] = '&frac12;'\n    entities['190'] = '&frac34;'\n    entities['191'] = '&iquest;'\n    entities['192'] = '&Agrave;'\n    entities['193'] = '&Aacute;'\n    entities['194'] = '&Acirc;'\n    entities['195'] = '&Atilde;'\n    entities['196'] = '&Auml;'\n    entities['197'] = '&Aring;'\n    entities['198'] = '&AElig;'\n    entities['199'] = '&Ccedil;'\n    entities['200'] = '&Egrave;'\n    entities['201'] = '&Eacute;'\n    entities['202'] = '&Ecirc;'\n    entities['203'] = '&Euml;'\n    entities['204'] = '&Igrave;'\n    entities['205'] = '&Iacute;'\n    entities['206'] = '&Icirc;'\n    entities['207'] = '&Iuml;'\n    entities['208'] = '&ETH;'\n    entities['209'] = '&Ntilde;'\n    entities['210'] = '&Ograve;'\n    entities['211'] = '&Oacute;'\n    entities['212'] = '&Ocirc;'\n    entities['213'] = '&Otilde;'\n    entities['214'] = '&Ouml;'\n    entities['215'] = '&times;'\n    entities['216'] = '&Oslash;'\n    entities['217'] = '&Ugrave;'\n    entities['218'] = '&Uacute;'\n    entities['219'] = '&Ucirc;'\n    entities['220'] = '&Uuml;'\n    entities['221'] = '&Yacute;'\n    entities['222'] = '&THORN;'\n    entities['223'] = '&szlig;'\n    entities['224'] = '&agrave;'\n    entities['225'] = '&aacute;'\n    entities['226'] = '&acirc;'\n    entities['227'] = '&atilde;'\n    entities['228'] = '&auml;'\n    entities['229'] = '&aring;'\n    entities['230'] = '&aelig;'\n    entities['231'] = '&ccedil;'\n    entities['232'] = '&egrave;'\n    entities['233'] = '&eacute;'\n    entities['234'] = '&ecirc;'\n    entities['235'] = '&euml;'\n    entities['236'] = '&igrave;'\n    entities['237'] = '&iacute;'\n    entities['238'] = '&icirc;'\n    entities['239'] = '&iuml;'\n    entities['240'] = '&eth;'\n    entities['241'] = '&ntilde;'\n    entities['242'] = '&ograve;'\n    entities['243'] = '&oacute;'\n    entities['244'] = '&ocirc;'\n    entities['245'] = '&otilde;'\n    entities['246'] = '&ouml;'\n    entities['247'] = '&divide;'\n    entities['248'] = '&oslash;'\n    entities['249'] = '&ugrave;'\n    entities['250'] = '&uacute;'\n    entities['251'] = '&ucirc;'\n    entities['252'] = '&uuml;'\n    entities['253'] = '&yacute;'\n    entities['254'] = '&thorn;'\n    entities['255'] = '&yuml;'\n  }\n\n  if (useQuoteStyle !== 'ENT_NOQUOTES') {\n    entities['34'] = '&quot;'\n  }\n  if (useQuoteStyle === 'ENT_QUOTES') {\n    entities['39'] = '&#39;'\n  }\n  entities['60'] = '&lt;'\n  entities['62'] = '&gt;'\n\n  // ascii decimals to real symbols\n  for (decimal in entities) {\n    if (entities.hasOwnProperty(decimal)) {\n      hashMap[String.fromCharCode(decimal)] = entities[decimal]\n    }\n  }\n\n  return hashMap\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/get_html_translation_table/index.html","comments":1,"_id":"cinoeja150062ou9y46pbla0k","content":"module.exports = function get_html_translation_table (table, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_html_translation_table/\n  // original by: Philip Peterson\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: noname\n  // bugfixed by: Alex\n  // bugfixed by: Marco\n  // bugfixed by: madipta\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: T.Wild\n  // improved by: KELAN\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Frank Forte\n  //    input by: Ratheous\n  //      note 1: It has been decided that we're not going to add global\n  //      note 1: dependencies to Locutus, meaning the constants are not\n  //      note 1: real constants, but strings instead. Integers are also supported if someone\n  //      note 1: chooses to create the constants themselves.\n  //   example 1: get_html_translation_table('HTML_SPECIALCHARS')\n  //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;',=\"\" '=\"\">': '&gt;'}\n\n  var entities = {}\n  var hashMap = {}\n  var decimal\n  var constMappingTable = {}\n  var constMappingQuoteStyle = {}\n  var useTable = {}\n  var useQuoteStyle = {}\n\n  // Translate arguments\n  constMappingTable[0] = 'HTML_SPECIALCHARS'\n  constMappingTable[1] = 'HTML_ENTITIES'\n  constMappingQuoteStyle[0] = 'ENT_NOQUOTES'\n  constMappingQuoteStyle[2] = 'ENT_COMPAT'\n  constMappingQuoteStyle[3] = 'ENT_QUOTES'\n\n  useTable = !isNaN(table)\n    ? constMappingTable[table]\n    : table\n      ? table.toUpperCase()\n      : 'HTML_SPECIALCHARS'\n\n  useQuoteStyle = !isNaN(quoteStyle)\n    ? constMappingQuoteStyle[quoteStyle]\n    : quoteStyle\n      ? quoteStyle.toUpperCase()\n      : 'ENT_COMPAT'\n\n  if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n    throw new Error('Table: ' + useTable + ' not supported')\n  }\n\n  entities['38'] = '&amp;'\n  if (useTable === 'HTML_ENTITIES') {\n    entities['160'] = '&nbsp;'\n    entities['161'] = '&iexcl;'\n    entities['162'] = '&cent;'\n    entities['163'] = '&pound;'\n    entities['164'] = '&curren;'\n    entities['165'] = '&yen;'\n    entities['166'] = '&brvbar;'\n    entities['167'] = '&sect;'\n    entities['168'] = '&uml;'\n    entities['169'] = '&copy;'\n    entities['170'] = '&ordf;'\n    entities['171'] = '&laquo;'\n    entities['172'] = '&not;'\n    entities['173'] = '&shy;'\n    entities['174'] = '&reg;'\n    entities['175'] = '&macr;'\n    entities['176'] = '&deg;'\n    entities['177'] = '&plusmn;'\n    entities['178'] = '&sup2;'\n    entities['179'] = '&sup3;'\n    entities['180'] = '&acute;'\n    entities['181'] = '&micro;'\n    entities['182'] = '&para;'\n    entities['183'] = '&middot;'\n    entities['184'] = '&cedil;'\n    entities['185'] = '&sup1;'\n    entities['186'] = '&ordm;'\n    entities['187'] = '&raquo;'\n    entities['188'] = '&frac14;'\n    entities['189'] = '&frac12;'\n    entities['190'] = '&frac34;'\n    entities['191'] = '&iquest;'\n    entities['192'] = '&Agrave;'\n    entities['193'] = '&Aacute;'\n    entities['194'] = '&Acirc;'\n    entities['195'] = '&Atilde;'\n    entities['196'] = '&Auml;'\n    entities['197'] = '&Aring;'\n    entities['198'] = '&AElig;'\n    entities['199'] = '&Ccedil;'\n    entities['200'] = '&Egrave;'\n    entities['201'] = '&Eacute;'\n    entities['202'] = '&Ecirc;'\n    entities['203'] = '&Euml;'\n    entities['204'] = '&Igrave;'\n    entities['205'] = '&Iacute;'\n    entities['206'] = '&Icirc;'\n    entities['207'] = '&Iuml;'\n    entities['208'] = '&ETH;'\n    entities['209'] = '&Ntilde;'\n    entities['210'] = '&Ograve;'\n    entities['211'] = '&Oacute;'\n    entities['212'] = '&Ocirc;'\n    entities['213'] = '&Otilde;'\n    entities['214'] = '&Ouml;'\n    entities['215'] = '&times;'\n    entities['216'] = '&Oslash;'\n    entities['217'] = '&Ugrave;'\n    entities['218'] = '&Uacute;'\n    entities['219'] = '&Ucirc;'\n    entities['220'] = '&Uuml;'\n    entities['221'] = '&Yacute;'\n    entities['222'] = '&THORN;'\n    entities['223'] = '&szlig;'\n    entities['224'] = '&agrave;'\n    entities['225'] = '&aacute;'\n    entities['226'] = '&acirc;'\n    entities['227'] = '&atilde;'\n    entities['228'] = '&auml;'\n    entities['229'] = '&aring;'\n    entities['230'] = '&aelig;'\n    entities['231'] = '&ccedil;'\n    entities['232'] = '&egrave;'\n    entities['233'] = '&eacute;'\n    entities['234'] = '&ecirc;'\n    entities['235'] = '&euml;'\n    entities['236'] = '&igrave;'\n    entities['237'] = '&iacute;'\n    entities['238'] = '&icirc;'\n    entities['239'] = '&iuml;'\n    entities['240'] = '&eth;'\n    entities['241'] = '&ntilde;'\n    entities['242'] = '&ograve;'\n    entities['243'] = '&oacute;'\n    entities['244'] = '&ocirc;'\n    entities['245'] = '&otilde;'\n    entities['246'] = '&ouml;'\n    entities['247'] = '&divide;'\n    entities['248'] = '&oslash;'\n    entities['249'] = '&ugrave;'\n    entities['250'] = '&uacute;'\n    entities['251'] = '&ucirc;'\n    entities['252'] = '&uuml;'\n    entities['253'] = '&yacute;'\n    entities['254'] = '&thorn;'\n    entities['255'] = '&yuml;'\n  }\n\n  if (useQuoteStyle !== 'ENT_NOQUOTES') {\n    entities['34'] = '&quot;'\n  }\n  if (useQuoteStyle === 'ENT_QUOTES') {\n    entities['39'] = '&#39;'\n  }\n  entities['60'] = '&lt;'\n  entities['62'] = '&gt;'\n\n  // ascii decimals to real symbols\n  for (decimal in entities) {\n    if (entities.hasOwnProperty(decimal)) {\n      hashMap[String.fromCharCode(decimal)] = entities[decimal]\n    }\n  }\n\n  return hashMap\n}\n</':>","excerpt":"","more":"module.exports = function get_html_translation_table (table, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/get_html_translation_table/\n  // original by: Philip Peterson\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: noname\n  // bugfixed by: Alex\n  // bugfixed by: Marco\n  // bugfixed by: madipta\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: T.Wild\n  // improved by: KELAN\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Frank Forte\n  //    input by: Ratheous\n  //      note 1: It has been decided that we're not going to add global\n  //      note 1: dependencies to Locutus, meaning the constants are not\n  //      note 1: real constants, but strings instead. Integers are also supported if someone\n  //      note 1: chooses to create the constants themselves.\n  //   example 1: get_html_translation_table('HTML_SPECIALCHARS')\n  //   returns 1: {'\"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}\n\n  var entities = {}\n  var hashMap = {}\n  var decimal\n  var constMappingTable = {}\n  var constMappingQuoteStyle = {}\n  var useTable = {}\n  var useQuoteStyle = {}\n\n  // Translate arguments\n  constMappingTable[0] = 'HTML_SPECIALCHARS'\n  constMappingTable[1] = 'HTML_ENTITIES'\n  constMappingQuoteStyle[0] = 'ENT_NOQUOTES'\n  constMappingQuoteStyle[2] = 'ENT_COMPAT'\n  constMappingQuoteStyle[3] = 'ENT_QUOTES'\n\n  useTable = !isNaN(table)\n    ? constMappingTable[table]\n    : table\n      ? table.toUpperCase()\n      : 'HTML_SPECIALCHARS'\n\n  useQuoteStyle = !isNaN(quoteStyle)\n    ? constMappingQuoteStyle[quoteStyle]\n    : quoteStyle\n      ? quoteStyle.toUpperCase()\n      : 'ENT_COMPAT'\n\n  if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n    throw new Error('Table: ' + useTable + ' not supported')\n  }\n\n  entities['38'] = '&amp;'\n  if (useTable === 'HTML_ENTITIES') {\n    entities['160'] = '&nbsp;'\n    entities['161'] = '&iexcl;'\n    entities['162'] = '&cent;'\n    entities['163'] = '&pound;'\n    entities['164'] = '&curren;'\n    entities['165'] = '&yen;'\n    entities['166'] = '&brvbar;'\n    entities['167'] = '&sect;'\n    entities['168'] = '&uml;'\n    entities['169'] = '&copy;'\n    entities['170'] = '&ordf;'\n    entities['171'] = '&laquo;'\n    entities['172'] = '&not;'\n    entities['173'] = '&shy;'\n    entities['174'] = '&reg;'\n    entities['175'] = '&macr;'\n    entities['176'] = '&deg;'\n    entities['177'] = '&plusmn;'\n    entities['178'] = '&sup2;'\n    entities['179'] = '&sup3;'\n    entities['180'] = '&acute;'\n    entities['181'] = '&micro;'\n    entities['182'] = '&para;'\n    entities['183'] = '&middot;'\n    entities['184'] = '&cedil;'\n    entities['185'] = '&sup1;'\n    entities['186'] = '&ordm;'\n    entities['187'] = '&raquo;'\n    entities['188'] = '&frac14;'\n    entities['189'] = '&frac12;'\n    entities['190'] = '&frac34;'\n    entities['191'] = '&iquest;'\n    entities['192'] = '&Agrave;'\n    entities['193'] = '&Aacute;'\n    entities['194'] = '&Acirc;'\n    entities['195'] = '&Atilde;'\n    entities['196'] = '&Auml;'\n    entities['197'] = '&Aring;'\n    entities['198'] = '&AElig;'\n    entities['199'] = '&Ccedil;'\n    entities['200'] = '&Egrave;'\n    entities['201'] = '&Eacute;'\n    entities['202'] = '&Ecirc;'\n    entities['203'] = '&Euml;'\n    entities['204'] = '&Igrave;'\n    entities['205'] = '&Iacute;'\n    entities['206'] = '&Icirc;'\n    entities['207'] = '&Iuml;'\n    entities['208'] = '&ETH;'\n    entities['209'] = '&Ntilde;'\n    entities['210'] = '&Ograve;'\n    entities['211'] = '&Oacute;'\n    entities['212'] = '&Ocirc;'\n    entities['213'] = '&Otilde;'\n    entities['214'] = '&Ouml;'\n    entities['215'] = '&times;'\n    entities['216'] = '&Oslash;'\n    entities['217'] = '&Ugrave;'\n    entities['218'] = '&Uacute;'\n    entities['219'] = '&Ucirc;'\n    entities['220'] = '&Uuml;'\n    entities['221'] = '&Yacute;'\n    entities['222'] = '&THORN;'\n    entities['223'] = '&szlig;'\n    entities['224'] = '&agrave;'\n    entities['225'] = '&aacute;'\n    entities['226'] = '&acirc;'\n    entities['227'] = '&atilde;'\n    entities['228'] = '&auml;'\n    entities['229'] = '&aring;'\n    entities['230'] = '&aelig;'\n    entities['231'] = '&ccedil;'\n    entities['232'] = '&egrave;'\n    entities['233'] = '&eacute;'\n    entities['234'] = '&ecirc;'\n    entities['235'] = '&euml;'\n    entities['236'] = '&igrave;'\n    entities['237'] = '&iacute;'\n    entities['238'] = '&icirc;'\n    entities['239'] = '&iuml;'\n    entities['240'] = '&eth;'\n    entities['241'] = '&ntilde;'\n    entities['242'] = '&ograve;'\n    entities['243'] = '&oacute;'\n    entities['244'] = '&ocirc;'\n    entities['245'] = '&otilde;'\n    entities['246'] = '&ouml;'\n    entities['247'] = '&divide;'\n    entities['248'] = '&oslash;'\n    entities['249'] = '&ugrave;'\n    entities['250'] = '&uacute;'\n    entities['251'] = '&ucirc;'\n    entities['252'] = '&uuml;'\n    entities['253'] = '&yacute;'\n    entities['254'] = '&thorn;'\n    entities['255'] = '&yuml;'\n  }\n\n  if (useQuoteStyle !== 'ENT_NOQUOTES') {\n    entities['34'] = '&quot;'\n  }\n  if (useQuoteStyle === 'ENT_QUOTES') {\n    entities['39'] = '&#39;'\n  }\n  entities['60'] = '&lt;'\n  entities['62'] = '&gt;'\n\n  // ascii decimals to real symbols\n  for (decimal in entities) {\n    if (entities.hasOwnProperty(decimal)) {\n      hashMap[String.fromCharCode(decimal)] = entities[decimal]\n    }\n  }\n\n  return hashMap\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["hex2bin('44696d61')","hex2bin('00')","hex2bin('2f1q')"],"estarget":"es5","returns":["'Dima'","'\\x00'","false"],"dependencies":[],"authors":{"original by":["Dumitru Uzun (http://duzun.me)"]},"notes":[],"layout":"function","title":"php'shex2bin in JavaScript","function":"hex2bin","category":"strings","language":"php","alias":["/functions/php/hex2bin/","/functions/strings/hex2bin/","/php/hex2bin/","/functions/hex2bin/"],"_content":"module.exports = function hex2bin (s) {\n  //  discuss at: http://locutusjs.io/php/hex2bin/\n  // original by: Dumitru Uzun (http://duzun.me)\n  //   example 1: hex2bin('44696d61')\n  //   returns 1: 'Dima'\n  //   example 2: hex2bin('00')\n  //   returns 2: '\\x00'\n  //   example 3: hex2bin('2f1q')\n  //   returns 3: false\n\n  var ret = []\n  var i = 0\n  var l\n\n  s += ''\n\n  for (l = s.length; i < l; i += 2) {\n    var c = parseInt(s.substr(i, 1), 16)\n    var k = parseInt(s.substr(i + 1, 1), 16)\n    if (isNaN(c) || isNaN(k)) return false\n    ret.push((c << 4) | k)\n  }\n\n  return String.fromCharCode.apply(String, ret)\n}\n","source":"php/strings/hex2bin.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - hex2bin('44696d61')\n  - hex2bin('00')\n  - hex2bin('2f1q')\nestarget: es5\nreturns:\n  - '''Dima'''\n  - '''\\x00'''\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Dumitru Uzun (http://duzun.me)'\nnotes: []\nlayout: function\ntitle: php'shex2bin in JavaScript\nfunction: hex2bin\ncategory: strings\nlanguage: php\npermalink: php/strings/hex2bin/\nalias:\n  - /functions/php/hex2bin/\n  - /functions/strings/hex2bin/\n  - /php/hex2bin/\n  - /functions/hex2bin/\n---\nmodule.exports = function hex2bin (s) {\n  //  discuss at: http://locutusjs.io/php/hex2bin/\n  // original by: Dumitru Uzun (http://duzun.me)\n  //   example 1: hex2bin('44696d61')\n  //   returns 1: 'Dima'\n  //   example 2: hex2bin('00')\n  //   returns 2: '\\x00'\n  //   example 3: hex2bin('2f1q')\n  //   returns 3: false\n\n  var ret = []\n  var i = 0\n  var l\n\n  s += ''\n\n  for (l = s.length; i < l; i += 2) {\n    var c = parseInt(s.substr(i, 1), 16)\n    var k = parseInt(s.substr(i + 1, 1), 16)\n    if (isNaN(c) || isNaN(k)) return false\n    ret.push((c << 4) | k)\n  }\n\n  return String.fromCharCode.apply(String, ret)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/hex2bin/index.html","comments":1,"_id":"cinoeja150063ou9ynd25uepc","content":"module.exports = function hex2bin (s) {\n  //  discuss at: http://locutusjs.io/php/hex2bin/\n  // original by: Dumitru Uzun (http://duzun.me)\n  //   example 1: hex2bin('44696d61')\n  //   returns 1: 'Dima'\n  //   example 2: hex2bin('00')\n  //   returns 2: '\\x00'\n  //   example 3: hex2bin('2f1q')\n  //   returns 3: false\n\n  var ret = []\n  var i = 0\n  var l\n\n  s += ''\n\n  for (l = s.length; i < l; i += 2) {\n    var c = parseInt(s.substr(i, 1), 16)\n    var k = parseInt(s.substr(i + 1, 1), 16)\n    if (isNaN(c) || isNaN(k)) return false\n    ret.push((c << 4) | k)\n  }\n\n  return String.fromCharCode.apply(String, ret)\n}\n","excerpt":"","more":"module.exports = function hex2bin (s) {\n  //  discuss at: http://locutusjs.io/php/hex2bin/\n  // original by: Dumitru Uzun (http://duzun.me)\n  //   example 1: hex2bin('44696d61')\n  //   returns 1: 'Dima'\n  //   example 2: hex2bin('00')\n  //   returns 2: '\\x00'\n  //   example 3: hex2bin('2f1q')\n  //   returns 3: false\n\n  var ret = []\n  var i = 0\n  var l\n\n  s += ''\n\n  for (l = s.length; i < l; i += 2) {\n    var c = parseInt(s.substr(i, 1), 16)\n    var k = parseInt(s.substr(i + 1, 1), 16)\n    if (isNaN(c) || isNaN(k)) return false\n    ret.push((c << 4) | k)\n  }\n\n  return String.fromCharCode.apply(String, ret)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["html_entity_decode('Kevin &amp; van Zonneveld')","html_entity_decode('&amp;lt;')"],"estarget":"es5","returns":["'Kevin & van Zonneveld'","'&lt;'"],"dependencies":[],"authors":{"original by":["john (http://www.jd-tech.net)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","marc andreu"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","Fox"],"revised by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)"],"input by":["ger","Ratheous","Nick Kolosov (http://sammy.ru)"]},"notes":[],"layout":"function","title":"php'shtml_entity_decode in JavaScript","function":"html_entity_decode","category":"strings","language":"php","alias":["/functions/php/html_entity_decode/","/functions/strings/html_entity_decode/","/php/html_entity_decode/","/functions/html_entity_decode/"],"_content":"module.exports = function html_entity_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/html_entity_decode/\n  // original by: john (http://www.jd-tech.net)\n  //    input by: ger\n  //    input by: Ratheous\n  //    input by: Nick Kolosov (http://sammy.ru)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: marc andreu\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Fox\n  //   example 1: html_entity_decode('Kevin &amp; van Zonneveld')\n  //   returns 1: 'Kevin & van Zonneveld'\n  //   example 2: html_entity_decode('&amp;lt;')\n  //   returns 2: '&lt;'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var tmpStr = ''\n  var entity = ''\n  var symbol = ''\n  tmpStr = string.toString()\n\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n  if (hashMap === false) {\n    return false\n  }\n\n  // @todo: &amp; problem\n  // http://locutusjs.io/php/get_html_translation_table:416#comment_97660\n  delete (hashMap['&'])\n  hashMap['&'] = '&amp;'\n\n  for (symbol in hashMap) {\n    entity = hashMap[symbol]\n    tmpStr = tmpStr.split(entity).join(symbol)\n  }\n  tmpStr = tmpStr.split('&#039;').join(\"'\")\n\n  return tmpStr\n}\n","source":"php/strings/html_entity_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - html_entity_decode('Kevin &amp; van Zonneveld')\n  - html_entity_decode('&amp;lt;')\nestarget: es5\nreturns:\n  - '''Kevin & van Zonneveld'''\n  - '''&lt;'''\ndependencies: []\nauthors:\n  original by:\n    - 'john (http://www.jd-tech.net)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - marc andreu\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Fox\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - ger\n    - Ratheous\n    - 'Nick Kolosov (http://sammy.ru)'\nnotes: []\nlayout: function\ntitle: php'shtml_entity_decode in JavaScript\nfunction: html_entity_decode\ncategory: strings\nlanguage: php\npermalink: php/strings/html_entity_decode/\nalias:\n  - /functions/php/html_entity_decode/\n  - /functions/strings/html_entity_decode/\n  - /php/html_entity_decode/\n  - /functions/html_entity_decode/\n---\nmodule.exports = function html_entity_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/html_entity_decode/\n  // original by: john (http://www.jd-tech.net)\n  //    input by: ger\n  //    input by: Ratheous\n  //    input by: Nick Kolosov (http://sammy.ru)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: marc andreu\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Fox\n  //   example 1: html_entity_decode('Kevin &amp; van Zonneveld')\n  //   returns 1: 'Kevin & van Zonneveld'\n  //   example 2: html_entity_decode('&amp;lt;')\n  //   returns 2: '&lt;'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var tmpStr = ''\n  var entity = ''\n  var symbol = ''\n  tmpStr = string.toString()\n\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n  if (hashMap === false) {\n    return false\n  }\n\n  // @todo: &amp; problem\n  // http://locutusjs.io/php/get_html_translation_table:416#comment_97660\n  delete (hashMap['&'])\n  hashMap['&'] = '&amp;'\n\n  for (symbol in hashMap) {\n    entity = hashMap[symbol]\n    tmpStr = tmpStr.split(entity).join(symbol)\n  }\n  tmpStr = tmpStr.split('&#039;').join(\"'\")\n\n  return tmpStr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/html_entity_decode/index.html","comments":1,"_id":"cinoeja150064ou9yhxekx0iw","content":"module.exports = function html_entity_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/html_entity_decode/\n  // original by: john (http://www.jd-tech.net)\n  //    input by: ger\n  //    input by: Ratheous\n  //    input by: Nick Kolosov (http://sammy.ru)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: marc andreu\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Fox\n  //   example 1: html_entity_decode('Kevin &amp; van Zonneveld')\n  //   returns 1: 'Kevin & van Zonneveld'\n  //   example 2: html_entity_decode('&amp;lt;')\n  //   returns 2: '&lt;'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var tmpStr = ''\n  var entity = ''\n  var symbol = ''\n  tmpStr = string.toString()\n\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n  if (hashMap === false) {\n    return false\n  }\n\n  // @todo: &amp; problem\n  // http://locutusjs.io/php/get_html_translation_table:416#comment_97660\n  delete (hashMap['&'])\n  hashMap['&'] = '&amp;'\n\n  for (symbol in hashMap) {\n    entity = hashMap[symbol]\n    tmpStr = tmpStr.split(entity).join(symbol)\n  }\n  tmpStr = tmpStr.split('&#039;').join(\"'\")\n\n  return tmpStr\n}\n","excerpt":"","more":"module.exports = function html_entity_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/html_entity_decode/\n  // original by: john (http://www.jd-tech.net)\n  //    input by: ger\n  //    input by: Ratheous\n  //    input by: Nick Kolosov (http://sammy.ru)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: marc andreu\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Fox\n  //   example 1: html_entity_decode('Kevin &amp; van Zonneveld')\n  //   returns 1: 'Kevin & van Zonneveld'\n  //   example 2: html_entity_decode('&amp;lt;')\n  //   returns 2: '&lt;'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var tmpStr = ''\n  var entity = ''\n  var symbol = ''\n  tmpStr = string.toString()\n\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n  if (hashMap === false) {\n    return false\n  }\n\n  // @todo: &amp; problem\n  // http://locutusjs.io/php/get_html_translation_table:416#comment_97660\n  delete (hashMap['&'])\n  hashMap['&'] = '&amp;'\n\n  for (symbol in hashMap) {\n    entity = hashMap[symbol]\n    tmpStr = tmpStr.split(entity).join(symbol)\n  }\n  tmpStr = tmpStr.split('&#039;').join(\"'\")\n\n  return tmpStr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["htmlentities('Kevin & van Zonneveld')","htmlentities(\"foo'bar\",\"ENT_QUOTES\")"],"estarget":"es5","returns":["'Kevin &amp; van Zonneveld'","'foo&#039;bar'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["nobbler","Jack","Rafał Kukawski (http://blog.kukawski.pl)","Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"revised by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)"],"input by":["Ratheous"]},"notes":["function is compatible with PHP 5.2 and older"],"layout":"function","title":"php'shtmlentities in JavaScript","function":"htmlentities","category":"strings","language":"php","alias":["/functions/php/htmlentities/","/functions/strings/htmlentities/","/php/htmlentities/","/functions/htmlentities/"],"_content":"module.exports = function htmlentities (string, quoteStyle, charset, doubleEncode) {\n  //  discuss at: http://locutusjs.io/php/htmlentities/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: nobbler\n  // improved by: Jack\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Ratheous\n  //      note 1: function is compatible with PHP 5.2 and older\n  //   example 1: htmlentities('Kevin & van Zonneveld')\n  //   returns 1: 'Kevin &amp; van Zonneveld'\n  //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\")\n  //   returns 2: 'foo&#039;bar'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n\n  string = string === null ? '' : string + ''\n\n  if (!hashMap) {\n    return false\n  }\n\n  if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n    hashMap[\"'\"] = '&#039;'\n  }\n\n  doubleEncode = doubleEncode === null || !!doubleEncode\n\n  var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' +\n    Object.keys(hashMap)\n    .join('')\n    // replace regexp special chars\n    .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']',\n    'g')\n\n  return string.replace(regex, function (ent) {\n    if (ent.length > 1) {\n      return doubleEncode ? hashMap['&'] + ent.substr(1) : ent\n    }\n\n    return hashMap[ent]\n  })\n}\n","source":"php/strings/htmlentities.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - htmlentities('Kevin & van Zonneveld')\n  - 'htmlentities(\"foo''bar\",\"ENT_QUOTES\")'\nestarget: es5\nreturns:\n  - '''Kevin &amp; van Zonneveld'''\n  - '''foo&#039;bar'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - nobbler\n    - Jack\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n    - 'Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Ratheous\nnotes:\n  - function is compatible with PHP 5.2 and older\nlayout: function\ntitle: php'shtmlentities in JavaScript\nfunction: htmlentities\ncategory: strings\nlanguage: php\npermalink: php/strings/htmlentities/\nalias:\n  - /functions/php/htmlentities/\n  - /functions/strings/htmlentities/\n  - /php/htmlentities/\n  - /functions/htmlentities/\n---\nmodule.exports = function htmlentities (string, quoteStyle, charset, doubleEncode) {\n  //  discuss at: http://locutusjs.io/php/htmlentities/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: nobbler\n  // improved by: Jack\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Ratheous\n  //      note 1: function is compatible with PHP 5.2 and older\n  //   example 1: htmlentities('Kevin & van Zonneveld')\n  //   returns 1: 'Kevin &amp; van Zonneveld'\n  //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\")\n  //   returns 2: 'foo&#039;bar'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n\n  string = string === null ? '' : string + ''\n\n  if (!hashMap) {\n    return false\n  }\n\n  if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n    hashMap[\"'\"] = '&#039;'\n  }\n\n  doubleEncode = doubleEncode === null || !!doubleEncode\n\n  var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' +\n    Object.keys(hashMap)\n    .join('')\n    // replace regexp special chars\n    .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']',\n    'g')\n\n  return string.replace(regex, function (ent) {\n    if (ent.length > 1) {\n      return doubleEncode ? hashMap['&'] + ent.substr(1) : ent\n    }\n\n    return hashMap[ent]\n  })\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/htmlentities/index.html","comments":1,"_id":"cinoeja160065ou9yvqpwjx3h","content":"module.exports = function htmlentities (string, quoteStyle, charset, doubleEncode) {\n  //  discuss at: http://locutusjs.io/php/htmlentities/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: nobbler\n  // improved by: Jack\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Ratheous\n  //      note 1: function is compatible with PHP 5.2 and older\n  //   example 1: htmlentities('Kevin & van Zonneveld')\n  //   returns 1: 'Kevin &amp; van Zonneveld'\n  //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\")\n  //   returns 2: 'foo&#039;bar'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n\n  string = string === null ? '' : string + ''\n\n  if (!hashMap) {\n    return false\n  }\n\n  if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n    hashMap[\"'\"] = '&#039;'\n  }\n\n  doubleEncode = doubleEncode === null || !!doubleEncode\n\n  var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' +\n    Object.keys(hashMap)\n    .join('')\n    // replace regexp special chars\n    .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']',\n    'g')\n\n  return string.replace(regex, function (ent) {\n    if (ent.length > 1) {\n      return doubleEncode ? hashMap['&'] + ent.substr(1) : ent\n    }\n\n    return hashMap[ent]\n  })\n}\n","excerpt":"","more":"module.exports = function htmlentities (string, quoteStyle, charset, doubleEncode) {\n  //  discuss at: http://locutusjs.io/php/htmlentities/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: nobbler\n  // improved by: Jack\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // improved by: Dj (http://locutusjs.io/php/htmlentities:425#comment_134018)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Ratheous\n  //      note 1: function is compatible with PHP 5.2 and older\n  //   example 1: htmlentities('Kevin & van Zonneveld')\n  //   returns 1: 'Kevin &amp; van Zonneveld'\n  //   example 2: htmlentities(\"foo'bar\",\"ENT_QUOTES\")\n  //   returns 2: 'foo&#039;bar'\n\n  var getHtmlTranslationTable = require('../strings/get_html_translation_table')\n  var hashMap = getHtmlTranslationTable('HTML_ENTITIES', quoteStyle)\n\n  string = string === null ? '' : string + ''\n\n  if (!hashMap) {\n    return false\n  }\n\n  if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n    hashMap[\"'\"] = '&#039;'\n  }\n\n  doubleEncode = doubleEncode === null || !!doubleEncode\n\n  var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' +\n    Object.keys(hashMap)\n    .join('')\n    // replace regexp special chars\n    .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']',\n    'g')\n\n  return string.replace(regex, function (ent) {\n    if (ent.length > 1) {\n      return doubleEncode ? hashMap['&'] + ent.substr(1) : ent\n    }\n\n    return hashMap[ent]\n  })\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["htmlspecialchars(\"<a href='test'>Test</a>\", 'ENT_QUOTES')","htmlspecialchars(\"ab\\\"c'd\", ['ENT_NOQUOTES', 'ENT_QUOTES'])","htmlspecialchars('my \"&entity;\" is still here', null, null, false)"],"estarget":"es5","returns":["'&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'","'ab\"c&#039;d'","'my &quot;&entity;&quot; is still here'"],"dependencies":[],"authors":{"original by":["Mirek Slugen"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Nathan","Arno","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"revised by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Ratheous","Mailfaker (http://www.weedem.fr/)","felix"]},"notes":["charset argument not supported"],"layout":"function","title":"php'shtmlspecialchars in JavaScript","function":"htmlspecialchars","category":"strings","language":"php","alias":["/functions/php/htmlspecialchars/","/functions/strings/htmlspecialchars/","/php/htmlspecialchars/","/functions/htmlspecialchars/"],"_content":"module.exports = function htmlspecialchars (string, quoteStyle, charset, doubleEncode) {\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Nathan\n  //      bugfixed by: Arno\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //         input by: felix\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: charset argument not supported\n  //        example 1: htmlspecialchars(\"<a href='test'>Test</a>\", 'ENT_QUOTES')\n  //        returns 1: '&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'\n  //        example 2: htmlspecialchars(\"ab\\\"c'd\", ['ENT_NOQUOTES', 'ENT_QUOTES'])\n  //        returns 2: 'ab\"c&#039;d'\n  //        example 3: htmlspecialchars('my \"&entity;\" is still here', null, null, false)\n  //        returns 3: 'my &quot;&entity;&quot; is still here'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n  if (typeof quoteStyle === 'undefined' || quoteStyle === null) {\n    quoteStyle = 2\n  }\n  string = string || ''\n  string = string.toString()\n\n  if (doubleEncode !== false) {\n    // Put this first to avoid double-encoding\n    string = string.replace(/&/g, '&amp;')\n  }\n\n  string = string\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'ENT_IGNORE' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    string = string.replace(/'/g, '&#039;')\n  }\n  if (!noquotes) {\n    string = string.replace(/\"/g, '&quot;')\n  }\n\n  return string\n}\n","source":"php/strings/htmlspecialchars.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'htmlspecialchars(\"<a href=''test''>Test</a>\", ''ENT_QUOTES'')'\n  - 'htmlspecialchars(\"ab\\\"c''d\", [''ENT_NOQUOTES'', ''ENT_QUOTES''])'\n  - 'htmlspecialchars(''my \"&entity;\" is still here'', null, null, false)'\nestarget: es5\nreturns:\n  - '''&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'''\n  - '''ab\"c&#039;d'''\n  - '''my &quot;&entity;&quot; is still here'''\ndependencies: []\nauthors:\n  original by:\n    - Mirek Slugen\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - Nathan\n    - Arno\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Ratheous\n    - 'Mailfaker (http://www.weedem.fr/)'\n    - felix\nnotes:\n  - charset argument not supported\nlayout: function\ntitle: php'shtmlspecialchars in JavaScript\nfunction: htmlspecialchars\ncategory: strings\nlanguage: php\npermalink: php/strings/htmlspecialchars/\nalias:\n  - /functions/php/htmlspecialchars/\n  - /functions/strings/htmlspecialchars/\n  - /php/htmlspecialchars/\n  - /functions/htmlspecialchars/\n---\nmodule.exports = function htmlspecialchars (string, quoteStyle, charset, doubleEncode) {\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Nathan\n  //      bugfixed by: Arno\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //         input by: felix\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: charset argument not supported\n  //        example 1: htmlspecialchars(\"<a href='test'>Test</a>\", 'ENT_QUOTES')\n  //        returns 1: '&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'\n  //        example 2: htmlspecialchars(\"ab\\\"c'd\", ['ENT_NOQUOTES', 'ENT_QUOTES'])\n  //        returns 2: 'ab\"c&#039;d'\n  //        example 3: htmlspecialchars('my \"&entity;\" is still here', null, null, false)\n  //        returns 3: 'my &quot;&entity;&quot; is still here'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n  if (typeof quoteStyle === 'undefined' || quoteStyle === null) {\n    quoteStyle = 2\n  }\n  string = string || ''\n  string = string.toString()\n\n  if (doubleEncode !== false) {\n    // Put this first to avoid double-encoding\n    string = string.replace(/&/g, '&amp;')\n  }\n\n  string = string\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'ENT_IGNORE' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    string = string.replace(/'/g, '&#039;')\n  }\n  if (!noquotes) {\n    string = string.replace(/\"/g, '&quot;')\n  }\n\n  return string\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/htmlspecialchars/index.html","comments":1,"_id":"cinoeja160066ou9yhx3gpke8","content":"module.exports = function htmlspecialchars (string, quoteStyle, charset, doubleEncode) {\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Nathan\n  //      bugfixed by: Arno\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //         input by: felix\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: charset argument not supported\n  //        example 1: htmlspecialchars(\"<a href=\"test\">Test</a>\", 'ENT_QUOTES')\n  //        returns 1: '&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'\n  //        example 2: htmlspecialchars(\"ab\\\"c'd\", ['ENT_NOQUOTES', 'ENT_QUOTES'])\n  //        returns 2: 'ab\"c&#039;d'\n  //        example 3: htmlspecialchars('my \"&entity;\" is still here', null, null, false)\n  //        returns 3: 'my &quot;&entity;&quot; is still here'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n  if (typeof quoteStyle === 'undefined' || quoteStyle === null) {\n    quoteStyle = 2\n  }\n  string = string || ''\n  string = string.toString()\n\n  if (doubleEncode !== false) {\n    // Put this first to avoid double-encoding\n    string = string.replace(/&/g, '&amp;')\n  }\n\n  string = string\n    .replace(//g, '&gt;')\n\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'ENT_IGNORE' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    string = string.replace(/'/g, '&#039;')\n  }\n  if (!noquotes) {\n    string = string.replace(/\"/g, '&quot;')\n  }\n\n  return string\n}\n","excerpt":"","more":"module.exports = function htmlspecialchars (string, quoteStyle, charset, doubleEncode) {\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Nathan\n  //      bugfixed by: Arno\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //         input by: felix\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: charset argument not supported\n  //        example 1: htmlspecialchars(\"<a href='test'>Test</a>\", 'ENT_QUOTES')\n  //        returns 1: '&lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;'\n  //        example 2: htmlspecialchars(\"ab\\\"c'd\", ['ENT_NOQUOTES', 'ENT_QUOTES'])\n  //        returns 2: 'ab\"c&#039;d'\n  //        example 3: htmlspecialchars('my \"&entity;\" is still here', null, null, false)\n  //        returns 3: 'my &quot;&entity;&quot; is still here'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n  if (typeof quoteStyle === 'undefined' || quoteStyle === null) {\n    quoteStyle = 2\n  }\n  string = string || ''\n  string = string.toString()\n\n  if (doubleEncode !== false) {\n    // Put this first to avoid double-encoding\n    string = string.replace(/&/g, '&amp;')\n  }\n\n  string = string\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'ENT_IGNORE' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    string = string.replace(/'/g, '&#039;')\n  }\n  if (!noquotes) {\n    string = string.replace(/\"/g, '&quot;')\n  }\n\n  return string\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", 'ENT_NOQUOTES')","htmlspecialchars_decode(\"&amp;quot;\")"],"estarget":"es5","returns":["'<p>this -> &quot;</p>'","'&quot;'"],"dependencies":[],"authors":{"original by":["Mirek Slugen"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Mateusz \"loonquawl\" Zalega","Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"revised by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["ReverseSyntax","Slawomir Kaniecki","Scott Cariss","Francois","Ratheous","Mailfaker (http://www.weedem.fr/)"]},"notes":[],"layout":"function","title":"php'shtmlspecialchars_decode in JavaScript","function":"htmlspecialchars_decode","category":"strings","language":"php","alias":["/functions/php/htmlspecialchars_decode/","/functions/strings/htmlspecialchars_decode/","/php/htmlspecialchars_decode/","/functions/htmlspecialchars_decode/"],"_content":"module.exports = function htmlspecialchars_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars_decode/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Mateusz \"loonquawl\" Zalega\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: ReverseSyntax\n  //         input by: Slawomir Kaniecki\n  //         input by: Scott Cariss\n  //         input by: Francois\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", 'ENT_NOQUOTES')\n  //        returns 1: '<p>this -> &quot;</p>'\n  //        example 2: htmlspecialchars_decode(\"&amp;quot;\")\n  //        returns 2: '&quot;'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n\n  if (typeof quoteStyle === 'undefined') {\n    quoteStyle = 2\n  }\n  string = string.toString()\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    // PHP doesn't currently escape if more than one 0, but it should:\n    string = string.replace(/&#0*39;/g, \"'\")\n    // This would also be useful here, but not a part of PHP:\n    // string = string.replace(/&apos;|&#x0*27;/g, \"'\");\n  }\n  if (!noquotes) {\n    string = string.replace(/&quot;/g, '\"')\n  }\n  // Put this in last place to avoid escape being double-decoded\n  string = string.replace(/&amp;/g, '&')\n\n  return string\n}\n","source":"php/strings/htmlspecialchars_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", ''ENT_NOQUOTES'')'\n  - htmlspecialchars_decode(\"&amp;quot;\")\nestarget: es5\nreturns:\n  - '''<p>this -> &quot;</p>'''\n  - '''&quot;'''\ndependencies: []\nauthors:\n  original by:\n    - Mirek Slugen\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - Mateusz \"loonquawl\" Zalega\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - ReverseSyntax\n    - Slawomir Kaniecki\n    - Scott Cariss\n    - Francois\n    - Ratheous\n    - 'Mailfaker (http://www.weedem.fr/)'\nnotes: []\nlayout: function\ntitle: php'shtmlspecialchars_decode in JavaScript\nfunction: htmlspecialchars_decode\ncategory: strings\nlanguage: php\npermalink: php/strings/htmlspecialchars_decode/\nalias:\n  - /functions/php/htmlspecialchars_decode/\n  - /functions/strings/htmlspecialchars_decode/\n  - /php/htmlspecialchars_decode/\n  - /functions/htmlspecialchars_decode/\n---\nmodule.exports = function htmlspecialchars_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars_decode/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Mateusz \"loonquawl\" Zalega\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: ReverseSyntax\n  //         input by: Slawomir Kaniecki\n  //         input by: Scott Cariss\n  //         input by: Francois\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", 'ENT_NOQUOTES')\n  //        returns 1: '<p>this -> &quot;</p>'\n  //        example 2: htmlspecialchars_decode(\"&amp;quot;\")\n  //        returns 2: '&quot;'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n\n  if (typeof quoteStyle === 'undefined') {\n    quoteStyle = 2\n  }\n  string = string.toString()\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    // PHP doesn't currently escape if more than one 0, but it should:\n    string = string.replace(/&#0*39;/g, \"'\")\n    // This would also be useful here, but not a part of PHP:\n    // string = string.replace(/&apos;|&#x0*27;/g, \"'\");\n  }\n  if (!noquotes) {\n    string = string.replace(/&quot;/g, '\"')\n  }\n  // Put this in last place to avoid escape being double-decoded\n  string = string.replace(/&amp;/g, '&')\n\n  return string\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/htmlspecialchars_decode/index.html","comments":1,"_id":"cinoeja160067ou9yl17tdvx8","content":"module.exports = function htmlspecialchars_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars_decode/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Mateusz \"loonquawl\" Zalega\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: ReverseSyntax\n  //         input by: Slawomir Kaniecki\n  //         input by: Scott Cariss\n  //         input by: Francois\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", 'ENT_NOQUOTES')\n  //        returns 1: '<p>this -> &quot;</p>'\n  //        example 2: htmlspecialchars_decode(\"&amp;quot;\")\n  //        returns 2: '&quot;'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n\n  if (typeof quoteStyle === 'undefined') {\n    quoteStyle = 2\n  }\n  string = string.toString()\n    .replace(/&lt;/g, '<') .replace(=\"\" &gt;=\"\" g,=\"\" '=\"\">')\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    // PHP doesn't currently escape if more than one 0, but it should:\n    string = string.replace(/&#0*39;/g, \"'\")\n    // This would also be useful here, but not a part of PHP:\n    // string = string.replace(/&apos;|&#x0*27;/g, \"'\");\n  }\n  if (!noquotes) {\n    string = string.replace(/&quot;/g, '\"')\n  }\n  // Put this in last place to avoid escape being double-decoded\n  string = string.replace(/&amp;/g, '&')\n\n  return string\n}\n</')>","excerpt":"","more":"module.exports = function htmlspecialchars_decode (string, quoteStyle) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/htmlspecialchars_decode/\n  //      original by: Mirek Slugen\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Mateusz \"loonquawl\" Zalega\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: ReverseSyntax\n  //         input by: Slawomir Kaniecki\n  //         input by: Scott Cariss\n  //         input by: Francois\n  //         input by: Ratheous\n  //         input by: Mailfaker (http://www.weedem.fr/)\n  //       revised by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: htmlspecialchars_decode(\"<p>this -&gt; &quot;</p>\", 'ENT_NOQUOTES')\n  //        returns 1: '<p>this -> &quot;</p>'\n  //        example 2: htmlspecialchars_decode(\"&amp;quot;\")\n  //        returns 2: '&quot;'\n\n  var optTemp = 0\n  var i = 0\n  var noquotes = false\n\n  if (typeof quoteStyle === 'undefined') {\n    quoteStyle = 2\n  }\n  string = string.toString()\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n  var OPTS = {\n    'ENT_NOQUOTES': 0,\n    'ENT_HTML_QUOTE_SINGLE': 1,\n    'ENT_HTML_QUOTE_DOUBLE': 2,\n    'ENT_COMPAT': 2,\n    'ENT_QUOTES': 3,\n    'ENT_IGNORE': 4\n  }\n  if (quoteStyle === 0) {\n    noquotes = true\n  }\n  if (typeof quoteStyle !== 'number') {\n    // Allow for a single string or an array of string flags\n    quoteStyle = [].concat(quoteStyle)\n    for (i = 0; i < quoteStyle.length; i++) {\n      // Resolve string input to bitwise e.g. 'PATHINFO_EXTENSION' becomes 4\n      if (OPTS[quoteStyle[i]] === 0) {\n        noquotes = true\n      } else if (OPTS[quoteStyle[i]]) {\n        optTemp = optTemp | OPTS[quoteStyle[i]]\n      }\n    }\n    quoteStyle = optTemp\n  }\n  if (quoteStyle & OPTS.ENT_HTML_QUOTE_SINGLE) {\n    // PHP doesn't currently escape if more than one 0, but it should:\n    string = string.replace(/&#0*39;/g, \"'\")\n    // This would also be useful here, but not a part of PHP:\n    // string = string.replace(/&apos;|&#x0*27;/g, \"'\");\n  }\n  if (!noquotes) {\n    string = string.replace(/&quot;/g, '\"')\n  }\n  // Put this in last place to avoid escape being double-decoded\n  string = string.replace(/&amp;/g, '&')\n\n  return string\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["implode(' ', ['Kevin', 'van', 'Zonneveld'])","implode(' ', {first:'Kevin', last: 'van Zonneveld'})"],"estarget":"es5","returns":["'Kevin van Zonneveld'","'Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Waldo Malqui Silva (http://waldo.malqui.info)","Itsacon (http://www.itsacon.net/)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'simplode in JavaScript","function":"implode","category":"strings","language":"php","alias":["/functions/php/implode/","/functions/strings/implode/","/php/implode/","/functions/implode/"],"_content":"module.exports = function implode (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/implode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Itsacon (http://www.itsacon.net/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'})\n  //   returns 2: 'Kevin van Zonneveld'\n\n  var i = ''\n  var retVal = ''\n  var tGlue = ''\n\n  if (arguments.length === 1) {\n    pieces = glue\n    glue = ''\n  }\n\n  if (typeof pieces === 'object') {\n    if (Object.prototype.toString.call(pieces) === '[object Array]') {\n      return pieces.join(glue)\n    }\n    for (i in pieces) {\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    }\n    return retVal\n  }\n\n  return pieces\n}\n","source":"php/strings/implode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'implode('' '', [''Kevin'', ''van'', ''Zonneveld''])'\n  - 'implode('' '', {first:''Kevin'', last: ''van Zonneveld''})'\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\n  - '''Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n    - 'Itsacon (http://www.itsacon.net/)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'simplode in JavaScript\nfunction: implode\ncategory: strings\nlanguage: php\npermalink: php/strings/implode/\nalias:\n  - /functions/php/implode/\n  - /functions/strings/implode/\n  - /php/implode/\n  - /functions/implode/\n---\nmodule.exports = function implode (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/implode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Itsacon (http://www.itsacon.net/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'})\n  //   returns 2: 'Kevin van Zonneveld'\n\n  var i = ''\n  var retVal = ''\n  var tGlue = ''\n\n  if (arguments.length === 1) {\n    pieces = glue\n    glue = ''\n  }\n\n  if (typeof pieces === 'object') {\n    if (Object.prototype.toString.call(pieces) === '[object Array]') {\n      return pieces.join(glue)\n    }\n    for (i in pieces) {\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    }\n    return retVal\n  }\n\n  return pieces\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/implode/index.html","comments":1,"_id":"cinoeja170068ou9y3bqinp0g","content":"module.exports = function implode (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/implode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Itsacon (http://www.itsacon.net/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'})\n  //   returns 2: 'Kevin van Zonneveld'\n\n  var i = ''\n  var retVal = ''\n  var tGlue = ''\n\n  if (arguments.length === 1) {\n    pieces = glue\n    glue = ''\n  }\n\n  if (typeof pieces === 'object') {\n    if (Object.prototype.toString.call(pieces) === '[object Array]') {\n      return pieces.join(glue)\n    }\n    for (i in pieces) {\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    }\n    return retVal\n  }\n\n  return pieces\n}\n","excerpt":"","more":"module.exports = function implode (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/implode/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Itsacon (http://www.itsacon.net/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: implode(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: implode(' ', {first:'Kevin', last: 'van Zonneveld'})\n  //   returns 2: 'Kevin van Zonneveld'\n\n  var i = ''\n  var retVal = ''\n  var tGlue = ''\n\n  if (arguments.length === 1) {\n    pieces = glue\n    glue = ''\n  }\n\n  if (typeof pieces === 'object') {\n    if (Object.prototype.toString.call(pieces) === '[object Array]') {\n      return pieces.join(glue)\n    }\n    for (i in pieces) {\n      retVal += tGlue + pieces[i]\n      tGlue = glue\n    }\n    return retVal\n  }\n\n  return pieces\n}\n"},{"type":"category","language":"php","category":"strings","title":"strings","_content":"","source":"php/strings/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: strings\ntitle: strings\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/index.html","comments":1,"layout":"page","_id":"cinoeja170069ou9y5hth5z9p","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["join(' ', ['Kevin', 'van', 'Zonneveld'])"],"estarget":"es5","returns":["'Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"php'sjoin in JavaScript","function":"join","category":"strings","language":"php","alias":["/functions/php/join/","/functions/strings/join/","/php/join/","/functions/join/"],"_content":"module.exports = function join (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/join/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: join(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var implode = require('../strings/implode')\n  return implode(glue, pieces)\n}\n","source":"php/strings/join.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'join('' '', [''Kevin'', ''van'', ''Zonneveld''])'\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: php'sjoin in JavaScript\nfunction: join\ncategory: strings\nlanguage: php\npermalink: php/strings/join/\nalias:\n  - /functions/php/join/\n  - /functions/strings/join/\n  - /php/join/\n  - /functions/join/\n---\nmodule.exports = function join (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/join/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: join(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var implode = require('../strings/implode')\n  return implode(glue, pieces)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/join/index.html","comments":1,"_id":"cinoeja17006aou9yogdanp5f","content":"module.exports = function join (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/join/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: join(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var implode = require('../strings/implode')\n  return implode(glue, pieces)\n}\n","excerpt":"","more":"module.exports = function join (glue, pieces) {\n  //  discuss at: http://locutusjs.io/php/join/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: join(' ', ['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var implode = require('../strings/implode')\n  return implode(glue, pieces)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["lcfirst('Kevin Van Zonneveld')"],"estarget":"es5","returns":["'kevin Van Zonneveld'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'slcfirst in JavaScript","function":"lcfirst","category":"strings","language":"php","alias":["/functions/php/lcfirst/","/functions/strings/lcfirst/","/php/lcfirst/","/functions/lcfirst/"],"_content":"module.exports = function lcfirst (str) {\n  //  discuss at: http://locutusjs.io/php/lcfirst/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: lcfirst('Kevin Van Zonneveld')\n  //   returns 1: 'kevin Van Zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toLowerCase()\n  return f + str.substr(1)\n}\n","source":"php/strings/lcfirst.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - lcfirst('Kevin Van Zonneveld')\nestarget: es5\nreturns:\n  - '''kevin Van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'slcfirst in JavaScript\nfunction: lcfirst\ncategory: strings\nlanguage: php\npermalink: php/strings/lcfirst/\nalias:\n  - /functions/php/lcfirst/\n  - /functions/strings/lcfirst/\n  - /php/lcfirst/\n  - /functions/lcfirst/\n---\nmodule.exports = function lcfirst (str) {\n  //  discuss at: http://locutusjs.io/php/lcfirst/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: lcfirst('Kevin Van Zonneveld')\n  //   returns 1: 'kevin Van Zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toLowerCase()\n  return f + str.substr(1)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/lcfirst/index.html","comments":1,"_id":"cinoeja18006bou9y8mxjtuzi","content":"module.exports = function lcfirst (str) {\n  //  discuss at: http://locutusjs.io/php/lcfirst/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: lcfirst('Kevin Van Zonneveld')\n  //   returns 1: 'kevin Van Zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toLowerCase()\n  return f + str.substr(1)\n}\n","excerpt":"","more":"module.exports = function lcfirst (str) {\n  //  discuss at: http://locutusjs.io/php/lcfirst/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: lcfirst('Kevin Van Zonneveld')\n  //   returns 1: 'kevin Van Zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toLowerCase()\n  return f + str.substr(1)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')","levenshtein(\"carrrot\", \"carrots\")","levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)"],"estarget":"es5","returns":["3","2","6"],"dependencies":[],"authors":{"original by":["Carlos R. L. Rodrigues (http://www.jsfromhell.com)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"revised by":["Andrea Giammarchi (http://webreflection.blogspot.com)"]},"notes":[],"layout":"function","title":"php'slevenshtein in JavaScript","function":"levenshtein","category":"strings","language":"php","alias":["/functions/php/levenshtein/","/functions/strings/levenshtein/","/php/levenshtein/","/functions/levenshtein/"],"_content":"module.exports = function levenshtein (s1, s2, costIns, costRep, costDel) {\n  //       discuss at: http://locutusjs.io/php/levenshtein/\n  //      original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //       revised by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Alexander M Beedie\n  // reimplemented by: Rafał Kukawski (http://blog.kukawski.pl)\n  //        example 1: levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')\n  //        returns 1: 3\n  //        example 2: levenshtein(\"carrrot\", \"carrots\")\n  //        returns 2: 2\n  //        example 3: levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)\n  //        returns 3: 6\n\n  // var LEVENSHTEIN_MAX_LENGTH = 255 // PHP limits the function to max 255 character-long strings\n\n  costIns = costIns == null ? 1 : +costIns\n  costRep = costRep == null ? 1 : +costRep\n  costDel = costDel == null ? 1 : +costDel\n\n  if (s1 === s2) {\n    return 0\n  }\n\n  var l1 = s1.length\n  var l2 = s2.length\n\n  if (l1 === 0) {\n    return l2 * costIns\n  }\n  if (l2 === 0) {\n    return l1 * costDel\n  }\n\n  // Enable the 3 lines below to set the same limits on string length as PHP does\n  // if (l1 > LEVENSHTEIN_MAX_LENGTH || l2 > LEVENSHTEIN_MAX_LENGTH) {\n  //   return -1;\n  // }\n\n  var split = false\n  try {\n    split = !('0')[0]\n  } catch (e) {\n    // Earlier IE may not support access by string index\n    split = true\n  }\n\n  if (split) {\n    s1 = s1.split('')\n    s2 = s2.split('')\n  }\n\n  var p1 = new Array(l2 + 1)\n  var p2 = new Array(l2 + 1)\n\n  var i1, i2, c0, c1, c2, tmp\n\n  for (i2 = 0; i2 <= l2; i2++) {\n    p1[i2] = i2 * costIns\n  }\n\n  for (i1 = 0; i1 < l1; i1++) {\n    p2[0] = p1[0] + costDel\n\n    for (i2 = 0; i2 < l2; i2++) {\n      c0 = p1[i2] + ((s1[i1] === s2[i2]) ? 0 : costRep)\n      c1 = p1[i2 + 1] + costDel\n\n      if (c1 < c0) {\n        c0 = c1\n      }\n\n      c2 = p2[i2] + costIns\n\n      if (c2 < c0) {\n        c0 = c2\n      }\n\n      p2[i2 + 1] = c0\n    }\n\n    tmp = p1\n    p1 = p2\n    p2 = tmp\n  }\n\n  c0 = p1[l2]\n\n  return c0\n}\n","source":"php/strings/levenshtein.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'levenshtein(''Kevin van Zonneveld'', ''Kevin van Sommeveld'')'\n  - 'levenshtein(\"carrrot\", \"carrots\")'\n  - 'levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)'\nestarget: es5\nreturns:\n  - '3'\n  - '2'\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - 'Carlos R. L. Rodrigues (http://www.jsfromhell.com)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  revised by:\n    - 'Andrea Giammarchi (http://webreflection.blogspot.com)'\nnotes: []\nlayout: function\ntitle: php'slevenshtein in JavaScript\nfunction: levenshtein\ncategory: strings\nlanguage: php\npermalink: php/strings/levenshtein/\nalias:\n  - /functions/php/levenshtein/\n  - /functions/strings/levenshtein/\n  - /php/levenshtein/\n  - /functions/levenshtein/\n---\nmodule.exports = function levenshtein (s1, s2, costIns, costRep, costDel) {\n  //       discuss at: http://locutusjs.io/php/levenshtein/\n  //      original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //       revised by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Alexander M Beedie\n  // reimplemented by: Rafał Kukawski (http://blog.kukawski.pl)\n  //        example 1: levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')\n  //        returns 1: 3\n  //        example 2: levenshtein(\"carrrot\", \"carrots\")\n  //        returns 2: 2\n  //        example 3: levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)\n  //        returns 3: 6\n\n  // var LEVENSHTEIN_MAX_LENGTH = 255 // PHP limits the function to max 255 character-long strings\n\n  costIns = costIns == null ? 1 : +costIns\n  costRep = costRep == null ? 1 : +costRep\n  costDel = costDel == null ? 1 : +costDel\n\n  if (s1 === s2) {\n    return 0\n  }\n\n  var l1 = s1.length\n  var l2 = s2.length\n\n  if (l1 === 0) {\n    return l2 * costIns\n  }\n  if (l2 === 0) {\n    return l1 * costDel\n  }\n\n  // Enable the 3 lines below to set the same limits on string length as PHP does\n  // if (l1 > LEVENSHTEIN_MAX_LENGTH || l2 > LEVENSHTEIN_MAX_LENGTH) {\n  //   return -1;\n  // }\n\n  var split = false\n  try {\n    split = !('0')[0]\n  } catch (e) {\n    // Earlier IE may not support access by string index\n    split = true\n  }\n\n  if (split) {\n    s1 = s1.split('')\n    s2 = s2.split('')\n  }\n\n  var p1 = new Array(l2 + 1)\n  var p2 = new Array(l2 + 1)\n\n  var i1, i2, c0, c1, c2, tmp\n\n  for (i2 = 0; i2 <= l2; i2++) {\n    p1[i2] = i2 * costIns\n  }\n\n  for (i1 = 0; i1 < l1; i1++) {\n    p2[0] = p1[0] + costDel\n\n    for (i2 = 0; i2 < l2; i2++) {\n      c0 = p1[i2] + ((s1[i1] === s2[i2]) ? 0 : costRep)\n      c1 = p1[i2 + 1] + costDel\n\n      if (c1 < c0) {\n        c0 = c1\n      }\n\n      c2 = p2[i2] + costIns\n\n      if (c2 < c0) {\n        c0 = c2\n      }\n\n      p2[i2 + 1] = c0\n    }\n\n    tmp = p1\n    p1 = p2\n    p2 = tmp\n  }\n\n  c0 = p1[l2]\n\n  return c0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/levenshtein/index.html","comments":1,"_id":"cinoeja18006cou9y3ews2ntl","content":"module.exports = function levenshtein (s1, s2, costIns, costRep, costDel) {\n  //       discuss at: http://locutusjs.io/php/levenshtein/\n  //      original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //       revised by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Alexander M Beedie\n  // reimplemented by: Rafał Kukawski (http://blog.kukawski.pl)\n  //        example 1: levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')\n  //        returns 1: 3\n  //        example 2: levenshtein(\"carrrot\", \"carrots\")\n  //        returns 2: 2\n  //        example 3: levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)\n  //        returns 3: 6\n\n  // var LEVENSHTEIN_MAX_LENGTH = 255 // PHP limits the function to max 255 character-long strings\n\n  costIns = costIns == null ? 1 : +costIns\n  costRep = costRep == null ? 1 : +costRep\n  costDel = costDel == null ? 1 : +costDel\n\n  if (s1 === s2) {\n    return 0\n  }\n\n  var l1 = s1.length\n  var l2 = s2.length\n\n  if (l1 === 0) {\n    return l2 * costIns\n  }\n  if (l2 === 0) {\n    return l1 * costDel\n  }\n\n  // Enable the 3 lines below to set the same limits on string length as PHP does\n  // if (l1 > LEVENSHTEIN_MAX_LENGTH || l2 > LEVENSHTEIN_MAX_LENGTH) {\n  //   return -1;\n  // }\n\n  var split = false\n  try {\n    split = !('0')[0]\n  } catch (e) {\n    // Earlier IE may not support access by string index\n    split = true\n  }\n\n  if (split) {\n    s1 = s1.split('')\n    s2 = s2.split('')\n  }\n\n  var p1 = new Array(l2 + 1)\n  var p2 = new Array(l2 + 1)\n\n  var i1, i2, c0, c1, c2, tmp\n\n  for (i2 = 0; i2 ","excerpt":"","more":"module.exports = function levenshtein (s1, s2, costIns, costRep, costDel) {\n  //       discuss at: http://locutusjs.io/php/levenshtein/\n  //      original by: Carlos R. L. Rodrigues (http://www.jsfromhell.com)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //       revised by: Andrea Giammarchi (http://webreflection.blogspot.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Alexander M Beedie\n  // reimplemented by: Rafał Kukawski (http://blog.kukawski.pl)\n  //        example 1: levenshtein('Kevin van Zonneveld', 'Kevin van Sommeveld')\n  //        returns 1: 3\n  //        example 2: levenshtein(\"carrrot\", \"carrots\")\n  //        returns 2: 2\n  //        example 3: levenshtein(\"carrrot\", \"carrots\", 2, 3, 4)\n  //        returns 3: 6\n\n  // var LEVENSHTEIN_MAX_LENGTH = 255 // PHP limits the function to max 255 character-long strings\n\n  costIns = costIns == null ? 1 : +costIns\n  costRep = costRep == null ? 1 : +costRep\n  costDel = costDel == null ? 1 : +costDel\n\n  if (s1 === s2) {\n    return 0\n  }\n\n  var l1 = s1.length\n  var l2 = s2.length\n\n  if (l1 === 0) {\n    return l2 * costIns\n  }\n  if (l2 === 0) {\n    return l1 * costDel\n  }\n\n  // Enable the 3 lines below to set the same limits on string length as PHP does\n  // if (l1 > LEVENSHTEIN_MAX_LENGTH || l2 > LEVENSHTEIN_MAX_LENGTH) {\n  //   return -1;\n  // }\n\n  var split = false\n  try {\n    split = !('0')[0]\n  } catch (e) {\n    // Earlier IE may not support access by string index\n    split = true\n  }\n\n  if (split) {\n    s1 = s1.split('')\n    s2 = s2.split('')\n  }\n\n  var p1 = new Array(l2 + 1)\n  var p2 = new Array(l2 + 1)\n\n  var i1, i2, c0, c1, c2, tmp\n\n  for (i2 = 0; i2 <= l2; i2++) {\n    p1[i2] = i2 * costIns\n  }\n\n  for (i1 = 0; i1 < l1; i1++) {\n    p2[0] = p1[0] + costDel\n\n    for (i2 = 0; i2 < l2; i2++) {\n      c0 = p1[i2] + ((s1[i1] === s2[i2]) ? 0 : costRep)\n      c1 = p1[i2 + 1] + costDel\n\n      if (c1 < c0) {\n        c0 = c1\n      }\n\n      c2 = p2[i2] + costIns\n\n      if (c2 < c0) {\n        c0 = c2\n      }\n\n      p2[i2 + 1] = c0\n    }\n\n    tmp = p1\n    p1 = p2\n    p2 = tmp\n  }\n\n  c0 = p1[l2]\n\n  return c0\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["setlocale('LC_ALL', 'en_US')\nlocaleconv()"],"estarget":"es5","returns":["{decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign: '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space: 0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1, grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$', mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'slocaleconv in JavaScript","function":"localeconv","category":"strings","language":"php","alias":["/functions/php/localeconv/","/functions/strings/localeconv/","/php/localeconv/","/functions/localeconv/"],"_content":"module.exports = function localeconv () {\n  //  discuss at: http://locutusjs.io/php/localeconv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   example 1: localeconv()\n  //   returns 1: {decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign: '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space: 0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1, grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$', mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}\n\n  var setlocale = require('../strings/setlocale')\n\n  var arr = {}\n  var prop = ''\n\n  // ensure setup of localization variables takes place, if not already\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Make copies\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC[prop]\n  }\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY[prop]\n  }\n\n  return arr\n}\n","source":"php/strings/localeconv.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    setlocale('LC_ALL', 'en_US')\n    localeconv()\nestarget: es5\nreturns:\n  - >-\n    {decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign:\n    '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space:\n    0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1,\n    grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$',\n    mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'slocaleconv in JavaScript\nfunction: localeconv\ncategory: strings\nlanguage: php\npermalink: php/strings/localeconv/\nalias:\n  - /functions/php/localeconv/\n  - /functions/strings/localeconv/\n  - /php/localeconv/\n  - /functions/localeconv/\n---\nmodule.exports = function localeconv () {\n  //  discuss at: http://locutusjs.io/php/localeconv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   example 1: localeconv()\n  //   returns 1: {decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign: '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space: 0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1, grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$', mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}\n\n  var setlocale = require('../strings/setlocale')\n\n  var arr = {}\n  var prop = ''\n\n  // ensure setup of localization variables takes place, if not already\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Make copies\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC[prop]\n  }\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY[prop]\n  }\n\n  return arr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/localeconv/index.html","comments":1,"_id":"cinoeja18006dou9yynzm1e8b","content":"module.exports = function localeconv () {\n  //  discuss at: http://locutusjs.io/php/localeconv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   example 1: localeconv()\n  //   returns 1: {decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign: '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space: 0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1, grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$', mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}\n\n  var setlocale = require('../strings/setlocale')\n\n  var arr = {}\n  var prop = ''\n\n  // ensure setup of localization variables takes place, if not already\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Make copies\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC[prop]\n  }\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY[prop]\n  }\n\n  return arr\n}\n","excerpt":"","more":"module.exports = function localeconv () {\n  //  discuss at: http://locutusjs.io/php/localeconv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   example 1: localeconv()\n  //   returns 1: {decimal_point: '.', thousands_sep: '', positive_sign: '', negative_sign: '-', int_frac_digits: 2, frac_digits: 2, p_cs_precedes: 1, p_sep_by_space: 0, n_cs_precedes: 1, n_sep_by_space: 0, p_sign_posn: 1, n_sign_posn: 1, grouping: [], int_curr_symbol: 'USD ', currency_symbol: '$', mon_decimal_point: '.', mon_thousands_sep: ',', mon_grouping: [3, 3]}\n\n  var setlocale = require('../strings/setlocale')\n\n  var arr = {}\n  var prop = ''\n\n  // ensure setup of localization variables takes place, if not already\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Make copies\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC].LC_NUMERIC[prop]\n  }\n  for (prop in $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY) {\n    arr[prop] = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY[prop]\n  }\n\n  return arr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ltrim('    Kevin van Zonneveld    ')"],"estarget":"es5","returns":["'Kevin van Zonneveld    '"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["Erkekjetter"]},"notes":[],"layout":"function","title":"php'sltrim in JavaScript","function":"ltrim","category":"strings","language":"php","alias":["/functions/php/ltrim/","/functions/strings/ltrim/","/php/ltrim/","/functions/ltrim/"],"_content":"module.exports = function ltrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/ltrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ltrim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld    '\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n\n  var re = new RegExp('^[' + charlist + ']+', 'g')\n\n  return (str + '')\n    .replace(re, '')\n}\n","source":"php/strings/ltrim.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ltrim('    Kevin van Zonneveld    ')\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld    '''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - Erkekjetter\nnotes: []\nlayout: function\ntitle: php'sltrim in JavaScript\nfunction: ltrim\ncategory: strings\nlanguage: php\npermalink: php/strings/ltrim/\nalias:\n  - /functions/php/ltrim/\n  - /functions/strings/ltrim/\n  - /php/ltrim/\n  - /functions/ltrim/\n---\nmodule.exports = function ltrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/ltrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ltrim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld    '\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n\n  var re = new RegExp('^[' + charlist + ']+', 'g')\n\n  return (str + '')\n    .replace(re, '')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/ltrim/index.html","comments":1,"_id":"cinoeja19006eou9y253deuv6","content":"module.exports = function ltrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/ltrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ltrim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld    '\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n\n  var re = new RegExp('^[' + charlist + ']+', 'g')\n\n  return (str + '')\n    .replace(re, '')\n}\n","excerpt":"","more":"module.exports = function ltrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/ltrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: ltrim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld    '\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n\n  var re = new RegExp('^[' + charlist + ']+', 'g')\n\n  return (str + '')\n    .replace(re, '')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["md5('Kevin van Zonneveld')"],"estarget":"es5","returns":["'6e658d4bfcb59cc13f96c14450ac40b9'"],"dependencies":[],"authors":{"original by":["Webtoolkit.info (http://www.webtoolkit.info/)"],"improved by":["Michael White (http://getsprink.com)","Jack","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Keep in mind that in accordance with PHP, the whole string is buffered and then\nhashed. If available, we'd recommend using Node's native crypto modules directly\nin a steaming fashion for faster and more efficient hashing"],"layout":"function","title":"php'smd5 in JavaScript","function":"md5","category":"strings","language":"php","alias":["/functions/php/md5/","/functions/strings/md5/","/php/md5/","/functions/md5/"],"_content":"module.exports = function md5 (str) {\n  //  discuss at: http://locutusjs.io/php/md5/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: md5('Kevin van Zonneveld')\n  //   returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var md5sum = crypto.createHash('md5')\n    md5sum.update(str)\n    hash = md5sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var utf8Encode = require('../xml/utf8_encode')\n  var xl\n\n  var _rotateLeft = function (lValue, iShiftBits) {\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits))\n  }\n\n  var _addUnsigned = function (lX, lY) {\n    var lX4, lY4, lX8, lY8, lResult\n    lX8 = (lX & 0x80000000)\n    lY8 = (lY & 0x80000000)\n    lX4 = (lX & 0x40000000)\n    lY4 = (lY & 0x40000000)\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF)\n    if (lX4 & lY4) {\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8)\n    }\n    if (lX4 | lY4) {\n      if (lResult & 0x40000000) {\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8)\n      } else {\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8)\n      }\n    } else {\n      return (lResult ^ lX8 ^ lY8)\n    }\n  }\n\n  var _F = function (x, y, z) {\n    return (x & y) | ((~x) & z)\n  }\n  var _G = function (x, y, z) {\n    return (x & z) | (y & (~z))\n  }\n  var _H = function (x, y, z) {\n    return (x ^ y ^ z)\n  }\n  var _I = function (x, y, z) {\n    return (y ^ (x | (~z)))\n  }\n\n  var _FF = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_F(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _GG = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_G(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _HH = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_H(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _II = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_I(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _convertToWordArray = function (str) {\n    var lWordCount\n    var lMessageLength = str.length\n    var lNumberOfWordsTemp1 = lMessageLength + 8\n    var lNumberOfWordsTemp2 = (lNumberOfWordsTemp1 - (lNumberOfWordsTemp1 % 64)) / 64\n    var lNumberOfWords = (lNumberOfWordsTemp2 + 1) * 16\n    var lWordArray = new Array(lNumberOfWords - 1)\n    var lBytePosition = 0\n    var lByteCount = 0\n    while (lByteCount < lMessageLength) {\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4\n      lBytePosition = (lByteCount % 4) * 8\n      lWordArray[lWordCount] = (lWordArray[lWordCount] |\n        (str.charCodeAt(lByteCount) << lBytePosition))\n      lByteCount++\n    }\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4\n    lBytePosition = (lByteCount % 4) * 8\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition)\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29\n    return lWordArray\n  }\n\n  var _wordToHex = function (lValue) {\n    var wordToHexValue = ''\n    var wordToHexValueTemp = ''\n    var lByte\n    var lCount\n\n    for (lCount = 0; lCount <= 3; lCount++) {\n      lByte = (lValue >>> (lCount * 8)) & 255\n      wordToHexValueTemp = '0' + lByte.toString(16)\n      wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length - 2, 2)\n    }\n    return wordToHexValue\n  }\n\n  var x = []\n  var k\n  var AA\n  var BB\n  var CC\n  var DD\n  var a\n  var b\n  var c\n  var d\n  var S11 = 7\n  var S12 = 12\n  var S13 = 17\n  var S14 = 22\n  var S21 = 5\n  var S22 = 9\n  var S23 = 14\n  var S24 = 20\n  var S31 = 4\n  var S32 = 11\n  var S33 = 16\n  var S34 = 23\n  var S41 = 6\n  var S42 = 10\n  var S43 = 15\n  var S44 = 21\n\n  str = utf8Encode(str)\n  x = _convertToWordArray(str)\n  a = 0x67452301\n  b = 0xEFCDAB89\n  c = 0x98BADCFE\n  d = 0x10325476\n\n  xl = x.length\n  for (k = 0; k < xl; k += 16) {\n    AA = a\n    BB = b\n    CC = c\n    DD = d\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478)\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756)\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB)\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE)\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF)\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A)\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613)\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501)\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8)\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF)\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1)\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE)\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122)\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193)\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E)\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821)\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562)\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340)\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51)\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA)\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D)\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453)\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681)\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8)\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6)\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6)\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87)\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED)\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905)\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8)\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9)\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A)\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942)\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681)\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122)\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C)\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44)\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9)\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60)\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70)\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6)\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA)\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085)\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05)\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039)\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5)\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8)\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665)\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244)\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97)\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7)\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039)\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3)\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92)\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D)\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1)\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F)\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0)\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314)\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1)\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82)\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235)\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB)\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391)\n    a = _addUnsigned(a, AA)\n    b = _addUnsigned(b, BB)\n    c = _addUnsigned(c, CC)\n    d = _addUnsigned(d, DD)\n  }\n\n  var temp = _wordToHex(a) + _wordToHex(b) + _wordToHex(c) + _wordToHex(d)\n\n  return temp.toLowerCase()\n}\n","source":"php/strings/md5.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - md5('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''6e658d4bfcb59cc13f96c14450ac40b9'''\ndependencies: []\nauthors:\n  original by:\n    - 'Webtoolkit.info (http://www.webtoolkit.info/)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - Jack\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    Keep in mind that in accordance with PHP, the whole string is buffered and\n    then\n\n    hashed. If available, we'd recommend using Node's native crypto modules\n    directly\n\n    in a steaming fashion for faster and more efficient hashing\nlayout: function\ntitle: php'smd5 in JavaScript\nfunction: md5\ncategory: strings\nlanguage: php\npermalink: php/strings/md5/\nalias:\n  - /functions/php/md5/\n  - /functions/strings/md5/\n  - /php/md5/\n  - /functions/md5/\n---\nmodule.exports = function md5 (str) {\n  //  discuss at: http://locutusjs.io/php/md5/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: md5('Kevin van Zonneveld')\n  //   returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var md5sum = crypto.createHash('md5')\n    md5sum.update(str)\n    hash = md5sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var utf8Encode = require('../xml/utf8_encode')\n  var xl\n\n  var _rotateLeft = function (lValue, iShiftBits) {\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits))\n  }\n\n  var _addUnsigned = function (lX, lY) {\n    var lX4, lY4, lX8, lY8, lResult\n    lX8 = (lX & 0x80000000)\n    lY8 = (lY & 0x80000000)\n    lX4 = (lX & 0x40000000)\n    lY4 = (lY & 0x40000000)\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF)\n    if (lX4 & lY4) {\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8)\n    }\n    if (lX4 | lY4) {\n      if (lResult & 0x40000000) {\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8)\n      } else {\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8)\n      }\n    } else {\n      return (lResult ^ lX8 ^ lY8)\n    }\n  }\n\n  var _F = function (x, y, z) {\n    return (x & y) | ((~x) & z)\n  }\n  var _G = function (x, y, z) {\n    return (x & z) | (y & (~z))\n  }\n  var _H = function (x, y, z) {\n    return (x ^ y ^ z)\n  }\n  var _I = function (x, y, z) {\n    return (y ^ (x | (~z)))\n  }\n\n  var _FF = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_F(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _GG = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_G(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _HH = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_H(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _II = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_I(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _convertToWordArray = function (str) {\n    var lWordCount\n    var lMessageLength = str.length\n    var lNumberOfWordsTemp1 = lMessageLength + 8\n    var lNumberOfWordsTemp2 = (lNumberOfWordsTemp1 - (lNumberOfWordsTemp1 % 64)) / 64\n    var lNumberOfWords = (lNumberOfWordsTemp2 + 1) * 16\n    var lWordArray = new Array(lNumberOfWords - 1)\n    var lBytePosition = 0\n    var lByteCount = 0\n    while (lByteCount < lMessageLength) {\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4\n      lBytePosition = (lByteCount % 4) * 8\n      lWordArray[lWordCount] = (lWordArray[lWordCount] |\n        (str.charCodeAt(lByteCount) << lBytePosition))\n      lByteCount++\n    }\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4\n    lBytePosition = (lByteCount % 4) * 8\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition)\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29\n    return lWordArray\n  }\n\n  var _wordToHex = function (lValue) {\n    var wordToHexValue = ''\n    var wordToHexValueTemp = ''\n    var lByte\n    var lCount\n\n    for (lCount = 0; lCount <= 3; lCount++) {\n      lByte = (lValue >>> (lCount * 8)) & 255\n      wordToHexValueTemp = '0' + lByte.toString(16)\n      wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length - 2, 2)\n    }\n    return wordToHexValue\n  }\n\n  var x = []\n  var k\n  var AA\n  var BB\n  var CC\n  var DD\n  var a\n  var b\n  var c\n  var d\n  var S11 = 7\n  var S12 = 12\n  var S13 = 17\n  var S14 = 22\n  var S21 = 5\n  var S22 = 9\n  var S23 = 14\n  var S24 = 20\n  var S31 = 4\n  var S32 = 11\n  var S33 = 16\n  var S34 = 23\n  var S41 = 6\n  var S42 = 10\n  var S43 = 15\n  var S44 = 21\n\n  str = utf8Encode(str)\n  x = _convertToWordArray(str)\n  a = 0x67452301\n  b = 0xEFCDAB89\n  c = 0x98BADCFE\n  d = 0x10325476\n\n  xl = x.length\n  for (k = 0; k < xl; k += 16) {\n    AA = a\n    BB = b\n    CC = c\n    DD = d\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478)\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756)\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB)\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE)\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF)\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A)\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613)\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501)\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8)\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF)\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1)\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE)\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122)\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193)\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E)\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821)\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562)\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340)\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51)\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA)\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D)\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453)\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681)\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8)\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6)\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6)\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87)\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED)\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905)\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8)\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9)\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A)\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942)\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681)\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122)\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C)\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44)\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9)\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60)\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70)\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6)\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA)\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085)\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05)\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039)\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5)\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8)\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665)\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244)\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97)\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7)\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039)\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3)\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92)\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D)\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1)\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F)\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0)\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314)\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1)\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82)\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235)\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB)\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391)\n    a = _addUnsigned(a, AA)\n    b = _addUnsigned(b, BB)\n    c = _addUnsigned(c, CC)\n    d = _addUnsigned(d, DD)\n  }\n\n  var temp = _wordToHex(a) + _wordToHex(b) + _wordToHex(c) + _wordToHex(d)\n\n  return temp.toLowerCase()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/md5/index.html","comments":1,"_id":"cinoeja19006fou9y2szeusy6","content":"module.exports = function md5 (str) {\n  //  discuss at: http://locutusjs.io/php/md5/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: md5('Kevin van Zonneveld')\n  //   returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var md5sum = crypto.createHash('md5')\n    md5sum.update(str)\n    hash = md5sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var utf8Encode = require('../xml/utf8_encode')\n  var xl\n\n  var _rotateLeft = function (lValue, iShiftBits) {\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits))\n  }\n\n  var _addUnsigned = function (lX, lY) {\n    var lX4, lY4, lX8, lY8, lResult\n    lX8 = (lX & 0x80000000)\n    lY8 = (lY & 0x80000000)\n    lX4 = (lX & 0x40000000)\n    lY4 = (lY & 0x40000000)\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF)\n    if (lX4 & lY4) {\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8)\n    }\n    if (lX4 | lY4) {\n      if (lResult & 0x40000000) {\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8)\n      } else {\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8)\n      }\n    } else {\n      return (lResult ^ lX8 ^ lY8)\n    }\n  }\n\n  var _F = function (x, y, z) {\n    return (x & y) | ((~x) & z)\n  }\n  var _G = function (x, y, z) {\n    return (x & z) | (y & (~z))\n  }\n  var _H = function (x, y, z) {\n    return (x ^ y ^ z)\n  }\n  var _I = function (x, y, z) {\n    return (y ^ (x | (~z)))\n  }\n\n  var _FF = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_F(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _GG = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_G(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _HH = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_H(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _II = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_I(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _convertToWordArray = function (str) {\n    var lWordCount\n    var lMessageLength = str.length\n    var lNumberOfWordsTemp1 = lMessageLength + 8\n    var lNumberOfWordsTemp2 = (lNumberOfWordsTemp1 - (lNumberOfWordsTemp1 % 64)) / 64\n    var lNumberOfWords = (lNumberOfWordsTemp2 + 1) * 16\n    var lWordArray = new Array(lNumberOfWords - 1)\n    var lBytePosition = 0\n    var lByteCount = 0\n    while (lByteCount < lMessageLength) {\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4\n      lBytePosition = (lByteCount % 4) * 8\n      lWordArray[lWordCount] = (lWordArray[lWordCount] |\n        (str.charCodeAt(lByteCount) << lBytePosition))\n      lByteCount++\n    }\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4\n    lBytePosition = (lByteCount % 4) * 8\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition)\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29\n    return lWordArray\n  }\n\n  var _wordToHex = function (lValue) {\n    var wordToHexValue = ''\n    var wordToHexValueTemp = ''\n    var lByte\n    var lCount\n\n    for (lCount = 0; lCount <= 3;=\"\" lcount++)=\"\" {=\"\" lbyte=\"(lValue\">>> (lCount * 8)) & 255\n      wordToHexValueTemp = '0' + lByte.toString(16)\n      wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length - 2, 2)\n    }\n    return wordToHexValue\n  }\n\n  var x = []\n  var k\n  var AA\n  var BB\n  var CC\n  var DD\n  var a\n  var b\n  var c\n  var d\n  var S11 = 7\n  var S12 = 12\n  var S13 = 17\n  var S14 = 22\n  var S21 = 5\n  var S22 = 9\n  var S23 = 14\n  var S24 = 20\n  var S31 = 4\n  var S32 = 11\n  var S33 = 16\n  var S34 = 23\n  var S41 = 6\n  var S42 = 10\n  var S43 = 15\n  var S44 = 21\n\n  str = utf8Encode(str)\n  x = _convertToWordArray(str)\n  a = 0x67452301\n  b = 0xEFCDAB89\n  c = 0x98BADCFE\n  d = 0x10325476\n\n  xl = x.length\n  for (k = 0; k < xl; k += 16) {\n    AA = a\n    BB = b\n    CC = c\n    DD = d\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478)\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756)\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB)\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE)\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF)\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A)\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613)\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501)\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8)\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF)\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1)\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE)\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122)\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193)\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E)\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821)\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562)\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340)\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51)\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA)\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D)\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453)\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681)\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8)\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6)\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6)\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87)\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED)\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905)\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8)\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9)\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A)\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942)\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681)\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122)\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C)\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44)\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9)\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60)\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70)\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6)\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA)\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085)\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05)\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039)\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5)\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8)\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665)\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244)\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97)\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7)\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039)\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3)\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92)\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D)\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1)\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F)\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0)\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314)\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1)\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82)\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235)\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB)\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391)\n    a = _addUnsigned(a, AA)\n    b = _addUnsigned(b, BB)\n    c = _addUnsigned(c, CC)\n    d = _addUnsigned(d, DD)\n  }\n\n  var temp = _wordToHex(a) + _wordToHex(b) + _wordToHex(c) + _wordToHex(d)\n\n  return temp.toLowerCase()\n}\n</=>","excerpt":"","more":"module.exports = function md5 (str) {\n  //  discuss at: http://locutusjs.io/php/md5/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: md5('Kevin van Zonneveld')\n  //   returns 1: '6e658d4bfcb59cc13f96c14450ac40b9'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var md5sum = crypto.createHash('md5')\n    md5sum.update(str)\n    hash = md5sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var utf8Encode = require('../xml/utf8_encode')\n  var xl\n\n  var _rotateLeft = function (lValue, iShiftBits) {\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits))\n  }\n\n  var _addUnsigned = function (lX, lY) {\n    var lX4, lY4, lX8, lY8, lResult\n    lX8 = (lX & 0x80000000)\n    lY8 = (lY & 0x80000000)\n    lX4 = (lX & 0x40000000)\n    lY4 = (lY & 0x40000000)\n    lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF)\n    if (lX4 & lY4) {\n      return (lResult ^ 0x80000000 ^ lX8 ^ lY8)\n    }\n    if (lX4 | lY4) {\n      if (lResult & 0x40000000) {\n        return (lResult ^ 0xC0000000 ^ lX8 ^ lY8)\n      } else {\n        return (lResult ^ 0x40000000 ^ lX8 ^ lY8)\n      }\n    } else {\n      return (lResult ^ lX8 ^ lY8)\n    }\n  }\n\n  var _F = function (x, y, z) {\n    return (x & y) | ((~x) & z)\n  }\n  var _G = function (x, y, z) {\n    return (x & z) | (y & (~z))\n  }\n  var _H = function (x, y, z) {\n    return (x ^ y ^ z)\n  }\n  var _I = function (x, y, z) {\n    return (y ^ (x | (~z)))\n  }\n\n  var _FF = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_F(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _GG = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_G(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _HH = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_H(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _II = function (a, b, c, d, x, s, ac) {\n    a = _addUnsigned(a, _addUnsigned(_addUnsigned(_I(b, c, d), x), ac))\n    return _addUnsigned(_rotateLeft(a, s), b)\n  }\n\n  var _convertToWordArray = function (str) {\n    var lWordCount\n    var lMessageLength = str.length\n    var lNumberOfWordsTemp1 = lMessageLength + 8\n    var lNumberOfWordsTemp2 = (lNumberOfWordsTemp1 - (lNumberOfWordsTemp1 % 64)) / 64\n    var lNumberOfWords = (lNumberOfWordsTemp2 + 1) * 16\n    var lWordArray = new Array(lNumberOfWords - 1)\n    var lBytePosition = 0\n    var lByteCount = 0\n    while (lByteCount < lMessageLength) {\n      lWordCount = (lByteCount - (lByteCount % 4)) / 4\n      lBytePosition = (lByteCount % 4) * 8\n      lWordArray[lWordCount] = (lWordArray[lWordCount] |\n        (str.charCodeAt(lByteCount) << lBytePosition))\n      lByteCount++\n    }\n    lWordCount = (lByteCount - (lByteCount % 4)) / 4\n    lBytePosition = (lByteCount % 4) * 8\n    lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition)\n    lWordArray[lNumberOfWords - 2] = lMessageLength << 3\n    lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29\n    return lWordArray\n  }\n\n  var _wordToHex = function (lValue) {\n    var wordToHexValue = ''\n    var wordToHexValueTemp = ''\n    var lByte\n    var lCount\n\n    for (lCount = 0; lCount <= 3; lCount++) {\n      lByte = (lValue >>> (lCount * 8)) & 255\n      wordToHexValueTemp = '0' + lByte.toString(16)\n      wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length - 2, 2)\n    }\n    return wordToHexValue\n  }\n\n  var x = []\n  var k\n  var AA\n  var BB\n  var CC\n  var DD\n  var a\n  var b\n  var c\n  var d\n  var S11 = 7\n  var S12 = 12\n  var S13 = 17\n  var S14 = 22\n  var S21 = 5\n  var S22 = 9\n  var S23 = 14\n  var S24 = 20\n  var S31 = 4\n  var S32 = 11\n  var S33 = 16\n  var S34 = 23\n  var S41 = 6\n  var S42 = 10\n  var S43 = 15\n  var S44 = 21\n\n  str = utf8Encode(str)\n  x = _convertToWordArray(str)\n  a = 0x67452301\n  b = 0xEFCDAB89\n  c = 0x98BADCFE\n  d = 0x10325476\n\n  xl = x.length\n  for (k = 0; k < xl; k += 16) {\n    AA = a\n    BB = b\n    CC = c\n    DD = d\n    a = _FF(a, b, c, d, x[k + 0], S11, 0xD76AA478)\n    d = _FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756)\n    c = _FF(c, d, a, b, x[k + 2], S13, 0x242070DB)\n    b = _FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE)\n    a = _FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF)\n    d = _FF(d, a, b, c, x[k + 5], S12, 0x4787C62A)\n    c = _FF(c, d, a, b, x[k + 6], S13, 0xA8304613)\n    b = _FF(b, c, d, a, x[k + 7], S14, 0xFD469501)\n    a = _FF(a, b, c, d, x[k + 8], S11, 0x698098D8)\n    d = _FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF)\n    c = _FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1)\n    b = _FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE)\n    a = _FF(a, b, c, d, x[k + 12], S11, 0x6B901122)\n    d = _FF(d, a, b, c, x[k + 13], S12, 0xFD987193)\n    c = _FF(c, d, a, b, x[k + 14], S13, 0xA679438E)\n    b = _FF(b, c, d, a, x[k + 15], S14, 0x49B40821)\n    a = _GG(a, b, c, d, x[k + 1], S21, 0xF61E2562)\n    d = _GG(d, a, b, c, x[k + 6], S22, 0xC040B340)\n    c = _GG(c, d, a, b, x[k + 11], S23, 0x265E5A51)\n    b = _GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA)\n    a = _GG(a, b, c, d, x[k + 5], S21, 0xD62F105D)\n    d = _GG(d, a, b, c, x[k + 10], S22, 0x2441453)\n    c = _GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681)\n    b = _GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8)\n    a = _GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6)\n    d = _GG(d, a, b, c, x[k + 14], S22, 0xC33707D6)\n    c = _GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87)\n    b = _GG(b, c, d, a, x[k + 8], S24, 0x455A14ED)\n    a = _GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905)\n    d = _GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8)\n    c = _GG(c, d, a, b, x[k + 7], S23, 0x676F02D9)\n    b = _GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A)\n    a = _HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942)\n    d = _HH(d, a, b, c, x[k + 8], S32, 0x8771F681)\n    c = _HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122)\n    b = _HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C)\n    a = _HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44)\n    d = _HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9)\n    c = _HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60)\n    b = _HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70)\n    a = _HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6)\n    d = _HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA)\n    c = _HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085)\n    b = _HH(b, c, d, a, x[k + 6], S34, 0x4881D05)\n    a = _HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039)\n    d = _HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5)\n    c = _HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8)\n    b = _HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665)\n    a = _II(a, b, c, d, x[k + 0], S41, 0xF4292244)\n    d = _II(d, a, b, c, x[k + 7], S42, 0x432AFF97)\n    c = _II(c, d, a, b, x[k + 14], S43, 0xAB9423A7)\n    b = _II(b, c, d, a, x[k + 5], S44, 0xFC93A039)\n    a = _II(a, b, c, d, x[k + 12], S41, 0x655B59C3)\n    d = _II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92)\n    c = _II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D)\n    b = _II(b, c, d, a, x[k + 1], S44, 0x85845DD1)\n    a = _II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F)\n    d = _II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0)\n    c = _II(c, d, a, b, x[k + 6], S43, 0xA3014314)\n    b = _II(b, c, d, a, x[k + 13], S44, 0x4E0811A1)\n    a = _II(a, b, c, d, x[k + 4], S41, 0xF7537E82)\n    d = _II(d, a, b, c, x[k + 11], S42, 0xBD3AF235)\n    c = _II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB)\n    b = _II(b, c, d, a, x[k + 9], S44, 0xEB86D391)\n    a = _addUnsigned(a, AA)\n    b = _addUnsigned(b, BB)\n    c = _addUnsigned(c, CC)\n    d = _addUnsigned(d, DD)\n  }\n\n  var temp = _wordToHex(a) + _wordToHex(b) + _wordToHex(c) + _wordToHex(d)\n\n  return temp.toLowerCase()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["md5_file('test/never-change.txt')"],"estarget":"es5","returns":["'bc3aa724b0ec7dce4c26e7f4d0d9b064'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Relies on file_get_contents which does not work in the browser, so Node only.","Keep in mind that in accordance with PHP, the whole file is buffered and then\nhashed. We'd recommend Node's native crypto modules for faster and more\nefficient hashing"],"layout":"function","title":"php'smd5_file in JavaScript","function":"md5_file","category":"strings","language":"php","alias":["/functions/php/md5_file/","/functions/strings/md5_file/","/php/md5_file/","/functions/md5_file/"],"_content":"module.exports = function md5_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/md5_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: md5_file('test/never-change.txt')\n  //   returns 1: 'bc3aa724b0ec7dce4c26e7f4d0d9b064'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var md5 = require('../strings/md5')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return md5(buf)\n}\n","source":"php/strings/md5_file.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - md5_file('test/never-change.txt')\nestarget: es5\nreturns:\n  - '''bc3aa724b0ec7dce4c26e7f4d0d9b064'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    Relies on file_get_contents which does not work in the browser, so Node\n    only.\n  - >-\n    Keep in mind that in accordance with PHP, the whole file is buffered and\n    then\n\n    hashed. We'd recommend Node's native crypto modules for faster and more\n\n    efficient hashing\nlayout: function\ntitle: php'smd5_file in JavaScript\nfunction: md5_file\ncategory: strings\nlanguage: php\npermalink: php/strings/md5_file/\nalias:\n  - /functions/php/md5_file/\n  - /functions/strings/md5_file/\n  - /php/md5_file/\n  - /functions/md5_file/\n---\nmodule.exports = function md5_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/md5_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: md5_file('test/never-change.txt')\n  //   returns 1: 'bc3aa724b0ec7dce4c26e7f4d0d9b064'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var md5 = require('../strings/md5')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return md5(buf)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/md5_file/index.html","comments":1,"_id":"cinoeja19006gou9yp6jt3nm6","content":"module.exports = function md5_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/md5_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: md5_file('test/never-change.txt')\n  //   returns 1: 'bc3aa724b0ec7dce4c26e7f4d0d9b064'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var md5 = require('../strings/md5')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return md5(buf)\n}\n","excerpt":"","more":"module.exports = function md5_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/md5_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: md5_file('test/never-change.txt')\n  //   returns 1: 'bc3aa724b0ec7dce4c26e7f4d0d9b064'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var md5 = require('../strings/md5')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return md5(buf)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["metaphone('Gnu')","metaphone('bigger')","metaphone('accuracy')","metaphone('batch batcher')"],"estarget":"es5","returns":["'N'","'BKR'","'AKKRS'","'BXBXR'"],"dependencies":[],"authors":{"original by":["Greg Frazier"],"improved by":["Brett Zamir (http://brett-zamir.me)","Rafał Kukawski (http://blog.kukawski.pl)"]},"notes":[],"layout":"function","title":"php'smetaphone in JavaScript","function":"metaphone","category":"strings","language":"php","alias":["/functions/php/metaphone/","/functions/strings/metaphone/","/php/metaphone/","/functions/metaphone/"],"_content":"module.exports = function metaphone (word, maxPhonemes) {\n  //  discuss at: http://locutusjs.io/php/metaphone/\n  // original by: Greg Frazier\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: metaphone('Gnu')\n  //   returns 1: 'N'\n  //   example 2: metaphone('bigger')\n  //   returns 2: 'BKR'\n  //   example 3: metaphone('accuracy')\n  //   returns 3: 'AKKRS'\n  //   example 4: metaphone('batch batcher')\n  //   returns 4: 'BXBXR'\n\n  var type = typeof word\n\n  if (type === 'undefined' || type === 'object' && word !== null) {\n    // weird!\n    return null\n  }\n\n  // infinity and NaN values are treated as strings\n  if (type === 'number') {\n    if (isNaN(word)) {\n      word = 'NAN'\n    } else if (!isFinite(word)) {\n      word = 'INF'\n    }\n  }\n\n  if (maxPhonemes < 0) {\n    return false\n  }\n\n  maxPhonemes = Math.floor(+maxPhonemes) || 0\n\n  // alpha depends on locale, so this var might need an update\n  // or should be turned into a regex\n  // for now assuming pure a-z\n  var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var vowel = 'AEIOU'\n  var soft = 'EIY'\n  var leadingNonAlpha = new RegExp('^[^' + alpha + ']+')\n\n  word = typeof word === 'string' ? word : ''\n  word = word.toUpperCase().replace(leadingNonAlpha, '')\n\n  if (!word) {\n    return ''\n  }\n\n  var is = function (p, c) {\n    return c !== '' && p.indexOf(c) !== -1\n  }\n\n  var i = 0\n  var cc = word.charAt(0) // current char. Short name because it's used all over the function\n  var nc = word.charAt(1)  // next char\n  var nnc // after next char\n  var pc // previous char\n  var l = word.length\n  var meta = ''\n  // traditional is an internal param that could be exposed for now let it be a local var\n  var traditional = true\n\n  switch (cc) {\n    case 'A':\n      meta += nc === 'E' ? nc : cc\n      i += 1\n      break\n    case 'G':\n    case 'K':\n    case 'P':\n      if (nc === 'N') {\n        meta += nc\n        i += 2\n      }\n      break\n    case 'W':\n      if (nc === 'R') {\n        meta += nc\n        i += 2\n      } else if (nc === 'H' || is(vowel, nc)) {\n        meta += 'W'\n        i += 2\n      }\n      break\n    case 'X':\n      meta += 'S'\n      i += 1\n      break\n    case 'E':\n    case 'I':\n    case 'O':\n    case 'U':\n      meta += cc\n      i++\n      break\n  }\n\n  for (; i < l && (maxPhonemes === 0 || meta.length < maxPhonemes); i += 1) { // eslint-disable-line no-unmodified-loop-condition,max-len\n    cc = word.charAt(i)\n    nc = word.charAt(i + 1)\n    pc = word.charAt(i - 1)\n    nnc = word.charAt(i + 2)\n\n    if (cc === pc && cc !== 'C') {\n      continue\n    }\n\n    switch (cc) {\n      case 'B':\n        if (pc !== 'M') {\n          meta += cc\n        }\n        break\n      case 'C':\n        if (is(soft, nc)) {\n          if (nc === 'I' && nnc === 'A') {\n            meta += 'X'\n          } else if (pc !== 'S') {\n            meta += 'S'\n          }\n        } else if (nc === 'H') {\n          meta += !traditional && (nnc === 'R' || pc === 'S') ? 'K' : 'X'\n          i += 1\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'D':\n        if (nc === 'G' && is(soft, nnc)) {\n          meta += 'J'\n          i += 1\n        } else {\n          meta += 'T'\n        }\n        break\n      case 'G':\n        if (nc === 'H') {\n          if (!(is('BDH', word.charAt(i - 3)) || word.charAt(i - 4) === 'H')) {\n            meta += 'F'\n            i += 1\n          }\n        } else if (nc === 'N') {\n          if (is(alpha, nnc) && word.substr(i + 1, 3) !== 'NED') {\n            meta += 'K'\n          }\n        } else if (is(soft, nc) && pc !== 'G') {\n          meta += 'J'\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'H':\n        if (is(vowel, nc) && !is('CGPST', pc)) {\n          meta += cc\n        }\n        break\n      case 'K':\n        if (pc !== 'C') {\n          meta += 'K'\n        }\n        break\n      case 'P':\n        meta += nc === 'H' ? 'F' : cc\n        break\n      case 'Q':\n        meta += 'K'\n        break\n      case 'S':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += 'X'\n          i += 1\n        } else if (!traditional && word.substr(i + 1, 3) === 'CHW') {\n          meta += 'X'\n          i += 2\n        } else {\n          meta += 'S'\n        }\n        break\n      case 'T':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += '0'\n          i += 1\n        } else if (word.substr(i + 1, 2) !== 'CH') {\n          meta += 'T'\n        }\n        break\n      case 'V':\n        meta += 'F'\n        break\n      case 'W':\n      case 'Y':\n        if (is(vowel, nc)) {\n          meta += cc\n        }\n        break\n      case 'X':\n        meta += 'KS'\n        break\n      case 'Z':\n        meta += 'S'\n        break\n      case 'F':\n      case 'J':\n      case 'L':\n      case 'M':\n      case 'N':\n      case 'R':\n        meta += cc\n        break\n    }\n  }\n\n  return meta\n}\n","source":"php/strings/metaphone.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - metaphone('Gnu')\n  - metaphone('bigger')\n  - metaphone('accuracy')\n  - metaphone('batch batcher')\nestarget: es5\nreturns:\n  - '''N'''\n  - '''BKR'''\n  - '''AKKRS'''\n  - '''BXBXR'''\ndependencies: []\nauthors:\n  original by:\n    - Greg Frazier\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\nnotes: []\nlayout: function\ntitle: php'smetaphone in JavaScript\nfunction: metaphone\ncategory: strings\nlanguage: php\npermalink: php/strings/metaphone/\nalias:\n  - /functions/php/metaphone/\n  - /functions/strings/metaphone/\n  - /php/metaphone/\n  - /functions/metaphone/\n---\nmodule.exports = function metaphone (word, maxPhonemes) {\n  //  discuss at: http://locutusjs.io/php/metaphone/\n  // original by: Greg Frazier\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: metaphone('Gnu')\n  //   returns 1: 'N'\n  //   example 2: metaphone('bigger')\n  //   returns 2: 'BKR'\n  //   example 3: metaphone('accuracy')\n  //   returns 3: 'AKKRS'\n  //   example 4: metaphone('batch batcher')\n  //   returns 4: 'BXBXR'\n\n  var type = typeof word\n\n  if (type === 'undefined' || type === 'object' && word !== null) {\n    // weird!\n    return null\n  }\n\n  // infinity and NaN values are treated as strings\n  if (type === 'number') {\n    if (isNaN(word)) {\n      word = 'NAN'\n    } else if (!isFinite(word)) {\n      word = 'INF'\n    }\n  }\n\n  if (maxPhonemes < 0) {\n    return false\n  }\n\n  maxPhonemes = Math.floor(+maxPhonemes) || 0\n\n  // alpha depends on locale, so this var might need an update\n  // or should be turned into a regex\n  // for now assuming pure a-z\n  var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var vowel = 'AEIOU'\n  var soft = 'EIY'\n  var leadingNonAlpha = new RegExp('^[^' + alpha + ']+')\n\n  word = typeof word === 'string' ? word : ''\n  word = word.toUpperCase().replace(leadingNonAlpha, '')\n\n  if (!word) {\n    return ''\n  }\n\n  var is = function (p, c) {\n    return c !== '' && p.indexOf(c) !== -1\n  }\n\n  var i = 0\n  var cc = word.charAt(0) // current char. Short name because it's used all over the function\n  var nc = word.charAt(1)  // next char\n  var nnc // after next char\n  var pc // previous char\n  var l = word.length\n  var meta = ''\n  // traditional is an internal param that could be exposed for now let it be a local var\n  var traditional = true\n\n  switch (cc) {\n    case 'A':\n      meta += nc === 'E' ? nc : cc\n      i += 1\n      break\n    case 'G':\n    case 'K':\n    case 'P':\n      if (nc === 'N') {\n        meta += nc\n        i += 2\n      }\n      break\n    case 'W':\n      if (nc === 'R') {\n        meta += nc\n        i += 2\n      } else if (nc === 'H' || is(vowel, nc)) {\n        meta += 'W'\n        i += 2\n      }\n      break\n    case 'X':\n      meta += 'S'\n      i += 1\n      break\n    case 'E':\n    case 'I':\n    case 'O':\n    case 'U':\n      meta += cc\n      i++\n      break\n  }\n\n  for (; i < l && (maxPhonemes === 0 || meta.length < maxPhonemes); i += 1) { // eslint-disable-line no-unmodified-loop-condition,max-len\n    cc = word.charAt(i)\n    nc = word.charAt(i + 1)\n    pc = word.charAt(i - 1)\n    nnc = word.charAt(i + 2)\n\n    if (cc === pc && cc !== 'C') {\n      continue\n    }\n\n    switch (cc) {\n      case 'B':\n        if (pc !== 'M') {\n          meta += cc\n        }\n        break\n      case 'C':\n        if (is(soft, nc)) {\n          if (nc === 'I' && nnc === 'A') {\n            meta += 'X'\n          } else if (pc !== 'S') {\n            meta += 'S'\n          }\n        } else if (nc === 'H') {\n          meta += !traditional && (nnc === 'R' || pc === 'S') ? 'K' : 'X'\n          i += 1\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'D':\n        if (nc === 'G' && is(soft, nnc)) {\n          meta += 'J'\n          i += 1\n        } else {\n          meta += 'T'\n        }\n        break\n      case 'G':\n        if (nc === 'H') {\n          if (!(is('BDH', word.charAt(i - 3)) || word.charAt(i - 4) === 'H')) {\n            meta += 'F'\n            i += 1\n          }\n        } else if (nc === 'N') {\n          if (is(alpha, nnc) && word.substr(i + 1, 3) !== 'NED') {\n            meta += 'K'\n          }\n        } else if (is(soft, nc) && pc !== 'G') {\n          meta += 'J'\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'H':\n        if (is(vowel, nc) && !is('CGPST', pc)) {\n          meta += cc\n        }\n        break\n      case 'K':\n        if (pc !== 'C') {\n          meta += 'K'\n        }\n        break\n      case 'P':\n        meta += nc === 'H' ? 'F' : cc\n        break\n      case 'Q':\n        meta += 'K'\n        break\n      case 'S':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += 'X'\n          i += 1\n        } else if (!traditional && word.substr(i + 1, 3) === 'CHW') {\n          meta += 'X'\n          i += 2\n        } else {\n          meta += 'S'\n        }\n        break\n      case 'T':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += '0'\n          i += 1\n        } else if (word.substr(i + 1, 2) !== 'CH') {\n          meta += 'T'\n        }\n        break\n      case 'V':\n        meta += 'F'\n        break\n      case 'W':\n      case 'Y':\n        if (is(vowel, nc)) {\n          meta += cc\n        }\n        break\n      case 'X':\n        meta += 'KS'\n        break\n      case 'Z':\n        meta += 'S'\n        break\n      case 'F':\n      case 'J':\n      case 'L':\n      case 'M':\n      case 'N':\n      case 'R':\n        meta += cc\n        break\n    }\n  }\n\n  return meta\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/metaphone/index.html","comments":1,"_id":"cinoeja1a006hou9y37mgct87","content":"module.exports = function metaphone (word, maxPhonemes) {\n  //  discuss at: http://locutusjs.io/php/metaphone/\n  // original by: Greg Frazier\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: metaphone('Gnu')\n  //   returns 1: 'N'\n  //   example 2: metaphone('bigger')\n  //   returns 2: 'BKR'\n  //   example 3: metaphone('accuracy')\n  //   returns 3: 'AKKRS'\n  //   example 4: metaphone('batch batcher')\n  //   returns 4: 'BXBXR'\n\n  var type = typeof word\n\n  if (type === 'undefined' || type === 'object' && word !== null) {\n    // weird!\n    return null\n  }\n\n  // infinity and NaN values are treated as strings\n  if (type === 'number') {\n    if (isNaN(word)) {\n      word = 'NAN'\n    } else if (!isFinite(word)) {\n      word = 'INF'\n    }\n  }\n\n  if (maxPhonemes < 0) {\n    return false\n  }\n\n  maxPhonemes = Math.floor(+maxPhonemes) || 0\n\n  // alpha depends on locale, so this var might need an update\n  // or should be turned into a regex\n  // for now assuming pure a-z\n  var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var vowel = 'AEIOU'\n  var soft = 'EIY'\n  var leadingNonAlpha = new RegExp('^[^' + alpha + ']+')\n\n  word = typeof word === 'string' ? word : ''\n  word = word.toUpperCase().replace(leadingNonAlpha, '')\n\n  if (!word) {\n    return ''\n  }\n\n  var is = function (p, c) {\n    return c !== '' && p.indexOf(c) !== -1\n  }\n\n  var i = 0\n  var cc = word.charAt(0) // current char. Short name because it's used all over the function\n  var nc = word.charAt(1)  // next char\n  var nnc // after next char\n  var pc // previous char\n  var l = word.length\n  var meta = ''\n  // traditional is an internal param that could be exposed for now let it be a local var\n  var traditional = true\n\n  switch (cc) {\n    case 'A':\n      meta += nc === 'E' ? nc : cc\n      i += 1\n      break\n    case 'G':\n    case 'K':\n    case 'P':\n      if (nc === 'N') {\n        meta += nc\n        i += 2\n      }\n      break\n    case 'W':\n      if (nc === 'R') {\n        meta += nc\n        i += 2\n      } else if (nc === 'H' || is(vowel, nc)) {\n        meta += 'W'\n        i += 2\n      }\n      break\n    case 'X':\n      meta += 'S'\n      i += 1\n      break\n    case 'E':\n    case 'I':\n    case 'O':\n    case 'U':\n      meta += cc\n      i++\n      break\n  }\n\n  for (; i < l && (maxPhonemes === 0 || meta.length < maxPhonemes); i += 1) { // eslint-disable-line no-unmodified-loop-condition,max-len\n    cc = word.charAt(i)\n    nc = word.charAt(i + 1)\n    pc = word.charAt(i - 1)\n    nnc = word.charAt(i + 2)\n\n    if (cc === pc && cc !== 'C') {\n      continue\n    }\n\n    switch (cc) {\n      case 'B':\n        if (pc !== 'M') {\n          meta += cc\n        }\n        break\n      case 'C':\n        if (is(soft, nc)) {\n          if (nc === 'I' && nnc === 'A') {\n            meta += 'X'\n          } else if (pc !== 'S') {\n            meta += 'S'\n          }\n        } else if (nc === 'H') {\n          meta += !traditional && (nnc === 'R' || pc === 'S') ? 'K' : 'X'\n          i += 1\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'D':\n        if (nc === 'G' && is(soft, nnc)) {\n          meta += 'J'\n          i += 1\n        } else {\n          meta += 'T'\n        }\n        break\n      case 'G':\n        if (nc === 'H') {\n          if (!(is('BDH', word.charAt(i - 3)) || word.charAt(i - 4) === 'H')) {\n            meta += 'F'\n            i += 1\n          }\n        } else if (nc === 'N') {\n          if (is(alpha, nnc) && word.substr(i + 1, 3) !== 'NED') {\n            meta += 'K'\n          }\n        } else if (is(soft, nc) && pc !== 'G') {\n          meta += 'J'\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'H':\n        if (is(vowel, nc) && !is('CGPST', pc)) {\n          meta += cc\n        }\n        break\n      case 'K':\n        if (pc !== 'C') {\n          meta += 'K'\n        }\n        break\n      case 'P':\n        meta += nc === 'H' ? 'F' : cc\n        break\n      case 'Q':\n        meta += 'K'\n        break\n      case 'S':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += 'X'\n          i += 1\n        } else if (!traditional && word.substr(i + 1, 3) === 'CHW') {\n          meta += 'X'\n          i += 2\n        } else {\n          meta += 'S'\n        }\n        break\n      case 'T':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += '0'\n          i += 1\n        } else if (word.substr(i + 1, 2) !== 'CH') {\n          meta += 'T'\n        }\n        break\n      case 'V':\n        meta += 'F'\n        break\n      case 'W':\n      case 'Y':\n        if (is(vowel, nc)) {\n          meta += cc\n        }\n        break\n      case 'X':\n        meta += 'KS'\n        break\n      case 'Z':\n        meta += 'S'\n        break\n      case 'F':\n      case 'J':\n      case 'L':\n      case 'M':\n      case 'N':\n      case 'R':\n        meta += cc\n        break\n    }\n  }\n\n  return meta\n}\n","excerpt":"","more":"module.exports = function metaphone (word, maxPhonemes) {\n  //  discuss at: http://locutusjs.io/php/metaphone/\n  // original by: Greg Frazier\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: metaphone('Gnu')\n  //   returns 1: 'N'\n  //   example 2: metaphone('bigger')\n  //   returns 2: 'BKR'\n  //   example 3: metaphone('accuracy')\n  //   returns 3: 'AKKRS'\n  //   example 4: metaphone('batch batcher')\n  //   returns 4: 'BXBXR'\n\n  var type = typeof word\n\n  if (type === 'undefined' || type === 'object' && word !== null) {\n    // weird!\n    return null\n  }\n\n  // infinity and NaN values are treated as strings\n  if (type === 'number') {\n    if (isNaN(word)) {\n      word = 'NAN'\n    } else if (!isFinite(word)) {\n      word = 'INF'\n    }\n  }\n\n  if (maxPhonemes < 0) {\n    return false\n  }\n\n  maxPhonemes = Math.floor(+maxPhonemes) || 0\n\n  // alpha depends on locale, so this var might need an update\n  // or should be turned into a regex\n  // for now assuming pure a-z\n  var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var vowel = 'AEIOU'\n  var soft = 'EIY'\n  var leadingNonAlpha = new RegExp('^[^' + alpha + ']+')\n\n  word = typeof word === 'string' ? word : ''\n  word = word.toUpperCase().replace(leadingNonAlpha, '')\n\n  if (!word) {\n    return ''\n  }\n\n  var is = function (p, c) {\n    return c !== '' && p.indexOf(c) !== -1\n  }\n\n  var i = 0\n  var cc = word.charAt(0) // current char. Short name because it's used all over the function\n  var nc = word.charAt(1)  // next char\n  var nnc // after next char\n  var pc // previous char\n  var l = word.length\n  var meta = ''\n  // traditional is an internal param that could be exposed for now let it be a local var\n  var traditional = true\n\n  switch (cc) {\n    case 'A':\n      meta += nc === 'E' ? nc : cc\n      i += 1\n      break\n    case 'G':\n    case 'K':\n    case 'P':\n      if (nc === 'N') {\n        meta += nc\n        i += 2\n      }\n      break\n    case 'W':\n      if (nc === 'R') {\n        meta += nc\n        i += 2\n      } else if (nc === 'H' || is(vowel, nc)) {\n        meta += 'W'\n        i += 2\n      }\n      break\n    case 'X':\n      meta += 'S'\n      i += 1\n      break\n    case 'E':\n    case 'I':\n    case 'O':\n    case 'U':\n      meta += cc\n      i++\n      break\n  }\n\n  for (; i < l && (maxPhonemes === 0 || meta.length < maxPhonemes); i += 1) { // eslint-disable-line no-unmodified-loop-condition,max-len\n    cc = word.charAt(i)\n    nc = word.charAt(i + 1)\n    pc = word.charAt(i - 1)\n    nnc = word.charAt(i + 2)\n\n    if (cc === pc && cc !== 'C') {\n      continue\n    }\n\n    switch (cc) {\n      case 'B':\n        if (pc !== 'M') {\n          meta += cc\n        }\n        break\n      case 'C':\n        if (is(soft, nc)) {\n          if (nc === 'I' && nnc === 'A') {\n            meta += 'X'\n          } else if (pc !== 'S') {\n            meta += 'S'\n          }\n        } else if (nc === 'H') {\n          meta += !traditional && (nnc === 'R' || pc === 'S') ? 'K' : 'X'\n          i += 1\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'D':\n        if (nc === 'G' && is(soft, nnc)) {\n          meta += 'J'\n          i += 1\n        } else {\n          meta += 'T'\n        }\n        break\n      case 'G':\n        if (nc === 'H') {\n          if (!(is('BDH', word.charAt(i - 3)) || word.charAt(i - 4) === 'H')) {\n            meta += 'F'\n            i += 1\n          }\n        } else if (nc === 'N') {\n          if (is(alpha, nnc) && word.substr(i + 1, 3) !== 'NED') {\n            meta += 'K'\n          }\n        } else if (is(soft, nc) && pc !== 'G') {\n          meta += 'J'\n        } else {\n          meta += 'K'\n        }\n        break\n      case 'H':\n        if (is(vowel, nc) && !is('CGPST', pc)) {\n          meta += cc\n        }\n        break\n      case 'K':\n        if (pc !== 'C') {\n          meta += 'K'\n        }\n        break\n      case 'P':\n        meta += nc === 'H' ? 'F' : cc\n        break\n      case 'Q':\n        meta += 'K'\n        break\n      case 'S':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += 'X'\n          i += 1\n        } else if (!traditional && word.substr(i + 1, 3) === 'CHW') {\n          meta += 'X'\n          i += 2\n        } else {\n          meta += 'S'\n        }\n        break\n      case 'T':\n        if (nc === 'I' && is('AO', nnc)) {\n          meta += 'X'\n        } else if (nc === 'H') {\n          meta += '0'\n          i += 1\n        } else if (word.substr(i + 1, 2) !== 'CH') {\n          meta += 'T'\n        }\n        break\n      case 'V':\n        meta += 'F'\n        break\n      case 'W':\n      case 'Y':\n        if (is(vowel, nc)) {\n          meta += cc\n        }\n        break\n      case 'X':\n        meta += 'KS'\n        break\n      case 'Z':\n        meta += 'S'\n        break\n      case 'F':\n      case 'J':\n      case 'L':\n      case 'M':\n      case 'N':\n      case 'R':\n        meta += cc\n        break\n    }\n  }\n\n  return meta\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["money_format('%i', 1234.56)","money_format('%14#8.2n', 1234.5678)","money_format('%14#8.2n', -1234.5678)","money_format('%(14#8.2n', 1234.5678)","money_format('%(14#8.2n', -1234.5678)","money_format('%=014#8.2n', 1234.5678)","money_format('%=014#8.2n', -1234.5678)","money_format('%=*14#8.2n', 1234.5678)","money_format('%=*14#8.2n', -1234.5678)","money_format('%=*^14#8.2n', 1234.5678)","money_format('%=*^14#8.2n', -1234.5678)","money_format('%=*!14#8.2n', 1234.5678)","money_format('%=*!14#8.2n', -1234.5678)","money_format('%i', 3590)"],"estarget":"es5","returns":["' USD 1,234.56'","' $     1,234.57'","'-$     1,234.57'","' $     1,234.57 '","'($     1,234.57)'","' $000001,234.57'","'-$000001,234.57'","' $*****1,234.57'","'-$*****1,234.57'","'  $****1234.57'","' -$****1234.57'","' *****1,234.57'","'-*****1,234.57'","' USD 3,590.00'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["daniel airton wermann (http://wermann.com.br)"]},"notes":["This depends on setlocale having the appropriate\nlocale (these examples use 'en_US')"],"layout":"function","title":"php'smoney_format in JavaScript","function":"money_format","category":"strings","language":"php","alias":["/functions/php/money_format/","/functions/strings/money_format/","/php/money_format/","/functions/money_format/"],"_content":"module.exports = function money_format (format, number) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/money_format/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: daniel airton wermann (http://wermann.com.br)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This depends on setlocale having the appropriate\n  //      note 1: locale (these examples use 'en_US')\n  //   example 1: money_format('%i', 1234.56)\n  //   returns 1: ' USD 1,234.56'\n  //   example 2: money_format('%14#8.2n', 1234.5678)\n  //   returns 2: ' $     1,234.57'\n  //   example 3: money_format('%14#8.2n', -1234.5678)\n  //   returns 3: '-$     1,234.57'\n  //   example 4: money_format('%(14#8.2n', 1234.5678)\n  //   returns 4: ' $     1,234.57 '\n  //   example 5: money_format('%(14#8.2n', -1234.5678)\n  //   returns 5: '($     1,234.57)'\n  //   example 6: money_format('%=014#8.2n', 1234.5678)\n  //   returns 6: ' $000001,234.57'\n  //   example 7: money_format('%=014#8.2n', -1234.5678)\n  //   returns 7: '-$000001,234.57'\n  //   example 8: money_format('%=*14#8.2n', 1234.5678)\n  //   returns 8: ' $*****1,234.57'\n  //   example 9: money_format('%=*14#8.2n', -1234.5678)\n  //   returns 9: '-$*****1,234.57'\n  //  example 10: money_format('%=*^14#8.2n', 1234.5678)\n  //  returns 10: '  $****1234.57'\n  //  example 11: money_format('%=*^14#8.2n', -1234.5678)\n  //  returns 11: ' -$****1234.57'\n  //  example 12: money_format('%=*!14#8.2n', 1234.5678)\n  //  returns 12: ' *****1,234.57'\n  //  example 13: money_format('%=*!14#8.2n', -1234.5678)\n  //  returns 13: '-*****1,234.57'\n  //  example 14: money_format('%i', 3590)\n  //  returns 14: ' USD 3,590.00'\n\n  var setlocale = require('../strings/setlocale')\n\n  // Per PHP behavior, there seems to be no extra padding\n  // for sign when there is a positive number, though my\n  // understanding of the description is that there should be padding;\n  // need to revisit examples\n\n  // Helpful info at http://ftp.gnu.org/pub/pub/old-gnu/Manuals/glibc-2.2.3/html_chapter/libc_7.html\n  // and http://publib.boulder.ibm.com/infocenter/zos/v1r10/index.jsp?topic=/com.ibm.zos.r10.bpxbd00/strfmp.htm\n\n  if (typeof number !== 'number') {\n    return null\n  }\n  // 1: flags, 3: width, 5: left, 7: right, 8: conversion\n  var regex = /%((=.|[+^(!-])*?)(\\d*?)(#(\\d+))?(\\.(\\d+))?([in%])/g\n\n  // Ensure the locale data we need is set up\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var monetary = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY\n\n  var doReplace = function (n0, flags, n2, width, n4, left, n6, right, conversion) {\n    var value = ''\n    var repl = ''\n    if (conversion === '%') {\n      // Percent does not seem to be allowed with intervening content\n      return '%'\n    }\n    var fill = flags && (/=./).test(flags) ? flags.match(/=(.)/)[1] : ' ' // flag: =f (numeric fill)\n    // flag: ! (suppress currency symbol)\n    var showCurrSymbol = !flags || flags.indexOf('!') === -1\n    // field width: w (minimum field width)\n    width = parseInt(width, 10) || 0\n\n    var neg = number < 0\n    // Convert to string\n    number = number + ''\n    // We don't want negative symbol represented here yet\n    number = neg ? number.slice(1) : number\n\n    var decpos = number.indexOf('.')\n    // Get integer portion\n    var integer = decpos !== -1 ? number.slice(0, decpos) : number\n    // Get decimal portion\n    var fraction = decpos !== -1 ? number.slice(decpos + 1) : ''\n\n    var _strSplice = function (integerStr, idx, thouSep) {\n      var integerArr = integerStr.split('')\n      integerArr.splice(idx, 0, thouSep)\n      return integerArr.join('')\n    }\n\n    var intLen = integer.length\n    left = parseInt(left, 10)\n    var filler = intLen < left\n    if (filler) {\n      var fillnum = left - intLen\n      integer = new Array(fillnum + 1).join(fill) + integer\n    }\n    if (flags.indexOf('^') === -1) {\n      // flag: ^ (disable grouping characters (of locale))\n      // use grouping characters\n      // ','\n      var thouSep = monetary.mon_thousands_sep\n      // [3] (every 3 digits in U.S.A. locale)\n      var monGrouping = monetary.mon_grouping\n\n      if (monGrouping[0] < integer.length) {\n        for (var i = 0, idx = integer.length; i < monGrouping.length; i++) {\n          // e.g., 3\n          idx -= monGrouping[i]\n          if (idx <= 0) {\n            break\n          }\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n      if (monGrouping[i - 1] > 0) {\n        // Repeating last grouping (may only be one) until highest portion of integer reached\n        while (idx > monGrouping[i - 1]) {\n          idx -= monGrouping[i - 1]\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n    }\n\n    // left, right\n    if (right === '0') {\n      // No decimal or fractional digits\n      value = integer\n    } else {\n      // '.'\n      var decPt = monetary.mon_decimal_point\n      if (right === '' || right === undefined) {\n        right = conversion === 'i' ? monetary.int_frac_digits : monetary.frac_digits\n      }\n      right = parseInt(right, 10)\n\n      if (right === 0) {\n        // Only remove fractional portion if explicitly set to zero digits\n        fraction = ''\n        decPt = ''\n      } else if (right < fraction.length) {\n        fraction = Math.round(parseFloat(\n          fraction.slice(0, right) + '.' + fraction.substr(right, 1)\n        ))\n        if (right > fraction.length) {\n          fraction = new Array(right - fraction.length + 1).join('0') + fraction // prepend with 0's\n        }\n      } else if (right > fraction.length) {\n        fraction += new Array(right - fraction.length + 1).join('0') // pad with 0's\n      }\n      value = integer + decPt + fraction\n    }\n\n    var symbol = ''\n    if (showCurrSymbol) {\n      // 'i' vs. 'n' ('USD' vs. '$')\n      symbol = conversion === 'i' ? monetary.int_curr_symbol : monetary.currency_symbol\n    }\n    var signPosn = neg ? monetary.n_sign_posn : monetary.p_sign_posn\n\n    // 0: no space between curr. symbol and value\n    // 1: space sep. them unless symb. and sign are adjacent then space sep. them from value\n    // 2: space sep. sign and value unless symb. and sign are adjacent then space separates\n    var sepBySpace = neg ? monetary.n_sep_by_space : monetary.p_sep_by_space\n\n    // p_cs_precedes, n_cs_precedes\n    // positive currency symbol follows value = 0; precedes value = 1\n    var csPrecedes = neg ? monetary.n_cs_precedes : monetary.p_cs_precedes\n\n    // Assemble symbol/value/sign and possible space as appropriate\n    if (flags.indexOf('(') !== -1) {\n      // flag: parenth. for negative\n      // @todo: unclear on whether and how sepBySpace, signPosn, or csPrecedes have\n      // an impact here (as they do below), but assuming for now behaves as signPosn 0 as\n      // far as localized sepBySpace and signPosn behavior\n      repl = (csPrecedes ? symbol + (sepBySpace === 1 ? ' ' : '') : '') + value + (!csPrecedes ? (\n        sepBySpace === 1 ? ' ' : '') + symbol : '')\n      if (neg) {\n        repl = '(' + repl + ')'\n      } else {\n        repl = ' ' + repl + ' '\n      }\n    } else {\n      // '+' is default\n      // ''\n      var posSign = monetary.positive_sign\n      // '-'\n      var negSign = monetary.negative_sign\n      var sign = neg ? (negSign) : (posSign)\n      var otherSign = neg ? (posSign) : (negSign)\n      var signPadding = ''\n      if (signPosn) {\n        // has a sign\n        signPadding = new Array(otherSign.length - sign.length + 1).join(' ')\n      }\n\n      var valueAndCS = ''\n      switch (signPosn) {\n        // 0: parentheses surround value and curr. symbol;\n        // 1: sign precedes them;\n        // 2: sign follows them;\n        // 3: sign immed. precedes curr. symbol; (but may be space between)\n        // 4: sign immed. succeeds curr. symbol; (but may be space between)\n        case 0:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = '(' + valueAndCS + ')'\n          break\n        case 1:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = signPadding + sign + (sepBySpace === 2 ? ' ' : '') + valueAndCS\n          break\n        case 2:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = valueAndCS + (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n        case 3:\n          repl = csPrecedes\n            ? signPadding + sign + (sepBySpace === 2 ? ' ' : '') + symbol +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + sign + signPadding +\n              (sepBySpace === 2 ? ' ' : '') + symbol\n          break\n        case 4:\n          repl = csPrecedes\n            ? symbol + (sepBySpace === 2 ? ' ' : '') + signPadding + sign +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol +\n              (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n      }\n    }\n\n    var padding = width - repl.length\n    if (padding > 0) {\n      padding = new Array(padding + 1).join(' ')\n      // @todo: How does p_sep_by_space affect the count if there is a space?\n      // Included in count presumably?\n      if (flags.indexOf('-') !== -1) {\n        // left-justified (pad to right)\n        repl += padding\n      } else {\n        // right-justified (pad to left)\n        repl = padding + repl\n      }\n    }\n    return repl\n  }\n\n  return format.replace(regex, doReplace)\n}\n","source":"php/strings/money_format.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'money_format(''%i'', 1234.56)'\n  - 'money_format(''%14#8.2n'', 1234.5678)'\n  - 'money_format(''%14#8.2n'', -1234.5678)'\n  - 'money_format(''%(14#8.2n'', 1234.5678)'\n  - 'money_format(''%(14#8.2n'', -1234.5678)'\n  - 'money_format(''%=014#8.2n'', 1234.5678)'\n  - 'money_format(''%=014#8.2n'', -1234.5678)'\n  - 'money_format(''%=*14#8.2n'', 1234.5678)'\n  - 'money_format(''%=*14#8.2n'', -1234.5678)'\n  - 'money_format(''%=*^14#8.2n'', 1234.5678)'\n  - 'money_format(''%=*^14#8.2n'', -1234.5678)'\n  - 'money_format(''%=*!14#8.2n'', 1234.5678)'\n  - 'money_format(''%=*!14#8.2n'', -1234.5678)'\n  - 'money_format(''%i'', 3590)'\nestarget: es5\nreturns:\n  - ''' USD 1,234.56'''\n  - ''' $     1,234.57'''\n  - '''-$     1,234.57'''\n  - ''' $     1,234.57 '''\n  - '''($     1,234.57)'''\n  - ''' $000001,234.57'''\n  - '''-$000001,234.57'''\n  - ''' $*****1,234.57'''\n  - '''-$*****1,234.57'''\n  - '''  $****1234.57'''\n  - ''' -$****1234.57'''\n  - ''' *****1,234.57'''\n  - '''-*****1,234.57'''\n  - ''' USD 3,590.00'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'daniel airton wermann (http://wermann.com.br)'\nnotes:\n  - |-\n    This depends on setlocale having the appropriate\n    locale (these examples use 'en_US')\nlayout: function\ntitle: php'smoney_format in JavaScript\nfunction: money_format\ncategory: strings\nlanguage: php\npermalink: php/strings/money_format/\nalias:\n  - /functions/php/money_format/\n  - /functions/strings/money_format/\n  - /php/money_format/\n  - /functions/money_format/\n---\nmodule.exports = function money_format (format, number) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/money_format/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: daniel airton wermann (http://wermann.com.br)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This depends on setlocale having the appropriate\n  //      note 1: locale (these examples use 'en_US')\n  //   example 1: money_format('%i', 1234.56)\n  //   returns 1: ' USD 1,234.56'\n  //   example 2: money_format('%14#8.2n', 1234.5678)\n  //   returns 2: ' $     1,234.57'\n  //   example 3: money_format('%14#8.2n', -1234.5678)\n  //   returns 3: '-$     1,234.57'\n  //   example 4: money_format('%(14#8.2n', 1234.5678)\n  //   returns 4: ' $     1,234.57 '\n  //   example 5: money_format('%(14#8.2n', -1234.5678)\n  //   returns 5: '($     1,234.57)'\n  //   example 6: money_format('%=014#8.2n', 1234.5678)\n  //   returns 6: ' $000001,234.57'\n  //   example 7: money_format('%=014#8.2n', -1234.5678)\n  //   returns 7: '-$000001,234.57'\n  //   example 8: money_format('%=*14#8.2n', 1234.5678)\n  //   returns 8: ' $*****1,234.57'\n  //   example 9: money_format('%=*14#8.2n', -1234.5678)\n  //   returns 9: '-$*****1,234.57'\n  //  example 10: money_format('%=*^14#8.2n', 1234.5678)\n  //  returns 10: '  $****1234.57'\n  //  example 11: money_format('%=*^14#8.2n', -1234.5678)\n  //  returns 11: ' -$****1234.57'\n  //  example 12: money_format('%=*!14#8.2n', 1234.5678)\n  //  returns 12: ' *****1,234.57'\n  //  example 13: money_format('%=*!14#8.2n', -1234.5678)\n  //  returns 13: '-*****1,234.57'\n  //  example 14: money_format('%i', 3590)\n  //  returns 14: ' USD 3,590.00'\n\n  var setlocale = require('../strings/setlocale')\n\n  // Per PHP behavior, there seems to be no extra padding\n  // for sign when there is a positive number, though my\n  // understanding of the description is that there should be padding;\n  // need to revisit examples\n\n  // Helpful info at http://ftp.gnu.org/pub/pub/old-gnu/Manuals/glibc-2.2.3/html_chapter/libc_7.html\n  // and http://publib.boulder.ibm.com/infocenter/zos/v1r10/index.jsp?topic=/com.ibm.zos.r10.bpxbd00/strfmp.htm\n\n  if (typeof number !== 'number') {\n    return null\n  }\n  // 1: flags, 3: width, 5: left, 7: right, 8: conversion\n  var regex = /%((=.|[+^(!-])*?)(\\d*?)(#(\\d+))?(\\.(\\d+))?([in%])/g\n\n  // Ensure the locale data we need is set up\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var monetary = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY\n\n  var doReplace = function (n0, flags, n2, width, n4, left, n6, right, conversion) {\n    var value = ''\n    var repl = ''\n    if (conversion === '%') {\n      // Percent does not seem to be allowed with intervening content\n      return '%'\n    }\n    var fill = flags && (/=./).test(flags) ? flags.match(/=(.)/)[1] : ' ' // flag: =f (numeric fill)\n    // flag: ! (suppress currency symbol)\n    var showCurrSymbol = !flags || flags.indexOf('!') === -1\n    // field width: w (minimum field width)\n    width = parseInt(width, 10) || 0\n\n    var neg = number < 0\n    // Convert to string\n    number = number + ''\n    // We don't want negative symbol represented here yet\n    number = neg ? number.slice(1) : number\n\n    var decpos = number.indexOf('.')\n    // Get integer portion\n    var integer = decpos !== -1 ? number.slice(0, decpos) : number\n    // Get decimal portion\n    var fraction = decpos !== -1 ? number.slice(decpos + 1) : ''\n\n    var _strSplice = function (integerStr, idx, thouSep) {\n      var integerArr = integerStr.split('')\n      integerArr.splice(idx, 0, thouSep)\n      return integerArr.join('')\n    }\n\n    var intLen = integer.length\n    left = parseInt(left, 10)\n    var filler = intLen < left\n    if (filler) {\n      var fillnum = left - intLen\n      integer = new Array(fillnum + 1).join(fill) + integer\n    }\n    if (flags.indexOf('^') === -1) {\n      // flag: ^ (disable grouping characters (of locale))\n      // use grouping characters\n      // ','\n      var thouSep = monetary.mon_thousands_sep\n      // [3] (every 3 digits in U.S.A. locale)\n      var monGrouping = monetary.mon_grouping\n\n      if (monGrouping[0] < integer.length) {\n        for (var i = 0, idx = integer.length; i < monGrouping.length; i++) {\n          // e.g., 3\n          idx -= monGrouping[i]\n          if (idx <= 0) {\n            break\n          }\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n      if (monGrouping[i - 1] > 0) {\n        // Repeating last grouping (may only be one) until highest portion of integer reached\n        while (idx > monGrouping[i - 1]) {\n          idx -= monGrouping[i - 1]\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n    }\n\n    // left, right\n    if (right === '0') {\n      // No decimal or fractional digits\n      value = integer\n    } else {\n      // '.'\n      var decPt = monetary.mon_decimal_point\n      if (right === '' || right === undefined) {\n        right = conversion === 'i' ? monetary.int_frac_digits : monetary.frac_digits\n      }\n      right = parseInt(right, 10)\n\n      if (right === 0) {\n        // Only remove fractional portion if explicitly set to zero digits\n        fraction = ''\n        decPt = ''\n      } else if (right < fraction.length) {\n        fraction = Math.round(parseFloat(\n          fraction.slice(0, right) + '.' + fraction.substr(right, 1)\n        ))\n        if (right > fraction.length) {\n          fraction = new Array(right - fraction.length + 1).join('0') + fraction // prepend with 0's\n        }\n      } else if (right > fraction.length) {\n        fraction += new Array(right - fraction.length + 1).join('0') // pad with 0's\n      }\n      value = integer + decPt + fraction\n    }\n\n    var symbol = ''\n    if (showCurrSymbol) {\n      // 'i' vs. 'n' ('USD' vs. '$')\n      symbol = conversion === 'i' ? monetary.int_curr_symbol : monetary.currency_symbol\n    }\n    var signPosn = neg ? monetary.n_sign_posn : monetary.p_sign_posn\n\n    // 0: no space between curr. symbol and value\n    // 1: space sep. them unless symb. and sign are adjacent then space sep. them from value\n    // 2: space sep. sign and value unless symb. and sign are adjacent then space separates\n    var sepBySpace = neg ? monetary.n_sep_by_space : monetary.p_sep_by_space\n\n    // p_cs_precedes, n_cs_precedes\n    // positive currency symbol follows value = 0; precedes value = 1\n    var csPrecedes = neg ? monetary.n_cs_precedes : monetary.p_cs_precedes\n\n    // Assemble symbol/value/sign and possible space as appropriate\n    if (flags.indexOf('(') !== -1) {\n      // flag: parenth. for negative\n      // @todo: unclear on whether and how sepBySpace, signPosn, or csPrecedes have\n      // an impact here (as they do below), but assuming for now behaves as signPosn 0 as\n      // far as localized sepBySpace and signPosn behavior\n      repl = (csPrecedes ? symbol + (sepBySpace === 1 ? ' ' : '') : '') + value + (!csPrecedes ? (\n        sepBySpace === 1 ? ' ' : '') + symbol : '')\n      if (neg) {\n        repl = '(' + repl + ')'\n      } else {\n        repl = ' ' + repl + ' '\n      }\n    } else {\n      // '+' is default\n      // ''\n      var posSign = monetary.positive_sign\n      // '-'\n      var negSign = monetary.negative_sign\n      var sign = neg ? (negSign) : (posSign)\n      var otherSign = neg ? (posSign) : (negSign)\n      var signPadding = ''\n      if (signPosn) {\n        // has a sign\n        signPadding = new Array(otherSign.length - sign.length + 1).join(' ')\n      }\n\n      var valueAndCS = ''\n      switch (signPosn) {\n        // 0: parentheses surround value and curr. symbol;\n        // 1: sign precedes them;\n        // 2: sign follows them;\n        // 3: sign immed. precedes curr. symbol; (but may be space between)\n        // 4: sign immed. succeeds curr. symbol; (but may be space between)\n        case 0:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = '(' + valueAndCS + ')'\n          break\n        case 1:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = signPadding + sign + (sepBySpace === 2 ? ' ' : '') + valueAndCS\n          break\n        case 2:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = valueAndCS + (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n        case 3:\n          repl = csPrecedes\n            ? signPadding + sign + (sepBySpace === 2 ? ' ' : '') + symbol +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + sign + signPadding +\n              (sepBySpace === 2 ? ' ' : '') + symbol\n          break\n        case 4:\n          repl = csPrecedes\n            ? symbol + (sepBySpace === 2 ? ' ' : '') + signPadding + sign +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol +\n              (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n      }\n    }\n\n    var padding = width - repl.length\n    if (padding > 0) {\n      padding = new Array(padding + 1).join(' ')\n      // @todo: How does p_sep_by_space affect the count if there is a space?\n      // Included in count presumably?\n      if (flags.indexOf('-') !== -1) {\n        // left-justified (pad to right)\n        repl += padding\n      } else {\n        // right-justified (pad to left)\n        repl = padding + repl\n      }\n    }\n    return repl\n  }\n\n  return format.replace(regex, doReplace)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/money_format/index.html","comments":1,"_id":"cinoeja1a006iou9yjyafuymz","content":"module.exports = function money_format (format, number) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/money_format/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: daniel airton wermann (http://wermann.com.br)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This depends on setlocale having the appropriate\n  //      note 1: locale (these examples use 'en_US')\n  //   example 1: money_format('%i', 1234.56)\n  //   returns 1: ' USD 1,234.56'\n  //   example 2: money_format('%14#8.2n', 1234.5678)\n  //   returns 2: ' $     1,234.57'\n  //   example 3: money_format('%14#8.2n', -1234.5678)\n  //   returns 3: '-$     1,234.57'\n  //   example 4: money_format('%(14#8.2n', 1234.5678)\n  //   returns 4: ' $     1,234.57 '\n  //   example 5: money_format('%(14#8.2n', -1234.5678)\n  //   returns 5: '($     1,234.57)'\n  //   example 6: money_format('%=014#8.2n', 1234.5678)\n  //   returns 6: ' $000001,234.57'\n  //   example 7: money_format('%=014#8.2n', -1234.5678)\n  //   returns 7: '-$000001,234.57'\n  //   example 8: money_format('%=*14#8.2n', 1234.5678)\n  //   returns 8: ' $*****1,234.57'\n  //   example 9: money_format('%=*14#8.2n', -1234.5678)\n  //   returns 9: '-$*****1,234.57'\n  //  example 10: money_format('%=*^14#8.2n', 1234.5678)\n  //  returns 10: '  $****1234.57'\n  //  example 11: money_format('%=*^14#8.2n', -1234.5678)\n  //  returns 11: ' -$****1234.57'\n  //  example 12: money_format('%=*!14#8.2n', 1234.5678)\n  //  returns 12: ' *****1,234.57'\n  //  example 13: money_format('%=*!14#8.2n', -1234.5678)\n  //  returns 13: '-*****1,234.57'\n  //  example 14: money_format('%i', 3590)\n  //  returns 14: ' USD 3,590.00'\n\n  var setlocale = require('../strings/setlocale')\n\n  // Per PHP behavior, there seems to be no extra padding\n  // for sign when there is a positive number, though my\n  // understanding of the description is that there should be padding;\n  // need to revisit examples\n\n  // Helpful info at http://ftp.gnu.org/pub/pub/old-gnu/Manuals/glibc-2.2.3/html_chapter/libc_7.html\n  // and http://publib.boulder.ibm.com/infocenter/zos/v1r10/index.jsp?topic=/com.ibm.zos.r10.bpxbd00/strfmp.htm\n\n  if (typeof number !== 'number') {\n    return null\n  }\n  // 1: flags, 3: width, 5: left, 7: right, 8: conversion\n  var regex = /%((=.|[+^(!-])*?)(\\d*?)(#(\\d+))?(\\.(\\d+))?([in%])/g\n\n  // Ensure the locale data we need is set up\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var monetary = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY\n\n  var doReplace = function (n0, flags, n2, width, n4, left, n6, right, conversion) {\n    var value = ''\n    var repl = ''\n    if (conversion === '%') {\n      // Percent does not seem to be allowed with intervening content\n      return '%'\n    }\n    var fill = flags && (/=./).test(flags) ? flags.match(/=(.)/)[1] : ' ' // flag: =f (numeric fill)\n    // flag: ! (suppress currency symbol)\n    var showCurrSymbol = !flags || flags.indexOf('!') === -1\n    // field width: w (minimum field width)\n    width = parseInt(width, 10) || 0\n\n    var neg = number < 0\n    // Convert to string\n    number = number + ''\n    // We don't want negative symbol represented here yet\n    number = neg ? number.slice(1) : number\n\n    var decpos = number.indexOf('.')\n    // Get integer portion\n    var integer = decpos !== -1 ? number.slice(0, decpos) : number\n    // Get decimal portion\n    var fraction = decpos !== -1 ? number.slice(decpos + 1) : ''\n\n    var _strSplice = function (integerStr, idx, thouSep) {\n      var integerArr = integerStr.split('')\n      integerArr.splice(idx, 0, thouSep)\n      return integerArr.join('')\n    }\n\n    var intLen = integer.length\n    left = parseInt(left, 10)\n    var filler = intLen < left\n    if (filler) {\n      var fillnum = left - intLen\n      integer = new Array(fillnum + 1).join(fill) + integer\n    }\n    if (flags.indexOf('^') === -1) {\n      // flag: ^ (disable grouping characters (of locale))\n      // use grouping characters\n      // ','\n      var thouSep = monetary.mon_thousands_sep\n      // [3] (every 3 digits in U.S.A. locale)\n      var monGrouping = monetary.mon_grouping\n\n      if (monGrouping[0] < integer.length) {\n        for (var i = 0, idx = integer.length; i < monGrouping.length; i++) {\n          // e.g., 3\n          idx -= monGrouping[i]\n          if (idx <= 0)=\"\" {=\"\" break=\"\" }=\"\" if=\"\" (filler=\"\" &&=\"\" idx=\"\" <=\"\" fillnum)=\"\" thousep=\"fill\" integer=\"_strSplice(integer,\" idx,=\"\" thousep)=\"\" (mongrouping[i=\"\" -=\"\" 1]=\"\"> 0) {\n        // Repeating last grouping (may only be one) until highest portion of integer reached\n        while (idx > monGrouping[i - 1]) {\n          idx -= monGrouping[i - 1]\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n    }\n\n    // left, right\n    if (right === '0') {\n      // No decimal or fractional digits\n      value = integer\n    } else {\n      // '.'\n      var decPt = monetary.mon_decimal_point\n      if (right === '' || right === undefined) {\n        right = conversion === 'i' ? monetary.int_frac_digits : monetary.frac_digits\n      }\n      right = parseInt(right, 10)\n\n      if (right === 0) {\n        // Only remove fractional portion if explicitly set to zero digits\n        fraction = ''\n        decPt = ''\n      } else if (right < fraction.length) {\n        fraction = Math.round(parseFloat(\n          fraction.slice(0, right) + '.' + fraction.substr(right, 1)\n        ))\n        if (right > fraction.length) {\n          fraction = new Array(right - fraction.length + 1).join('0') + fraction // prepend with 0's\n        }\n      } else if (right > fraction.length) {\n        fraction += new Array(right - fraction.length + 1).join('0') // pad with 0's\n      }\n      value = integer + decPt + fraction\n    }\n\n    var symbol = ''\n    if (showCurrSymbol) {\n      // 'i' vs. 'n' ('USD' vs. '$')\n      symbol = conversion === 'i' ? monetary.int_curr_symbol : monetary.currency_symbol\n    }\n    var signPosn = neg ? monetary.n_sign_posn : monetary.p_sign_posn\n\n    // 0: no space between curr. symbol and value\n    // 1: space sep. them unless symb. and sign are adjacent then space sep. them from value\n    // 2: space sep. sign and value unless symb. and sign are adjacent then space separates\n    var sepBySpace = neg ? monetary.n_sep_by_space : monetary.p_sep_by_space\n\n    // p_cs_precedes, n_cs_precedes\n    // positive currency symbol follows value = 0; precedes value = 1\n    var csPrecedes = neg ? monetary.n_cs_precedes : monetary.p_cs_precedes\n\n    // Assemble symbol/value/sign and possible space as appropriate\n    if (flags.indexOf('(') !== -1) {\n      // flag: parenth. for negative\n      // @todo: unclear on whether and how sepBySpace, signPosn, or csPrecedes have\n      // an impact here (as they do below), but assuming for now behaves as signPosn 0 as\n      // far as localized sepBySpace and signPosn behavior\n      repl = (csPrecedes ? symbol + (sepBySpace === 1 ? ' ' : '') : '') + value + (!csPrecedes ? (\n        sepBySpace === 1 ? ' ' : '') + symbol : '')\n      if (neg) {\n        repl = '(' + repl + ')'\n      } else {\n        repl = ' ' + repl + ' '\n      }\n    } else {\n      // '+' is default\n      // ''\n      var posSign = monetary.positive_sign\n      // '-'\n      var negSign = monetary.negative_sign\n      var sign = neg ? (negSign) : (posSign)\n      var otherSign = neg ? (posSign) : (negSign)\n      var signPadding = ''\n      if (signPosn) {\n        // has a sign\n        signPadding = new Array(otherSign.length - sign.length + 1).join(' ')\n      }\n\n      var valueAndCS = ''\n      switch (signPosn) {\n        // 0: parentheses surround value and curr. symbol;\n        // 1: sign precedes them;\n        // 2: sign follows them;\n        // 3: sign immed. precedes curr. symbol; (but may be space between)\n        // 4: sign immed. succeeds curr. symbol; (but may be space between)\n        case 0:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = '(' + valueAndCS + ')'\n          break\n        case 1:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = signPadding + sign + (sepBySpace === 2 ? ' ' : '') + valueAndCS\n          break\n        case 2:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = valueAndCS + (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n        case 3:\n          repl = csPrecedes\n            ? signPadding + sign + (sepBySpace === 2 ? ' ' : '') + symbol +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + sign + signPadding +\n              (sepBySpace === 2 ? ' ' : '') + symbol\n          break\n        case 4:\n          repl = csPrecedes\n            ? symbol + (sepBySpace === 2 ? ' ' : '') + signPadding + sign +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol +\n              (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n      }\n    }\n\n    var padding = width - repl.length\n    if (padding > 0) {\n      padding = new Array(padding + 1).join(' ')\n      // @todo: How does p_sep_by_space affect the count if there is a space?\n      // Included in count presumably?\n      if (flags.indexOf('-') !== -1) {\n        // left-justified (pad to right)\n        repl += padding\n      } else {\n        // right-justified (pad to left)\n        repl = padding + repl\n      }\n    }\n    return repl\n  }\n\n  return format.replace(regex, doReplace)\n}\n</=>","excerpt":"","more":"module.exports = function money_format (format, number) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/money_format/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: daniel airton wermann (http://wermann.com.br)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: This depends on setlocale having the appropriate\n  //      note 1: locale (these examples use 'en_US')\n  //   example 1: money_format('%i', 1234.56)\n  //   returns 1: ' USD 1,234.56'\n  //   example 2: money_format('%14#8.2n', 1234.5678)\n  //   returns 2: ' $     1,234.57'\n  //   example 3: money_format('%14#8.2n', -1234.5678)\n  //   returns 3: '-$     1,234.57'\n  //   example 4: money_format('%(14#8.2n', 1234.5678)\n  //   returns 4: ' $     1,234.57 '\n  //   example 5: money_format('%(14#8.2n', -1234.5678)\n  //   returns 5: '($     1,234.57)'\n  //   example 6: money_format('%=014#8.2n', 1234.5678)\n  //   returns 6: ' $000001,234.57'\n  //   example 7: money_format('%=014#8.2n', -1234.5678)\n  //   returns 7: '-$000001,234.57'\n  //   example 8: money_format('%=*14#8.2n', 1234.5678)\n  //   returns 8: ' $*****1,234.57'\n  //   example 9: money_format('%=*14#8.2n', -1234.5678)\n  //   returns 9: '-$*****1,234.57'\n  //  example 10: money_format('%=*^14#8.2n', 1234.5678)\n  //  returns 10: '  $****1234.57'\n  //  example 11: money_format('%=*^14#8.2n', -1234.5678)\n  //  returns 11: ' -$****1234.57'\n  //  example 12: money_format('%=*!14#8.2n', 1234.5678)\n  //  returns 12: ' *****1,234.57'\n  //  example 13: money_format('%=*!14#8.2n', -1234.5678)\n  //  returns 13: '-*****1,234.57'\n  //  example 14: money_format('%i', 3590)\n  //  returns 14: ' USD 3,590.00'\n\n  var setlocale = require('../strings/setlocale')\n\n  // Per PHP behavior, there seems to be no extra padding\n  // for sign when there is a positive number, though my\n  // understanding of the description is that there should be padding;\n  // need to revisit examples\n\n  // Helpful info at http://ftp.gnu.org/pub/pub/old-gnu/Manuals/glibc-2.2.3/html_chapter/libc_7.html\n  // and http://publib.boulder.ibm.com/infocenter/zos/v1r10/index.jsp?topic=/com.ibm.zos.r10.bpxbd00/strfmp.htm\n\n  if (typeof number !== 'number') {\n    return null\n  }\n  // 1: flags, 3: width, 5: left, 7: right, 8: conversion\n  var regex = /%((=.|[+^(!-])*?)(\\d*?)(#(\\d+))?(\\.(\\d+))?([in%])/g\n\n  // Ensure the locale data we need is set up\n  setlocale('LC_ALL', 0)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var monetary = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY].LC_MONETARY\n\n  var doReplace = function (n0, flags, n2, width, n4, left, n6, right, conversion) {\n    var value = ''\n    var repl = ''\n    if (conversion === '%') {\n      // Percent does not seem to be allowed with intervening content\n      return '%'\n    }\n    var fill = flags && (/=./).test(flags) ? flags.match(/=(.)/)[1] : ' ' // flag: =f (numeric fill)\n    // flag: ! (suppress currency symbol)\n    var showCurrSymbol = !flags || flags.indexOf('!') === -1\n    // field width: w (minimum field width)\n    width = parseInt(width, 10) || 0\n\n    var neg = number < 0\n    // Convert to string\n    number = number + ''\n    // We don't want negative symbol represented here yet\n    number = neg ? number.slice(1) : number\n\n    var decpos = number.indexOf('.')\n    // Get integer portion\n    var integer = decpos !== -1 ? number.slice(0, decpos) : number\n    // Get decimal portion\n    var fraction = decpos !== -1 ? number.slice(decpos + 1) : ''\n\n    var _strSplice = function (integerStr, idx, thouSep) {\n      var integerArr = integerStr.split('')\n      integerArr.splice(idx, 0, thouSep)\n      return integerArr.join('')\n    }\n\n    var intLen = integer.length\n    left = parseInt(left, 10)\n    var filler = intLen < left\n    if (filler) {\n      var fillnum = left - intLen\n      integer = new Array(fillnum + 1).join(fill) + integer\n    }\n    if (flags.indexOf('^') === -1) {\n      // flag: ^ (disable grouping characters (of locale))\n      // use grouping characters\n      // ','\n      var thouSep = monetary.mon_thousands_sep\n      // [3] (every 3 digits in U.S.A. locale)\n      var monGrouping = monetary.mon_grouping\n\n      if (monGrouping[0] < integer.length) {\n        for (var i = 0, idx = integer.length; i < monGrouping.length; i++) {\n          // e.g., 3\n          idx -= monGrouping[i]\n          if (idx <= 0) {\n            break\n          }\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n      if (monGrouping[i - 1] > 0) {\n        // Repeating last grouping (may only be one) until highest portion of integer reached\n        while (idx > monGrouping[i - 1]) {\n          idx -= monGrouping[i - 1]\n          if (filler && idx < fillnum) {\n            thouSep = fill\n          }\n          integer = _strSplice(integer, idx, thouSep)\n        }\n      }\n    }\n\n    // left, right\n    if (right === '0') {\n      // No decimal or fractional digits\n      value = integer\n    } else {\n      // '.'\n      var decPt = monetary.mon_decimal_point\n      if (right === '' || right === undefined) {\n        right = conversion === 'i' ? monetary.int_frac_digits : monetary.frac_digits\n      }\n      right = parseInt(right, 10)\n\n      if (right === 0) {\n        // Only remove fractional portion if explicitly set to zero digits\n        fraction = ''\n        decPt = ''\n      } else if (right < fraction.length) {\n        fraction = Math.round(parseFloat(\n          fraction.slice(0, right) + '.' + fraction.substr(right, 1)\n        ))\n        if (right > fraction.length) {\n          fraction = new Array(right - fraction.length + 1).join('0') + fraction // prepend with 0's\n        }\n      } else if (right > fraction.length) {\n        fraction += new Array(right - fraction.length + 1).join('0') // pad with 0's\n      }\n      value = integer + decPt + fraction\n    }\n\n    var symbol = ''\n    if (showCurrSymbol) {\n      // 'i' vs. 'n' ('USD' vs. '$')\n      symbol = conversion === 'i' ? monetary.int_curr_symbol : monetary.currency_symbol\n    }\n    var signPosn = neg ? monetary.n_sign_posn : monetary.p_sign_posn\n\n    // 0: no space between curr. symbol and value\n    // 1: space sep. them unless symb. and sign are adjacent then space sep. them from value\n    // 2: space sep. sign and value unless symb. and sign are adjacent then space separates\n    var sepBySpace = neg ? monetary.n_sep_by_space : monetary.p_sep_by_space\n\n    // p_cs_precedes, n_cs_precedes\n    // positive currency symbol follows value = 0; precedes value = 1\n    var csPrecedes = neg ? monetary.n_cs_precedes : monetary.p_cs_precedes\n\n    // Assemble symbol/value/sign and possible space as appropriate\n    if (flags.indexOf('(') !== -1) {\n      // flag: parenth. for negative\n      // @todo: unclear on whether and how sepBySpace, signPosn, or csPrecedes have\n      // an impact here (as they do below), but assuming for now behaves as signPosn 0 as\n      // far as localized sepBySpace and signPosn behavior\n      repl = (csPrecedes ? symbol + (sepBySpace === 1 ? ' ' : '') : '') + value + (!csPrecedes ? (\n        sepBySpace === 1 ? ' ' : '') + symbol : '')\n      if (neg) {\n        repl = '(' + repl + ')'\n      } else {\n        repl = ' ' + repl + ' '\n      }\n    } else {\n      // '+' is default\n      // ''\n      var posSign = monetary.positive_sign\n      // '-'\n      var negSign = monetary.negative_sign\n      var sign = neg ? (negSign) : (posSign)\n      var otherSign = neg ? (posSign) : (negSign)\n      var signPadding = ''\n      if (signPosn) {\n        // has a sign\n        signPadding = new Array(otherSign.length - sign.length + 1).join(' ')\n      }\n\n      var valueAndCS = ''\n      switch (signPosn) {\n        // 0: parentheses surround value and curr. symbol;\n        // 1: sign precedes them;\n        // 2: sign follows them;\n        // 3: sign immed. precedes curr. symbol; (but may be space between)\n        // 4: sign immed. succeeds curr. symbol; (but may be space between)\n        case 0:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = '(' + valueAndCS + ')'\n          break\n        case 1:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = signPadding + sign + (sepBySpace === 2 ? ' ' : '') + valueAndCS\n          break\n        case 2:\n          valueAndCS = csPrecedes\n            ? symbol + (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol\n          repl = valueAndCS + (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n        case 3:\n          repl = csPrecedes\n            ? signPadding + sign + (sepBySpace === 2 ? ' ' : '') + symbol +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + sign + signPadding +\n              (sepBySpace === 2 ? ' ' : '') + symbol\n          break\n        case 4:\n          repl = csPrecedes\n            ? symbol + (sepBySpace === 2 ? ' ' : '') + signPadding + sign +\n              (sepBySpace === 1 ? ' ' : '') + value\n            : value + (sepBySpace === 1 ? ' ' : '') + symbol +\n              (sepBySpace === 2 ? ' ' : '') + sign + signPadding\n          break\n      }\n    }\n\n    var padding = width - repl.length\n    if (padding > 0) {\n      padding = new Array(padding + 1).join(' ')\n      // @todo: How does p_sep_by_space affect the count if there is a space?\n      // Included in count presumably?\n      if (flags.indexOf('-') !== -1) {\n        // left-justified (pad to right)\n        repl += padding\n      } else {\n        // right-justified (pad to left)\n        repl = padding + repl\n      }\n    }\n    return repl\n  }\n\n  return format.replace(regex, doReplace)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["nl2br('Kevin\\nvan\\nZonneveld')","nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)","nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)"],"estarget":"es5","returns":["'Kevin<br />\\nvan<br />\\nZonneveld'","'<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'","'<br />\\nOne<br />\\nTwo<br />\\n<br />\\nThree<br />\\n'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Philip Peterson","Onno Marsman (https://twitter.com/onnomarsman)","Atli Þór","Brett Zamir (http://brett-zamir.me)","Maximusya"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'snl2br in JavaScript","function":"nl2br","category":"strings","language":"php","alias":["/functions/php/nl2br/","/functions/strings/nl2br/","/php/nl2br/","/functions/nl2br/"],"_content":"module.exports = function nl2br (str, isXhtml) {\n  //  discuss at: http://locutusjs.io/php/nl2br/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Atli Þór\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Maximusya\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl2br('Kevin\\nvan\\nZonneveld')\n  //   returns 1: 'Kevin<br />\\nvan<br />\\nZonneveld'\n  //   example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)\n  //   returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n  //   example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)\n  //   returns 3: '<br />\\nOne<br />\\nTwo<br />\\n<br />\\nThree<br />\\n'\n\n  // Adjust comment to avoid issue on locutusjs.io display\n  var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br ' + '/>' : '<br>'\n\n  return (str + '')\n    .replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2')\n}\n","source":"php/strings/nl2br.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - nl2br('Kevin\\nvan\\nZonneveld')\n  - 'nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)'\n  - 'nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)'\nestarget: es5\nreturns:\n  - '''Kevin<br />\\nvan<br />\\nZonneveld'''\n  - '''<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'''\n  - '''<br />\\nOne<br />\\nTwo<br />\\n<br />\\nThree<br />\\n'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Philip Peterson\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Atli Þór\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Maximusya\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'snl2br in JavaScript\nfunction: nl2br\ncategory: strings\nlanguage: php\npermalink: php/strings/nl2br/\nalias:\n  - /functions/php/nl2br/\n  - /functions/strings/nl2br/\n  - /php/nl2br/\n  - /functions/nl2br/\n---\nmodule.exports = function nl2br (str, isXhtml) {\n  //  discuss at: http://locutusjs.io/php/nl2br/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Atli Þór\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Maximusya\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl2br('Kevin\\nvan\\nZonneveld')\n  //   returns 1: 'Kevin<br />\\nvan<br />\\nZonneveld'\n  //   example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)\n  //   returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n  //   example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)\n  //   returns 3: '<br />\\nOne<br />\\nTwo<br />\\n<br />\\nThree<br />\\n'\n\n  // Adjust comment to avoid issue on locutusjs.io display\n  var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br ' + '/>' : '<br>'\n\n  return (str + '')\n    .replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/nl2br/index.html","comments":1,"_id":"cinoeja1a006jou9ysebkmql2","content":"module.exports = function nl2br (str, isXhtml) {\n  //  discuss at: http://locutusjs.io/php/nl2br/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Atli Þór\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Maximusya\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl2br('Kevin\\nvan\\nZonneveld')\n  //   returns 1: 'Kevin<br>\\nvan<br>\\nZonneveld'\n  //   example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)\n  //   returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n  //   example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)\n  //   returns 3: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n\n  // Adjust comment to avoid issue on locutusjs.io display\n  var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br '=\"\" +=\"\">' : '<br>'\n\n  return (str + '')\n    .replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2')\n}\n","excerpt":"","more":"module.exports = function nl2br (str, isXhtml) {\n  //  discuss at: http://locutusjs.io/php/nl2br/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Philip Peterson\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Atli Þór\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Maximusya\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl2br('Kevin\\nvan\\nZonneveld')\n  //   returns 1: 'Kevin<br />\\nvan<br />\\nZonneveld'\n  //   example 2: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", false)\n  //   returns 2: '<br>\\nOne<br>\\nTwo<br>\\n<br>\\nThree<br>\\n'\n  //   example 3: nl2br(\"\\nOne\\nTwo\\n\\nThree\\n\", true)\n  //   returns 3: '<br />\\nOne<br />\\nTwo<br />\\n<br />\\nThree<br />\\n'\n\n  // Adjust comment to avoid issue on locutusjs.io display\n  var breakTag = (isXhtml || typeof isXhtml === 'undefined') ? '<br ' + '/>' : '<br>'\n\n  return (str + '')\n    .replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + breakTag + '$2')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["number_format(1234.56)","number_format(1234.56, 2, ',', ' ')","number_format(1234.5678, 2, '.', '')","number_format(67, 2, ',', '.')","number_format(1000)","number_format(67.311, 2)","number_format(1000.55, 1)","number_format(67000, 5, ',', '.')","number_format(0.9, 0)","number_format('1.20', 2)","number_format('1.20', 4)","number_format('1.2000', 3)","number_format('1 000,50', 2, '.', ' ')","number_format(1e-8, 8, '.', '')"],"estarget":"es5","returns":["'1,235'","'1 234,56'","'1234.57'","'67,00'","'1,000'","'67.31'","'1,000.6'","'67.000,00000'","'1'","'1.20'","'1.2000'","'1.200'","'100 050.00'","'0.00000001'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","davook","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Michael White (http://getsprink.com)","Benjamin Lupton","Allan Jensen (http://www.winternet.no)","Howard Yeend","Diogo Resende","Rival","Brett Zamir (http://brett-zamir.me)"],"revised by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)","Luke Smith (http://lucassmith.name)"],"input by":["Kheang Hok Chin (http://www.distantia.ca/)","Jay Klehr","Amir Habibi (http://www.residence-mixte.com/)","Amirouche"]},"notes":[],"layout":"function","title":"php'snumber_format in JavaScript","function":"number_format","category":"strings","language":"php","alias":["/functions/php/number_format/","/functions/strings/number_format/","/php/number_format/","/functions/number_format/"],"_content":"module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Michael White (http://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (http://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Luke Smith (http://lucassmith.name)\n  //    input by: Kheang Hok Chin (http://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (http://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  var s = ''\n\n  var toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec)\n    return '' + (Math.round(n * k) / k)\n      .toFixed(prec)\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","source":"php/strings/number_format.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - number_format(1234.56)\n  - 'number_format(1234.56, 2, '','', '' '')'\n  - 'number_format(1234.5678, 2, ''.'', '''')'\n  - 'number_format(67, 2, '','', ''.'')'\n  - number_format(1000)\n  - 'number_format(67.311, 2)'\n  - 'number_format(1000.55, 1)'\n  - 'number_format(67000, 5, '','', ''.'')'\n  - 'number_format(0.9, 0)'\n  - 'number_format(''1.20'', 2)'\n  - 'number_format(''1.20'', 4)'\n  - 'number_format(''1.2000'', 3)'\n  - 'number_format(''1 000,50'', 2, ''.'', '' '')'\n  - 'number_format(1e-8, 8, ''.'', '''')'\nestarget: es5\nreturns:\n  - '''1,235'''\n  - '''1 234,56'''\n  - '''1234.57'''\n  - '''67,00'''\n  - '''1,000'''\n  - '''67.31'''\n  - '''1,000.6'''\n  - '''67.000,00000'''\n  - '''1'''\n  - '''1.20'''\n  - '''1.2000'''\n  - '''1.200'''\n  - '''100 050.00'''\n  - '''0.00000001'''\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - davook\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Michael White (http://getsprink.com)'\n    - Benjamin Lupton\n    - 'Allan Jensen (http://www.winternet.no)'\n    - Howard Yeend\n    - Diogo Resende\n    - Rival\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n    - 'Luke Smith (http://lucassmith.name)'\n  input by:\n    - 'Kheang Hok Chin (http://www.distantia.ca/)'\n    - Jay Klehr\n    - 'Amir Habibi (http://www.residence-mixte.com/)'\n    - Amirouche\nnotes: []\nlayout: function\ntitle: php'snumber_format in JavaScript\nfunction: number_format\ncategory: strings\nlanguage: php\npermalink: php/strings/number_format/\nalias:\n  - /functions/php/number_format/\n  - /functions/strings/number_format/\n  - /php/number_format/\n  - /functions/number_format/\n---\nmodule.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Michael White (http://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (http://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Luke Smith (http://lucassmith.name)\n  //    input by: Kheang Hok Chin (http://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (http://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  var s = ''\n\n  var toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec)\n    return '' + (Math.round(n * k) / k)\n      .toFixed(prec)\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/number_format/index.html","comments":1,"_id":"cinoeja1b006kou9yd82sbcyw","content":"module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Michael White (http://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (http://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Luke Smith (http://lucassmith.name)\n  //    input by: Kheang Hok Chin (http://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (http://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  var s = ''\n\n  var toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec)\n    return '' + (Math.round(n * k) / k)\n      .toFixed(prec)\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","excerpt":"","more":"module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Michael White (http://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (http://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Luke Smith (http://lucassmith.name)\n  //    input by: Kheang Hok Chin (http://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (http://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  var s = ''\n\n  var toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec)\n    return '' + (Math.round(n * k) / k)\n      .toFixed(prec)\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["nl_langinfo('DAY_1')"],"estarget":"es5","returns":["'Sunday'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'snl_langinfo in JavaScript","function":"nl_langinfo","category":"strings","language":"php","alias":["/functions/php/nl_langinfo/","/functions/strings/nl_langinfo/","/php/nl_langinfo/","/functions/nl_langinfo/"],"_content":"module.exports = function nl_langinfo (item) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/nl_langinfo/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl_langinfo('DAY_1')\n  //   returns 1: 'Sunday'\n\n  var setlocale = require('../strings/setlocale')\n\n  setlocale('LC_ALL', 0) // Ensure locale data is available\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var loc = $locutus.php.locales[$locutus.php.localeCategories.LC_TIME]\n  if (item.indexOf('ABDAY_') === 0) {\n    return loc.LC_TIME.a[parseInt(item.replace(/^ABDAY_/, ''), 10) - 1]\n  } else if (item.indexOf('DAY_') === 0) {\n    return loc.LC_TIME.A[parseInt(item.replace(/^DAY_/, ''), 10) - 1]\n  } else if (item.indexOf('ABMON_') === 0) {\n    return loc.LC_TIME.b[parseInt(item.replace(/^ABMON_/, ''), 10) - 1]\n  } else if (item.indexOf('MON_') === 0) {\n    return loc.LC_TIME.B[parseInt(item.replace(/^MON_/, ''), 10) - 1]\n  } else {\n    switch (item) {\n      // More LC_TIME\n      case 'AM_STR':\n        return loc.LC_TIME.p[0]\n      case 'PM_STR':\n        return loc.LC_TIME.p[1]\n      case 'D_T_FMT':\n        return loc.LC_TIME.c\n      case 'D_FMT':\n        return loc.LC_TIME.x\n      case 'T_FMT':\n        return loc.LC_TIME.X\n      case 'T_FMT_AMPM':\n        return loc.LC_TIME.r\n      case 'ERA':\n      case 'ERA_YEAR':\n      case 'ERA_D_T_FMT':\n      case 'ERA_D_FMT':\n      case 'ERA_T_FMT':\n        // all fall-throughs\n        return loc.LC_TIME[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY]\n    if (item === 'CRNCYSTR') {\n      // alias\n      item = 'CURRENCY_SYMBOL'\n    }\n    switch (item) {\n      case 'INT_CURR_SYMBOL':\n      case 'CURRENCY_SYMBOL':\n      case 'MON_DECIMAL_POINT':\n      case 'MON_THOUSANDS_SEP':\n      case 'POSITIVE_SIGN':\n      case 'NEGATIVE_SIGN':\n      case 'INT_FRAC_DIGITS':\n      case 'FRAC_DIGITS':\n      case 'P_CS_PRECEDES':\n      case 'P_SEP_BY_SPACE':\n      case 'N_CS_PRECEDES':\n      case 'N_SEP_BY_SPACE':\n      case 'P_SIGN_POSN':\n      case 'N_SIGN_POSN':\n        // all fall-throughs\n        return loc.LC_MONETARY[item.toLowerCase()]\n      case 'MON_GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_MONETARY[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC]\n    switch (item) {\n      case 'RADIXCHAR':\n      case 'DECIMAL_POINT':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'THOUSEP':\n      case 'THOUSANDS_SEP':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_NUMERIC[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MESSAGES]\n    switch (item) {\n      case 'YESEXPR':\n      case 'NOEXPR':\n      case 'YESSTR':\n      case 'NOSTR':\n        // all fall-throughs\n        return loc.LC_MESSAGES[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE]\n    if (item === 'CODESET') {\n      return loc.LC_CTYPE[item]\n    }\n\n    return false\n  }\n}\n","source":"php/strings/nl_langinfo.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - nl_langinfo('DAY_1')\nestarget: es5\nreturns:\n  - '''Sunday'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'snl_langinfo in JavaScript\nfunction: nl_langinfo\ncategory: strings\nlanguage: php\npermalink: php/strings/nl_langinfo/\nalias:\n  - /functions/php/nl_langinfo/\n  - /functions/strings/nl_langinfo/\n  - /php/nl_langinfo/\n  - /functions/nl_langinfo/\n---\nmodule.exports = function nl_langinfo (item) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/nl_langinfo/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl_langinfo('DAY_1')\n  //   returns 1: 'Sunday'\n\n  var setlocale = require('../strings/setlocale')\n\n  setlocale('LC_ALL', 0) // Ensure locale data is available\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var loc = $locutus.php.locales[$locutus.php.localeCategories.LC_TIME]\n  if (item.indexOf('ABDAY_') === 0) {\n    return loc.LC_TIME.a[parseInt(item.replace(/^ABDAY_/, ''), 10) - 1]\n  } else if (item.indexOf('DAY_') === 0) {\n    return loc.LC_TIME.A[parseInt(item.replace(/^DAY_/, ''), 10) - 1]\n  } else if (item.indexOf('ABMON_') === 0) {\n    return loc.LC_TIME.b[parseInt(item.replace(/^ABMON_/, ''), 10) - 1]\n  } else if (item.indexOf('MON_') === 0) {\n    return loc.LC_TIME.B[parseInt(item.replace(/^MON_/, ''), 10) - 1]\n  } else {\n    switch (item) {\n      // More LC_TIME\n      case 'AM_STR':\n        return loc.LC_TIME.p[0]\n      case 'PM_STR':\n        return loc.LC_TIME.p[1]\n      case 'D_T_FMT':\n        return loc.LC_TIME.c\n      case 'D_FMT':\n        return loc.LC_TIME.x\n      case 'T_FMT':\n        return loc.LC_TIME.X\n      case 'T_FMT_AMPM':\n        return loc.LC_TIME.r\n      case 'ERA':\n      case 'ERA_YEAR':\n      case 'ERA_D_T_FMT':\n      case 'ERA_D_FMT':\n      case 'ERA_T_FMT':\n        // all fall-throughs\n        return loc.LC_TIME[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY]\n    if (item === 'CRNCYSTR') {\n      // alias\n      item = 'CURRENCY_SYMBOL'\n    }\n    switch (item) {\n      case 'INT_CURR_SYMBOL':\n      case 'CURRENCY_SYMBOL':\n      case 'MON_DECIMAL_POINT':\n      case 'MON_THOUSANDS_SEP':\n      case 'POSITIVE_SIGN':\n      case 'NEGATIVE_SIGN':\n      case 'INT_FRAC_DIGITS':\n      case 'FRAC_DIGITS':\n      case 'P_CS_PRECEDES':\n      case 'P_SEP_BY_SPACE':\n      case 'N_CS_PRECEDES':\n      case 'N_SEP_BY_SPACE':\n      case 'P_SIGN_POSN':\n      case 'N_SIGN_POSN':\n        // all fall-throughs\n        return loc.LC_MONETARY[item.toLowerCase()]\n      case 'MON_GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_MONETARY[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC]\n    switch (item) {\n      case 'RADIXCHAR':\n      case 'DECIMAL_POINT':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'THOUSEP':\n      case 'THOUSANDS_SEP':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_NUMERIC[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MESSAGES]\n    switch (item) {\n      case 'YESEXPR':\n      case 'NOEXPR':\n      case 'YESSTR':\n      case 'NOSTR':\n        // all fall-throughs\n        return loc.LC_MESSAGES[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE]\n    if (item === 'CODESET') {\n      return loc.LC_CTYPE[item]\n    }\n\n    return false\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/nl_langinfo/index.html","comments":1,"_id":"cinoeja1b006lou9yhz1tltjd","content":"module.exports = function nl_langinfo (item) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/nl_langinfo/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl_langinfo('DAY_1')\n  //   returns 1: 'Sunday'\n\n  var setlocale = require('../strings/setlocale')\n\n  setlocale('LC_ALL', 0) // Ensure locale data is available\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var loc = $locutus.php.locales[$locutus.php.localeCategories.LC_TIME]\n  if (item.indexOf('ABDAY_') === 0) {\n    return loc.LC_TIME.a[parseInt(item.replace(/^ABDAY_/, ''), 10) - 1]\n  } else if (item.indexOf('DAY_') === 0) {\n    return loc.LC_TIME.A[parseInt(item.replace(/^DAY_/, ''), 10) - 1]\n  } else if (item.indexOf('ABMON_') === 0) {\n    return loc.LC_TIME.b[parseInt(item.replace(/^ABMON_/, ''), 10) - 1]\n  } else if (item.indexOf('MON_') === 0) {\n    return loc.LC_TIME.B[parseInt(item.replace(/^MON_/, ''), 10) - 1]\n  } else {\n    switch (item) {\n      // More LC_TIME\n      case 'AM_STR':\n        return loc.LC_TIME.p[0]\n      case 'PM_STR':\n        return loc.LC_TIME.p[1]\n      case 'D_T_FMT':\n        return loc.LC_TIME.c\n      case 'D_FMT':\n        return loc.LC_TIME.x\n      case 'T_FMT':\n        return loc.LC_TIME.X\n      case 'T_FMT_AMPM':\n        return loc.LC_TIME.r\n      case 'ERA':\n      case 'ERA_YEAR':\n      case 'ERA_D_T_FMT':\n      case 'ERA_D_FMT':\n      case 'ERA_T_FMT':\n        // all fall-throughs\n        return loc.LC_TIME[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY]\n    if (item === 'CRNCYSTR') {\n      // alias\n      item = 'CURRENCY_SYMBOL'\n    }\n    switch (item) {\n      case 'INT_CURR_SYMBOL':\n      case 'CURRENCY_SYMBOL':\n      case 'MON_DECIMAL_POINT':\n      case 'MON_THOUSANDS_SEP':\n      case 'POSITIVE_SIGN':\n      case 'NEGATIVE_SIGN':\n      case 'INT_FRAC_DIGITS':\n      case 'FRAC_DIGITS':\n      case 'P_CS_PRECEDES':\n      case 'P_SEP_BY_SPACE':\n      case 'N_CS_PRECEDES':\n      case 'N_SEP_BY_SPACE':\n      case 'P_SIGN_POSN':\n      case 'N_SIGN_POSN':\n        // all fall-throughs\n        return loc.LC_MONETARY[item.toLowerCase()]\n      case 'MON_GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_MONETARY[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC]\n    switch (item) {\n      case 'RADIXCHAR':\n      case 'DECIMAL_POINT':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'THOUSEP':\n      case 'THOUSANDS_SEP':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_NUMERIC[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MESSAGES]\n    switch (item) {\n      case 'YESEXPR':\n      case 'NOEXPR':\n      case 'YESSTR':\n      case 'NOSTR':\n        // all fall-throughs\n        return loc.LC_MESSAGES[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE]\n    if (item === 'CODESET') {\n      return loc.LC_CTYPE[item]\n    }\n\n    return false\n  }\n}\n","excerpt":"","more":"module.exports = function nl_langinfo (item) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/nl_langinfo/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: nl_langinfo('DAY_1')\n  //   returns 1: 'Sunday'\n\n  var setlocale = require('../strings/setlocale')\n\n  setlocale('LC_ALL', 0) // Ensure locale data is available\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  var loc = $locutus.php.locales[$locutus.php.localeCategories.LC_TIME]\n  if (item.indexOf('ABDAY_') === 0) {\n    return loc.LC_TIME.a[parseInt(item.replace(/^ABDAY_/, ''), 10) - 1]\n  } else if (item.indexOf('DAY_') === 0) {\n    return loc.LC_TIME.A[parseInt(item.replace(/^DAY_/, ''), 10) - 1]\n  } else if (item.indexOf('ABMON_') === 0) {\n    return loc.LC_TIME.b[parseInt(item.replace(/^ABMON_/, ''), 10) - 1]\n  } else if (item.indexOf('MON_') === 0) {\n    return loc.LC_TIME.B[parseInt(item.replace(/^MON_/, ''), 10) - 1]\n  } else {\n    switch (item) {\n      // More LC_TIME\n      case 'AM_STR':\n        return loc.LC_TIME.p[0]\n      case 'PM_STR':\n        return loc.LC_TIME.p[1]\n      case 'D_T_FMT':\n        return loc.LC_TIME.c\n      case 'D_FMT':\n        return loc.LC_TIME.x\n      case 'T_FMT':\n        return loc.LC_TIME.X\n      case 'T_FMT_AMPM':\n        return loc.LC_TIME.r\n      case 'ERA':\n      case 'ERA_YEAR':\n      case 'ERA_D_T_FMT':\n      case 'ERA_D_FMT':\n      case 'ERA_T_FMT':\n        // all fall-throughs\n        return loc.LC_TIME[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MONETARY]\n    if (item === 'CRNCYSTR') {\n      // alias\n      item = 'CURRENCY_SYMBOL'\n    }\n    switch (item) {\n      case 'INT_CURR_SYMBOL':\n      case 'CURRENCY_SYMBOL':\n      case 'MON_DECIMAL_POINT':\n      case 'MON_THOUSANDS_SEP':\n      case 'POSITIVE_SIGN':\n      case 'NEGATIVE_SIGN':\n      case 'INT_FRAC_DIGITS':\n      case 'FRAC_DIGITS':\n      case 'P_CS_PRECEDES':\n      case 'P_SEP_BY_SPACE':\n      case 'N_CS_PRECEDES':\n      case 'N_SEP_BY_SPACE':\n      case 'P_SIGN_POSN':\n      case 'N_SIGN_POSN':\n        // all fall-throughs\n        return loc.LC_MONETARY[item.toLowerCase()]\n      case 'MON_GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_MONETARY[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_NUMERIC]\n    switch (item) {\n      case 'RADIXCHAR':\n      case 'DECIMAL_POINT':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'THOUSEP':\n      case 'THOUSANDS_SEP':\n        // Fall-through\n        return loc.LC_NUMERIC[item.toLowerCase()]\n      case 'GROUPING':\n        // Same as above, or return something different since this returns an array?\n        return loc.LC_NUMERIC[item.toLowerCase()]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_MESSAGES]\n    switch (item) {\n      case 'YESEXPR':\n      case 'NOEXPR':\n      case 'YESSTR':\n      case 'NOSTR':\n        // all fall-throughs\n        return loc.LC_MESSAGES[item]\n    }\n    loc = $locutus.php.locales[$locutus.php.localeCategories.LC_CTYPE]\n    if (item === 'CODESET') {\n      return loc.LC_CTYPE[item]\n    }\n\n    return false\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ord('K')","ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character"],"estarget":"es5","returns":["75","65536"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["incidence"]},"notes":[],"layout":"function","title":"php'sord in JavaScript","function":"ord","category":"strings","language":"php","alias":["/functions/php/ord/","/functions/strings/ord/","/php/ord/","/functions/ord/"],"_content":"module.exports = function ord (string) {\n  //  discuss at: http://locutusjs.io/php/ord/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: incidence\n  //   example 1: ord('K')\n  //   returns 1: 75\n  //   example 2: ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\n  //   returns 2: 65536\n\n  var str = string + ''\n  var code = str.charCodeAt(0)\n\n  if (code >= 0xD800 && code <= 0xDBFF) {\n    // High surrogate (could change last hex to 0xDB7F to treat\n    // high private surrogates as single characters)\n    var hi = code\n    if (str.length === 1) {\n      // This is just a high surrogate with no following low surrogate,\n      // so we return its value;\n      return code\n      // we could also throw an error as it is not a complete character,\n      // but someone may want to know\n    }\n    var low = str.charCodeAt(1)\n    return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000\n  }\n  if (code >= 0xDC00 && code <= 0xDFFF) {\n    // Low surrogate\n    // This is just a low surrogate with no preceding high surrogate,\n    // so we return its value;\n    return code\n    // we could also throw an error as it is not a complete character,\n    // but someone may want to know\n  }\n\n  return code\n}\n","source":"php/strings/ord.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ord('K')\n  - ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\nestarget: es5\nreturns:\n  - '75'\n  - '65536'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - incidence\nnotes: []\nlayout: function\ntitle: php'sord in JavaScript\nfunction: ord\ncategory: strings\nlanguage: php\npermalink: php/strings/ord/\nalias:\n  - /functions/php/ord/\n  - /functions/strings/ord/\n  - /php/ord/\n  - /functions/ord/\n---\nmodule.exports = function ord (string) {\n  //  discuss at: http://locutusjs.io/php/ord/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: incidence\n  //   example 1: ord('K')\n  //   returns 1: 75\n  //   example 2: ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\n  //   returns 2: 65536\n\n  var str = string + ''\n  var code = str.charCodeAt(0)\n\n  if (code >= 0xD800 && code <= 0xDBFF) {\n    // High surrogate (could change last hex to 0xDB7F to treat\n    // high private surrogates as single characters)\n    var hi = code\n    if (str.length === 1) {\n      // This is just a high surrogate with no following low surrogate,\n      // so we return its value;\n      return code\n      // we could also throw an error as it is not a complete character,\n      // but someone may want to know\n    }\n    var low = str.charCodeAt(1)\n    return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000\n  }\n  if (code >= 0xDC00 && code <= 0xDFFF) {\n    // Low surrogate\n    // This is just a low surrogate with no preceding high surrogate,\n    // so we return its value;\n    return code\n    // we could also throw an error as it is not a complete character,\n    // but someone may want to know\n  }\n\n  return code\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/ord/index.html","comments":1,"_id":"cinoeja1b006mou9ykhabbcof","content":"module.exports = function ord (string) {\n  //  discuss at: http://locutusjs.io/php/ord/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: incidence\n  //   example 1: ord('K')\n  //   returns 1: 75\n  //   example 2: ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\n  //   returns 2: 65536\n\n  var str = string + ''\n  var code = str.charCodeAt(0)\n\n  if (code >= 0xD800 && code <= 0xdbff)=\"\" {=\"\" high=\"\" surrogate=\"\" (could=\"\" change=\"\" last=\"\" hex=\"\" to=\"\" 0xdb7f=\"\" treat=\"\" private=\"\" surrogates=\"\" as=\"\" single=\"\" characters)=\"\" var=\"\" hi=\"code\" if=\"\" (str.length=\"==\" 1)=\"\" this=\"\" is=\"\" just=\"\" a=\"\" with=\"\" no=\"\" following=\"\" low=\"\" surrogate,=\"\" so=\"\" we=\"\" return=\"\" its=\"\" value;=\"\" code=\"\" could=\"\" also=\"\" throw=\"\" an=\"\" error=\"\" it=\"\" not=\"\" complete=\"\" character,=\"\" but=\"\" someone=\"\" may=\"\" want=\"\" know=\"\" }=\"\" ((hi=\"\" -=\"\" 0xd800)=\"\" *=\"\" 0x400)=\"\" +=\"\" (low=\"\" 0xdc00)=\"\" 0x10000=\"\" (code=\"\">= 0xDC00 && code </=>","excerpt":"","more":"module.exports = function ord (string) {\n  //  discuss at: http://locutusjs.io/php/ord/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: incidence\n  //   example 1: ord('K')\n  //   returns 1: 75\n  //   example 2: ord('\\uD800\\uDC00'); // surrogate pair to create a single Unicode character\n  //   returns 2: 65536\n\n  var str = string + ''\n  var code = str.charCodeAt(0)\n\n  if (code >= 0xD800 && code <= 0xDBFF) {\n    // High surrogate (could change last hex to 0xDB7F to treat\n    // high private surrogates as single characters)\n    var hi = code\n    if (str.length === 1) {\n      // This is just a high surrogate with no following low surrogate,\n      // so we return its value;\n      return code\n      // we could also throw an error as it is not a complete character,\n      // but someone may want to know\n    }\n    var low = str.charCodeAt(1)\n    return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000\n  }\n  if (code >= 0xDC00 && code <= 0xDFFF) {\n    // Low surrogate\n    // This is just a low surrogate with no preceding high surrogate,\n    // so we return its value;\n    return code\n    // we could also throw an error as it is not a complete character,\n    // but someone may want to know\n  }\n\n  return code\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $arr = {}\nparse_str('first=foo&second=bar', $arr)\nvar $result = $arr","var $arr = {}\nparse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\nvar $result = $arr","var $abc = {3:'a'}\nparse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\nvar $result = $abc"],"estarget":"es5","returns":["{ first: 'foo', second: 'bar' }","{ str_a: \"Jack and Jill didn't see the well.\" }","{\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}"],"dependencies":[],"authors":{"original by":["Cagri Ekin"],"improved by":["Michael White (http://getsprink.com)","Jack","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","stag019","Brett Zamir (http://brett-zamir.me)","MIO_KODUKI (http://mio-koduki.blogspot.com/)"],"input by":["Dreamer","Zaide (http://zaidesthings.com/)","David Pesta (http://davidpesta.com/)","jeicquest"]},"notes":["When no argument is specified, will put variables in global scope.\nWhen a particular argument has been passed, and the\nreturned value is different parse_str of PHP.\nFor example, a=b=c&d====c"],"layout":"function","title":"php'sparse_str in JavaScript","function":"parse_str","category":"strings","language":"php","alias":["/functions/php/parse_str/","/functions/strings/parse_str/","/php/parse_str/","/functions/parse_str/"],"_content":"module.exports = function parse_str (str, array) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_str/\n  //      original by: Cagri Ekin\n  //      improved by: Michael White (http://getsprink.com)\n  //      improved by: Jack\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: stag019\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  // reimplemented by: stag019\n  //         input by: Dreamer\n  //         input by: Zaide (http://zaidesthings.com/)\n  //         input by: David Pesta (http://davidpesta.com/)\n  //         input by: jeicquest\n  //           note 1: When no argument is specified, will put variables in global scope.\n  //           note 1: When a particular argument has been passed, and the\n  //           note 1: returned value is different parse_str of PHP.\n  //           note 1: For example, a=b=c&d====c\n  //        example 1: var $arr = {}\n  //        example 1: parse_str('first=foo&second=bar', $arr)\n  //        example 1: var $result = $arr\n  //        returns 1: { first: 'foo', second: 'bar' }\n  //        example 2: var $arr = {}\n  //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n  //        example 2: var $result = $arr\n  //        returns 2: { str_a: \"Jack and Jill didn't see the well.\" }\n  //        example 3: var $abc = {3:'a'}\n  //        example 3: parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n  //        example 3: var $result = $abc\n  //        returns 3: {\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}\n\n  var strArr = String(str).replace(/^&/, '').replace(/&$/, '').split('&')\n  var sal = strArr.length\n  var i\n  var j\n  var ct\n  var p\n  var lastObj\n  var obj\n  var undef\n  var chr\n  var tmp\n  var key\n  var value\n  var postLeftBracketPos\n  var keys\n  var keysLen\n\n  var _fixStr = function (str) {\n    return decodeURIComponent(str.replace(/\\+/g, '%20'))\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!array) {\n    array = $global\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split('=')\n    key = _fixStr(tmp[0])\n    value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n\n    while (key.charAt(0) === ' ') {\n      key = key.slice(1)\n    }\n    if (key.indexOf('\\x00') > -1) {\n      key = key.slice(0, key.indexOf('\\x00'))\n    }\n    if (key && key.charAt(0) !== '[') {\n      keys = []\n      postLeftBracketPos = 0\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === '[' && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1\n        } else if (key.charAt(j) === ']') {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1))\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos))\n            postLeftBracketPos = 0\n            if (key.charAt(j + 1) !== '[') {\n              break\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key]\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j)\n        if (chr === ' ' || chr === '.' || chr === '[') {\n          keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1)\n        }\n        if (chr === '[') {\n          break\n        }\n      }\n\n      obj = array\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, '').replace(/['\"]$/, '')\n        lastObj = obj\n        if ((key !== '' && key !== ' ') || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {}\n          }\n          obj = obj[key]\n        } else {\n          // To insert new dimension\n          ct = -1\n          for (p in obj) {\n            if (obj.hasOwnProperty(p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p\n              }\n            }\n          }\n          key = ct + 1\n        }\n      }\n      lastObj[key] = value\n    }\n  }\n}\n","source":"php/strings/parse_str.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $arr = {}\n    parse_str('first=foo&second=bar', $arr)\n    var $result = $arr\n  - |-\n    var $arr = {}\n    parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n    var $result = $arr\n  - |-\n    var $abc = {3:'a'}\n    parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n    var $result = $abc\nestarget: es5\nreturns:\n  - '{ first: ''foo'', second: ''bar'' }'\n  - '{ str_a: \"Jack and Jill didn''t see the well.\" }'\n  - '{\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}'\ndependencies: []\nauthors:\n  original by:\n    - Cagri Ekin\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - Jack\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - stag019\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'MIO_KODUKI (http://mio-koduki.blogspot.com/)'\n  input by:\n    - Dreamer\n    - 'Zaide (http://zaidesthings.com/)'\n    - 'David Pesta (http://davidpesta.com/)'\n    - jeicquest\nnotes:\n  - |-\n    When no argument is specified, will put variables in global scope.\n    When a particular argument has been passed, and the\n    returned value is different parse_str of PHP.\n    For example, a=b=c&d====c\nlayout: function\ntitle: php'sparse_str in JavaScript\nfunction: parse_str\ncategory: strings\nlanguage: php\npermalink: php/strings/parse_str/\nalias:\n  - /functions/php/parse_str/\n  - /functions/strings/parse_str/\n  - /php/parse_str/\n  - /functions/parse_str/\n---\nmodule.exports = function parse_str (str, array) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_str/\n  //      original by: Cagri Ekin\n  //      improved by: Michael White (http://getsprink.com)\n  //      improved by: Jack\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: stag019\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  // reimplemented by: stag019\n  //         input by: Dreamer\n  //         input by: Zaide (http://zaidesthings.com/)\n  //         input by: David Pesta (http://davidpesta.com/)\n  //         input by: jeicquest\n  //           note 1: When no argument is specified, will put variables in global scope.\n  //           note 1: When a particular argument has been passed, and the\n  //           note 1: returned value is different parse_str of PHP.\n  //           note 1: For example, a=b=c&d====c\n  //        example 1: var $arr = {}\n  //        example 1: parse_str('first=foo&second=bar', $arr)\n  //        example 1: var $result = $arr\n  //        returns 1: { first: 'foo', second: 'bar' }\n  //        example 2: var $arr = {}\n  //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n  //        example 2: var $result = $arr\n  //        returns 2: { str_a: \"Jack and Jill didn't see the well.\" }\n  //        example 3: var $abc = {3:'a'}\n  //        example 3: parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n  //        example 3: var $result = $abc\n  //        returns 3: {\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}\n\n  var strArr = String(str).replace(/^&/, '').replace(/&$/, '').split('&')\n  var sal = strArr.length\n  var i\n  var j\n  var ct\n  var p\n  var lastObj\n  var obj\n  var undef\n  var chr\n  var tmp\n  var key\n  var value\n  var postLeftBracketPos\n  var keys\n  var keysLen\n\n  var _fixStr = function (str) {\n    return decodeURIComponent(str.replace(/\\+/g, '%20'))\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!array) {\n    array = $global\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split('=')\n    key = _fixStr(tmp[0])\n    value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n\n    while (key.charAt(0) === ' ') {\n      key = key.slice(1)\n    }\n    if (key.indexOf('\\x00') > -1) {\n      key = key.slice(0, key.indexOf('\\x00'))\n    }\n    if (key && key.charAt(0) !== '[') {\n      keys = []\n      postLeftBracketPos = 0\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === '[' && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1\n        } else if (key.charAt(j) === ']') {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1))\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos))\n            postLeftBracketPos = 0\n            if (key.charAt(j + 1) !== '[') {\n              break\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key]\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j)\n        if (chr === ' ' || chr === '.' || chr === '[') {\n          keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1)\n        }\n        if (chr === '[') {\n          break\n        }\n      }\n\n      obj = array\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, '').replace(/['\"]$/, '')\n        lastObj = obj\n        if ((key !== '' && key !== ' ') || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {}\n          }\n          obj = obj[key]\n        } else {\n          // To insert new dimension\n          ct = -1\n          for (p in obj) {\n            if (obj.hasOwnProperty(p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p\n              }\n            }\n          }\n          key = ct + 1\n        }\n      }\n      lastObj[key] = value\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/parse_str/index.html","comments":1,"_id":"cinoeja1c006nou9ypb79lsa6","content":"module.exports = function parse_str (str, array) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_str/\n  //      original by: Cagri Ekin\n  //      improved by: Michael White (http://getsprink.com)\n  //      improved by: Jack\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: stag019\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  // reimplemented by: stag019\n  //         input by: Dreamer\n  //         input by: Zaide (http://zaidesthings.com/)\n  //         input by: David Pesta (http://davidpesta.com/)\n  //         input by: jeicquest\n  //           note 1: When no argument is specified, will put variables in global scope.\n  //           note 1: When a particular argument has been passed, and the\n  //           note 1: returned value is different parse_str of PHP.\n  //           note 1: For example, a=b=c&d====c\n  //        example 1: var $arr = {}\n  //        example 1: parse_str('first=foo&second=bar', $arr)\n  //        example 1: var $result = $arr\n  //        returns 1: { first: 'foo', second: 'bar' }\n  //        example 2: var $arr = {}\n  //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n  //        example 2: var $result = $arr\n  //        returns 2: { str_a: \"Jack and Jill didn't see the well.\" }\n  //        example 3: var $abc = {3:'a'}\n  //        example 3: parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n  //        example 3: var $result = $abc\n  //        returns 3: {\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}\n\n  var strArr = String(str).replace(/^&/, '').replace(/&$/, '').split('&')\n  var sal = strArr.length\n  var i\n  var j\n  var ct\n  var p\n  var lastObj\n  var obj\n  var undef\n  var chr\n  var tmp\n  var key\n  var value\n  var postLeftBracketPos\n  var keys\n  var keysLen\n\n  var _fixStr = function (str) {\n    return decodeURIComponent(str.replace(/\\+/g, '%20'))\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!array) {\n    array = $global\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split('=')\n    key = _fixStr(tmp[0])\n    value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n\n    while (key.charAt(0) === ' ') {\n      key = key.slice(1)\n    }\n    if (key.indexOf('\\x00') > -1) {\n      key = key.slice(0, key.indexOf('\\x00'))\n    }\n    if (key && key.charAt(0) !== '[') {\n      keys = []\n      postLeftBracketPos = 0\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === '[' && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1\n        } else if (key.charAt(j) === ']') {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1))\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos))\n            postLeftBracketPos = 0\n            if (key.charAt(j + 1) !== '[') {\n              break\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key]\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j)\n        if (chr === ' ' || chr === '.' || chr === '[') {\n          keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1)\n        }\n        if (chr === '[') {\n          break\n        }\n      }\n\n      obj = array\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, '').replace(/['\"]$/, '')\n        lastObj = obj\n        if ((key !== '' && key !== ' ') || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {}\n          }\n          obj = obj[key]\n        } else {\n          // To insert new dimension\n          ct = -1\n          for (p in obj) {\n            if (obj.hasOwnProperty(p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p\n              }\n            }\n          }\n          key = ct + 1\n        }\n      }\n      lastObj[key] = value\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function parse_str (str, array) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_str/\n  //      original by: Cagri Ekin\n  //      improved by: Michael White (http://getsprink.com)\n  //      improved by: Jack\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: stag019\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  // reimplemented by: stag019\n  //         input by: Dreamer\n  //         input by: Zaide (http://zaidesthings.com/)\n  //         input by: David Pesta (http://davidpesta.com/)\n  //         input by: jeicquest\n  //           note 1: When no argument is specified, will put variables in global scope.\n  //           note 1: When a particular argument has been passed, and the\n  //           note 1: returned value is different parse_str of PHP.\n  //           note 1: For example, a=b=c&d====c\n  //        example 1: var $arr = {}\n  //        example 1: parse_str('first=foo&second=bar', $arr)\n  //        example 1: var $result = $arr\n  //        returns 1: { first: 'foo', second: 'bar' }\n  //        example 2: var $arr = {}\n  //        example 2: parse_str('str_a=Jack+and+Jill+didn%27t+see+the+well.', $arr)\n  //        example 2: var $result = $arr\n  //        returns 2: { str_a: \"Jack and Jill didn't see the well.\" }\n  //        example 3: var $abc = {3:'a'}\n  //        example 3: parse_str('a[b][\"c\"]=def&a[q]=t+5', $abc)\n  //        example 3: var $result = $abc\n  //        returns 3: {\"3\":\"a\",\"a\":{\"b\":{\"c\":\"def\"},\"q\":\"t 5\"}}\n\n  var strArr = String(str).replace(/^&/, '').replace(/&$/, '').split('&')\n  var sal = strArr.length\n  var i\n  var j\n  var ct\n  var p\n  var lastObj\n  var obj\n  var undef\n  var chr\n  var tmp\n  var key\n  var value\n  var postLeftBracketPos\n  var keys\n  var keysLen\n\n  var _fixStr = function (str) {\n    return decodeURIComponent(str.replace(/\\+/g, '%20'))\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (!array) {\n    array = $global\n  }\n\n  for (i = 0; i < sal; i++) {\n    tmp = strArr[i].split('=')\n    key = _fixStr(tmp[0])\n    value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n\n    while (key.charAt(0) === ' ') {\n      key = key.slice(1)\n    }\n    if (key.indexOf('\\x00') > -1) {\n      key = key.slice(0, key.indexOf('\\x00'))\n    }\n    if (key && key.charAt(0) !== '[') {\n      keys = []\n      postLeftBracketPos = 0\n      for (j = 0; j < key.length; j++) {\n        if (key.charAt(j) === '[' && !postLeftBracketPos) {\n          postLeftBracketPos = j + 1\n        } else if (key.charAt(j) === ']') {\n          if (postLeftBracketPos) {\n            if (!keys.length) {\n              keys.push(key.slice(0, postLeftBracketPos - 1))\n            }\n            keys.push(key.substr(postLeftBracketPos, j - postLeftBracketPos))\n            postLeftBracketPos = 0\n            if (key.charAt(j + 1) !== '[') {\n              break\n            }\n          }\n        }\n      }\n      if (!keys.length) {\n        keys = [key]\n      }\n      for (j = 0; j < keys[0].length; j++) {\n        chr = keys[0].charAt(j)\n        if (chr === ' ' || chr === '.' || chr === '[') {\n          keys[0] = keys[0].substr(0, j) + '_' + keys[0].substr(j + 1)\n        }\n        if (chr === '[') {\n          break\n        }\n      }\n\n      obj = array\n      for (j = 0, keysLen = keys.length; j < keysLen; j++) {\n        key = keys[j].replace(/^['\"]/, '').replace(/['\"]$/, '')\n        lastObj = obj\n        if ((key !== '' && key !== ' ') || j === 0) {\n          if (obj[key] === undef) {\n            obj[key] = {}\n          }\n          obj = obj[key]\n        } else {\n          // To insert new dimension\n          ct = -1\n          for (p in obj) {\n            if (obj.hasOwnProperty(p)) {\n              if (+p > ct && p.match(/^\\d+$/g)) {\n                ct = +p\n              }\n            }\n          }\n          key = ct + 1\n        }\n      }\n      lastObj[key] = value\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["printf(\"%01.2f\", 123.1)"],"estarget":"es5","returns":["6"],"dependencies":[],"authors":{"original by":["Ash Searle (http://hexmen.com/blog/)"],"improved by":["Michael White (http://getsprink.com)","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sprintf in JavaScript","function":"printf","category":"strings","language":"php","alias":["/functions/php/printf/","/functions/strings/printf/","/php/printf/","/functions/printf/"],"_content":"module.exports = function printf () {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: printf(\"%01.2f\", 123.1)\n  //   returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, arguments)\n  echo(ret)\n  return ret.length\n}\n","source":"php/strings/printf.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'printf(\"%01.2f\", 123.1)'\nestarget: es5\nreturns:\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - 'Ash Searle (http://hexmen.com/blog/)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sprintf in JavaScript\nfunction: printf\ncategory: strings\nlanguage: php\npermalink: php/strings/printf/\nalias:\n  - /functions/php/printf/\n  - /functions/strings/printf/\n  - /php/printf/\n  - /functions/printf/\n---\nmodule.exports = function printf () {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: printf(\"%01.2f\", 123.1)\n  //   returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, arguments)\n  echo(ret)\n  return ret.length\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/printf/index.html","comments":1,"_id":"cinoeja1c006oou9y0mr0jsm7","content":"module.exports = function printf () {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: printf(\"%01.2f\", 123.1)\n  //   returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, arguments)\n  echo(ret)\n  return ret.length\n}\n","excerpt":"","more":"module.exports = function printf () {\n  //  discuss at: http://locutusjs.io/php/printf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: printf(\"%01.2f\", 123.1)\n  //   returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, arguments)\n  echo(ret)\n  return ret.length\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["quoted_printable_decode('a=3Db=3Dc')","quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')","quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')","quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")"],"estarget":"es5","returns":["'a=b=c'","'abc   \\r\\n123   \\r\\n'","'01234567890123456789012345678901234567890123456789012345678901234567890123456789'","'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'"],"dependencies":[],"authors":{"original by":["Ole Vrijenhoek"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'squoted_printable_decode in JavaScript","function":"quoted_printable_decode","category":"strings","language":"php","alias":["/functions/php/quoted_printable_decode/","/functions/strings/quoted_printable_decode/","/php/quoted_printable_decode/","/functions/quoted_printable_decode/"],"_content":"module.exports = function quoted_printable_decode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/quoted_printable_decode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Theriault (https://github.com/Theriault)\n  // reimplemented by: Theriault (https://github.com/Theriault)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: quoted_printable_decode('a=3Db=3Dc')\n  //        returns 1: 'a=b=c'\n  //        example 2: quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  //        returns 2: 'abc   \\r\\n123   \\r\\n'\n  //        example 3: quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  //        returns 3: '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  //        example 4: quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")\n  //        returns 4: 'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'\n\n  // Decodes all equal signs followed by two hex digits\n  var RFC2045Decode1 = /=\\r\\n/gm\n\n  // the RFC states against decoding lower case encodings, but following apparent PHP behavior\n  var RFC2045Decode2IN = /=([0-9A-F]{2})/gim\n  // RFC2045Decode2IN = /=([0-9A-F]{2})/gm,\n\n  var RFC2045Decode2OUT = function (sMatch, sHex) {\n    return String.fromCharCode(parseInt(sHex, 16))\n  }\n\n  return str.replace(RFC2045Decode1, '')\n    .replace(RFC2045Decode2IN, RFC2045Decode2OUT)\n}\n","source":"php/strings/quoted_printable_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - quoted_printable_decode('a=3Db=3Dc')\n  - quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  - >-\n    quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  - >-\n    quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur\n    adipisicing elit\")\nestarget: es5\nreturns:\n  - '''a=b=c'''\n  - '''abc   \\r\\n123   \\r\\n'''\n  - >-\n    '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  - '''Lorem ipsum dolor sit amet#, consectetur adipisicing elit'''\ndependencies: []\nauthors:\n  original by:\n    - Ole Vrijenhoek\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'squoted_printable_decode in JavaScript\nfunction: quoted_printable_decode\ncategory: strings\nlanguage: php\npermalink: php/strings/quoted_printable_decode/\nalias:\n  - /functions/php/quoted_printable_decode/\n  - /functions/strings/quoted_printable_decode/\n  - /php/quoted_printable_decode/\n  - /functions/quoted_printable_decode/\n---\nmodule.exports = function quoted_printable_decode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/quoted_printable_decode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Theriault (https://github.com/Theriault)\n  // reimplemented by: Theriault (https://github.com/Theriault)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: quoted_printable_decode('a=3Db=3Dc')\n  //        returns 1: 'a=b=c'\n  //        example 2: quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  //        returns 2: 'abc   \\r\\n123   \\r\\n'\n  //        example 3: quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  //        returns 3: '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  //        example 4: quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")\n  //        returns 4: 'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'\n\n  // Decodes all equal signs followed by two hex digits\n  var RFC2045Decode1 = /=\\r\\n/gm\n\n  // the RFC states against decoding lower case encodings, but following apparent PHP behavior\n  var RFC2045Decode2IN = /=([0-9A-F]{2})/gim\n  // RFC2045Decode2IN = /=([0-9A-F]{2})/gm,\n\n  var RFC2045Decode2OUT = function (sMatch, sHex) {\n    return String.fromCharCode(parseInt(sHex, 16))\n  }\n\n  return str.replace(RFC2045Decode1, '')\n    .replace(RFC2045Decode2IN, RFC2045Decode2OUT)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/quoted_printable_decode/index.html","comments":1,"_id":"cinoeja1c006pou9yt421qwh7","content":"module.exports = function quoted_printable_decode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/quoted_printable_decode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Theriault (https://github.com/Theriault)\n  // reimplemented by: Theriault (https://github.com/Theriault)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: quoted_printable_decode('a=3Db=3Dc')\n  //        returns 1: 'a=b=c'\n  //        example 2: quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  //        returns 2: 'abc   \\r\\n123   \\r\\n'\n  //        example 3: quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  //        returns 3: '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  //        example 4: quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")\n  //        returns 4: 'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'\n\n  // Decodes all equal signs followed by two hex digits\n  var RFC2045Decode1 = /=\\r\\n/gm\n\n  // the RFC states against decoding lower case encodings, but following apparent PHP behavior\n  var RFC2045Decode2IN = /=([0-9A-F]{2})/gim\n  // RFC2045Decode2IN = /=([0-9A-F]{2})/gm,\n\n  var RFC2045Decode2OUT = function (sMatch, sHex) {\n    return String.fromCharCode(parseInt(sHex, 16))\n  }\n\n  return str.replace(RFC2045Decode1, '')\n    .replace(RFC2045Decode2IN, RFC2045Decode2OUT)\n}\n","excerpt":"","more":"module.exports = function quoted_printable_decode (str) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/quoted_printable_decode/\n  //      original by: Ole Vrijenhoek\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Theriault (https://github.com/Theriault)\n  // reimplemented by: Theriault (https://github.com/Theriault)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: quoted_printable_decode('a=3Db=3Dc')\n  //        returns 1: 'a=b=c'\n  //        example 2: quoted_printable_decode('abc  =20\\r\\n123  =20\\r\\n')\n  //        returns 2: 'abc   \\r\\n123   \\r\\n'\n  //        example 3: quoted_printable_decode('012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n56789')\n  //        returns 3: '01234567890123456789012345678901234567890123456789012345678901234567890123456789'\n  //        example 4: quoted_printable_decode(\"Lorem ipsum dolor sit amet=23, consectetur adipisicing elit\")\n  //        returns 4: 'Lorem ipsum dolor sit amet#, consectetur adipisicing elit'\n\n  // Decodes all equal signs followed by two hex digits\n  var RFC2045Decode1 = /=\\r\\n/gm\n\n  // the RFC states against decoding lower case encodings, but following apparent PHP behavior\n  var RFC2045Decode2IN = /=([0-9A-F]{2})/gim\n  // RFC2045Decode2IN = /=([0-9A-F]{2})/gm,\n\n  var RFC2045Decode2OUT = function (sMatch, sHex) {\n    return String.fromCharCode(parseInt(sHex, 16))\n  }\n\n  return str.replace(RFC2045Decode1, '')\n    .replace(RFC2045Decode2IN, RFC2045Decode2OUT)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["quotemeta(\". + * ? ^ ( $ )\")"],"estarget":"es5","returns":["'\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":[],"layout":"function","title":"php'squotemeta in JavaScript","function":"quotemeta","category":"strings","language":"php","alias":["/functions/php/quotemeta/","/functions/strings/quotemeta/","/php/quotemeta/","/functions/quotemeta/"],"_content":"module.exports = function quotemeta (str) {\n  //  discuss at: http://locutusjs.io/php/quotemeta/\n  // original by: Paulo Freitas\n  //   example 1: quotemeta(\". + * ? ^ ( $ )\")\n  //   returns 1: '\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'\n\n  return (str + '')\n    .replace(/([\\.\\\\\\+\\*\\?\\[\\^\\]\\$\\(\\)])/g, '\\\\$1')\n}\n","source":"php/strings/quotemeta.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - quotemeta(\". + * ? ^ ( $ )\")\nestarget: es5\nreturns:\n  - '''\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'''\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes: []\nlayout: function\ntitle: php'squotemeta in JavaScript\nfunction: quotemeta\ncategory: strings\nlanguage: php\npermalink: php/strings/quotemeta/\nalias:\n  - /functions/php/quotemeta/\n  - /functions/strings/quotemeta/\n  - /php/quotemeta/\n  - /functions/quotemeta/\n---\nmodule.exports = function quotemeta (str) {\n  //  discuss at: http://locutusjs.io/php/quotemeta/\n  // original by: Paulo Freitas\n  //   example 1: quotemeta(\". + * ? ^ ( $ )\")\n  //   returns 1: '\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'\n\n  return (str + '')\n    .replace(/([\\.\\\\\\+\\*\\?\\[\\^\\]\\$\\(\\)])/g, '\\\\$1')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/quotemeta/index.html","comments":1,"_id":"cinoeja1d006qou9yh5tudmp6","content":"module.exports = function quotemeta (str) {\n  //  discuss at: http://locutusjs.io/php/quotemeta/\n  // original by: Paulo Freitas\n  //   example 1: quotemeta(\". + * ? ^ ( $ )\")\n  //   returns 1: '\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'\n\n  return (str + '')\n    .replace(/([\\.\\\\\\+\\*\\?\\[\\^\\]\\$\\(\\)])/g, '\\\\$1')\n}\n","excerpt":"","more":"module.exports = function quotemeta (str) {\n  //  discuss at: http://locutusjs.io/php/quotemeta/\n  // original by: Paulo Freitas\n  //   example 1: quotemeta(\". + * ? ^ ( $ )\")\n  //   returns 1: '\\\\. \\\\+ \\\\* \\\\? \\\\^ \\\\( \\\\$ \\\\)'\n\n  return (str + '')\n    .replace(/([\\.\\\\\\+\\*\\?\\[\\^\\]\\$\\(\\)])/g, '\\\\$1')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["quoted_printable_encode('a=b=c')","quoted_printable_encode('abc   \\r\\n123   \\r\\n')","quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')"],"estarget":"es5","returns":["'a=3Db=3Dc'","'abc  =20\\r\\n123  =20\\r\\n'","'012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'"],"dependencies":[],"authors":{"original by":["Theriault (https://github.com/Theriault)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Theriault (https://github.com/Theriault)"]},"notes":[],"layout":"function","title":"php'squoted_printable_encode in JavaScript","function":"quoted_printable_encode","category":"strings","language":"php","alias":["/functions/php/quoted_printable_encode/","/functions/strings/quoted_printable_encode/","/php/quoted_printable_encode/","/functions/quoted_printable_encode/"],"_content":"module.exports = function quoted_printable_encode (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/quoted_printable_encode/\n  // original by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: quoted_printable_encode('a=b=c')\n  //   returns 1: 'a=3Db=3Dc'\n  //   example 2: quoted_printable_encode('abc   \\r\\n123   \\r\\n')\n  //   returns 2: 'abc  =20\\r\\n123  =20\\r\\n'\n  //   example 3: quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')\n  //   returns 3: '012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'\n  //        test: skip-2\n\n  var hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n  var RFC2045Encode1IN = / \\r\\n|\\r\\n|[^!-<>-~ ]/gm\n  var RFC2045Encode1OUT = function (sMatch) {\n    // Encode space before CRLF sequence to prevent spaces from being stripped\n    // Keep hard line breaks intact; CRLF sequences\n    if (sMatch.length > 1) {\n      return sMatch.replace(' ', '=20')\n    }\n    // Encode matching character\n    var chr = sMatch.charCodeAt(0)\n    return '=' + hexChars[((chr >>> 4) & 15)] + hexChars[(chr & 15)]\n  }\n\n  // Split lines to 75 characters; the reason it's 75 and not 76 is because softline breaks are\n  // preceeded by an equal sign; which would be the 76th character. However, if the last line/string\n  // was exactly 76 characters, then a softline would not be needed. PHP currently softbreaks\n  // anyway; so this function replicates PHP.\n\n  var RFC2045Encode2IN = /.{1,72}(?!\\r\\n)[^=]{0,3}/g\n  var RFC2045Encode2OUT = function (sMatch) {\n    if (sMatch.substr(sMatch.length - 2) === '\\r\\n') {\n      return sMatch\n    }\n    return sMatch + '=\\r\\n'\n  }\n\n  str = str\n    .replace(RFC2045Encode1IN, RFC2045Encode1OUT)\n    .replace(RFC2045Encode2IN, RFC2045Encode2OUT)\n\n  // Strip last softline break\n  return str.substr(0, str.length - 3)\n}\n","source":"php/strings/quoted_printable_encode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - quoted_printable_encode('a=b=c')\n  - quoted_printable_encode('abc   \\r\\n123   \\r\\n')\n  - >-\n    quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')\nestarget: es5\nreturns:\n  - '''a=3Db=3Dc'''\n  - '''abc  =20\\r\\n123  =20\\r\\n'''\n  - >-\n    '012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'\ndependencies: []\nauthors:\n  original by:\n    - 'Theriault (https://github.com/Theriault)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Theriault (https://github.com/Theriault)'\nnotes: []\nlayout: function\ntitle: php'squoted_printable_encode in JavaScript\nfunction: quoted_printable_encode\ncategory: strings\nlanguage: php\npermalink: php/strings/quoted_printable_encode/\nalias:\n  - /functions/php/quoted_printable_encode/\n  - /functions/strings/quoted_printable_encode/\n  - /php/quoted_printable_encode/\n  - /functions/quoted_printable_encode/\n---\nmodule.exports = function quoted_printable_encode (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/quoted_printable_encode/\n  // original by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: quoted_printable_encode('a=b=c')\n  //   returns 1: 'a=3Db=3Dc'\n  //   example 2: quoted_printable_encode('abc   \\r\\n123   \\r\\n')\n  //   returns 2: 'abc  =20\\r\\n123  =20\\r\\n'\n  //   example 3: quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')\n  //   returns 3: '012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'\n  //        test: skip-2\n\n  var hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n  var RFC2045Encode1IN = / \\r\\n|\\r\\n|[^!-<>-~ ]/gm\n  var RFC2045Encode1OUT = function (sMatch) {\n    // Encode space before CRLF sequence to prevent spaces from being stripped\n    // Keep hard line breaks intact; CRLF sequences\n    if (sMatch.length > 1) {\n      return sMatch.replace(' ', '=20')\n    }\n    // Encode matching character\n    var chr = sMatch.charCodeAt(0)\n    return '=' + hexChars[((chr >>> 4) & 15)] + hexChars[(chr & 15)]\n  }\n\n  // Split lines to 75 characters; the reason it's 75 and not 76 is because softline breaks are\n  // preceeded by an equal sign; which would be the 76th character. However, if the last line/string\n  // was exactly 76 characters, then a softline would not be needed. PHP currently softbreaks\n  // anyway; so this function replicates PHP.\n\n  var RFC2045Encode2IN = /.{1,72}(?!\\r\\n)[^=]{0,3}/g\n  var RFC2045Encode2OUT = function (sMatch) {\n    if (sMatch.substr(sMatch.length - 2) === '\\r\\n') {\n      return sMatch\n    }\n    return sMatch + '=\\r\\n'\n  }\n\n  str = str\n    .replace(RFC2045Encode1IN, RFC2045Encode1OUT)\n    .replace(RFC2045Encode2IN, RFC2045Encode2OUT)\n\n  // Strip last softline break\n  return str.substr(0, str.length - 3)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/quoted_printable_encode/index.html","comments":1,"_id":"cinoeja1d006rou9yl0e40j5p","content":"module.exports = function quoted_printable_encode (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/quoted_printable_encode/\n  // original by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: quoted_printable_encode('a=b=c')\n  //   returns 1: 'a=3Db=3Dc'\n  //   example 2: quoted_printable_encode('abc   \\r\\n123   \\r\\n')\n  //   returns 2: 'abc  =20\\r\\n123  =20\\r\\n'\n  //   example 3: quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')\n  //   returns 3: '012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'\n  //        test: skip-2\n\n  var hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n  var RFC2045Encode1IN = / \\r\\n|\\r\\n|[^!-<>-~ ]/gm\n  var RFC2045Encode1OUT = function (sMatch) {\n    // Encode space before CRLF sequence to prevent spaces from being stripped\n    // Keep hard line breaks intact; CRLF sequences\n    if (sMatch.length > 1) {\n      return sMatch.replace(' ', '=20')\n    }\n    // Encode matching character\n    var chr = sMatch.charCodeAt(0)\n    return '=' + hexChars[((chr >>> 4) & 15)] + hexChars[(chr & 15)]\n  }\n\n  // Split lines to 75 characters; the reason it's 75 and not 76 is because softline breaks are\n  // preceeded by an equal sign; which would be the 76th character. However, if the last line/string\n  // was exactly 76 characters, then a softline would not be needed. PHP currently softbreaks\n  // anyway; so this function replicates PHP.\n\n  var RFC2045Encode2IN = /.{1,72}(?!\\r\\n)[^=]{0,3}/g\n  var RFC2045Encode2OUT = function (sMatch) {\n    if (sMatch.substr(sMatch.length - 2) === '\\r\\n') {\n      return sMatch\n    }\n    return sMatch + '=\\r\\n'\n  }\n\n  str = str\n    .replace(RFC2045Encode1IN, RFC2045Encode1OUT)\n    .replace(RFC2045Encode2IN, RFC2045Encode2OUT)\n\n  // Strip last softline break\n  return str.substr(0, str.length - 3)\n}\n","excerpt":"","more":"module.exports = function quoted_printable_encode (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/quoted_printable_encode/\n  // original by: Theriault (https://github.com/Theriault)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  //   example 1: quoted_printable_encode('a=b=c')\n  //   returns 1: 'a=3Db=3Dc'\n  //   example 2: quoted_printable_encode('abc   \\r\\n123   \\r\\n')\n  //   returns 2: 'abc  =20\\r\\n123  =20\\r\\n'\n  //   example 3: quoted_printable_encode('0123456789012345678901234567890123456789012345678901234567890123456789012345')\n  //   returns 3: '012345678901234567890123456789012345678901234567890123456789012345678901234=\\r\\n5'\n  //        test: skip-2\n\n  var hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F']\n  var RFC2045Encode1IN = / \\r\\n|\\r\\n|[^!-<>-~ ]/gm\n  var RFC2045Encode1OUT = function (sMatch) {\n    // Encode space before CRLF sequence to prevent spaces from being stripped\n    // Keep hard line breaks intact; CRLF sequences\n    if (sMatch.length > 1) {\n      return sMatch.replace(' ', '=20')\n    }\n    // Encode matching character\n    var chr = sMatch.charCodeAt(0)\n    return '=' + hexChars[((chr >>> 4) & 15)] + hexChars[(chr & 15)]\n  }\n\n  // Split lines to 75 characters; the reason it's 75 and not 76 is because softline breaks are\n  // preceeded by an equal sign; which would be the 76th character. However, if the last line/string\n  // was exactly 76 characters, then a softline would not be needed. PHP currently softbreaks\n  // anyway; so this function replicates PHP.\n\n  var RFC2045Encode2IN = /.{1,72}(?!\\r\\n)[^=]{0,3}/g\n  var RFC2045Encode2OUT = function (sMatch) {\n    if (sMatch.substr(sMatch.length - 2) === '\\r\\n') {\n      return sMatch\n    }\n    return sMatch + '=\\r\\n'\n  }\n\n  str = str\n    .replace(RFC2045Encode1IN, RFC2045Encode1OUT)\n    .replace(RFC2045Encode2IN, RFC2045Encode2OUT)\n\n  // Strip last softline break\n  return str.substr(0, str.length - 3)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["rtrim('    Kevin van Zonneveld    ')"],"estarget":"es5","returns":["'    Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"input by":["Erkekjetter","rem"]},"notes":[],"layout":"function","title":"php'srtrim in JavaScript","function":"rtrim","category":"strings","language":"php","alias":["/functions/php/rtrim/","/functions/strings/rtrim/","/php/rtrim/","/functions/rtrim/"],"_content":"module.exports = function rtrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/rtrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  //    input by: rem\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rtrim('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '\\\\$1')\n\n  var re = new RegExp('[' + charlist + ']+$', 'g')\n\n  return (str + '').replace(re, '')\n}\n","source":"php/strings/rtrim.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - rtrim('    Kevin van Zonneveld    ')\nestarget: es5\nreturns:\n  - '''    Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Erkekjetter\n    - rem\nnotes: []\nlayout: function\ntitle: php'srtrim in JavaScript\nfunction: rtrim\ncategory: strings\nlanguage: php\npermalink: php/strings/rtrim/\nalias:\n  - /functions/php/rtrim/\n  - /functions/strings/rtrim/\n  - /php/rtrim/\n  - /functions/rtrim/\n---\nmodule.exports = function rtrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/rtrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  //    input by: rem\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rtrim('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '\\\\$1')\n\n  var re = new RegExp('[' + charlist + ']+$', 'g')\n\n  return (str + '').replace(re, '')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/rtrim/index.html","comments":1,"_id":"cinoeja1d006sou9yh0se0t76","content":"module.exports = function rtrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/rtrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  //    input by: rem\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rtrim('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '\\\\$1')\n\n  var re = new RegExp('[' + charlist + ']+$', 'g')\n\n  return (str + '').replace(re, '')\n}\n","excerpt":"","more":"module.exports = function rtrim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/rtrim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Erkekjetter\n  //    input by: rem\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: rtrim('    Kevin van Zonneveld    ')\n  //   returns 1: '    Kevin van Zonneveld'\n\n  charlist = !charlist ? ' \\\\s\\u00A0' : (charlist + '')\n    .replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '\\\\$1')\n\n  var re = new RegExp('[' + charlist + ']+$', 'g')\n\n  return (str + '').replace(re, '')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["setlocale('LC_ALL', 'en_US')"],"estarget":"es5","returns":["'en_US'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","Blues (http://hacks.bluesmoon.info/strftime/strftime.js)","YUI Library (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)"]},"notes":["Is extensible, but currently only implements locales en,\nen_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\nC and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\nUses global: locutus to store locale info\nConsider using http://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())","This function tries to establish the locale via the `window` global.\nThis feature will not work in Node and hence is Browser-only"],"layout":"function","title":"php'ssetlocale in JavaScript","function":"setlocale","category":"strings","language":"php","alias":["/functions/php/setlocale/","/functions/strings/setlocale/","/php/setlocale/","/functions/setlocale/"],"_content":"module.exports = function setlocale (category, locale) {\n  //  discuss at: http://locutusjs.io/php/setlocale/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Blues (http://hacks.bluesmoon.info/strftime/strftime.js)\n  // original by: YUI Library (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\n  //      note 1: Is extensible, but currently only implements locales en,\n  //      note 1: en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n  //      note 1: C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n  //      note 1: Uses global: locutus to store locale info\n  //      note 1: Consider using http://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())\n  //      note 2: This function tries to establish the locale via the `window` global.\n  //      note 2: This feature will not work in Node and hence is Browser-only\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   returns 1: 'en_US'\n\n  var getenv = require('../info/getenv')\n\n  var categ = ''\n  var cats = []\n  var i = 0\n\n  var _copy = function _copy (orig) {\n    if (orig instanceof RegExp) {\n      return new RegExp(orig)\n    } else if (orig instanceof Date) {\n      return new Date(orig)\n    }\n    var newObj = {}\n    for (var i in orig) {\n      if (typeof orig[i] === 'object') {\n        newObj[i] = _copy(orig[i])\n      } else {\n        newObj[i] = orig[i]\n      }\n    }\n    return newObj\n  }\n\n  // Function usable by a ngettext implementation (apparently not an accessible part of setlocale(),\n  // but locale-specific) See http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms\n  // though amended with others from https://developer.mozilla.org/En/Localization_and_Plurals (new\n  // categories noted with \"MDC\" below, though not sure of whether there is a convention for the\n  // relative order of these newer groups as far as ngettext) The function name indicates the number\n  // of plural forms (nplural) Need to look into http://cldr.unicode.org/ (maybe future JavaScript);\n  // Dojo has some functions (under new BSD), including JSON conversions of LDML XML from CLDR:\n  // http://bugs.dojotoolkit.org/browser/dojo/trunk/cldr and docs at\n  // http://api.dojotoolkit.org/jsdoc/HEAD/dojo.cldr\n\n  // var _nplurals1 = function (n) {\n  //   // e.g., Japanese\n  //   return 0\n  // }\n  var _nplurals2a = function (n) {\n    // e.g., English\n    return n !== 1 ? 1 : 0\n  }\n  var _nplurals2b = function (n) {\n    // e.g., French\n    return n > 1 ? 1 : 0\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Reconcile Windows vs. *nix locale names?\n  // Allow different priority orders of languages, esp. if implement gettext as in\n  // LANGUAGE env. var.? (e.g., show German if French is not available)\n  if (!$locutus.php.locales ||\n    !$locutus.php.locales.fr_CA ||\n    !$locutus.php.locales.fr_CA.LC_TIME ||\n    !$locutus.php.locales.fr_CA.LC_TIME.x) {\n    // Can add to the locales\n    $locutus.php.locales = {}\n\n    $locutus.php.locales.en = {\n      'LC_COLLATE': function (str1, str2) {\n        // @todo: This one taken from strcmp, but need for other locales; we don't use localeCompare\n        // since its locale is not settable\n        return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n      },\n      'LC_CTYPE': {\n        // Need to change any of these for English as opposed to C?\n        an: /^[A-Za-z\\d]+$/g,\n        al: /^[A-Za-z]+$/g,\n        ct: /^[\\u0000-\\u001F\\u007F]+$/g,\n        dg: /^[\\d]+$/g,\n        gr: /^[\\u0021-\\u007E]+$/g,\n        lw: /^[a-z]+$/g,\n        pr: /^[\\u0020-\\u007E]+$/g,\n        pu: /^[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E]+$/g,\n        sp: /^[\\f\\n\\r\\t\\v ]+$/g,\n        up: /^[A-Z]+$/g,\n        xd: /^[A-Fa-f\\d]+$/g,\n        CODESET: 'UTF-8',\n        // Used by sql_regcase\n        lower: 'abcdefghijklmnopqrstuvwxyz',\n        upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n      },\n      'LC_TIME': {\n        // Comments include nl_langinfo() constant equivalents and any\n        // changes from Blues' implementation\n        a: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        // ABDAY_\n        A: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        // DAY_\n        b: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        // ABMON_\n        B: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n          'August', 'September', 'October',\n          'November', 'December'\n        ],\n        // MON_\n        c: '%a %d %b %Y %r %Z',\n        // D_T_FMT // changed %T to %r per results\n        p: ['AM', 'PM'],\n        // AM_STR/PM_STR\n        P: ['am', 'pm'],\n        // Not available in nl_langinfo()\n        r: '%I:%M:%S %p',\n        // T_FMT_AMPM (Fixed for all locales)\n        x: '%m/%d/%Y',\n        // D_FMT // switched order of %m and %d; changed %y to %Y (C uses %y)\n        X: '%r',\n        // T_FMT // changed from %T to %r  (%T is default for C, not English US)\n        // Following are from nl_langinfo() or http://www.cptec.inpe.br/sx4/sx4man2/g1ab02e/strftime.4.html\n        alt_digits: '',\n        // e.g., ordinal\n        ERA: '',\n        ERA_YEAR: '',\n        ERA_D_T_FMT: '',\n        ERA_D_FMT: '',\n        ERA_T_FMT: ''\n      },\n      // Assuming distinction between numeric and monetary is thus:\n      // See below for C locale\n      'LC_MONETARY': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        int_curr_symbol: 'USD',\n        currency_symbol: '$',\n        mon_decimal_point: '.',\n        mon_thousands_sep: ',',\n        mon_grouping: [3],\n        // use mon_thousands_sep; \"\" for no grouping; additional array members\n        // indicate successive group lengths after first group\n        // (e.g., if to be 1,23,456, could be [3, 2])\n        positive_sign: '',\n        negative_sign: '-',\n        int_frac_digits: 2,\n        // Fractional digits only for money defaults?\n        frac_digits: 2,\n        p_cs_precedes: 1,\n        // positive currency symbol follows value = 0; precedes value = 1\n        p_sep_by_space: 0,\n        // 0: no space between curr. symbol and value; 1: space sep. them unless symb.\n        // and sign are adjacent then space sep. them from value; 2: space sep. sign\n        // and value unless symb. and sign are adjacent then space separates\n        n_cs_precedes: 1,\n        // see p_cs_precedes\n        n_sep_by_space: 0,\n        // see p_sep_by_space\n        p_sign_posn: 3,\n        // 0: parentheses surround quantity and curr. symbol; 1: sign precedes them;\n        // 2: sign follows them; 3: sign immed. precedes curr. symbol; 4: sign immed.\n        // succeeds curr. symbol\n        n_sign_posn: 0 // see p_sign_posn\n      },\n      'LC_NUMERIC': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        decimal_point: '.',\n        thousands_sep: ',',\n        grouping: [3] // see mon_grouping, but for non-monetary values (use thousands_sep)\n      },\n      'LC_MESSAGES': {\n        YESEXPR: '^[yY].*',\n        NOEXPR: '^[nN].*',\n        YESSTR: '',\n        NOSTR: ''\n      },\n      nplurals: _nplurals2a\n    }\n    $locutus.php.locales.en_US = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_US.LC_TIME.c = '%a %d %b %Y %r %Z'\n    $locutus.php.locales.en_US.LC_TIME.x = '%D'\n    $locutus.php.locales.en_US.LC_TIME.X = '%r'\n    // The following are based on *nix settings\n    $locutus.php.locales.en_US.LC_MONETARY.int_curr_symbol = 'USD '\n    $locutus.php.locales.en_US.LC_MONETARY.p_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.n_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.mon_grouping = [3, 3]\n    $locutus.php.locales.en_US.LC_NUMERIC.thousands_sep = ''\n    $locutus.php.locales.en_US.LC_NUMERIC.grouping = []\n\n    $locutus.php.locales.en_GB = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_GB.LC_TIME.r = '%l:%M:%S %P %Z'\n\n    $locutus.php.locales.en_AU = _copy($locutus.php.locales.en_GB)\n    // Assume C locale is like English (?) (We need C locale for LC_CTYPE)\n    $locutus.php.locales.C = _copy($locutus.php.locales.en)\n    $locutus.php.locales.C.LC_CTYPE.CODESET = 'ANSI_X3.4-1968'\n    $locutus.php.locales.C.LC_MONETARY = {\n      int_curr_symbol: '',\n      currency_symbol: '',\n      mon_decimal_point: '',\n      mon_thousands_sep: '',\n      mon_grouping: [],\n      p_cs_precedes: 127,\n      p_sep_by_space: 127,\n      n_cs_precedes: 127,\n      n_sep_by_space: 127,\n      p_sign_posn: 127,\n      n_sign_posn: 127,\n      positive_sign: '',\n      negative_sign: '',\n      int_frac_digits: 127,\n      frac_digits: 127\n    }\n    $locutus.php.locales.C.LC_NUMERIC = {\n      decimal_point: '.',\n      thousands_sep: '',\n      grouping: []\n    }\n    // D_T_FMT\n    $locutus.php.locales.C.LC_TIME.c = '%a %b %e %H:%M:%S %Y'\n    // D_FMT\n    $locutus.php.locales.C.LC_TIME.x = '%m/%d/%y'\n    // T_FMT\n    $locutus.php.locales.C.LC_TIME.X = '%H:%M:%S'\n    $locutus.php.locales.C.LC_MESSAGES.YESEXPR = '^[yY]'\n    $locutus.php.locales.C.LC_MESSAGES.NOEXPR = '^[nN]'\n\n    $locutus.php.locales.fr = _copy($locutus.php.locales.en)\n    $locutus.php.locales.fr.nplurals = _nplurals2b\n    $locutus.php.locales.fr.LC_TIME.a = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam']\n    $locutus.php.locales.fr.LC_TIME.A = ['dimanche', 'lundi', 'mardi', 'mercredi',\n      'jeudi', 'vendredi', 'samedi']\n    $locutus.php.locales.fr.LC_TIME.b = ['jan', 'f\\u00E9v', 'mar', 'avr', 'mai',\n      'jun', 'jui', 'ao\\u00FB', 'sep', 'oct',\n      'nov', 'd\\u00E9c'\n    ]\n    $locutus.php.locales.fr.LC_TIME.B = ['janvier', 'f\\u00E9vrier', 'mars',\n      'avril', 'mai', 'juin', 'juillet', 'ao\\u00FBt',\n      'septembre', 'octobre', 'novembre', 'd\\u00E9cembre'\n    ]\n    $locutus.php.locales.fr.LC_TIME.c = '%a %d %b %Y %T %Z'\n    $locutus.php.locales.fr.LC_TIME.p = ['', '']\n    $locutus.php.locales.fr.LC_TIME.P = ['', '']\n    $locutus.php.locales.fr.LC_TIME.x = '%d.%m.%Y'\n    $locutus.php.locales.fr.LC_TIME.X = '%T'\n\n    $locutus.php.locales.fr_CA = _copy($locutus.php.locales.fr)\n    $locutus.php.locales.fr_CA.LC_TIME.x = '%Y-%m-%d'\n  }\n  if (!$locutus.php.locale) {\n    $locutus.php.locale = 'en_US'\n    // Try to establish the locale via the `window` global\n    if (typeof window !== 'undefined' && window.document) {\n      var d = window.document\n      var NS_XHTML = 'http://www.w3.org/1999/xhtml'\n      var NS_XML = 'http://www.w3.org/XML/1998/namespace'\n      if (d.getElementsByTagNameNS &&\n        d.getElementsByTagNameNS(NS_XHTML, 'html')[0]) {\n        if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS &&\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')) {\n          $locutus.php.locale = d.getElementsByTagName(NS_XHTML, 'html')[0]\n            .getAttributeNS(NS_XML, 'lang')\n        } else if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang) {\n          // XHTML 1.0 only\n          $locutus.php.locale = d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang\n        }\n      } else if (d.getElementsByTagName('html')[0] &&\n        d.getElementsByTagName('html')[0].lang) {\n        $locutus.php.locale = d.getElementsByTagName('html')[0].lang\n      }\n    }\n  }\n  // PHP-style\n  $locutus.php.locale = $locutus.php.locale.replace('-', '_')\n  // @todo: locale if declared locale hasn't been defined\n  if (!($locutus.php.locale in $locutus.php.locales)) {\n    if ($locutus.php.locale.replace(/_[a-zA-Z]+$/, '') in $locutus.php.locales) {\n      $locutus.php.locale = $locutus.php.locale.replace(/_[a-zA-Z]+$/, '')\n    }\n  }\n\n  if (!$locutus.php.localeCategories) {\n    $locutus.php.localeCategories = {\n      'LC_COLLATE': $locutus.php.locale,\n      // for string comparison, see strcoll()\n      'LC_CTYPE': $locutus.php.locale,\n      // for character classification and conversion, for example strtoupper()\n      'LC_MONETARY': $locutus.php.locale,\n      // for localeconv()\n      'LC_NUMERIC': $locutus.php.locale,\n      // for decimal separator (See also localeconv())\n      'LC_TIME': $locutus.php.locale,\n      // for date and time formatting with strftime()\n      // for system responses (available if PHP was compiled with libintl):\n      'LC_MESSAGES': $locutus.php.locale\n    }\n  }\n\n  if (locale === null || locale === '') {\n    locale = getenv(category) || getenv('LANG')\n  } else if (Object.prototype.toString.call(locale) === '[object Array]') {\n    for (i = 0; i < locale.length; i++) {\n      if (!(locale[i] in $locutus.php.locales)) {\n        if (i === locale.length - 1) {\n          // none found\n          return false\n        }\n        continue\n      }\n      locale = locale[i]\n      break\n    }\n  }\n\n  // Just get the locale\n  if (locale === '0' || locale === 0) {\n    if (category === 'LC_ALL') {\n      for (categ in $locutus.php.localeCategories) {\n        // Add \".UTF-8\" or allow \".@latint\", etc. to the end?\n        cats.push(categ + '=' + $locutus.php.localeCategories[categ])\n      }\n      return cats.join(';')\n    }\n    return $locutus.php.localeCategories[category]\n  }\n\n  if (!(locale in $locutus.php.locales)) {\n    // Locale not found\n    return false\n  }\n\n  // Set and get locale\n  if (category === 'LC_ALL') {\n    for (categ in $locutus.php.localeCategories) {\n      $locutus.php.localeCategories[categ] = locale\n    }\n  } else {\n    $locutus.php.localeCategories[category] = locale\n  }\n\n  return locale\n}\n","source":"php/strings/setlocale.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'setlocale(''LC_ALL'', ''en_US'')'\nestarget: es5\nreturns:\n  - '''en_US'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Blues (http://hacks.bluesmoon.info/strftime/strftime.js)'\n    - >-\n      YUI Library\n      (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\nnotes:\n  - >-\n    Is extensible, but currently only implements locales en,\n\n    en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n\n    C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n\n    Uses global: locutus to store locale info\n\n    Consider using http://demo.icu-project.org/icu-bin/locexp as basis for\n    localization (as in i18n_loc_set_default())\n  - |-\n    This function tries to establish the locale via the `window` global.\n    This feature will not work in Node and hence is Browser-only\nlayout: function\ntitle: php'ssetlocale in JavaScript\nfunction: setlocale\ncategory: strings\nlanguage: php\npermalink: php/strings/setlocale/\nalias:\n  - /functions/php/setlocale/\n  - /functions/strings/setlocale/\n  - /php/setlocale/\n  - /functions/setlocale/\n---\nmodule.exports = function setlocale (category, locale) {\n  //  discuss at: http://locutusjs.io/php/setlocale/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Blues (http://hacks.bluesmoon.info/strftime/strftime.js)\n  // original by: YUI Library (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\n  //      note 1: Is extensible, but currently only implements locales en,\n  //      note 1: en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n  //      note 1: C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n  //      note 1: Uses global: locutus to store locale info\n  //      note 1: Consider using http://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())\n  //      note 2: This function tries to establish the locale via the `window` global.\n  //      note 2: This feature will not work in Node and hence is Browser-only\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   returns 1: 'en_US'\n\n  var getenv = require('../info/getenv')\n\n  var categ = ''\n  var cats = []\n  var i = 0\n\n  var _copy = function _copy (orig) {\n    if (orig instanceof RegExp) {\n      return new RegExp(orig)\n    } else if (orig instanceof Date) {\n      return new Date(orig)\n    }\n    var newObj = {}\n    for (var i in orig) {\n      if (typeof orig[i] === 'object') {\n        newObj[i] = _copy(orig[i])\n      } else {\n        newObj[i] = orig[i]\n      }\n    }\n    return newObj\n  }\n\n  // Function usable by a ngettext implementation (apparently not an accessible part of setlocale(),\n  // but locale-specific) See http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms\n  // though amended with others from https://developer.mozilla.org/En/Localization_and_Plurals (new\n  // categories noted with \"MDC\" below, though not sure of whether there is a convention for the\n  // relative order of these newer groups as far as ngettext) The function name indicates the number\n  // of plural forms (nplural) Need to look into http://cldr.unicode.org/ (maybe future JavaScript);\n  // Dojo has some functions (under new BSD), including JSON conversions of LDML XML from CLDR:\n  // http://bugs.dojotoolkit.org/browser/dojo/trunk/cldr and docs at\n  // http://api.dojotoolkit.org/jsdoc/HEAD/dojo.cldr\n\n  // var _nplurals1 = function (n) {\n  //   // e.g., Japanese\n  //   return 0\n  // }\n  var _nplurals2a = function (n) {\n    // e.g., English\n    return n !== 1 ? 1 : 0\n  }\n  var _nplurals2b = function (n) {\n    // e.g., French\n    return n > 1 ? 1 : 0\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Reconcile Windows vs. *nix locale names?\n  // Allow different priority orders of languages, esp. if implement gettext as in\n  // LANGUAGE env. var.? (e.g., show German if French is not available)\n  if (!$locutus.php.locales ||\n    !$locutus.php.locales.fr_CA ||\n    !$locutus.php.locales.fr_CA.LC_TIME ||\n    !$locutus.php.locales.fr_CA.LC_TIME.x) {\n    // Can add to the locales\n    $locutus.php.locales = {}\n\n    $locutus.php.locales.en = {\n      'LC_COLLATE': function (str1, str2) {\n        // @todo: This one taken from strcmp, but need for other locales; we don't use localeCompare\n        // since its locale is not settable\n        return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n      },\n      'LC_CTYPE': {\n        // Need to change any of these for English as opposed to C?\n        an: /^[A-Za-z\\d]+$/g,\n        al: /^[A-Za-z]+$/g,\n        ct: /^[\\u0000-\\u001F\\u007F]+$/g,\n        dg: /^[\\d]+$/g,\n        gr: /^[\\u0021-\\u007E]+$/g,\n        lw: /^[a-z]+$/g,\n        pr: /^[\\u0020-\\u007E]+$/g,\n        pu: /^[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E]+$/g,\n        sp: /^[\\f\\n\\r\\t\\v ]+$/g,\n        up: /^[A-Z]+$/g,\n        xd: /^[A-Fa-f\\d]+$/g,\n        CODESET: 'UTF-8',\n        // Used by sql_regcase\n        lower: 'abcdefghijklmnopqrstuvwxyz',\n        upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n      },\n      'LC_TIME': {\n        // Comments include nl_langinfo() constant equivalents and any\n        // changes from Blues' implementation\n        a: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        // ABDAY_\n        A: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        // DAY_\n        b: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        // ABMON_\n        B: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n          'August', 'September', 'October',\n          'November', 'December'\n        ],\n        // MON_\n        c: '%a %d %b %Y %r %Z',\n        // D_T_FMT // changed %T to %r per results\n        p: ['AM', 'PM'],\n        // AM_STR/PM_STR\n        P: ['am', 'pm'],\n        // Not available in nl_langinfo()\n        r: '%I:%M:%S %p',\n        // T_FMT_AMPM (Fixed for all locales)\n        x: '%m/%d/%Y',\n        // D_FMT // switched order of %m and %d; changed %y to %Y (C uses %y)\n        X: '%r',\n        // T_FMT // changed from %T to %r  (%T is default for C, not English US)\n        // Following are from nl_langinfo() or http://www.cptec.inpe.br/sx4/sx4man2/g1ab02e/strftime.4.html\n        alt_digits: '',\n        // e.g., ordinal\n        ERA: '',\n        ERA_YEAR: '',\n        ERA_D_T_FMT: '',\n        ERA_D_FMT: '',\n        ERA_T_FMT: ''\n      },\n      // Assuming distinction between numeric and monetary is thus:\n      // See below for C locale\n      'LC_MONETARY': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        int_curr_symbol: 'USD',\n        currency_symbol: '$',\n        mon_decimal_point: '.',\n        mon_thousands_sep: ',',\n        mon_grouping: [3],\n        // use mon_thousands_sep; \"\" for no grouping; additional array members\n        // indicate successive group lengths after first group\n        // (e.g., if to be 1,23,456, could be [3, 2])\n        positive_sign: '',\n        negative_sign: '-',\n        int_frac_digits: 2,\n        // Fractional digits only for money defaults?\n        frac_digits: 2,\n        p_cs_precedes: 1,\n        // positive currency symbol follows value = 0; precedes value = 1\n        p_sep_by_space: 0,\n        // 0: no space between curr. symbol and value; 1: space sep. them unless symb.\n        // and sign are adjacent then space sep. them from value; 2: space sep. sign\n        // and value unless symb. and sign are adjacent then space separates\n        n_cs_precedes: 1,\n        // see p_cs_precedes\n        n_sep_by_space: 0,\n        // see p_sep_by_space\n        p_sign_posn: 3,\n        // 0: parentheses surround quantity and curr. symbol; 1: sign precedes them;\n        // 2: sign follows them; 3: sign immed. precedes curr. symbol; 4: sign immed.\n        // succeeds curr. symbol\n        n_sign_posn: 0 // see p_sign_posn\n      },\n      'LC_NUMERIC': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        decimal_point: '.',\n        thousands_sep: ',',\n        grouping: [3] // see mon_grouping, but for non-monetary values (use thousands_sep)\n      },\n      'LC_MESSAGES': {\n        YESEXPR: '^[yY].*',\n        NOEXPR: '^[nN].*',\n        YESSTR: '',\n        NOSTR: ''\n      },\n      nplurals: _nplurals2a\n    }\n    $locutus.php.locales.en_US = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_US.LC_TIME.c = '%a %d %b %Y %r %Z'\n    $locutus.php.locales.en_US.LC_TIME.x = '%D'\n    $locutus.php.locales.en_US.LC_TIME.X = '%r'\n    // The following are based on *nix settings\n    $locutus.php.locales.en_US.LC_MONETARY.int_curr_symbol = 'USD '\n    $locutus.php.locales.en_US.LC_MONETARY.p_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.n_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.mon_grouping = [3, 3]\n    $locutus.php.locales.en_US.LC_NUMERIC.thousands_sep = ''\n    $locutus.php.locales.en_US.LC_NUMERIC.grouping = []\n\n    $locutus.php.locales.en_GB = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_GB.LC_TIME.r = '%l:%M:%S %P %Z'\n\n    $locutus.php.locales.en_AU = _copy($locutus.php.locales.en_GB)\n    // Assume C locale is like English (?) (We need C locale for LC_CTYPE)\n    $locutus.php.locales.C = _copy($locutus.php.locales.en)\n    $locutus.php.locales.C.LC_CTYPE.CODESET = 'ANSI_X3.4-1968'\n    $locutus.php.locales.C.LC_MONETARY = {\n      int_curr_symbol: '',\n      currency_symbol: '',\n      mon_decimal_point: '',\n      mon_thousands_sep: '',\n      mon_grouping: [],\n      p_cs_precedes: 127,\n      p_sep_by_space: 127,\n      n_cs_precedes: 127,\n      n_sep_by_space: 127,\n      p_sign_posn: 127,\n      n_sign_posn: 127,\n      positive_sign: '',\n      negative_sign: '',\n      int_frac_digits: 127,\n      frac_digits: 127\n    }\n    $locutus.php.locales.C.LC_NUMERIC = {\n      decimal_point: '.',\n      thousands_sep: '',\n      grouping: []\n    }\n    // D_T_FMT\n    $locutus.php.locales.C.LC_TIME.c = '%a %b %e %H:%M:%S %Y'\n    // D_FMT\n    $locutus.php.locales.C.LC_TIME.x = '%m/%d/%y'\n    // T_FMT\n    $locutus.php.locales.C.LC_TIME.X = '%H:%M:%S'\n    $locutus.php.locales.C.LC_MESSAGES.YESEXPR = '^[yY]'\n    $locutus.php.locales.C.LC_MESSAGES.NOEXPR = '^[nN]'\n\n    $locutus.php.locales.fr = _copy($locutus.php.locales.en)\n    $locutus.php.locales.fr.nplurals = _nplurals2b\n    $locutus.php.locales.fr.LC_TIME.a = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam']\n    $locutus.php.locales.fr.LC_TIME.A = ['dimanche', 'lundi', 'mardi', 'mercredi',\n      'jeudi', 'vendredi', 'samedi']\n    $locutus.php.locales.fr.LC_TIME.b = ['jan', 'f\\u00E9v', 'mar', 'avr', 'mai',\n      'jun', 'jui', 'ao\\u00FB', 'sep', 'oct',\n      'nov', 'd\\u00E9c'\n    ]\n    $locutus.php.locales.fr.LC_TIME.B = ['janvier', 'f\\u00E9vrier', 'mars',\n      'avril', 'mai', 'juin', 'juillet', 'ao\\u00FBt',\n      'septembre', 'octobre', 'novembre', 'd\\u00E9cembre'\n    ]\n    $locutus.php.locales.fr.LC_TIME.c = '%a %d %b %Y %T %Z'\n    $locutus.php.locales.fr.LC_TIME.p = ['', '']\n    $locutus.php.locales.fr.LC_TIME.P = ['', '']\n    $locutus.php.locales.fr.LC_TIME.x = '%d.%m.%Y'\n    $locutus.php.locales.fr.LC_TIME.X = '%T'\n\n    $locutus.php.locales.fr_CA = _copy($locutus.php.locales.fr)\n    $locutus.php.locales.fr_CA.LC_TIME.x = '%Y-%m-%d'\n  }\n  if (!$locutus.php.locale) {\n    $locutus.php.locale = 'en_US'\n    // Try to establish the locale via the `window` global\n    if (typeof window !== 'undefined' && window.document) {\n      var d = window.document\n      var NS_XHTML = 'http://www.w3.org/1999/xhtml'\n      var NS_XML = 'http://www.w3.org/XML/1998/namespace'\n      if (d.getElementsByTagNameNS &&\n        d.getElementsByTagNameNS(NS_XHTML, 'html')[0]) {\n        if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS &&\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')) {\n          $locutus.php.locale = d.getElementsByTagName(NS_XHTML, 'html')[0]\n            .getAttributeNS(NS_XML, 'lang')\n        } else if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang) {\n          // XHTML 1.0 only\n          $locutus.php.locale = d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang\n        }\n      } else if (d.getElementsByTagName('html')[0] &&\n        d.getElementsByTagName('html')[0].lang) {\n        $locutus.php.locale = d.getElementsByTagName('html')[0].lang\n      }\n    }\n  }\n  // PHP-style\n  $locutus.php.locale = $locutus.php.locale.replace('-', '_')\n  // @todo: locale if declared locale hasn't been defined\n  if (!($locutus.php.locale in $locutus.php.locales)) {\n    if ($locutus.php.locale.replace(/_[a-zA-Z]+$/, '') in $locutus.php.locales) {\n      $locutus.php.locale = $locutus.php.locale.replace(/_[a-zA-Z]+$/, '')\n    }\n  }\n\n  if (!$locutus.php.localeCategories) {\n    $locutus.php.localeCategories = {\n      'LC_COLLATE': $locutus.php.locale,\n      // for string comparison, see strcoll()\n      'LC_CTYPE': $locutus.php.locale,\n      // for character classification and conversion, for example strtoupper()\n      'LC_MONETARY': $locutus.php.locale,\n      // for localeconv()\n      'LC_NUMERIC': $locutus.php.locale,\n      // for decimal separator (See also localeconv())\n      'LC_TIME': $locutus.php.locale,\n      // for date and time formatting with strftime()\n      // for system responses (available if PHP was compiled with libintl):\n      'LC_MESSAGES': $locutus.php.locale\n    }\n  }\n\n  if (locale === null || locale === '') {\n    locale = getenv(category) || getenv('LANG')\n  } else if (Object.prototype.toString.call(locale) === '[object Array]') {\n    for (i = 0; i < locale.length; i++) {\n      if (!(locale[i] in $locutus.php.locales)) {\n        if (i === locale.length - 1) {\n          // none found\n          return false\n        }\n        continue\n      }\n      locale = locale[i]\n      break\n    }\n  }\n\n  // Just get the locale\n  if (locale === '0' || locale === 0) {\n    if (category === 'LC_ALL') {\n      for (categ in $locutus.php.localeCategories) {\n        // Add \".UTF-8\" or allow \".@latint\", etc. to the end?\n        cats.push(categ + '=' + $locutus.php.localeCategories[categ])\n      }\n      return cats.join(';')\n    }\n    return $locutus.php.localeCategories[category]\n  }\n\n  if (!(locale in $locutus.php.locales)) {\n    // Locale not found\n    return false\n  }\n\n  // Set and get locale\n  if (category === 'LC_ALL') {\n    for (categ in $locutus.php.localeCategories) {\n      $locutus.php.localeCategories[categ] = locale\n    }\n  } else {\n    $locutus.php.localeCategories[category] = locale\n  }\n\n  return locale\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/setlocale/index.html","comments":1,"_id":"cinoeja1e006tou9y78tmidue","content":"module.exports = function setlocale (category, locale) {\n  //  discuss at: http://locutusjs.io/php/setlocale/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Blues (http://hacks.bluesmoon.info/strftime/strftime.js)\n  // original by: YUI Library (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\n  //      note 1: Is extensible, but currently only implements locales en,\n  //      note 1: en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n  //      note 1: C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n  //      note 1: Uses global: locutus to store locale info\n  //      note 1: Consider using http://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())\n  //      note 2: This function tries to establish the locale via the `window` global.\n  //      note 2: This feature will not work in Node and hence is Browser-only\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   returns 1: 'en_US'\n\n  var getenv = require('../info/getenv')\n\n  var categ = ''\n  var cats = []\n  var i = 0\n\n  var _copy = function _copy (orig) {\n    if (orig instanceof RegExp) {\n      return new RegExp(orig)\n    } else if (orig instanceof Date) {\n      return new Date(orig)\n    }\n    var newObj = {}\n    for (var i in orig) {\n      if (typeof orig[i] === 'object') {\n        newObj[i] = _copy(orig[i])\n      } else {\n        newObj[i] = orig[i]\n      }\n    }\n    return newObj\n  }\n\n  // Function usable by a ngettext implementation (apparently not an accessible part of setlocale(),\n  // but locale-specific) See http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms\n  // though amended with others from https://developer.mozilla.org/En/Localization_and_Plurals (new\n  // categories noted with \"MDC\" below, though not sure of whether there is a convention for the\n  // relative order of these newer groups as far as ngettext) The function name indicates the number\n  // of plural forms (nplural) Need to look into http://cldr.unicode.org/ (maybe future JavaScript);\n  // Dojo has some functions (under new BSD), including JSON conversions of LDML XML from CLDR:\n  // http://bugs.dojotoolkit.org/browser/dojo/trunk/cldr and docs at\n  // http://api.dojotoolkit.org/jsdoc/HEAD/dojo.cldr\n\n  // var _nplurals1 = function (n) {\n  //   // e.g., Japanese\n  //   return 0\n  // }\n  var _nplurals2a = function (n) {\n    // e.g., English\n    return n !== 1 ? 1 : 0\n  }\n  var _nplurals2b = function (n) {\n    // e.g., French\n    return n > 1 ? 1 : 0\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Reconcile Windows vs. *nix locale names?\n  // Allow different priority orders of languages, esp. if implement gettext as in\n  // LANGUAGE env. var.? (e.g., show German if French is not available)\n  if (!$locutus.php.locales ||\n    !$locutus.php.locales.fr_CA ||\n    !$locutus.php.locales.fr_CA.LC_TIME ||\n    !$locutus.php.locales.fr_CA.LC_TIME.x) {\n    // Can add to the locales\n    $locutus.php.locales = {}\n\n    $locutus.php.locales.en = {\n      'LC_COLLATE': function (str1, str2) {\n        // @todo: This one taken from strcmp, but need for other locales; we don't use localeCompare\n        // since its locale is not settable\n        return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n      },\n      'LC_CTYPE': {\n        // Need to change any of these for English as opposed to C?\n        an: /^[A-Za-z\\d]+$/g,\n        al: /^[A-Za-z]+$/g,\n        ct: /^[\\u0000-\\u001F\\u007F]+$/g,\n        dg: /^[\\d]+$/g,\n        gr: /^[\\u0021-\\u007E]+$/g,\n        lw: /^[a-z]+$/g,\n        pr: /^[\\u0020-\\u007E]+$/g,\n        pu: /^[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E]+$/g,\n        sp: /^[\\f\\n\\r\\t\\v ]+$/g,\n        up: /^[A-Z]+$/g,\n        xd: /^[A-Fa-f\\d]+$/g,\n        CODESET: 'UTF-8',\n        // Used by sql_regcase\n        lower: 'abcdefghijklmnopqrstuvwxyz',\n        upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n      },\n      'LC_TIME': {\n        // Comments include nl_langinfo() constant equivalents and any\n        // changes from Blues' implementation\n        a: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        // ABDAY_\n        A: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        // DAY_\n        b: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        // ABMON_\n        B: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n          'August', 'September', 'October',\n          'November', 'December'\n        ],\n        // MON_\n        c: '%a %d %b %Y %r %Z',\n        // D_T_FMT // changed %T to %r per results\n        p: ['AM', 'PM'],\n        // AM_STR/PM_STR\n        P: ['am', 'pm'],\n        // Not available in nl_langinfo()\n        r: '%I:%M:%S %p',\n        // T_FMT_AMPM (Fixed for all locales)\n        x: '%m/%d/%Y',\n        // D_FMT // switched order of %m and %d; changed %y to %Y (C uses %y)\n        X: '%r',\n        // T_FMT // changed from %T to %r  (%T is default for C, not English US)\n        // Following are from nl_langinfo() or http://www.cptec.inpe.br/sx4/sx4man2/g1ab02e/strftime.4.html\n        alt_digits: '',\n        // e.g., ordinal\n        ERA: '',\n        ERA_YEAR: '',\n        ERA_D_T_FMT: '',\n        ERA_D_FMT: '',\n        ERA_T_FMT: ''\n      },\n      // Assuming distinction between numeric and monetary is thus:\n      // See below for C locale\n      'LC_MONETARY': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        int_curr_symbol: 'USD',\n        currency_symbol: '$',\n        mon_decimal_point: '.',\n        mon_thousands_sep: ',',\n        mon_grouping: [3],\n        // use mon_thousands_sep; \"\" for no grouping; additional array members\n        // indicate successive group lengths after first group\n        // (e.g., if to be 1,23,456, could be [3, 2])\n        positive_sign: '',\n        negative_sign: '-',\n        int_frac_digits: 2,\n        // Fractional digits only for money defaults?\n        frac_digits: 2,\n        p_cs_precedes: 1,\n        // positive currency symbol follows value = 0; precedes value = 1\n        p_sep_by_space: 0,\n        // 0: no space between curr. symbol and value; 1: space sep. them unless symb.\n        // and sign are adjacent then space sep. them from value; 2: space sep. sign\n        // and value unless symb. and sign are adjacent then space separates\n        n_cs_precedes: 1,\n        // see p_cs_precedes\n        n_sep_by_space: 0,\n        // see p_sep_by_space\n        p_sign_posn: 3,\n        // 0: parentheses surround quantity and curr. symbol; 1: sign precedes them;\n        // 2: sign follows them; 3: sign immed. precedes curr. symbol; 4: sign immed.\n        // succeeds curr. symbol\n        n_sign_posn: 0 // see p_sign_posn\n      },\n      'LC_NUMERIC': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        decimal_point: '.',\n        thousands_sep: ',',\n        grouping: [3] // see mon_grouping, but for non-monetary values (use thousands_sep)\n      },\n      'LC_MESSAGES': {\n        YESEXPR: '^[yY].*',\n        NOEXPR: '^[nN].*',\n        YESSTR: '',\n        NOSTR: ''\n      },\n      nplurals: _nplurals2a\n    }\n    $locutus.php.locales.en_US = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_US.LC_TIME.c = '%a %d %b %Y %r %Z'\n    $locutus.php.locales.en_US.LC_TIME.x = '%D'\n    $locutus.php.locales.en_US.LC_TIME.X = '%r'\n    // The following are based on *nix settings\n    $locutus.php.locales.en_US.LC_MONETARY.int_curr_symbol = 'USD '\n    $locutus.php.locales.en_US.LC_MONETARY.p_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.n_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.mon_grouping = [3, 3]\n    $locutus.php.locales.en_US.LC_NUMERIC.thousands_sep = ''\n    $locutus.php.locales.en_US.LC_NUMERIC.grouping = []\n\n    $locutus.php.locales.en_GB = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_GB.LC_TIME.r = '%l:%M:%S %P %Z'\n\n    $locutus.php.locales.en_AU = _copy($locutus.php.locales.en_GB)\n    // Assume C locale is like English (?) (We need C locale for LC_CTYPE)\n    $locutus.php.locales.C = _copy($locutus.php.locales.en)\n    $locutus.php.locales.C.LC_CTYPE.CODESET = 'ANSI_X3.4-1968'\n    $locutus.php.locales.C.LC_MONETARY = {\n      int_curr_symbol: '',\n      currency_symbol: '',\n      mon_decimal_point: '',\n      mon_thousands_sep: '',\n      mon_grouping: [],\n      p_cs_precedes: 127,\n      p_sep_by_space: 127,\n      n_cs_precedes: 127,\n      n_sep_by_space: 127,\n      p_sign_posn: 127,\n      n_sign_posn: 127,\n      positive_sign: '',\n      negative_sign: '',\n      int_frac_digits: 127,\n      frac_digits: 127\n    }\n    $locutus.php.locales.C.LC_NUMERIC = {\n      decimal_point: '.',\n      thousands_sep: '',\n      grouping: []\n    }\n    // D_T_FMT\n    $locutus.php.locales.C.LC_TIME.c = '%a %b %e %H:%M:%S %Y'\n    // D_FMT\n    $locutus.php.locales.C.LC_TIME.x = '%m/%d/%y'\n    // T_FMT\n    $locutus.php.locales.C.LC_TIME.X = '%H:%M:%S'\n    $locutus.php.locales.C.LC_MESSAGES.YESEXPR = '^[yY]'\n    $locutus.php.locales.C.LC_MESSAGES.NOEXPR = '^[nN]'\n\n    $locutus.php.locales.fr = _copy($locutus.php.locales.en)\n    $locutus.php.locales.fr.nplurals = _nplurals2b\n    $locutus.php.locales.fr.LC_TIME.a = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam']\n    $locutus.php.locales.fr.LC_TIME.A = ['dimanche', 'lundi', 'mardi', 'mercredi',\n      'jeudi', 'vendredi', 'samedi']\n    $locutus.php.locales.fr.LC_TIME.b = ['jan', 'f\\u00E9v', 'mar', 'avr', 'mai',\n      'jun', 'jui', 'ao\\u00FB', 'sep', 'oct',\n      'nov', 'd\\u00E9c'\n    ]\n    $locutus.php.locales.fr.LC_TIME.B = ['janvier', 'f\\u00E9vrier', 'mars',\n      'avril', 'mai', 'juin', 'juillet', 'ao\\u00FBt',\n      'septembre', 'octobre', 'novembre', 'd\\u00E9cembre'\n    ]\n    $locutus.php.locales.fr.LC_TIME.c = '%a %d %b %Y %T %Z'\n    $locutus.php.locales.fr.LC_TIME.p = ['', '']\n    $locutus.php.locales.fr.LC_TIME.P = ['', '']\n    $locutus.php.locales.fr.LC_TIME.x = '%d.%m.%Y'\n    $locutus.php.locales.fr.LC_TIME.X = '%T'\n\n    $locutus.php.locales.fr_CA = _copy($locutus.php.locales.fr)\n    $locutus.php.locales.fr_CA.LC_TIME.x = '%Y-%m-%d'\n  }\n  if (!$locutus.php.locale) {\n    $locutus.php.locale = 'en_US'\n    // Try to establish the locale via the `window` global\n    if (typeof window !== 'undefined' && window.document) {\n      var d = window.document\n      var NS_XHTML = 'http://www.w3.org/1999/xhtml'\n      var NS_XML = 'http://www.w3.org/XML/1998/namespace'\n      if (d.getElementsByTagNameNS &&\n        d.getElementsByTagNameNS(NS_XHTML, 'html')[0]) {\n        if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS &&\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')) {\n          $locutus.php.locale = d.getElementsByTagName(NS_XHTML, 'html')[0]\n            .getAttributeNS(NS_XML, 'lang')\n        } else if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang) {\n          // XHTML 1.0 only\n          $locutus.php.locale = d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang\n        }\n      } else if (d.getElementsByTagName('html')[0] &&\n        d.getElementsByTagName('html')[0].lang) {\n        $locutus.php.locale = d.getElementsByTagName('html')[0].lang\n      }\n    }\n  }\n  // PHP-style\n  $locutus.php.locale = $locutus.php.locale.replace('-', '_')\n  // @todo: locale if declared locale hasn't been defined\n  if (!($locutus.php.locale in $locutus.php.locales)) {\n    if ($locutus.php.locale.replace(/_[a-zA-Z]+$/, '') in $locutus.php.locales) {\n      $locutus.php.locale = $locutus.php.locale.replace(/_[a-zA-Z]+$/, '')\n    }\n  }\n\n  if (!$locutus.php.localeCategories) {\n    $locutus.php.localeCategories = {\n      'LC_COLLATE': $locutus.php.locale,\n      // for string comparison, see strcoll()\n      'LC_CTYPE': $locutus.php.locale,\n      // for character classification and conversion, for example strtoupper()\n      'LC_MONETARY': $locutus.php.locale,\n      // for localeconv()\n      'LC_NUMERIC': $locutus.php.locale,\n      // for decimal separator (See also localeconv())\n      'LC_TIME': $locutus.php.locale,\n      // for date and time formatting with strftime()\n      // for system responses (available if PHP was compiled with libintl):\n      'LC_MESSAGES': $locutus.php.locale\n    }\n  }\n\n  if (locale === null || locale === '') {\n    locale = getenv(category) || getenv('LANG')\n  } else if (Object.prototype.toString.call(locale) === '[object Array]') {\n    for (i = 0; i < locale.length; i++) {\n      if (!(locale[i] in $locutus.php.locales)) {\n        if (i === locale.length - 1) {\n          // none found\n          return false\n        }\n        continue\n      }\n      locale = locale[i]\n      break\n    }\n  }\n\n  // Just get the locale\n  if (locale === '0' || locale === 0) {\n    if (category === 'LC_ALL') {\n      for (categ in $locutus.php.localeCategories) {\n        // Add \".UTF-8\" or allow \".@latint\", etc. to the end?\n        cats.push(categ + '=' + $locutus.php.localeCategories[categ])\n      }\n      return cats.join(';')\n    }\n    return $locutus.php.localeCategories[category]\n  }\n\n  if (!(locale in $locutus.php.locales)) {\n    // Locale not found\n    return false\n  }\n\n  // Set and get locale\n  if (category === 'LC_ALL') {\n    for (categ in $locutus.php.localeCategories) {\n      $locutus.php.localeCategories[categ] = locale\n    }\n  } else {\n    $locutus.php.localeCategories[category] = locale\n  }\n\n  return locale\n}\n","excerpt":"","more":"module.exports = function setlocale (category, locale) {\n  //  discuss at: http://locutusjs.io/php/setlocale/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: Blues (http://hacks.bluesmoon.info/strftime/strftime.js)\n  // original by: YUI Library (http://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html)\n  //      note 1: Is extensible, but currently only implements locales en,\n  //      note 1: en_US, en_GB, en_AU, fr, and fr_CA for LC_TIME only; C for LC_CTYPE;\n  //      note 1: C and en for LC_MONETARY/LC_NUMERIC; en for LC_COLLATE\n  //      note 1: Uses global: locutus to store locale info\n  //      note 1: Consider using http://demo.icu-project.org/icu-bin/locexp as basis for localization (as in i18n_loc_set_default())\n  //      note 2: This function tries to establish the locale via the `window` global.\n  //      note 2: This feature will not work in Node and hence is Browser-only\n  //   example 1: setlocale('LC_ALL', 'en_US')\n  //   returns 1: 'en_US'\n\n  var getenv = require('../info/getenv')\n\n  var categ = ''\n  var cats = []\n  var i = 0\n\n  var _copy = function _copy (orig) {\n    if (orig instanceof RegExp) {\n      return new RegExp(orig)\n    } else if (orig instanceof Date) {\n      return new Date(orig)\n    }\n    var newObj = {}\n    for (var i in orig) {\n      if (typeof orig[i] === 'object') {\n        newObj[i] = _copy(orig[i])\n      } else {\n        newObj[i] = orig[i]\n      }\n    }\n    return newObj\n  }\n\n  // Function usable by a ngettext implementation (apparently not an accessible part of setlocale(),\n  // but locale-specific) See http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms\n  // though amended with others from https://developer.mozilla.org/En/Localization_and_Plurals (new\n  // categories noted with \"MDC\" below, though not sure of whether there is a convention for the\n  // relative order of these newer groups as far as ngettext) The function name indicates the number\n  // of plural forms (nplural) Need to look into http://cldr.unicode.org/ (maybe future JavaScript);\n  // Dojo has some functions (under new BSD), including JSON conversions of LDML XML from CLDR:\n  // http://bugs.dojotoolkit.org/browser/dojo/trunk/cldr and docs at\n  // http://api.dojotoolkit.org/jsdoc/HEAD/dojo.cldr\n\n  // var _nplurals1 = function (n) {\n  //   // e.g., Japanese\n  //   return 0\n  // }\n  var _nplurals2a = function (n) {\n    // e.g., English\n    return n !== 1 ? 1 : 0\n  }\n  var _nplurals2b = function (n) {\n    // e.g., French\n    return n > 1 ? 1 : 0\n  }\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  // Reconcile Windows vs. *nix locale names?\n  // Allow different priority orders of languages, esp. if implement gettext as in\n  // LANGUAGE env. var.? (e.g., show German if French is not available)\n  if (!$locutus.php.locales ||\n    !$locutus.php.locales.fr_CA ||\n    !$locutus.php.locales.fr_CA.LC_TIME ||\n    !$locutus.php.locales.fr_CA.LC_TIME.x) {\n    // Can add to the locales\n    $locutus.php.locales = {}\n\n    $locutus.php.locales.en = {\n      'LC_COLLATE': function (str1, str2) {\n        // @todo: This one taken from strcmp, but need for other locales; we don't use localeCompare\n        // since its locale is not settable\n        return (str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1)\n      },\n      'LC_CTYPE': {\n        // Need to change any of these for English as opposed to C?\n        an: /^[A-Za-z\\d]+$/g,\n        al: /^[A-Za-z]+$/g,\n        ct: /^[\\u0000-\\u001F\\u007F]+$/g,\n        dg: /^[\\d]+$/g,\n        gr: /^[\\u0021-\\u007E]+$/g,\n        lw: /^[a-z]+$/g,\n        pr: /^[\\u0020-\\u007E]+$/g,\n        pu: /^[\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E]+$/g,\n        sp: /^[\\f\\n\\r\\t\\v ]+$/g,\n        up: /^[A-Z]+$/g,\n        xd: /^[A-Fa-f\\d]+$/g,\n        CODESET: 'UTF-8',\n        // Used by sql_regcase\n        lower: 'abcdefghijklmnopqrstuvwxyz',\n        upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n      },\n      'LC_TIME': {\n        // Comments include nl_langinfo() constant equivalents and any\n        // changes from Blues' implementation\n        a: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        // ABDAY_\n        A: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        // DAY_\n        b: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        // ABMON_\n        B: ['January', 'February', 'March', 'April', 'May', 'June', 'July',\n          'August', 'September', 'October',\n          'November', 'December'\n        ],\n        // MON_\n        c: '%a %d %b %Y %r %Z',\n        // D_T_FMT // changed %T to %r per results\n        p: ['AM', 'PM'],\n        // AM_STR/PM_STR\n        P: ['am', 'pm'],\n        // Not available in nl_langinfo()\n        r: '%I:%M:%S %p',\n        // T_FMT_AMPM (Fixed for all locales)\n        x: '%m/%d/%Y',\n        // D_FMT // switched order of %m and %d; changed %y to %Y (C uses %y)\n        X: '%r',\n        // T_FMT // changed from %T to %r  (%T is default for C, not English US)\n        // Following are from nl_langinfo() or http://www.cptec.inpe.br/sx4/sx4man2/g1ab02e/strftime.4.html\n        alt_digits: '',\n        // e.g., ordinal\n        ERA: '',\n        ERA_YEAR: '',\n        ERA_D_T_FMT: '',\n        ERA_D_FMT: '',\n        ERA_T_FMT: ''\n      },\n      // Assuming distinction between numeric and monetary is thus:\n      // See below for C locale\n      'LC_MONETARY': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        int_curr_symbol: 'USD',\n        currency_symbol: '$',\n        mon_decimal_point: '.',\n        mon_thousands_sep: ',',\n        mon_grouping: [3],\n        // use mon_thousands_sep; \"\" for no grouping; additional array members\n        // indicate successive group lengths after first group\n        // (e.g., if to be 1,23,456, could be [3, 2])\n        positive_sign: '',\n        negative_sign: '-',\n        int_frac_digits: 2,\n        // Fractional digits only for money defaults?\n        frac_digits: 2,\n        p_cs_precedes: 1,\n        // positive currency symbol follows value = 0; precedes value = 1\n        p_sep_by_space: 0,\n        // 0: no space between curr. symbol and value; 1: space sep. them unless symb.\n        // and sign are adjacent then space sep. them from value; 2: space sep. sign\n        // and value unless symb. and sign are adjacent then space separates\n        n_cs_precedes: 1,\n        // see p_cs_precedes\n        n_sep_by_space: 0,\n        // see p_sep_by_space\n        p_sign_posn: 3,\n        // 0: parentheses surround quantity and curr. symbol; 1: sign precedes them;\n        // 2: sign follows them; 3: sign immed. precedes curr. symbol; 4: sign immed.\n        // succeeds curr. symbol\n        n_sign_posn: 0 // see p_sign_posn\n      },\n      'LC_NUMERIC': {\n        // based on Windows \"english\" (English_United States.1252) locale\n        decimal_point: '.',\n        thousands_sep: ',',\n        grouping: [3] // see mon_grouping, but for non-monetary values (use thousands_sep)\n      },\n      'LC_MESSAGES': {\n        YESEXPR: '^[yY].*',\n        NOEXPR: '^[nN].*',\n        YESSTR: '',\n        NOSTR: ''\n      },\n      nplurals: _nplurals2a\n    }\n    $locutus.php.locales.en_US = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_US.LC_TIME.c = '%a %d %b %Y %r %Z'\n    $locutus.php.locales.en_US.LC_TIME.x = '%D'\n    $locutus.php.locales.en_US.LC_TIME.X = '%r'\n    // The following are based on *nix settings\n    $locutus.php.locales.en_US.LC_MONETARY.int_curr_symbol = 'USD '\n    $locutus.php.locales.en_US.LC_MONETARY.p_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.n_sign_posn = 1\n    $locutus.php.locales.en_US.LC_MONETARY.mon_grouping = [3, 3]\n    $locutus.php.locales.en_US.LC_NUMERIC.thousands_sep = ''\n    $locutus.php.locales.en_US.LC_NUMERIC.grouping = []\n\n    $locutus.php.locales.en_GB = _copy($locutus.php.locales.en)\n    $locutus.php.locales.en_GB.LC_TIME.r = '%l:%M:%S %P %Z'\n\n    $locutus.php.locales.en_AU = _copy($locutus.php.locales.en_GB)\n    // Assume C locale is like English (?) (We need C locale for LC_CTYPE)\n    $locutus.php.locales.C = _copy($locutus.php.locales.en)\n    $locutus.php.locales.C.LC_CTYPE.CODESET = 'ANSI_X3.4-1968'\n    $locutus.php.locales.C.LC_MONETARY = {\n      int_curr_symbol: '',\n      currency_symbol: '',\n      mon_decimal_point: '',\n      mon_thousands_sep: '',\n      mon_grouping: [],\n      p_cs_precedes: 127,\n      p_sep_by_space: 127,\n      n_cs_precedes: 127,\n      n_sep_by_space: 127,\n      p_sign_posn: 127,\n      n_sign_posn: 127,\n      positive_sign: '',\n      negative_sign: '',\n      int_frac_digits: 127,\n      frac_digits: 127\n    }\n    $locutus.php.locales.C.LC_NUMERIC = {\n      decimal_point: '.',\n      thousands_sep: '',\n      grouping: []\n    }\n    // D_T_FMT\n    $locutus.php.locales.C.LC_TIME.c = '%a %b %e %H:%M:%S %Y'\n    // D_FMT\n    $locutus.php.locales.C.LC_TIME.x = '%m/%d/%y'\n    // T_FMT\n    $locutus.php.locales.C.LC_TIME.X = '%H:%M:%S'\n    $locutus.php.locales.C.LC_MESSAGES.YESEXPR = '^[yY]'\n    $locutus.php.locales.C.LC_MESSAGES.NOEXPR = '^[nN]'\n\n    $locutus.php.locales.fr = _copy($locutus.php.locales.en)\n    $locutus.php.locales.fr.nplurals = _nplurals2b\n    $locutus.php.locales.fr.LC_TIME.a = ['dim', 'lun', 'mar', 'mer', 'jeu', 'ven', 'sam']\n    $locutus.php.locales.fr.LC_TIME.A = ['dimanche', 'lundi', 'mardi', 'mercredi',\n      'jeudi', 'vendredi', 'samedi']\n    $locutus.php.locales.fr.LC_TIME.b = ['jan', 'f\\u00E9v', 'mar', 'avr', 'mai',\n      'jun', 'jui', 'ao\\u00FB', 'sep', 'oct',\n      'nov', 'd\\u00E9c'\n    ]\n    $locutus.php.locales.fr.LC_TIME.B = ['janvier', 'f\\u00E9vrier', 'mars',\n      'avril', 'mai', 'juin', 'juillet', 'ao\\u00FBt',\n      'septembre', 'octobre', 'novembre', 'd\\u00E9cembre'\n    ]\n    $locutus.php.locales.fr.LC_TIME.c = '%a %d %b %Y %T %Z'\n    $locutus.php.locales.fr.LC_TIME.p = ['', '']\n    $locutus.php.locales.fr.LC_TIME.P = ['', '']\n    $locutus.php.locales.fr.LC_TIME.x = '%d.%m.%Y'\n    $locutus.php.locales.fr.LC_TIME.X = '%T'\n\n    $locutus.php.locales.fr_CA = _copy($locutus.php.locales.fr)\n    $locutus.php.locales.fr_CA.LC_TIME.x = '%Y-%m-%d'\n  }\n  if (!$locutus.php.locale) {\n    $locutus.php.locale = 'en_US'\n    // Try to establish the locale via the `window` global\n    if (typeof window !== 'undefined' && window.document) {\n      var d = window.document\n      var NS_XHTML = 'http://www.w3.org/1999/xhtml'\n      var NS_XML = 'http://www.w3.org/XML/1998/namespace'\n      if (d.getElementsByTagNameNS &&\n        d.getElementsByTagNameNS(NS_XHTML, 'html')[0]) {\n        if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS &&\n          d.getElementsByTagNameNS(NS_XHTML, 'html')[0].getAttributeNS(NS_XML, 'lang')) {\n          $locutus.php.locale = d.getElementsByTagName(NS_XHTML, 'html')[0]\n            .getAttributeNS(NS_XML, 'lang')\n        } else if (d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang) {\n          // XHTML 1.0 only\n          $locutus.php.locale = d.getElementsByTagNameNS(NS_XHTML, 'html')[0].lang\n        }\n      } else if (d.getElementsByTagName('html')[0] &&\n        d.getElementsByTagName('html')[0].lang) {\n        $locutus.php.locale = d.getElementsByTagName('html')[0].lang\n      }\n    }\n  }\n  // PHP-style\n  $locutus.php.locale = $locutus.php.locale.replace('-', '_')\n  // @todo: locale if declared locale hasn't been defined\n  if (!($locutus.php.locale in $locutus.php.locales)) {\n    if ($locutus.php.locale.replace(/_[a-zA-Z]+$/, '') in $locutus.php.locales) {\n      $locutus.php.locale = $locutus.php.locale.replace(/_[a-zA-Z]+$/, '')\n    }\n  }\n\n  if (!$locutus.php.localeCategories) {\n    $locutus.php.localeCategories = {\n      'LC_COLLATE': $locutus.php.locale,\n      // for string comparison, see strcoll()\n      'LC_CTYPE': $locutus.php.locale,\n      // for character classification and conversion, for example strtoupper()\n      'LC_MONETARY': $locutus.php.locale,\n      // for localeconv()\n      'LC_NUMERIC': $locutus.php.locale,\n      // for decimal separator (See also localeconv())\n      'LC_TIME': $locutus.php.locale,\n      // for date and time formatting with strftime()\n      // for system responses (available if PHP was compiled with libintl):\n      'LC_MESSAGES': $locutus.php.locale\n    }\n  }\n\n  if (locale === null || locale === '') {\n    locale = getenv(category) || getenv('LANG')\n  } else if (Object.prototype.toString.call(locale) === '[object Array]') {\n    for (i = 0; i < locale.length; i++) {\n      if (!(locale[i] in $locutus.php.locales)) {\n        if (i === locale.length - 1) {\n          // none found\n          return false\n        }\n        continue\n      }\n      locale = locale[i]\n      break\n    }\n  }\n\n  // Just get the locale\n  if (locale === '0' || locale === 0) {\n    if (category === 'LC_ALL') {\n      for (categ in $locutus.php.localeCategories) {\n        // Add \".UTF-8\" or allow \".@latint\", etc. to the end?\n        cats.push(categ + '=' + $locutus.php.localeCategories[categ])\n      }\n      return cats.join(';')\n    }\n    return $locutus.php.localeCategories[category]\n  }\n\n  if (!(locale in $locutus.php.locales)) {\n    // Locale not found\n    return false\n  }\n\n  // Set and get locale\n  if (category === 'LC_ALL') {\n    for (categ in $locutus.php.localeCategories) {\n      $locutus.php.localeCategories[categ] = locale\n    }\n  } else {\n    $locutus.php.localeCategories[category] = locale\n  }\n\n  return locale\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sha1('Kevin van Zonneveld')"],"estarget":"es5","returns":["'54916d2e62f65b3afa6e192e6a601cdbe5cb5897'"],"dependencies":[],"authors":{"original by":["Webtoolkit.info (http://www.webtoolkit.info/)"],"improved by":["Michael White (http://getsprink.com)","Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Keep in mind that in accordance with PHP, the whole string is buffered and then\nhashed. If available, we'd recommend using Node's native crypto modules directly\nin a steaming fashion for faster and more efficient hashing"],"layout":"function","title":"php'ssha1 in JavaScript","function":"sha1","category":"strings","language":"php","alias":["/functions/php/sha1/","/functions/strings/sha1/","/php/sha1/","/functions/sha1/"],"_content":"module.exports = function sha1 (str) {\n  //  discuss at: http://locutusjs.io/php/sha1/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: sha1('Kevin van Zonneveld')\n  //   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var sha1sum = crypto.createHash('sha1')\n    sha1sum.update(str)\n    hash = sha1sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var _rotLeft = function (n, s) {\n    var t4 = (n << s) | (n >>> (32 - s))\n    return t4\n  }\n\n  var _cvtHex = function (val) {\n    var str = ''\n    var i\n    var v\n\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f\n      str += v.toString(16)\n    }\n    return str\n  }\n\n  var blockstart\n  var i, j\n  var W = new Array(80)\n  var H0 = 0x67452301\n  var H1 = 0xEFCDAB89\n  var H2 = 0x98BADCFE\n  var H3 = 0x10325476\n  var H4 = 0xC3D2E1F0\n  var A, B, C, D, E\n  var temp\n\n  // utf8_encode\n  str = unescape(encodeURIComponent(str))\n  var strLen = str.length\n\n  var wordArray = []\n  for (i = 0; i < strLen - 3; i += 4) {\n    j = str.charCodeAt(i) << 24 |\n      str.charCodeAt(i + 1) << 16 |\n      str.charCodeAt(i + 2) << 8 |\n      str.charCodeAt(i + 3)\n    wordArray.push(j)\n  }\n\n  switch (strLen % 4) {\n    case 0:\n      i = 0x080000000\n      break\n    case 1:\n      i = str.charCodeAt(strLen - 1) << 24 | 0x0800000\n      break\n    case 2:\n      i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000\n      break\n    case 3:\n      i = str.charCodeAt(strLen - 3) << 24 |\n        str.charCodeAt(strLen - 2) << 16 |\n        str.charCodeAt(strLen - 1) <<\n      8 | 0x80\n      break\n  }\n\n  wordArray.push(i)\n\n  while ((wordArray.length % 16) !== 14) {\n    wordArray.push(0)\n  }\n\n  wordArray.push(strLen >>> 29)\n  wordArray.push((strLen << 3) & 0x0ffffffff)\n\n  for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) {\n      W[i] = wordArray[blockstart + i]\n    }\n    for (i = 16; i <= 79; i++) {\n      W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\n    }\n\n    A = H0\n    B = H1\n    C = H2\n    D = H3\n    E = H4\n\n    for (i = 0; i <= 19; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 20; i <= 39; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 40; i <= 59; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 60; i <= 79; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    H0 = (H0 + A) & 0x0ffffffff\n    H1 = (H1 + B) & 0x0ffffffff\n    H2 = (H2 + C) & 0x0ffffffff\n    H3 = (H3 + D) & 0x0ffffffff\n    H4 = (H4 + E) & 0x0ffffffff\n  }\n\n  temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4)\n  return temp.toLowerCase()\n}\n","source":"php/strings/sha1.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - sha1('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''54916d2e62f65b3afa6e192e6a601cdbe5cb5897'''\ndependencies: []\nauthors:\n  original by:\n    - 'Webtoolkit.info (http://www.webtoolkit.info/)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    Keep in mind that in accordance with PHP, the whole string is buffered and\n    then\n\n    hashed. If available, we'd recommend using Node's native crypto modules\n    directly\n\n    in a steaming fashion for faster and more efficient hashing\nlayout: function\ntitle: php'ssha1 in JavaScript\nfunction: sha1\ncategory: strings\nlanguage: php\npermalink: php/strings/sha1/\nalias:\n  - /functions/php/sha1/\n  - /functions/strings/sha1/\n  - /php/sha1/\n  - /functions/sha1/\n---\nmodule.exports = function sha1 (str) {\n  //  discuss at: http://locutusjs.io/php/sha1/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: sha1('Kevin van Zonneveld')\n  //   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var sha1sum = crypto.createHash('sha1')\n    sha1sum.update(str)\n    hash = sha1sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var _rotLeft = function (n, s) {\n    var t4 = (n << s) | (n >>> (32 - s))\n    return t4\n  }\n\n  var _cvtHex = function (val) {\n    var str = ''\n    var i\n    var v\n\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f\n      str += v.toString(16)\n    }\n    return str\n  }\n\n  var blockstart\n  var i, j\n  var W = new Array(80)\n  var H0 = 0x67452301\n  var H1 = 0xEFCDAB89\n  var H2 = 0x98BADCFE\n  var H3 = 0x10325476\n  var H4 = 0xC3D2E1F0\n  var A, B, C, D, E\n  var temp\n\n  // utf8_encode\n  str = unescape(encodeURIComponent(str))\n  var strLen = str.length\n\n  var wordArray = []\n  for (i = 0; i < strLen - 3; i += 4) {\n    j = str.charCodeAt(i) << 24 |\n      str.charCodeAt(i + 1) << 16 |\n      str.charCodeAt(i + 2) << 8 |\n      str.charCodeAt(i + 3)\n    wordArray.push(j)\n  }\n\n  switch (strLen % 4) {\n    case 0:\n      i = 0x080000000\n      break\n    case 1:\n      i = str.charCodeAt(strLen - 1) << 24 | 0x0800000\n      break\n    case 2:\n      i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000\n      break\n    case 3:\n      i = str.charCodeAt(strLen - 3) << 24 |\n        str.charCodeAt(strLen - 2) << 16 |\n        str.charCodeAt(strLen - 1) <<\n      8 | 0x80\n      break\n  }\n\n  wordArray.push(i)\n\n  while ((wordArray.length % 16) !== 14) {\n    wordArray.push(0)\n  }\n\n  wordArray.push(strLen >>> 29)\n  wordArray.push((strLen << 3) & 0x0ffffffff)\n\n  for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) {\n      W[i] = wordArray[blockstart + i]\n    }\n    for (i = 16; i <= 79; i++) {\n      W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\n    }\n\n    A = H0\n    B = H1\n    C = H2\n    D = H3\n    E = H4\n\n    for (i = 0; i <= 19; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 20; i <= 39; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 40; i <= 59; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 60; i <= 79; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    H0 = (H0 + A) & 0x0ffffffff\n    H1 = (H1 + B) & 0x0ffffffff\n    H2 = (H2 + C) & 0x0ffffffff\n    H3 = (H3 + D) & 0x0ffffffff\n    H4 = (H4 + E) & 0x0ffffffff\n  }\n\n  temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4)\n  return temp.toLowerCase()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/sha1/index.html","comments":1,"_id":"cinoeja1e006uou9ymwygvm3m","content":"module.exports = function sha1 (str) {\n  //  discuss at: http://locutusjs.io/php/sha1/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: sha1('Kevin van Zonneveld')\n  //   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var sha1sum = crypto.createHash('sha1')\n    sha1sum.update(str)\n    hash = sha1sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var _rotLeft = function (n, s) {\n    var t4 = (n << s) | (n >>> (32 - s))\n    return t4\n  }\n\n  var _cvtHex = function (val) {\n    var str = ''\n    var i\n    var v\n\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f\n      str += v.toString(16)\n    }\n    return str\n  }\n\n  var blockstart\n  var i, j\n  var W = new Array(80)\n  var H0 = 0x67452301\n  var H1 = 0xEFCDAB89\n  var H2 = 0x98BADCFE\n  var H3 = 0x10325476\n  var H4 = 0xC3D2E1F0\n  var A, B, C, D, E\n  var temp\n\n  // utf8_encode\n  str = unescape(encodeURIComponent(str))\n  var strLen = str.length\n\n  var wordArray = []\n  for (i = 0; i < strLen - 3; i += 4) {\n    j = str.charCodeAt(i) << 24 |\n      str.charCodeAt(i + 1) << 16 |\n      str.charCodeAt(i + 2) << 8 |\n      str.charCodeAt(i + 3)\n    wordArray.push(j)\n  }\n\n  switch (strLen % 4) {\n    case 0:\n      i = 0x080000000\n      break\n    case 1:\n      i = str.charCodeAt(strLen - 1) << 24 | 0x0800000\n      break\n    case 2:\n      i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000\n      break\n    case 3:\n      i = str.charCodeAt(strLen - 3) << 24 |\n        str.charCodeAt(strLen - 2) << 16 |\n        str.charCodeAt(strLen - 1) <<\n      8 | 0x80\n      break\n  }\n\n  wordArray.push(i)\n\n  while ((wordArray.length % 16) !== 14) {\n    wordArray.push(0)\n  }\n\n  wordArray.push(strLen >>> 29)\n  wordArray.push((strLen << 3) & 0x0ffffffff)\n\n  for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) {\n      W[i] = wordArray[blockstart + i]\n    }\n    for (i = 16; i ","excerpt":"","more":"module.exports = function sha1 (str) {\n  //  discuss at: http://locutusjs.io/php/sha1/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n  //      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n  //      note 1: in a steaming fashion for faster and more efficient hashing\n  //   example 1: sha1('Kevin van Zonneveld')\n  //   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n\n  var hash\n  try {\n    var crypto = require('crypto')\n    var sha1sum = crypto.createHash('sha1')\n    sha1sum.update(str)\n    hash = sha1sum.digest('hex')\n  } catch (e) {\n    hash = undefined\n  }\n\n  if (hash !== undefined) {\n    return hash\n  }\n\n  var _rotLeft = function (n, s) {\n    var t4 = (n << s) | (n >>> (32 - s))\n    return t4\n  }\n\n  var _cvtHex = function (val) {\n    var str = ''\n    var i\n    var v\n\n    for (i = 7; i >= 0; i--) {\n      v = (val >>> (i * 4)) & 0x0f\n      str += v.toString(16)\n    }\n    return str\n  }\n\n  var blockstart\n  var i, j\n  var W = new Array(80)\n  var H0 = 0x67452301\n  var H1 = 0xEFCDAB89\n  var H2 = 0x98BADCFE\n  var H3 = 0x10325476\n  var H4 = 0xC3D2E1F0\n  var A, B, C, D, E\n  var temp\n\n  // utf8_encode\n  str = unescape(encodeURIComponent(str))\n  var strLen = str.length\n\n  var wordArray = []\n  for (i = 0; i < strLen - 3; i += 4) {\n    j = str.charCodeAt(i) << 24 |\n      str.charCodeAt(i + 1) << 16 |\n      str.charCodeAt(i + 2) << 8 |\n      str.charCodeAt(i + 3)\n    wordArray.push(j)\n  }\n\n  switch (strLen % 4) {\n    case 0:\n      i = 0x080000000\n      break\n    case 1:\n      i = str.charCodeAt(strLen - 1) << 24 | 0x0800000\n      break\n    case 2:\n      i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000\n      break\n    case 3:\n      i = str.charCodeAt(strLen - 3) << 24 |\n        str.charCodeAt(strLen - 2) << 16 |\n        str.charCodeAt(strLen - 1) <<\n      8 | 0x80\n      break\n  }\n\n  wordArray.push(i)\n\n  while ((wordArray.length % 16) !== 14) {\n    wordArray.push(0)\n  }\n\n  wordArray.push(strLen >>> 29)\n  wordArray.push((strLen << 3) & 0x0ffffffff)\n\n  for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n    for (i = 0; i < 16; i++) {\n      W[i] = wordArray[blockstart + i]\n    }\n    for (i = 16; i <= 79; i++) {\n      W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1)\n    }\n\n    A = H0\n    B = H1\n    C = H2\n    D = H3\n    E = H4\n\n    for (i = 0; i <= 19; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 20; i <= 39; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 40; i <= 59; i++) {\n      temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    for (i = 60; i <= 79; i++) {\n      temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff\n      E = D\n      D = C\n      C = _rotLeft(B, 30)\n      B = A\n      A = temp\n    }\n\n    H0 = (H0 + A) & 0x0ffffffff\n    H1 = (H1 + B) & 0x0ffffffff\n    H2 = (H2 + C) & 0x0ffffffff\n    H3 = (H3 + D) & 0x0ffffffff\n    H4 = (H4 + E) & 0x0ffffffff\n  }\n\n  temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4)\n  return temp.toLowerCase()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sha1_file('test/never-change.txt')"],"estarget":"es5","returns":["'0ea65a1f4b4d69712affc58240932f3eb8a2af66'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":["Relies on file_get_contents which does not work in the browser, so Node only.","Keep in mind that in accordance with PHP, the whole file is buffered and then\nhashed. We'd recommend Node's native crypto modules for faster and more\nefficient hashing"],"layout":"function","title":"php'ssha1_file in JavaScript","function":"sha1_file","category":"strings","language":"php","alias":["/functions/php/sha1_file/","/functions/strings/sha1_file/","/php/sha1_file/","/functions/sha1_file/"],"_content":"module.exports = function sha1_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sha1_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: sha1_file('test/never-change.txt')\n  //   returns 1: '0ea65a1f4b4d69712affc58240932f3eb8a2af66'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var sha1 = require('../strings/sha1')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return sha1(buf)\n}\n","source":"php/strings/sha1_file.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - sha1_file('test/never-change.txt')\nestarget: es5\nreturns:\n  - '''0ea65a1f4b4d69712affc58240932f3eb8a2af66'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes:\n  - >-\n    Relies on file_get_contents which does not work in the browser, so Node\n    only.\n  - >-\n    Keep in mind that in accordance with PHP, the whole file is buffered and\n    then\n\n    hashed. We'd recommend Node's native crypto modules for faster and more\n\n    efficient hashing\nlayout: function\ntitle: php'ssha1_file in JavaScript\nfunction: sha1_file\ncategory: strings\nlanguage: php\npermalink: php/strings/sha1_file/\nalias:\n  - /functions/php/sha1_file/\n  - /functions/strings/sha1_file/\n  - /php/sha1_file/\n  - /functions/sha1_file/\n---\nmodule.exports = function sha1_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sha1_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: sha1_file('test/never-change.txt')\n  //   returns 1: '0ea65a1f4b4d69712affc58240932f3eb8a2af66'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var sha1 = require('../strings/sha1')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return sha1(buf)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/sha1_file/index.html","comments":1,"_id":"cinoeja1e006vou9ydgv0j97f","content":"module.exports = function sha1_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sha1_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: sha1_file('test/never-change.txt')\n  //   returns 1: '0ea65a1f4b4d69712affc58240932f3eb8a2af66'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var sha1 = require('../strings/sha1')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return sha1(buf)\n}\n","excerpt":"","more":"module.exports = function sha1_file (str_filename) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/sha1_file/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: Relies on file_get_contents which does not work in the browser, so Node only.\n  //      note 2: Keep in mind that in accordance with PHP, the whole file is buffered and then\n  //      note 2: hashed. We'd recommend Node's native crypto modules for faster and more\n  //      note 2: efficient hashing\n  //   example 1: sha1_file('test/never-change.txt')\n  //   returns 1: '0ea65a1f4b4d69712affc58240932f3eb8a2af66'\n\n  var fileGetContents = require('../filesystem/file_get_contents')\n  var sha1 = require('../strings/sha1')\n  var buf = fileGetContents(str_filename)\n\n  if (buf === false) {\n    return false\n  }\n\n  return sha1(buf)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["similar_text('Hello World!', 'Hello locutus!')","similar_text('Hello World!', null)"],"estarget":"es5","returns":["8","0"],"dependencies":[],"authors":{"original by":["Rafał Kukawski (http://blog.kukawski.pl)"],"improved by":["Markus Padourek (taken from http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)"],"bugfixed by":["Chris McMacken","Jarkko Rantavuori original by findings in stackoverflow (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)"]},"notes":[],"layout":"function","title":"php'ssimilar_text in JavaScript","function":"similar_text","category":"strings","language":"php","alias":["/functions/php/similar_text/","/functions/strings/similar_text/","/php/similar_text/","/functions/similar_text/"],"_content":"module.exports = function similar_text (first, second, percent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/similar_text/\n  // original by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Chris McMacken\n  // bugfixed by: Jarkko Rantavuori original by findings in stackoverflow (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)\n  // improved by: Markus Padourek (taken from http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)\n  //   example 1: similar_text('Hello World!', 'Hello locutus!')\n  //   returns 1: 8\n  //   example 2: similar_text('Hello World!', null)\n  //   returns 2: 0\n\n  if (first === null ||\n    second === null ||\n    typeof first === 'undefined' ||\n    typeof second === 'undefined') {\n    return 0\n  }\n\n  first += ''\n  second += ''\n\n  var pos1 = 0\n  var pos2 = 0\n  var max = 0\n  var firstLength = first.length\n  var secondLength = second.length\n  var p\n  var q\n  var l\n  var sum\n\n  for (p = 0; p < firstLength; p++) {\n    for (q = 0; q < secondLength; q++) {\n      for (l = 0; (p + l < firstLength) && (q + l < secondLength) && (first.charAt(p + l) === second.charAt(q + l)); l++) { // eslint-disable-line max-len\n        // @todo: ^-- break up this crazy for loop and put the logic in its body\n      }\n      if (l > max) {\n        max = l\n        pos1 = p\n        pos2 = q\n      }\n    }\n  }\n\n  sum = max\n\n  if (sum) {\n    if (pos1 && pos2) {\n      sum += similar_text(first.substr(0, pos1), second.substr(0, pos2))\n    }\n\n    if ((pos1 + max < firstLength) && (pos2 + max < secondLength)) {\n      sum += similar_text(\n        first.substr(pos1 + max, firstLength - pos1 - max),\n        second.substr(pos2 + max,\n        secondLength - pos2 - max))\n    }\n  }\n\n  if (!percent) {\n    return sum\n  }\n\n  return (sum * 200) / (firstLength + secondLength)\n}\n","source":"php/strings/similar_text.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'similar_text(''Hello World!'', ''Hello locutus!'')'\n  - 'similar_text(''Hello World!'', null)'\nestarget: es5\nreturns:\n  - '8'\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  improved by:\n    - >-\n      Markus Padourek (taken from\n      http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)\n  bugfixed by:\n    - Chris McMacken\n    - >-\n      Jarkko Rantavuori original by findings in stackoverflow\n      (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)\nnotes: []\nlayout: function\ntitle: php'ssimilar_text in JavaScript\nfunction: similar_text\ncategory: strings\nlanguage: php\npermalink: php/strings/similar_text/\nalias:\n  - /functions/php/similar_text/\n  - /functions/strings/similar_text/\n  - /php/similar_text/\n  - /functions/similar_text/\n---\nmodule.exports = function similar_text (first, second, percent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/similar_text/\n  // original by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Chris McMacken\n  // bugfixed by: Jarkko Rantavuori original by findings in stackoverflow (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)\n  // improved by: Markus Padourek (taken from http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)\n  //   example 1: similar_text('Hello World!', 'Hello locutus!')\n  //   returns 1: 8\n  //   example 2: similar_text('Hello World!', null)\n  //   returns 2: 0\n\n  if (first === null ||\n    second === null ||\n    typeof first === 'undefined' ||\n    typeof second === 'undefined') {\n    return 0\n  }\n\n  first += ''\n  second += ''\n\n  var pos1 = 0\n  var pos2 = 0\n  var max = 0\n  var firstLength = first.length\n  var secondLength = second.length\n  var p\n  var q\n  var l\n  var sum\n\n  for (p = 0; p < firstLength; p++) {\n    for (q = 0; q < secondLength; q++) {\n      for (l = 0; (p + l < firstLength) && (q + l < secondLength) && (first.charAt(p + l) === second.charAt(q + l)); l++) { // eslint-disable-line max-len\n        // @todo: ^-- break up this crazy for loop and put the logic in its body\n      }\n      if (l > max) {\n        max = l\n        pos1 = p\n        pos2 = q\n      }\n    }\n  }\n\n  sum = max\n\n  if (sum) {\n    if (pos1 && pos2) {\n      sum += similar_text(first.substr(0, pos1), second.substr(0, pos2))\n    }\n\n    if ((pos1 + max < firstLength) && (pos2 + max < secondLength)) {\n      sum += similar_text(\n        first.substr(pos1 + max, firstLength - pos1 - max),\n        second.substr(pos2 + max,\n        secondLength - pos2 - max))\n    }\n  }\n\n  if (!percent) {\n    return sum\n  }\n\n  return (sum * 200) / (firstLength + secondLength)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/similar_text/index.html","comments":1,"_id":"cinoeja1f006wou9yqqt6put9","content":"module.exports = function similar_text (first, second, percent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/similar_text/\n  // original by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Chris McMacken\n  // bugfixed by: Jarkko Rantavuori original by findings in stackoverflow (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)\n  // improved by: Markus Padourek (taken from http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)\n  //   example 1: similar_text('Hello World!', 'Hello locutus!')\n  //   returns 1: 8\n  //   example 2: similar_text('Hello World!', null)\n  //   returns 2: 0\n\n  if (first === null ||\n    second === null ||\n    typeof first === 'undefined' ||\n    typeof second === 'undefined') {\n    return 0\n  }\n\n  first += ''\n  second += ''\n\n  var pos1 = 0\n  var pos2 = 0\n  var max = 0\n  var firstLength = first.length\n  var secondLength = second.length\n  var p\n  var q\n  var l\n  var sum\n\n  for (p = 0; p < firstLength; p++) {\n    for (q = 0; q < secondLength; q++) {\n      for (l = 0; (p + l < firstLength) && (q + l < secondLength) && (first.charAt(p + l) === second.charAt(q + l)); l++) { // eslint-disable-line max-len\n        // @todo: ^-- break up this crazy for loop and put the logic in its body\n      }\n      if (l > max) {\n        max = l\n        pos1 = p\n        pos2 = q\n      }\n    }\n  }\n\n  sum = max\n\n  if (sum) {\n    if (pos1 && pos2) {\n      sum += similar_text(first.substr(0, pos1), second.substr(0, pos2))\n    }\n\n    if ((pos1 + max < firstLength) && (pos2 + max < secondLength)) {\n      sum += similar_text(\n        first.substr(pos1 + max, firstLength - pos1 - max),\n        second.substr(pos2 + max,\n        secondLength - pos2 - max))\n    }\n  }\n\n  if (!percent) {\n    return sum\n  }\n\n  return (sum * 200) / (firstLength + secondLength)\n}\n","excerpt":"","more":"module.exports = function similar_text (first, second, percent) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/similar_text/\n  // original by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Chris McMacken\n  // bugfixed by: Jarkko Rantavuori original by findings in stackoverflow (http://stackoverflow.com/questions/14136349/how-does-similar-text-work)\n  // improved by: Markus Padourek (taken from http://www.kevinhq.com/2012/06/php-similartext-function-in-javascript_16.html)\n  //   example 1: similar_text('Hello World!', 'Hello locutus!')\n  //   returns 1: 8\n  //   example 2: similar_text('Hello World!', null)\n  //   returns 2: 0\n\n  if (first === null ||\n    second === null ||\n    typeof first === 'undefined' ||\n    typeof second === 'undefined') {\n    return 0\n  }\n\n  first += ''\n  second += ''\n\n  var pos1 = 0\n  var pos2 = 0\n  var max = 0\n  var firstLength = first.length\n  var secondLength = second.length\n  var p\n  var q\n  var l\n  var sum\n\n  for (p = 0; p < firstLength; p++) {\n    for (q = 0; q < secondLength; q++) {\n      for (l = 0; (p + l < firstLength) && (q + l < secondLength) && (first.charAt(p + l) === second.charAt(q + l)); l++) { // eslint-disable-line max-len\n        // @todo: ^-- break up this crazy for loop and put the logic in its body\n      }\n      if (l > max) {\n        max = l\n        pos1 = p\n        pos2 = q\n      }\n    }\n  }\n\n  sum = max\n\n  if (sum) {\n    if (pos1 && pos2) {\n      sum += similar_text(first.substr(0, pos1), second.substr(0, pos2))\n    }\n\n    if ((pos1 + max < firstLength) && (pos2 + max < secondLength)) {\n      sum += similar_text(\n        first.substr(pos1 + max, firstLength - pos1 - max),\n        second.substr(pos2 + max,\n        secondLength - pos2 - max))\n    }\n  }\n\n  if (!percent) {\n    return sum\n  }\n\n  return (sum * 200) / (firstLength + secondLength)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["soundex('Kevin')","soundex('Ellery')","soundex('Euler')"],"estarget":"es5","returns":["'K150'","'E460'","'E460'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)","Arnout Kazemier (http://www.3rd-Eden.com)"],"improved by":["Jack","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Kevin van Zonneveld (http://kvz.io)"],"revised by":["Rafał Kukawski (http://blog.kukawski.pl)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'ssoundex in JavaScript","function":"soundex","category":"strings","language":"php","alias":["/functions/php/soundex/","/functions/strings/soundex/","/php/soundex/","/functions/soundex/"],"_content":"module.exports = function soundex (str) {\n  //  discuss at: http://locutusjs.io/php/soundex/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // original by: Arnout Kazemier (http://www.3rd-Eden.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: soundex('Kevin')\n  //   returns 1: 'K150'\n  //   example 2: soundex('Ellery')\n  //   returns 2: 'E460'\n  //   example 3: soundex('Euler')\n  //   returns 3: 'E460'\n\n  str = (str + '').toUpperCase()\n  if (!str) {\n    return ''\n  }\n\n  var sdx = [0, 0, 0, 0]\n  var m = {\n    B: 1,\n    F: 1,\n    P: 1,\n    V: 1,\n    C: 2,\n    G: 2,\n    J: 2,\n    K: 2,\n    Q: 2,\n    S: 2,\n    X: 2,\n    Z: 2,\n    D: 3,\n    T: 3,\n    L: 4,\n    M: 5,\n    N: 5,\n    R: 6\n  }\n  var i = 0\n  var j\n  var s = 0\n  var c\n  var p\n\n  while ((c = str.charAt(i++)) && s < 4) {\n    if ((j = m[c])) {\n      if (j !== p) {\n        sdx[s++] = p = j\n      }\n    } else {\n      s += i === 1\n      p = 0\n    }\n  }\n\n  sdx[0] = str.charAt(0)\n\n  return sdx.join('')\n}\n","source":"php/strings/soundex.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - soundex('Kevin')\n  - soundex('Ellery')\n  - soundex('Euler')\nestarget: es5\nreturns:\n  - '''K150'''\n  - '''E460'''\n  - '''E460'''\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n    - 'Arnout Kazemier (http://www.3rd-Eden.com)'\n  improved by:\n    - Jack\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'ssoundex in JavaScript\nfunction: soundex\ncategory: strings\nlanguage: php\npermalink: php/strings/soundex/\nalias:\n  - /functions/php/soundex/\n  - /functions/strings/soundex/\n  - /php/soundex/\n  - /functions/soundex/\n---\nmodule.exports = function soundex (str) {\n  //  discuss at: http://locutusjs.io/php/soundex/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // original by: Arnout Kazemier (http://www.3rd-Eden.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: soundex('Kevin')\n  //   returns 1: 'K150'\n  //   example 2: soundex('Ellery')\n  //   returns 2: 'E460'\n  //   example 3: soundex('Euler')\n  //   returns 3: 'E460'\n\n  str = (str + '').toUpperCase()\n  if (!str) {\n    return ''\n  }\n\n  var sdx = [0, 0, 0, 0]\n  var m = {\n    B: 1,\n    F: 1,\n    P: 1,\n    V: 1,\n    C: 2,\n    G: 2,\n    J: 2,\n    K: 2,\n    Q: 2,\n    S: 2,\n    X: 2,\n    Z: 2,\n    D: 3,\n    T: 3,\n    L: 4,\n    M: 5,\n    N: 5,\n    R: 6\n  }\n  var i = 0\n  var j\n  var s = 0\n  var c\n  var p\n\n  while ((c = str.charAt(i++)) && s < 4) {\n    if ((j = m[c])) {\n      if (j !== p) {\n        sdx[s++] = p = j\n      }\n    } else {\n      s += i === 1\n      p = 0\n    }\n  }\n\n  sdx[0] = str.charAt(0)\n\n  return sdx.join('')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/soundex/index.html","comments":1,"_id":"cinoeja1f006xou9ymyme1mbi","content":"module.exports = function soundex (str) {\n  //  discuss at: http://locutusjs.io/php/soundex/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // original by: Arnout Kazemier (http://www.3rd-Eden.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: soundex('Kevin')\n  //   returns 1: 'K150'\n  //   example 2: soundex('Ellery')\n  //   returns 2: 'E460'\n  //   example 3: soundex('Euler')\n  //   returns 3: 'E460'\n\n  str = (str + '').toUpperCase()\n  if (!str) {\n    return ''\n  }\n\n  var sdx = [0, 0, 0, 0]\n  var m = {\n    B: 1,\n    F: 1,\n    P: 1,\n    V: 1,\n    C: 2,\n    G: 2,\n    J: 2,\n    K: 2,\n    Q: 2,\n    S: 2,\n    X: 2,\n    Z: 2,\n    D: 3,\n    T: 3,\n    L: 4,\n    M: 5,\n    N: 5,\n    R: 6\n  }\n  var i = 0\n  var j\n  var s = 0\n  var c\n  var p\n\n  while ((c = str.charAt(i++)) && s < 4) {\n    if ((j = m[c])) {\n      if (j !== p) {\n        sdx[s++] = p = j\n      }\n    } else {\n      s += i === 1\n      p = 0\n    }\n  }\n\n  sdx[0] = str.charAt(0)\n\n  return sdx.join('')\n}\n","excerpt":"","more":"module.exports = function soundex (str) {\n  //  discuss at: http://locutusjs.io/php/soundex/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // original by: Arnout Kazemier (http://www.3rd-Eden.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: soundex('Kevin')\n  //   returns 1: 'K150'\n  //   example 2: soundex('Ellery')\n  //   returns 2: 'E460'\n  //   example 3: soundex('Euler')\n  //   returns 3: 'E460'\n\n  str = (str + '').toUpperCase()\n  if (!str) {\n    return ''\n  }\n\n  var sdx = [0, 0, 0, 0]\n  var m = {\n    B: 1,\n    F: 1,\n    P: 1,\n    V: 1,\n    C: 2,\n    G: 2,\n    J: 2,\n    K: 2,\n    Q: 2,\n    S: 2,\n    X: 2,\n    Z: 2,\n    D: 3,\n    T: 3,\n    L: 4,\n    M: 5,\n    N: 5,\n    R: 6\n  }\n  var i = 0\n  var j\n  var s = 0\n  var c\n  var p\n\n  while ((c = str.charAt(i++)) && s < 4) {\n    if ((j = m[c])) {\n      if (j !== p) {\n        sdx[s++] = p = j\n      }\n    } else {\n      s += i === 1\n      p = 0\n    }\n  }\n\n  sdx[0] = str.charAt(0)\n\n  return sdx.join('')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["split(' ', 'Kevin van Zonneveld')"],"estarget":"es5","returns":["['Kevin', 'van', 'Zonneveld']"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"php'ssplit in JavaScript","function":"split","category":"strings","language":"php","alias":["/functions/php/split/","/functions/strings/split/","/php/split/","/functions/split/"],"_content":"module.exports = function split (delimiter, string) {\n  //  discuss at: http://locutusjs.io/php/split/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: split(' ', 'Kevin van Zonneveld')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n\n  var explode = require('../strings/explode')\n  return explode(delimiter, string)\n}\n","source":"php/strings/split.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'split('' '', ''Kevin van Zonneveld'')'\nestarget: es5\nreturns:\n  - '[''Kevin'', ''van'', ''Zonneveld'']'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: php'ssplit in JavaScript\nfunction: split\ncategory: strings\nlanguage: php\npermalink: php/strings/split/\nalias:\n  - /functions/php/split/\n  - /functions/strings/split/\n  - /php/split/\n  - /functions/split/\n---\nmodule.exports = function split (delimiter, string) {\n  //  discuss at: http://locutusjs.io/php/split/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: split(' ', 'Kevin van Zonneveld')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n\n  var explode = require('../strings/explode')\n  return explode(delimiter, string)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/split/index.html","comments":1,"_id":"cinoeja1f006you9yhq8t3s74","content":"module.exports = function split (delimiter, string) {\n  //  discuss at: http://locutusjs.io/php/split/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: split(' ', 'Kevin van Zonneveld')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n\n  var explode = require('../strings/explode')\n  return explode(delimiter, string)\n}\n","excerpt":"","more":"module.exports = function split (delimiter, string) {\n  //  discuss at: http://locutusjs.io/php/split/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: split(' ', 'Kevin van Zonneveld')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n\n  var explode = require('../strings/explode')\n  return explode(delimiter, string)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sprintf(\"%01.2f\", 123.1)","sprintf(\"[%10s]\", 'monkey')","sprintf(\"[%'#10s]\", 'monkey')","sprintf(\"%d\", 123456789012345)","sprintf('%-03s', 'E')"],"estarget":"es5","returns":["'123.10'","'[    monkey]'","'[####monkey]'","'123456789012345'","'E00'"],"dependencies":[],"authors":{"original by":["Ash Searle (http://hexmen.com/blog/)"],"improved by":["Michael White (http://getsprink.com)","Jack","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Dj","Allidylls"],"input by":["Paulo Freitas","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'ssprintf in JavaScript","function":"sprintf","category":"strings","language":"php","alias":["/functions/php/sprintf/","/functions/strings/sprintf/","/php/sprintf/","/functions/sprintf/"],"_content":"module.exports = function sprintf () {\n  //  discuss at: http://locutusjs.io/php/sprintf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Dj\n  // improved by: Allidylls\n  //    input by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sprintf(\"%01.2f\", 123.1)\n  //   returns 1: '123.10'\n  //   example 2: sprintf(\"[%10s]\", 'monkey')\n  //   returns 2: '[    monkey]'\n  //   example 3: sprintf(\"[%'#10s]\", 'monkey')\n  //   returns 3: '[####monkey]'\n  //   example 4: sprintf(\"%d\", 123456789012345)\n  //   returns 4: '123456789012345'\n  //   example 5: sprintf('%-03s', 'E')\n  //   returns 5: 'E00'\n\n  var regex = /%%|%(\\d+\\$)?([\\-+'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(?:\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g\n  var a = arguments\n  var i = 0\n  var format = a[i++]\n\n  var _pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' '\n    }\n    var padding = (str.length >= len) ? '' : new Array(1 + len - str.length >>> 0).join(chr)\n    return leftJustify ? str + padding : padding + str\n  }\n\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = _pad(value, minWidth, customPadChar, leftJustify)\n      } else {\n        value = [\n          value.slice(0, prefix.length),\n          _pad('', diff, '0', true),\n          value.slice(prefix.length)\n        ].join('')\n      }\n    }\n    return value\n  }\n\n  var _formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0\n    prefix = (prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base]) || ''\n    value = prefix + _pad(number.toString(base), precision || 0, '0', false)\n    return justify(value, prefix, leftJustify, minWidth, zeroPad)\n  }\n\n  // _formatString()\n  var _formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision !== null && precision !== undefined) {\n      value = value.slice(0, precision)\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar)\n  }\n\n  // doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, precision, type) {\n    var number, prefix, method, textTransform, value\n\n    if (substring === '%%') {\n      return '%'\n    }\n\n    // parse flags\n    var leftJustify = false\n    var positivePrefix = ''\n    var zeroPad = false\n    var prefixBaseX = false\n    var customPadChar = ' '\n    var flagsl = flags.length\n    var j\n    for (j = 0; j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n        case ' ':\n          positivePrefix = ' '\n          break\n        case '+':\n          positivePrefix = '+'\n          break\n        case '-':\n          leftJustify = true\n          break\n        case \"'\":\n          customPadChar = flags.charAt(j + 1)\n          break\n        case '0':\n          zeroPad = true\n          customPadChar = '0'\n          break\n        case '#':\n          prefixBaseX = true\n          break\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0\n    } else if (minWidth === '*') {\n      minWidth = +a[i++]\n    } else if (minWidth.charAt(0) === '*') {\n      minWidth = +a[minWidth.slice(1, -1)]\n    } else {\n      minWidth = +minWidth\n    }\n\n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth\n      leftJustify = true\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite')\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type === 'd') ? 0 : undefined\n    } else if (precision === '*') {\n      precision = +a[i++]\n    } else if (precision.charAt(0) === '*') {\n      precision = +a[precision.slice(1, -1)]\n    } else {\n      precision = +precision\n    }\n\n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++]\n\n    switch (type) {\n      case 's':\n        return _formatString(value + '', leftJustify, minWidth, precision, zeroPad, customPadChar)\n      case 'c':\n        return _formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad)\n      case 'b':\n        return _formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'o':\n        return _formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'x':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'X':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n        .toUpperCase()\n      case 'u':\n        return _formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'i':\n      case 'd':\n        number = +value || 0\n        // Plain Math.round doesn't just truncate\n        number = Math.round(number - number % 1)\n        prefix = number < 0 ? '-' : positivePrefix\n        value = prefix + _pad(String(Math.abs(number)), precision, '0', false)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)\n      case 'e':\n      case 'E':\n      case 'f': // @todo: Should handle locales (as per setlocale)\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value\n        prefix = number < 0 ? '-' : positivePrefix\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())]\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2]\n        value = prefix + Math.abs(number)[method](precision)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]()\n      default:\n        return substring\n    }\n  }\n\n  return format.replace(regex, doFormat)\n}\n","source":"php/strings/sprintf.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'sprintf(\"%01.2f\", 123.1)'\n  - 'sprintf(\"[%10s]\", ''monkey'')'\n  - 'sprintf(\"[%''#10s]\", ''monkey'')'\n  - 'sprintf(\"%d\", 123456789012345)'\n  - 'sprintf(''%-03s'', ''E'')'\nestarget: es5\nreturns:\n  - '''123.10'''\n  - '''[    monkey]'''\n  - '''[####monkey]'''\n  - '''123456789012345'''\n  - '''E00'''\ndependencies: []\nauthors:\n  original by:\n    - 'Ash Searle (http://hexmen.com/blog/)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - Jack\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Dj\n    - Allidylls\n  input by:\n    - Paulo Freitas\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'ssprintf in JavaScript\nfunction: sprintf\ncategory: strings\nlanguage: php\npermalink: php/strings/sprintf/\nalias:\n  - /functions/php/sprintf/\n  - /functions/strings/sprintf/\n  - /php/sprintf/\n  - /functions/sprintf/\n---\nmodule.exports = function sprintf () {\n  //  discuss at: http://locutusjs.io/php/sprintf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Dj\n  // improved by: Allidylls\n  //    input by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sprintf(\"%01.2f\", 123.1)\n  //   returns 1: '123.10'\n  //   example 2: sprintf(\"[%10s]\", 'monkey')\n  //   returns 2: '[    monkey]'\n  //   example 3: sprintf(\"[%'#10s]\", 'monkey')\n  //   returns 3: '[####monkey]'\n  //   example 4: sprintf(\"%d\", 123456789012345)\n  //   returns 4: '123456789012345'\n  //   example 5: sprintf('%-03s', 'E')\n  //   returns 5: 'E00'\n\n  var regex = /%%|%(\\d+\\$)?([\\-+'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(?:\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g\n  var a = arguments\n  var i = 0\n  var format = a[i++]\n\n  var _pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' '\n    }\n    var padding = (str.length >= len) ? '' : new Array(1 + len - str.length >>> 0).join(chr)\n    return leftJustify ? str + padding : padding + str\n  }\n\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = _pad(value, minWidth, customPadChar, leftJustify)\n      } else {\n        value = [\n          value.slice(0, prefix.length),\n          _pad('', diff, '0', true),\n          value.slice(prefix.length)\n        ].join('')\n      }\n    }\n    return value\n  }\n\n  var _formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0\n    prefix = (prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base]) || ''\n    value = prefix + _pad(number.toString(base), precision || 0, '0', false)\n    return justify(value, prefix, leftJustify, minWidth, zeroPad)\n  }\n\n  // _formatString()\n  var _formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision !== null && precision !== undefined) {\n      value = value.slice(0, precision)\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar)\n  }\n\n  // doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, precision, type) {\n    var number, prefix, method, textTransform, value\n\n    if (substring === '%%') {\n      return '%'\n    }\n\n    // parse flags\n    var leftJustify = false\n    var positivePrefix = ''\n    var zeroPad = false\n    var prefixBaseX = false\n    var customPadChar = ' '\n    var flagsl = flags.length\n    var j\n    for (j = 0; j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n        case ' ':\n          positivePrefix = ' '\n          break\n        case '+':\n          positivePrefix = '+'\n          break\n        case '-':\n          leftJustify = true\n          break\n        case \"'\":\n          customPadChar = flags.charAt(j + 1)\n          break\n        case '0':\n          zeroPad = true\n          customPadChar = '0'\n          break\n        case '#':\n          prefixBaseX = true\n          break\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0\n    } else if (minWidth === '*') {\n      minWidth = +a[i++]\n    } else if (minWidth.charAt(0) === '*') {\n      minWidth = +a[minWidth.slice(1, -1)]\n    } else {\n      minWidth = +minWidth\n    }\n\n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth\n      leftJustify = true\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite')\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type === 'd') ? 0 : undefined\n    } else if (precision === '*') {\n      precision = +a[i++]\n    } else if (precision.charAt(0) === '*') {\n      precision = +a[precision.slice(1, -1)]\n    } else {\n      precision = +precision\n    }\n\n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++]\n\n    switch (type) {\n      case 's':\n        return _formatString(value + '', leftJustify, minWidth, precision, zeroPad, customPadChar)\n      case 'c':\n        return _formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad)\n      case 'b':\n        return _formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'o':\n        return _formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'x':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'X':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n        .toUpperCase()\n      case 'u':\n        return _formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'i':\n      case 'd':\n        number = +value || 0\n        // Plain Math.round doesn't just truncate\n        number = Math.round(number - number % 1)\n        prefix = number < 0 ? '-' : positivePrefix\n        value = prefix + _pad(String(Math.abs(number)), precision, '0', false)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)\n      case 'e':\n      case 'E':\n      case 'f': // @todo: Should handle locales (as per setlocale)\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value\n        prefix = number < 0 ? '-' : positivePrefix\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())]\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2]\n        value = prefix + Math.abs(number)[method](precision)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]()\n      default:\n        return substring\n    }\n  }\n\n  return format.replace(regex, doFormat)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/sprintf/index.html","comments":1,"_id":"cinoeja1g006zou9yuxgwflpj","content":"module.exports = function sprintf () {\n  //  discuss at: http://locutusjs.io/php/sprintf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Dj\n  // improved by: Allidylls\n  //    input by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sprintf(\"%01.2f\", 123.1)\n  //   returns 1: '123.10'\n  //   example 2: sprintf(\"[%10s]\", 'monkey')\n  //   returns 2: '[    monkey]'\n  //   example 3: sprintf(\"[%'#10s]\", 'monkey')\n  //   returns 3: '[####monkey]'\n  //   example 4: sprintf(\"%d\", 123456789012345)\n  //   returns 4: '123456789012345'\n  //   example 5: sprintf('%-03s', 'E')\n  //   returns 5: 'E00'\n\n  var regex = /%%|%(\\d+\\$)?([\\-+'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(?:\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g\n  var a = arguments\n  var i = 0\n  var format = a[i++]\n\n  var _pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' '\n    }\n    var padding = (str.length >= len) ? '' : new Array(1 + len - str.length >>> 0).join(chr)\n    return leftJustify ? str + padding : padding + str\n  }\n\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = _pad(value, minWidth, customPadChar, leftJustify)\n      } else {\n        value = [\n          value.slice(0, prefix.length),\n          _pad('', diff, '0', true),\n          value.slice(prefix.length)\n        ].join('')\n      }\n    }\n    return value\n  }\n\n  var _formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0\n    prefix = (prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base]) || ''\n    value = prefix + _pad(number.toString(base), precision || 0, '0', false)\n    return justify(value, prefix, leftJustify, minWidth, zeroPad)\n  }\n\n  // _formatString()\n  var _formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision !== null && precision !== undefined) {\n      value = value.slice(0, precision)\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar)\n  }\n\n  // doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, precision, type) {\n    var number, prefix, method, textTransform, value\n\n    if (substring === '%%') {\n      return '%'\n    }\n\n    // parse flags\n    var leftJustify = false\n    var positivePrefix = ''\n    var zeroPad = false\n    var prefixBaseX = false\n    var customPadChar = ' '\n    var flagsl = flags.length\n    var j\n    for (j = 0; j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n        case ' ':\n          positivePrefix = ' '\n          break\n        case '+':\n          positivePrefix = '+'\n          break\n        case '-':\n          leftJustify = true\n          break\n        case \"'\":\n          customPadChar = flags.charAt(j + 1)\n          break\n        case '0':\n          zeroPad = true\n          customPadChar = '0'\n          break\n        case '#':\n          prefixBaseX = true\n          break\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0\n    } else if (minWidth === '*') {\n      minWidth = +a[i++]\n    } else if (minWidth.charAt(0) === '*') {\n      minWidth = +a[minWidth.slice(1, -1)]\n    } else {\n      minWidth = +minWidth\n    }\n\n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth\n      leftJustify = true\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite')\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type === 'd') ? 0 : undefined\n    } else if (precision === '*') {\n      precision = +a[i++]\n    } else if (precision.charAt(0) === '*') {\n      precision = +a[precision.slice(1, -1)]\n    } else {\n      precision = +precision\n    }\n\n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++]\n\n    switch (type) {\n      case 's':\n        return _formatString(value + '', leftJustify, minWidth, precision, zeroPad, customPadChar)\n      case 'c':\n        return _formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad)\n      case 'b':\n        return _formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'o':\n        return _formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'x':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'X':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n        .toUpperCase()\n      case 'u':\n        return _formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'i':\n      case 'd':\n        number = +value || 0\n        // Plain Math.round doesn't just truncate\n        number = Math.round(number - number % 1)\n        prefix = number < 0 ? '-' : positivePrefix\n        value = prefix + _pad(String(Math.abs(number)), precision, '0', false)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)\n      case 'e':\n      case 'E':\n      case 'f': // @todo: Should handle locales (as per setlocale)\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value\n        prefix = number < 0 ? '-' : positivePrefix\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())]\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2]\n        value = prefix + Math.abs(number)[method](precision)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]()\n      default:\n        return substring\n    }\n  }\n\n  return format.replace(regex, doFormat)\n}\n","excerpt":"","more":"module.exports = function sprintf () {\n  //  discuss at: http://locutusjs.io/php/sprintf/\n  // original by: Ash Searle (http://hexmen.com/blog/)\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Dj\n  // improved by: Allidylls\n  //    input by: Paulo Freitas\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sprintf(\"%01.2f\", 123.1)\n  //   returns 1: '123.10'\n  //   example 2: sprintf(\"[%10s]\", 'monkey')\n  //   returns 2: '[    monkey]'\n  //   example 3: sprintf(\"[%'#10s]\", 'monkey')\n  //   returns 3: '[####monkey]'\n  //   example 4: sprintf(\"%d\", 123456789012345)\n  //   returns 4: '123456789012345'\n  //   example 5: sprintf('%-03s', 'E')\n  //   returns 5: 'E00'\n\n  var regex = /%%|%(\\d+\\$)?([\\-+'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(?:\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g\n  var a = arguments\n  var i = 0\n  var format = a[i++]\n\n  var _pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' '\n    }\n    var padding = (str.length >= len) ? '' : new Array(1 + len - str.length >>> 0).join(chr)\n    return leftJustify ? str + padding : padding + str\n  }\n\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = _pad(value, minWidth, customPadChar, leftJustify)\n      } else {\n        value = [\n          value.slice(0, prefix.length),\n          _pad('', diff, '0', true),\n          value.slice(prefix.length)\n        ].join('')\n      }\n    }\n    return value\n  }\n\n  var _formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0\n    prefix = (prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base]) || ''\n    value = prefix + _pad(number.toString(base), precision || 0, '0', false)\n    return justify(value, prefix, leftJustify, minWidth, zeroPad)\n  }\n\n  // _formatString()\n  var _formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision !== null && precision !== undefined) {\n      value = value.slice(0, precision)\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar)\n  }\n\n  // doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, precision, type) {\n    var number, prefix, method, textTransform, value\n\n    if (substring === '%%') {\n      return '%'\n    }\n\n    // parse flags\n    var leftJustify = false\n    var positivePrefix = ''\n    var zeroPad = false\n    var prefixBaseX = false\n    var customPadChar = ' '\n    var flagsl = flags.length\n    var j\n    for (j = 0; j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n        case ' ':\n          positivePrefix = ' '\n          break\n        case '+':\n          positivePrefix = '+'\n          break\n        case '-':\n          leftJustify = true\n          break\n        case \"'\":\n          customPadChar = flags.charAt(j + 1)\n          break\n        case '0':\n          zeroPad = true\n          customPadChar = '0'\n          break\n        case '#':\n          prefixBaseX = true\n          break\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0\n    } else if (minWidth === '*') {\n      minWidth = +a[i++]\n    } else if (minWidth.charAt(0) === '*') {\n      minWidth = +a[minWidth.slice(1, -1)]\n    } else {\n      minWidth = +minWidth\n    }\n\n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth\n      leftJustify = true\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite')\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type === 'd') ? 0 : undefined\n    } else if (precision === '*') {\n      precision = +a[i++]\n    } else if (precision.charAt(0) === '*') {\n      precision = +a[precision.slice(1, -1)]\n    } else {\n      precision = +precision\n    }\n\n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++]\n\n    switch (type) {\n      case 's':\n        return _formatString(value + '', leftJustify, minWidth, precision, zeroPad, customPadChar)\n      case 'c':\n        return _formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad)\n      case 'b':\n        return _formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'o':\n        return _formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'x':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'X':\n        return _formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n        .toUpperCase()\n      case 'u':\n        return _formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad)\n      case 'i':\n      case 'd':\n        number = +value || 0\n        // Plain Math.round doesn't just truncate\n        number = Math.round(number - number % 1)\n        prefix = number < 0 ? '-' : positivePrefix\n        value = prefix + _pad(String(Math.abs(number)), precision, '0', false)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)\n      case 'e':\n      case 'E':\n      case 'f': // @todo: Should handle locales (as per setlocale)\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value\n        prefix = number < 0 ? '-' : positivePrefix\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())]\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2]\n        value = prefix + Math.abs(number)[method](precision)\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]()\n      default:\n        return substring\n    }\n  }\n\n  return format.replace(regex, doFormat)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["sscanf('SN/2350001', 'SN/%d')","var myVar = {}\nsscanf('SN/2350001', 'SN/%d', myVar)\nvar $result = myVar.value","sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape '$' in PHP, but not JS"],"estarget":"es5","returns":["[2350001]","2350001","[20, 10]"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'ssscanf in JavaScript","function":"sscanf","category":"strings","language":"php","alias":["/functions/php/sscanf/","/functions/strings/sscanf/","/php/sscanf/","/functions/sscanf/"],"_content":"module.exports = function sscanf (str, format) {\n  //  discuss at: http://locutusjs.io/php/sscanf/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sscanf('SN/2350001', 'SN/%d')\n  //   returns 1: [2350001]\n  //   example 2: var myVar = {}\n  //   example 2: sscanf('SN/2350001', 'SN/%d', myVar)\n  //   example 2: var $result = myVar.value\n  //   returns 2: 2350001\n  //   example 3: sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape '$' in PHP, but not JS\n  //   returns 3: [20, 10]\n\n  var retArr = []\n  var _NWS = /\\S/\n  var args = arguments\n  var digit\n\n  var _setExtraConversionSpecs = function (offset) {\n    // Since a mismatched character sets us off track from future\n    // legitimate finds, we just scan\n    // to the end for any other conversion specifications (besides a percent literal),\n    // setting them to null\n    // sscanf seems to disallow all conversion specification components (of sprintf)\n    // except for type specifiers\n    // Do not allow % in last char. class\n    // var matches = format.match(/%[+-]?([ 0]|'.)?-?\\d*(\\.\\d+)?[bcdeufFosxX]/g);\n    // Do not allow % in last char. class:\n    var matches = format.slice(offset).match(/%[cdeEufgosxX]/g)\n    // b, F,G give errors in PHP, but 'g', though also disallowed, doesn't\n    if (matches) {\n      var lgth = matches.length\n      while (lgth--) {\n        retArr.push(null)\n      }\n    }\n    return _finish()\n  }\n\n  var _finish = function () {\n    if (args.length === 2) {\n      return retArr\n    }\n    for (var i = 0; i < retArr.length; ++i) {\n      args[i + 2].value = retArr[i]\n    }\n    return i\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (assign) {\n      var remaining = str.slice(j)\n      var check = width ? remaining.substr(0, width) : remaining\n      var match = regex.exec(check)\n      // @todo: Make this more readable\n      var key = digit !== undefined\n        ? digit\n        : retArr.length\n      var testNull = retArr[key] = match\n          ? (cb\n            ? cb.apply(null, match)\n            : match[0])\n          : null\n      if (testNull === null) {\n        throw new Error('No match in string')\n      }\n      return j + match[0].length\n    }\n    return j\n  }\n\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments passed to sscanf')\n  }\n\n  // PROCESS\n  for (var i = 0, j = 0; i < format.length; i++) {\n    var width = 0\n    var assign = true\n\n    if (format.charAt(i) === '%') {\n      if (format.charAt(i + 1) === '%') {\n        if (str.charAt(j) === '%') {\n          // a matched percent literal\n          // skip beyond duplicated percent\n          ++i\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return _setExtraConversionSpecs(i + 2)\n      }\n\n      // CHARACTER FOLLOWING PERCENT IS NOT A PERCENT\n\n      // We need 'g' set to get lastIndex\n      var prePattern = new RegExp('^(?:(\\\\d+)\\\\$)?(\\\\*)?(\\\\d*)([hlL]?)', 'g')\n\n      var preConvs = prePattern.exec(format.slice(i + 1))\n\n      var tmpDigit = digit\n      if (tmpDigit && preConvs[1] === undefined) {\n        var msg = 'All groups in sscanf() must be expressed as numeric if '\n        msg += 'any have already been used'\n        throw new Error(msg)\n      }\n      digit = preConvs[1] ? parseInt(preConvs[1], 10) - 1 : undefined\n\n      assign = !preConvs[2]\n      width = parseInt(preConvs[3], 10)\n      var sizeCode = preConvs[4]\n      i += prePattern.lastIndex\n\n      // @todo: Does PHP do anything with these? Seems not to matter\n      if (sizeCode) {\n        // This would need to be processed later\n        switch (sizeCode) {\n          case 'h':\n          case 'l':\n          case 'L':\n            // Treats subsequent as short int (for d,i,n) or unsigned short int (for o,u,x)\n            // Treats subsequent as long int (for d,i,n), or unsigned long int (for o,u,x);\n            //    or as double (for e,f,g) instead of float or wchar_t instead of char\n            // Treats subsequent as long double (for e,f,g)\n            break\n          default:\n            throw new Error('Unexpected size specifier in sscanf()!')\n        }\n      }\n      // PROCESS CHARACTER\n      try {\n        // For detailed explanations, see http://web.archive.org/web/20031128125047/http://www.uwm.edu/cgi-bin/IMT/wwwman?topic=scanf%283%29&msection=\n        // Also http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sscanf.html\n        // p, S, C arguments in C function not available\n        // DOCUMENTED UNDER SSCANF\n        switch (format.charAt(i + 1)) {\n          case 'F':\n            // Not supported in PHP sscanf; the argument is treated as a float, and\n            //  presented as a floating-point number (non-locale aware)\n            // sscanf doesn't support locales, so no need for two (see %f)\n            break\n          case 'g':\n            // Not supported in PHP sscanf; shorter of %e and %f\n            // Irrelevant to input conversion\n            break\n          case 'G':\n            // Not supported in PHP sscanf; shorter of %E and %f\n            // Irrelevant to input conversion\n            break\n          case 'b':\n            // Not supported in PHP sscanf; the argument is treated as an integer,\n            // and presented as a binary number\n            // Not supported - couldn't distinguish from other integers\n            break\n          case 'i':\n            // Integer with base detection (Equivalent of 'd', but base 0 instead of 10)\n            var pattern = /([+-])?(?:(?:0x([\\da-fA-F]+))|(?:0([0-7]+))|(\\d+))/\n            j = _addNext(j, pattern, function (num, sign, hex,\n            oct, dec) {\n              return hex ? parseInt(num, 16) : oct ? parseInt(num, 8) : parseInt(num, 10)\n            })\n            break\n          case 'n':\n            // Number of characters processed so far\n            retArr[digit !== undefined ? digit : retArr.length - 1] = j\n            break\n            // DOCUMENTED UNDER SPRINTF\n          case 'c':\n            // Get character; suppresses skipping over whitespace!\n            // (but shouldn't be whitespace in format anyways, so no difference here)\n            // Non-greedy match\n            j = _addNext(j, new RegExp('.{1,' + (width || 1) + '}'))\n            break\n          case 'D':\n          case 'd':\n            // sscanf documented decimal number; equivalent of 'd';\n            // Optionally signed decimal integer\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt((sign || '') + dec, 10)\n              if (decInt < 0) {\n                // PHP also won't allow less than -2147483648\n                // integer overflow with negative\n                return decInt < -2147483648 ? -2147483648 : decInt\n              } else {\n                // PHP also won't allow greater than -2147483647\n                return decInt < 2147483647 ? decInt : 2147483647\n              }\n            })\n            break\n          case 'f':\n          case 'E':\n          case 'e':\n            // Although sscanf doesn't support locales,\n            // this is used instead of '%F'; seems to be same as %e\n            // These don't discriminate here as both allow exponential float of either case\n            j = _addNext(j, /([+-])?(?:0*)(\\d*\\.?\\d*(?:[eE]?\\d+)?)/, function (num, sign, dec) {\n              if (dec === '.') {\n                return null\n              }\n              // Ignores initial zeroes, unlike %i and parseFloat()\n              return parseFloat((sign || '') + dec)\n            })\n            break\n          case 'u':\n            // unsigned decimal integer\n            // We won't deal with integer overflows due to signs\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt(dec, 10)\n              if (sign === '-') {\n                // PHP also won't allow greater than 4294967295\n                // integer overflow with negative\n                return 4294967296 - decInt\n              } else {\n                return decInt < 4294967295 ? decInt : 4294967295\n              }\n            })\n            break\n          case 'o':\n              // Octal integer // @todo: add overflows as above?\n            j = _addNext(j, /([+-])?(?:0([0-7]+))/, function (num, sign, oct) {\n              return parseInt(num, 8)\n            })\n            break\n          case 's':\n            // Greedy match\n            j = _addNext(j, /\\S+/)\n            break\n          case 'X':\n          case 'x':\n          // Same as 'x'?\n            // @todo: add overflows as above?\n            // Initial 0x not necessary here\n            j = _addNext(j, /([+-])?(?:(?:0x)?([\\da-fA-F]+))/, function (num, sign, hex) {\n              return parseInt(num, 16)\n            })\n            break\n          case '':\n            // If no character left in expression\n            throw new Error('Missing character after percent mark in sscanf() format argument')\n          default:\n            throw new Error('Unrecognized character after percent mark in sscanf() format argument')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          return _setExtraConversionSpecs(i + 2)\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== str.charAt(j)) {\n        // @todo: Double-check i whitespace ignored in string and/or formats\n      _NWS.lastIndex = 0\n      if ((_NWS)\n        .test(str.charAt(j)) || str.charAt(j) === '') {\n        // Whitespace doesn't need to be an exact match)\n        return _setExtraConversionSpecs(i + 1)\n      } else {\n        // Adjust strings when encounter non-matching whitespace,\n        // so they align in future checks above\n        // Ok to replace with j++;?\n        str = str.slice(0, j) + str.slice(j + 1)\n        i--\n      }\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  return _finish()\n}\n","source":"php/strings/sscanf.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'sscanf(''SN/2350001'', ''SN/%d'')'\n  - |-\n    var myVar = {}\n    sscanf('SN/2350001', 'SN/%d', myVar)\n    var $result = myVar.value\n  - 'sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape ''$'' in PHP, but not JS'\nestarget: es5\nreturns:\n  - '[2350001]'\n  - '2350001'\n  - '[20, 10]'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'ssscanf in JavaScript\nfunction: sscanf\ncategory: strings\nlanguage: php\npermalink: php/strings/sscanf/\nalias:\n  - /functions/php/sscanf/\n  - /functions/strings/sscanf/\n  - /php/sscanf/\n  - /functions/sscanf/\n---\nmodule.exports = function sscanf (str, format) {\n  //  discuss at: http://locutusjs.io/php/sscanf/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sscanf('SN/2350001', 'SN/%d')\n  //   returns 1: [2350001]\n  //   example 2: var myVar = {}\n  //   example 2: sscanf('SN/2350001', 'SN/%d', myVar)\n  //   example 2: var $result = myVar.value\n  //   returns 2: 2350001\n  //   example 3: sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape '$' in PHP, but not JS\n  //   returns 3: [20, 10]\n\n  var retArr = []\n  var _NWS = /\\S/\n  var args = arguments\n  var digit\n\n  var _setExtraConversionSpecs = function (offset) {\n    // Since a mismatched character sets us off track from future\n    // legitimate finds, we just scan\n    // to the end for any other conversion specifications (besides a percent literal),\n    // setting them to null\n    // sscanf seems to disallow all conversion specification components (of sprintf)\n    // except for type specifiers\n    // Do not allow % in last char. class\n    // var matches = format.match(/%[+-]?([ 0]|'.)?-?\\d*(\\.\\d+)?[bcdeufFosxX]/g);\n    // Do not allow % in last char. class:\n    var matches = format.slice(offset).match(/%[cdeEufgosxX]/g)\n    // b, F,G give errors in PHP, but 'g', though also disallowed, doesn't\n    if (matches) {\n      var lgth = matches.length\n      while (lgth--) {\n        retArr.push(null)\n      }\n    }\n    return _finish()\n  }\n\n  var _finish = function () {\n    if (args.length === 2) {\n      return retArr\n    }\n    for (var i = 0; i < retArr.length; ++i) {\n      args[i + 2].value = retArr[i]\n    }\n    return i\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (assign) {\n      var remaining = str.slice(j)\n      var check = width ? remaining.substr(0, width) : remaining\n      var match = regex.exec(check)\n      // @todo: Make this more readable\n      var key = digit !== undefined\n        ? digit\n        : retArr.length\n      var testNull = retArr[key] = match\n          ? (cb\n            ? cb.apply(null, match)\n            : match[0])\n          : null\n      if (testNull === null) {\n        throw new Error('No match in string')\n      }\n      return j + match[0].length\n    }\n    return j\n  }\n\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments passed to sscanf')\n  }\n\n  // PROCESS\n  for (var i = 0, j = 0; i < format.length; i++) {\n    var width = 0\n    var assign = true\n\n    if (format.charAt(i) === '%') {\n      if (format.charAt(i + 1) === '%') {\n        if (str.charAt(j) === '%') {\n          // a matched percent literal\n          // skip beyond duplicated percent\n          ++i\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return _setExtraConversionSpecs(i + 2)\n      }\n\n      // CHARACTER FOLLOWING PERCENT IS NOT A PERCENT\n\n      // We need 'g' set to get lastIndex\n      var prePattern = new RegExp('^(?:(\\\\d+)\\\\$)?(\\\\*)?(\\\\d*)([hlL]?)', 'g')\n\n      var preConvs = prePattern.exec(format.slice(i + 1))\n\n      var tmpDigit = digit\n      if (tmpDigit && preConvs[1] === undefined) {\n        var msg = 'All groups in sscanf() must be expressed as numeric if '\n        msg += 'any have already been used'\n        throw new Error(msg)\n      }\n      digit = preConvs[1] ? parseInt(preConvs[1], 10) - 1 : undefined\n\n      assign = !preConvs[2]\n      width = parseInt(preConvs[3], 10)\n      var sizeCode = preConvs[4]\n      i += prePattern.lastIndex\n\n      // @todo: Does PHP do anything with these? Seems not to matter\n      if (sizeCode) {\n        // This would need to be processed later\n        switch (sizeCode) {\n          case 'h':\n          case 'l':\n          case 'L':\n            // Treats subsequent as short int (for d,i,n) or unsigned short int (for o,u,x)\n            // Treats subsequent as long int (for d,i,n), or unsigned long int (for o,u,x);\n            //    or as double (for e,f,g) instead of float or wchar_t instead of char\n            // Treats subsequent as long double (for e,f,g)\n            break\n          default:\n            throw new Error('Unexpected size specifier in sscanf()!')\n        }\n      }\n      // PROCESS CHARACTER\n      try {\n        // For detailed explanations, see http://web.archive.org/web/20031128125047/http://www.uwm.edu/cgi-bin/IMT/wwwman?topic=scanf%283%29&msection=\n        // Also http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sscanf.html\n        // p, S, C arguments in C function not available\n        // DOCUMENTED UNDER SSCANF\n        switch (format.charAt(i + 1)) {\n          case 'F':\n            // Not supported in PHP sscanf; the argument is treated as a float, and\n            //  presented as a floating-point number (non-locale aware)\n            // sscanf doesn't support locales, so no need for two (see %f)\n            break\n          case 'g':\n            // Not supported in PHP sscanf; shorter of %e and %f\n            // Irrelevant to input conversion\n            break\n          case 'G':\n            // Not supported in PHP sscanf; shorter of %E and %f\n            // Irrelevant to input conversion\n            break\n          case 'b':\n            // Not supported in PHP sscanf; the argument is treated as an integer,\n            // and presented as a binary number\n            // Not supported - couldn't distinguish from other integers\n            break\n          case 'i':\n            // Integer with base detection (Equivalent of 'd', but base 0 instead of 10)\n            var pattern = /([+-])?(?:(?:0x([\\da-fA-F]+))|(?:0([0-7]+))|(\\d+))/\n            j = _addNext(j, pattern, function (num, sign, hex,\n            oct, dec) {\n              return hex ? parseInt(num, 16) : oct ? parseInt(num, 8) : parseInt(num, 10)\n            })\n            break\n          case 'n':\n            // Number of characters processed so far\n            retArr[digit !== undefined ? digit : retArr.length - 1] = j\n            break\n            // DOCUMENTED UNDER SPRINTF\n          case 'c':\n            // Get character; suppresses skipping over whitespace!\n            // (but shouldn't be whitespace in format anyways, so no difference here)\n            // Non-greedy match\n            j = _addNext(j, new RegExp('.{1,' + (width || 1) + '}'))\n            break\n          case 'D':\n          case 'd':\n            // sscanf documented decimal number; equivalent of 'd';\n            // Optionally signed decimal integer\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt((sign || '') + dec, 10)\n              if (decInt < 0) {\n                // PHP also won't allow less than -2147483648\n                // integer overflow with negative\n                return decInt < -2147483648 ? -2147483648 : decInt\n              } else {\n                // PHP also won't allow greater than -2147483647\n                return decInt < 2147483647 ? decInt : 2147483647\n              }\n            })\n            break\n          case 'f':\n          case 'E':\n          case 'e':\n            // Although sscanf doesn't support locales,\n            // this is used instead of '%F'; seems to be same as %e\n            // These don't discriminate here as both allow exponential float of either case\n            j = _addNext(j, /([+-])?(?:0*)(\\d*\\.?\\d*(?:[eE]?\\d+)?)/, function (num, sign, dec) {\n              if (dec === '.') {\n                return null\n              }\n              // Ignores initial zeroes, unlike %i and parseFloat()\n              return parseFloat((sign || '') + dec)\n            })\n            break\n          case 'u':\n            // unsigned decimal integer\n            // We won't deal with integer overflows due to signs\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt(dec, 10)\n              if (sign === '-') {\n                // PHP also won't allow greater than 4294967295\n                // integer overflow with negative\n                return 4294967296 - decInt\n              } else {\n                return decInt < 4294967295 ? decInt : 4294967295\n              }\n            })\n            break\n          case 'o':\n              // Octal integer // @todo: add overflows as above?\n            j = _addNext(j, /([+-])?(?:0([0-7]+))/, function (num, sign, oct) {\n              return parseInt(num, 8)\n            })\n            break\n          case 's':\n            // Greedy match\n            j = _addNext(j, /\\S+/)\n            break\n          case 'X':\n          case 'x':\n          // Same as 'x'?\n            // @todo: add overflows as above?\n            // Initial 0x not necessary here\n            j = _addNext(j, /([+-])?(?:(?:0x)?([\\da-fA-F]+))/, function (num, sign, hex) {\n              return parseInt(num, 16)\n            })\n            break\n          case '':\n            // If no character left in expression\n            throw new Error('Missing character after percent mark in sscanf() format argument')\n          default:\n            throw new Error('Unrecognized character after percent mark in sscanf() format argument')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          return _setExtraConversionSpecs(i + 2)\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== str.charAt(j)) {\n        // @todo: Double-check i whitespace ignored in string and/or formats\n      _NWS.lastIndex = 0\n      if ((_NWS)\n        .test(str.charAt(j)) || str.charAt(j) === '') {\n        // Whitespace doesn't need to be an exact match)\n        return _setExtraConversionSpecs(i + 1)\n      } else {\n        // Adjust strings when encounter non-matching whitespace,\n        // so they align in future checks above\n        // Ok to replace with j++;?\n        str = str.slice(0, j) + str.slice(j + 1)\n        i--\n      }\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  return _finish()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/sscanf/index.html","comments":1,"_id":"cinoeja1g0070ou9ymour24xq","content":"module.exports = function sscanf (str, format) {\n  //  discuss at: http://locutusjs.io/php/sscanf/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sscanf('SN/2350001', 'SN/%d')\n  //   returns 1: [2350001]\n  //   example 2: var myVar = {}\n  //   example 2: sscanf('SN/2350001', 'SN/%d', myVar)\n  //   example 2: var $result = myVar.value\n  //   returns 2: 2350001\n  //   example 3: sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape '$' in PHP, but not JS\n  //   returns 3: [20, 10]\n\n  var retArr = []\n  var _NWS = /\\S/\n  var args = arguments\n  var digit\n\n  var _setExtraConversionSpecs = function (offset) {\n    // Since a mismatched character sets us off track from future\n    // legitimate finds, we just scan\n    // to the end for any other conversion specifications (besides a percent literal),\n    // setting them to null\n    // sscanf seems to disallow all conversion specification components (of sprintf)\n    // except for type specifiers\n    // Do not allow % in last char. class\n    // var matches = format.match(/%[+-]?([ 0]|'.)?-?\\d*(\\.\\d+)?[bcdeufFosxX]/g);\n    // Do not allow % in last char. class:\n    var matches = format.slice(offset).match(/%[cdeEufgosxX]/g)\n    // b, F,G give errors in PHP, but 'g', though also disallowed, doesn't\n    if (matches) {\n      var lgth = matches.length\n      while (lgth--) {\n        retArr.push(null)\n      }\n    }\n    return _finish()\n  }\n\n  var _finish = function () {\n    if (args.length === 2) {\n      return retArr\n    }\n    for (var i = 0; i < retArr.length; ++i) {\n      args[i + 2].value = retArr[i]\n    }\n    return i\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (assign) {\n      var remaining = str.slice(j)\n      var check = width ? remaining.substr(0, width) : remaining\n      var match = regex.exec(check)\n      // @todo: Make this more readable\n      var key = digit !== undefined\n        ? digit\n        : retArr.length\n      var testNull = retArr[key] = match\n          ? (cb\n            ? cb.apply(null, match)\n            : match[0])\n          : null\n      if (testNull === null) {\n        throw new Error('No match in string')\n      }\n      return j + match[0].length\n    }\n    return j\n  }\n\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments passed to sscanf')\n  }\n\n  // PROCESS\n  for (var i = 0, j = 0; i < format.length; i++) {\n    var width = 0\n    var assign = true\n\n    if (format.charAt(i) === '%') {\n      if (format.charAt(i + 1) === '%') {\n        if (str.charAt(j) === '%') {\n          // a matched percent literal\n          // skip beyond duplicated percent\n          ++i\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return _setExtraConversionSpecs(i + 2)\n      }\n\n      // CHARACTER FOLLOWING PERCENT IS NOT A PERCENT\n\n      // We need 'g' set to get lastIndex\n      var prePattern = new RegExp('^(?:(\\\\d+)\\\\$)?(\\\\*)?(\\\\d*)([hlL]?)', 'g')\n\n      var preConvs = prePattern.exec(format.slice(i + 1))\n\n      var tmpDigit = digit\n      if (tmpDigit && preConvs[1] === undefined) {\n        var msg = 'All groups in sscanf() must be expressed as numeric if '\n        msg += 'any have already been used'\n        throw new Error(msg)\n      }\n      digit = preConvs[1] ? parseInt(preConvs[1], 10) - 1 : undefined\n\n      assign = !preConvs[2]\n      width = parseInt(preConvs[3], 10)\n      var sizeCode = preConvs[4]\n      i += prePattern.lastIndex\n\n      // @todo: Does PHP do anything with these? Seems not to matter\n      if (sizeCode) {\n        // This would need to be processed later\n        switch (sizeCode) {\n          case 'h':\n          case 'l':\n          case 'L':\n            // Treats subsequent as short int (for d,i,n) or unsigned short int (for o,u,x)\n            // Treats subsequent as long int (for d,i,n), or unsigned long int (for o,u,x);\n            //    or as double (for e,f,g) instead of float or wchar_t instead of char\n            // Treats subsequent as long double (for e,f,g)\n            break\n          default:\n            throw new Error('Unexpected size specifier in sscanf()!')\n        }\n      }\n      // PROCESS CHARACTER\n      try {\n        // For detailed explanations, see http://web.archive.org/web/20031128125047/http://www.uwm.edu/cgi-bin/IMT/wwwman?topic=scanf%283%29&msection=\n        // Also http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sscanf.html\n        // p, S, C arguments in C function not available\n        // DOCUMENTED UNDER SSCANF\n        switch (format.charAt(i + 1)) {\n          case 'F':\n            // Not supported in PHP sscanf; the argument is treated as a float, and\n            //  presented as a floating-point number (non-locale aware)\n            // sscanf doesn't support locales, so no need for two (see %f)\n            break\n          case 'g':\n            // Not supported in PHP sscanf; shorter of %e and %f\n            // Irrelevant to input conversion\n            break\n          case 'G':\n            // Not supported in PHP sscanf; shorter of %E and %f\n            // Irrelevant to input conversion\n            break\n          case 'b':\n            // Not supported in PHP sscanf; the argument is treated as an integer,\n            // and presented as a binary number\n            // Not supported - couldn't distinguish from other integers\n            break\n          case 'i':\n            // Integer with base detection (Equivalent of 'd', but base 0 instead of 10)\n            var pattern = /([+-])?(?:(?:0x([\\da-fA-F]+))|(?:0([0-7]+))|(\\d+))/\n            j = _addNext(j, pattern, function (num, sign, hex,\n            oct, dec) {\n              return hex ? parseInt(num, 16) : oct ? parseInt(num, 8) : parseInt(num, 10)\n            })\n            break\n          case 'n':\n            // Number of characters processed so far\n            retArr[digit !== undefined ? digit : retArr.length - 1] = j\n            break\n            // DOCUMENTED UNDER SPRINTF\n          case 'c':\n            // Get character; suppresses skipping over whitespace!\n            // (but shouldn't be whitespace in format anyways, so no difference here)\n            // Non-greedy match\n            j = _addNext(j, new RegExp('.{1,' + (width || 1) + '}'))\n            break\n          case 'D':\n          case 'd':\n            // sscanf documented decimal number; equivalent of 'd';\n            // Optionally signed decimal integer\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt((sign || '') + dec, 10)\n              if (decInt < 0) {\n                // PHP also won't allow less than -2147483648\n                // integer overflow with negative\n                return decInt < -2147483648 ? -2147483648 : decInt\n              } else {\n                // PHP also won't allow greater than -2147483647\n                return decInt < 2147483647 ? decInt : 2147483647\n              }\n            })\n            break\n          case 'f':\n          case 'E':\n          case 'e':\n            // Although sscanf doesn't support locales,\n            // this is used instead of '%F'; seems to be same as %e\n            // These don't discriminate here as both allow exponential float of either case\n            j = _addNext(j, /([+-])?(?:0*)(\\d*\\.?\\d*(?:[eE]?\\d+)?)/, function (num, sign, dec) {\n              if (dec === '.') {\n                return null\n              }\n              // Ignores initial zeroes, unlike %i and parseFloat()\n              return parseFloat((sign || '') + dec)\n            })\n            break\n          case 'u':\n            // unsigned decimal integer\n            // We won't deal with integer overflows due to signs\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt(dec, 10)\n              if (sign === '-') {\n                // PHP also won't allow greater than 4294967295\n                // integer overflow with negative\n                return 4294967296 - decInt\n              } else {\n                return decInt < 4294967295 ? decInt : 4294967295\n              }\n            })\n            break\n          case 'o':\n              // Octal integer // @todo: add overflows as above?\n            j = _addNext(j, /([+-])?(?:0([0-7]+))/, function (num, sign, oct) {\n              return parseInt(num, 8)\n            })\n            break\n          case 's':\n            // Greedy match\n            j = _addNext(j, /\\S+/)\n            break\n          case 'X':\n          case 'x':\n          // Same as 'x'?\n            // @todo: add overflows as above?\n            // Initial 0x not necessary here\n            j = _addNext(j, /([+-])?(?:(?:0x)?([\\da-fA-F]+))/, function (num, sign, hex) {\n              return parseInt(num, 16)\n            })\n            break\n          case '':\n            // If no character left in expression\n            throw new Error('Missing character after percent mark in sscanf() format argument')\n          default:\n            throw new Error('Unrecognized character after percent mark in sscanf() format argument')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          return _setExtraConversionSpecs(i + 2)\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== str.charAt(j)) {\n        // @todo: Double-check i whitespace ignored in string and/or formats\n      _NWS.lastIndex = 0\n      if ((_NWS)\n        .test(str.charAt(j)) || str.charAt(j) === '') {\n        // Whitespace doesn't need to be an exact match)\n        return _setExtraConversionSpecs(i + 1)\n      } else {\n        // Adjust strings when encounter non-matching whitespace,\n        // so they align in future checks above\n        // Ok to replace with j++;?\n        str = str.slice(0, j) + str.slice(j + 1)\n        i--\n      }\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  return _finish()\n}\n","excerpt":"","more":"module.exports = function sscanf (str, format) {\n  //  discuss at: http://locutusjs.io/php/sscanf/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: sscanf('SN/2350001', 'SN/%d')\n  //   returns 1: [2350001]\n  //   example 2: var myVar = {}\n  //   example 2: sscanf('SN/2350001', 'SN/%d', myVar)\n  //   example 2: var $result = myVar.value\n  //   returns 2: 2350001\n  //   example 3: sscanf(\"10--20\", \"%2$d--%1$d\") // Must escape '$' in PHP, but not JS\n  //   returns 3: [20, 10]\n\n  var retArr = []\n  var _NWS = /\\S/\n  var args = arguments\n  var digit\n\n  var _setExtraConversionSpecs = function (offset) {\n    // Since a mismatched character sets us off track from future\n    // legitimate finds, we just scan\n    // to the end for any other conversion specifications (besides a percent literal),\n    // setting them to null\n    // sscanf seems to disallow all conversion specification components (of sprintf)\n    // except for type specifiers\n    // Do not allow % in last char. class\n    // var matches = format.match(/%[+-]?([ 0]|'.)?-?\\d*(\\.\\d+)?[bcdeufFosxX]/g);\n    // Do not allow % in last char. class:\n    var matches = format.slice(offset).match(/%[cdeEufgosxX]/g)\n    // b, F,G give errors in PHP, but 'g', though also disallowed, doesn't\n    if (matches) {\n      var lgth = matches.length\n      while (lgth--) {\n        retArr.push(null)\n      }\n    }\n    return _finish()\n  }\n\n  var _finish = function () {\n    if (args.length === 2) {\n      return retArr\n    }\n    for (var i = 0; i < retArr.length; ++i) {\n      args[i + 2].value = retArr[i]\n    }\n    return i\n  }\n\n  var _addNext = function (j, regex, cb) {\n    if (assign) {\n      var remaining = str.slice(j)\n      var check = width ? remaining.substr(0, width) : remaining\n      var match = regex.exec(check)\n      // @todo: Make this more readable\n      var key = digit !== undefined\n        ? digit\n        : retArr.length\n      var testNull = retArr[key] = match\n          ? (cb\n            ? cb.apply(null, match)\n            : match[0])\n          : null\n      if (testNull === null) {\n        throw new Error('No match in string')\n      }\n      return j + match[0].length\n    }\n    return j\n  }\n\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments passed to sscanf')\n  }\n\n  // PROCESS\n  for (var i = 0, j = 0; i < format.length; i++) {\n    var width = 0\n    var assign = true\n\n    if (format.charAt(i) === '%') {\n      if (format.charAt(i + 1) === '%') {\n        if (str.charAt(j) === '%') {\n          // a matched percent literal\n          // skip beyond duplicated percent\n          ++i\n          ++j\n          continue\n        }\n        // Format indicated a percent literal, but not actually present\n        return _setExtraConversionSpecs(i + 2)\n      }\n\n      // CHARACTER FOLLOWING PERCENT IS NOT A PERCENT\n\n      // We need 'g' set to get lastIndex\n      var prePattern = new RegExp('^(?:(\\\\d+)\\\\$)?(\\\\*)?(\\\\d*)([hlL]?)', 'g')\n\n      var preConvs = prePattern.exec(format.slice(i + 1))\n\n      var tmpDigit = digit\n      if (tmpDigit && preConvs[1] === undefined) {\n        var msg = 'All groups in sscanf() must be expressed as numeric if '\n        msg += 'any have already been used'\n        throw new Error(msg)\n      }\n      digit = preConvs[1] ? parseInt(preConvs[1], 10) - 1 : undefined\n\n      assign = !preConvs[2]\n      width = parseInt(preConvs[3], 10)\n      var sizeCode = preConvs[4]\n      i += prePattern.lastIndex\n\n      // @todo: Does PHP do anything with these? Seems not to matter\n      if (sizeCode) {\n        // This would need to be processed later\n        switch (sizeCode) {\n          case 'h':\n          case 'l':\n          case 'L':\n            // Treats subsequent as short int (for d,i,n) or unsigned short int (for o,u,x)\n            // Treats subsequent as long int (for d,i,n), or unsigned long int (for o,u,x);\n            //    or as double (for e,f,g) instead of float or wchar_t instead of char\n            // Treats subsequent as long double (for e,f,g)\n            break\n          default:\n            throw new Error('Unexpected size specifier in sscanf()!')\n        }\n      }\n      // PROCESS CHARACTER\n      try {\n        // For detailed explanations, see http://web.archive.org/web/20031128125047/http://www.uwm.edu/cgi-bin/IMT/wwwman?topic=scanf%283%29&msection=\n        // Also http://www.mathworks.com/access/helpdesk/help/techdoc/ref/sscanf.html\n        // p, S, C arguments in C function not available\n        // DOCUMENTED UNDER SSCANF\n        switch (format.charAt(i + 1)) {\n          case 'F':\n            // Not supported in PHP sscanf; the argument is treated as a float, and\n            //  presented as a floating-point number (non-locale aware)\n            // sscanf doesn't support locales, so no need for two (see %f)\n            break\n          case 'g':\n            // Not supported in PHP sscanf; shorter of %e and %f\n            // Irrelevant to input conversion\n            break\n          case 'G':\n            // Not supported in PHP sscanf; shorter of %E and %f\n            // Irrelevant to input conversion\n            break\n          case 'b':\n            // Not supported in PHP sscanf; the argument is treated as an integer,\n            // and presented as a binary number\n            // Not supported - couldn't distinguish from other integers\n            break\n          case 'i':\n            // Integer with base detection (Equivalent of 'd', but base 0 instead of 10)\n            var pattern = /([+-])?(?:(?:0x([\\da-fA-F]+))|(?:0([0-7]+))|(\\d+))/\n            j = _addNext(j, pattern, function (num, sign, hex,\n            oct, dec) {\n              return hex ? parseInt(num, 16) : oct ? parseInt(num, 8) : parseInt(num, 10)\n            })\n            break\n          case 'n':\n            // Number of characters processed so far\n            retArr[digit !== undefined ? digit : retArr.length - 1] = j\n            break\n            // DOCUMENTED UNDER SPRINTF\n          case 'c':\n            // Get character; suppresses skipping over whitespace!\n            // (but shouldn't be whitespace in format anyways, so no difference here)\n            // Non-greedy match\n            j = _addNext(j, new RegExp('.{1,' + (width || 1) + '}'))\n            break\n          case 'D':\n          case 'd':\n            // sscanf documented decimal number; equivalent of 'd';\n            // Optionally signed decimal integer\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt((sign || '') + dec, 10)\n              if (decInt < 0) {\n                // PHP also won't allow less than -2147483648\n                // integer overflow with negative\n                return decInt < -2147483648 ? -2147483648 : decInt\n              } else {\n                // PHP also won't allow greater than -2147483647\n                return decInt < 2147483647 ? decInt : 2147483647\n              }\n            })\n            break\n          case 'f':\n          case 'E':\n          case 'e':\n            // Although sscanf doesn't support locales,\n            // this is used instead of '%F'; seems to be same as %e\n            // These don't discriminate here as both allow exponential float of either case\n            j = _addNext(j, /([+-])?(?:0*)(\\d*\\.?\\d*(?:[eE]?\\d+)?)/, function (num, sign, dec) {\n              if (dec === '.') {\n                return null\n              }\n              // Ignores initial zeroes, unlike %i and parseFloat()\n              return parseFloat((sign || '') + dec)\n            })\n            break\n          case 'u':\n            // unsigned decimal integer\n            // We won't deal with integer overflows due to signs\n            j = _addNext(j, /([+-])?(?:0*)(\\d+)/, function (num, sign, dec) {\n              // Ignores initial zeroes, unlike %i and parseInt()\n              var decInt = parseInt(dec, 10)\n              if (sign === '-') {\n                // PHP also won't allow greater than 4294967295\n                // integer overflow with negative\n                return 4294967296 - decInt\n              } else {\n                return decInt < 4294967295 ? decInt : 4294967295\n              }\n            })\n            break\n          case 'o':\n              // Octal integer // @todo: add overflows as above?\n            j = _addNext(j, /([+-])?(?:0([0-7]+))/, function (num, sign, oct) {\n              return parseInt(num, 8)\n            })\n            break\n          case 's':\n            // Greedy match\n            j = _addNext(j, /\\S+/)\n            break\n          case 'X':\n          case 'x':\n          // Same as 'x'?\n            // @todo: add overflows as above?\n            // Initial 0x not necessary here\n            j = _addNext(j, /([+-])?(?:(?:0x)?([\\da-fA-F]+))/, function (num, sign, hex) {\n              return parseInt(num, 16)\n            })\n            break\n          case '':\n            // If no character left in expression\n            throw new Error('Missing character after percent mark in sscanf() format argument')\n          default:\n            throw new Error('Unrecognized character after percent mark in sscanf() format argument')\n        }\n      } catch (e) {\n        if (e === 'No match in string') {\n          // Allow us to exit\n          return _setExtraConversionSpecs(i + 2)\n        }\n        // Calculate skipping beyond initial percent too\n      }\n      ++i\n    } else if (format.charAt(i) !== str.charAt(j)) {\n        // @todo: Double-check i whitespace ignored in string and/or formats\n      _NWS.lastIndex = 0\n      if ((_NWS)\n        .test(str.charAt(j)) || str.charAt(j) === '') {\n        // Whitespace doesn't need to be an exact match)\n        return _setExtraConversionSpecs(i + 1)\n      } else {\n        // Adjust strings when encounter non-matching whitespace,\n        // so they align in future checks above\n        // Ok to replace with j++;?\n        str = str.slice(0, j) + str.slice(j + 1)\n        i--\n      }\n    } else {\n      j++\n    }\n  }\n\n  // POST-PROCESSING\n  return _finish()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_getcsv('\"abc\",\"def\",\"ghi\"')","str_getcsv('\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"', null, null, '\"')"],"estarget":"es5","returns":["['abc', 'def', 'ghi']","['row2\"cell1', 'row2cell2', 'row2cell3']"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstr_getcsv in JavaScript","function":"str_getcsv","category":"strings","language":"php","alias":["/functions/php/str_getcsv/","/functions/strings/str_getcsv/","/php/str_getcsv/","/functions/str_getcsv/"],"_content":"module.exports = function str_getcsv (input, delimiter, enclosure, escape) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_getcsv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_getcsv('\"abc\",\"def\",\"ghi\"')\n  //   returns 1: ['abc', 'def', 'ghi']\n  //   example 2: str_getcsv('\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"', null, null, '\"')\n  //   returns 2: ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n  /*\n  // These test cases allowing for missing delimiters are not currently supported\n    str_getcsv('\"row2\"\"cell1\",row2cell2,row2cell3', null, null, '\"');\n    ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",row1cell3', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1cell3']\n\n    str_getcsv('\"row2\"\"cell1\",row2cell2,\"row2\"\"\"\"cell3\"');\n    ['row2\"cell1', 'row2cell2', 'row2\"\"cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",\"row1\"\",\"\"cell3\"', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1\",\"cell3'];\n\n    Should also test newlines within\n  */\n\n  var i\n  var inpLen\n  var output = []\n  var _backwards = function (str) {\n    // We need to go backwards to simulate negative look-behind (don't split on\n    // an escaped enclosure even if followed by the delimiter and another enclosure mark)\n    return str.split('').reverse().join('')\n  }\n  var _pq = function (str) {\n    // preg_quote()\n    return String(str).replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  delimiter = delimiter || ','\n  enclosure = enclosure || '\"'\n  escape = escape || '\\\\'\n  var pqEnc = _pq(enclosure)\n  var pqEsc = _pq(escape)\n\n  input = input\n    .replace(new RegExp('^\\\\s*' + pqEnc), '')\n    .replace(new RegExp(pqEnc + '\\\\s*$'), '')\n\n  // PHP behavior may differ by including whitespace even outside of the enclosure\n  input = _backwards(input)\n    .split(new RegExp(pqEnc + '\\\\s*' + _pq(delimiter) + '\\\\s*' + pqEnc + '(?!' + pqEsc + ')', 'g'))\n    .reverse()\n\n  for (i = 0, inpLen = input.length; i < inpLen; i++) {\n    output.push(_backwards(input[i])\n      .replace(new RegExp(pqEsc + pqEnc, 'g'), enclosure))\n  }\n\n  return output\n}\n","source":"php/strings/str_getcsv.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_getcsv(''\"abc\",\"def\",\"ghi\"'')'\n  - 'str_getcsv(''\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"'', null, null, ''\"'')'\nestarget: es5\nreturns:\n  - '[''abc'', ''def'', ''ghi'']'\n  - '[''row2\"cell1'', ''row2cell2'', ''row2cell3'']'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstr_getcsv in JavaScript\nfunction: str_getcsv\ncategory: strings\nlanguage: php\npermalink: php/strings/str_getcsv/\nalias:\n  - /functions/php/str_getcsv/\n  - /functions/strings/str_getcsv/\n  - /php/str_getcsv/\n  - /functions/str_getcsv/\n---\nmodule.exports = function str_getcsv (input, delimiter, enclosure, escape) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_getcsv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_getcsv('\"abc\",\"def\",\"ghi\"')\n  //   returns 1: ['abc', 'def', 'ghi']\n  //   example 2: str_getcsv('\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"', null, null, '\"')\n  //   returns 2: ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n  /*\n  // These test cases allowing for missing delimiters are not currently supported\n    str_getcsv('\"row2\"\"cell1\",row2cell2,row2cell3', null, null, '\"');\n    ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",row1cell3', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1cell3']\n\n    str_getcsv('\"row2\"\"cell1\",row2cell2,\"row2\"\"\"\"cell3\"');\n    ['row2\"cell1', 'row2cell2', 'row2\"\"cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",\"row1\"\",\"\"cell3\"', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1\",\"cell3'];\n\n    Should also test newlines within\n  */\n\n  var i\n  var inpLen\n  var output = []\n  var _backwards = function (str) {\n    // We need to go backwards to simulate negative look-behind (don't split on\n    // an escaped enclosure even if followed by the delimiter and another enclosure mark)\n    return str.split('').reverse().join('')\n  }\n  var _pq = function (str) {\n    // preg_quote()\n    return String(str).replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  delimiter = delimiter || ','\n  enclosure = enclosure || '\"'\n  escape = escape || '\\\\'\n  var pqEnc = _pq(enclosure)\n  var pqEsc = _pq(escape)\n\n  input = input\n    .replace(new RegExp('^\\\\s*' + pqEnc), '')\n    .replace(new RegExp(pqEnc + '\\\\s*$'), '')\n\n  // PHP behavior may differ by including whitespace even outside of the enclosure\n  input = _backwards(input)\n    .split(new RegExp(pqEnc + '\\\\s*' + _pq(delimiter) + '\\\\s*' + pqEnc + '(?!' + pqEsc + ')', 'g'))\n    .reverse()\n\n  for (i = 0, inpLen = input.length; i < inpLen; i++) {\n    output.push(_backwards(input[i])\n      .replace(new RegExp(pqEsc + pqEnc, 'g'), enclosure))\n  }\n\n  return output\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_getcsv/index.html","comments":1,"_id":"cinoeja1g0071ou9ydhdsgnjz","content":"module.exports = function str_getcsv (input, delimiter, enclosure, escape) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_getcsv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_getcsv('\"abc\",\"def\",\"ghi\"')\n  //   returns 1: ['abc', 'def', 'ghi']\n  //   example 2: str_getcsv('\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"', null, null, '\"')\n  //   returns 2: ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n  /*\n  // These test cases allowing for missing delimiters are not currently supported\n    str_getcsv('\"row2\"\"cell1\",row2cell2,row2cell3', null, null, '\"');\n    ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",row1cell3', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1cell3']\n\n    str_getcsv('\"row2\"\"cell1\",row2cell2,\"row2\"\"\"\"cell3\"');\n    ['row2\"cell1', 'row2cell2', 'row2\"\"cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",\"row1\"\",\"\"cell3\"', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1\",\"cell3'];\n\n    Should also test newlines within\n  */\n\n  var i\n  var inpLen\n  var output = []\n  var _backwards = function (str) {\n    // We need to go backwards to simulate negative look-behind (don't split on\n    // an escaped enclosure even if followed by the delimiter and another enclosure mark)\n    return str.split('').reverse().join('')\n  }\n  var _pq = function (str) {\n    // preg_quote()\n    return String(str).replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  delimiter = delimiter || ','\n  enclosure = enclosure || '\"'\n  escape = escape || '\\\\'\n  var pqEnc = _pq(enclosure)\n  var pqEsc = _pq(escape)\n\n  input = input\n    .replace(new RegExp('^\\\\s*' + pqEnc), '')\n    .replace(new RegExp(pqEnc + '\\\\s*$'), '')\n\n  // PHP behavior may differ by including whitespace even outside of the enclosure\n  input = _backwards(input)\n    .split(new RegExp(pqEnc + '\\\\s*' + _pq(delimiter) + '\\\\s*' + pqEnc + '(?!' + pqEsc + ')', 'g'))\n    .reverse()\n\n  for (i = 0, inpLen = input.length; i < inpLen; i++) {\n    output.push(_backwards(input[i])\n      .replace(new RegExp(pqEsc + pqEnc, 'g'), enclosure))\n  }\n\n  return output\n}\n","excerpt":"","more":"module.exports = function str_getcsv (input, delimiter, enclosure, escape) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_getcsv/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_getcsv('\"abc\",\"def\",\"ghi\"')\n  //   returns 1: ['abc', 'def', 'ghi']\n  //   example 2: str_getcsv('\"row2\"\"cell1\",\"row2cell2\",\"row2cell3\"', null, null, '\"')\n  //   returns 2: ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n  /*\n  // These test cases allowing for missing delimiters are not currently supported\n    str_getcsv('\"row2\"\"cell1\",row2cell2,row2cell3', null, null, '\"');\n    ['row2\"cell1', 'row2cell2', 'row2cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",row1cell3', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1cell3']\n\n    str_getcsv('\"row2\"\"cell1\",row2cell2,\"row2\"\"\"\"cell3\"');\n    ['row2\"cell1', 'row2cell2', 'row2\"\"cell3']\n\n    str_getcsv('row1cell1,\"row1,cell2\",\"row1\"\",\"\"cell3\"', null, null, '\"');\n    ['row1cell1', 'row1,cell2', 'row1\",\"cell3'];\n\n    Should also test newlines within\n  */\n\n  var i\n  var inpLen\n  var output = []\n  var _backwards = function (str) {\n    // We need to go backwards to simulate negative look-behind (don't split on\n    // an escaped enclosure even if followed by the delimiter and another enclosure mark)\n    return str.split('').reverse().join('')\n  }\n  var _pq = function (str) {\n    // preg_quote()\n    return String(str).replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n\n  delimiter = delimiter || ','\n  enclosure = enclosure || '\"'\n  escape = escape || '\\\\'\n  var pqEnc = _pq(enclosure)\n  var pqEsc = _pq(escape)\n\n  input = input\n    .replace(new RegExp('^\\\\s*' + pqEnc), '')\n    .replace(new RegExp(pqEnc + '\\\\s*$'), '')\n\n  // PHP behavior may differ by including whitespace even outside of the enclosure\n  input = _backwards(input)\n    .split(new RegExp(pqEnc + '\\\\s*' + _pq(delimiter) + '\\\\s*' + pqEnc + '(?!' + pqEsc + ')', 'g'))\n    .reverse()\n\n  for (i = 0, inpLen = input.length; i < inpLen; i++) {\n    output.push(_backwards(input[i])\n      .replace(new RegExp(pqEsc + pqEnc, 'g'), enclosure))\n  }\n\n  return output\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_ireplace('M', 'e', 'name')","var $countObj = {}\nstr_ireplace('M', 'e', 'name', $countObj)\nvar $result = $countObj.value"],"estarget":"es5","returns":["'naee'","1"],"dependencies":[],"authors":{"original by":["Glen Arason (http://CanadianDomainRegistry.ca)"]},"notes":["Case-insensitive version of str_replace()\nCompliant with PHP 5.0 str_ireplace() Full details at:\nhttp://ca3.php.net/manual/en/function.str-ireplace.php","The countObj parameter (optional) if used must be passed in as a\nobject. The count will then be written by reference into it's `value` property"],"layout":"function","title":"php'sstr_ireplace in JavaScript","function":"str_ireplace","category":"strings","language":"php","alias":["/functions/php/str_ireplace/","/functions/strings/str_ireplace/","/php/str_ireplace/","/functions/str_ireplace/"],"_content":"module.exports = function str_ireplace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_ireplace/\n  // original by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //      note 1: Case-insensitive version of str_replace()\n  //      note 1: Compliant with PHP 5.0 str_ireplace() Full details at:\n  //      note 1: http://ca3.php.net/manual/en/function.str-ireplace.php\n  //      note 2: The countObj parameter (optional) if used must be passed in as a\n  //      note 2: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_ireplace('M', 'e', 'name')\n  //   returns 1: 'naee'\n  //   example 2: var $countObj = {}\n  //   example 2: str_ireplace('M', 'e', 'name', $countObj)\n  //   example 2: var $result = $countObj.value\n  //   returns 2: 1\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = ''\n  var r = ''\n  var s = ''\n  var ra = ''\n  var otemp = ''\n  var oi = ''\n  var ofjl = ''\n  var os = subject\n  var osa = Object.prototype.toString.call(os) === '[object Array]'\n  // var sa = ''\n\n  if (typeof (search) === 'object') {\n    temp = search\n    search = []\n    for (i = 0; i < temp.length; i += 1) {\n      search[i] = temp[i].toLowerCase()\n    }\n  } else {\n    search = search.toLowerCase()\n  }\n\n  if (typeof (subject) === 'object') {\n    temp = subject\n    subject = []\n    for (i = 0; i < temp.length; i += 1) {\n      subject[i] = temp[i].toLowerCase()\n    }\n  } else {\n    subject = subject.toLowerCase()\n  }\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n  }\n\n  temp = ''\n  f = [].concat(search)\n  r = [].concat(replace)\n  ra = Object.prototype.toString.call(r) === '[object Array]'\n  s = subject\n  // sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n  os = [].concat(os)\n\n  if (countObj) {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      otemp = os[i] + ''\n      oi = temp.indexOf(f[j])\n      ofjl = f[j].length\n      if (oi >= 0) {\n        os[i] = (otemp).split(otemp.substr(oi, ofjl)).join(repl)\n      }\n\n      if (countObj) {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n\n  return osa ? os : os[0]\n}\n","source":"php/strings/str_ireplace.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_ireplace(''M'', ''e'', ''name'')'\n  - |-\n    var $countObj = {}\n    str_ireplace('M', 'e', 'name', $countObj)\n    var $result = $countObj.value\nestarget: es5\nreturns:\n  - '''naee'''\n  - '1'\ndependencies: []\nauthors:\n  original by:\n    - 'Glen Arason (http://CanadianDomainRegistry.ca)'\nnotes:\n  - |-\n    Case-insensitive version of str_replace()\n    Compliant with PHP 5.0 str_ireplace() Full details at:\n    http://ca3.php.net/manual/en/function.str-ireplace.php\n  - >-\n    The countObj parameter (optional) if used must be passed in as a\n\n    object. The count will then be written by reference into it's `value`\n    property\nlayout: function\ntitle: php'sstr_ireplace in JavaScript\nfunction: str_ireplace\ncategory: strings\nlanguage: php\npermalink: php/strings/str_ireplace/\nalias:\n  - /functions/php/str_ireplace/\n  - /functions/strings/str_ireplace/\n  - /php/str_ireplace/\n  - /functions/str_ireplace/\n---\nmodule.exports = function str_ireplace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_ireplace/\n  // original by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //      note 1: Case-insensitive version of str_replace()\n  //      note 1: Compliant with PHP 5.0 str_ireplace() Full details at:\n  //      note 1: http://ca3.php.net/manual/en/function.str-ireplace.php\n  //      note 2: The countObj parameter (optional) if used must be passed in as a\n  //      note 2: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_ireplace('M', 'e', 'name')\n  //   returns 1: 'naee'\n  //   example 2: var $countObj = {}\n  //   example 2: str_ireplace('M', 'e', 'name', $countObj)\n  //   example 2: var $result = $countObj.value\n  //   returns 2: 1\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = ''\n  var r = ''\n  var s = ''\n  var ra = ''\n  var otemp = ''\n  var oi = ''\n  var ofjl = ''\n  var os = subject\n  var osa = Object.prototype.toString.call(os) === '[object Array]'\n  // var sa = ''\n\n  if (typeof (search) === 'object') {\n    temp = search\n    search = []\n    for (i = 0; i < temp.length; i += 1) {\n      search[i] = temp[i].toLowerCase()\n    }\n  } else {\n    search = search.toLowerCase()\n  }\n\n  if (typeof (subject) === 'object') {\n    temp = subject\n    subject = []\n    for (i = 0; i < temp.length; i += 1) {\n      subject[i] = temp[i].toLowerCase()\n    }\n  } else {\n    subject = subject.toLowerCase()\n  }\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n  }\n\n  temp = ''\n  f = [].concat(search)\n  r = [].concat(replace)\n  ra = Object.prototype.toString.call(r) === '[object Array]'\n  s = subject\n  // sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n  os = [].concat(os)\n\n  if (countObj) {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      otemp = os[i] + ''\n      oi = temp.indexOf(f[j])\n      ofjl = f[j].length\n      if (oi >= 0) {\n        os[i] = (otemp).split(otemp.substr(oi, ofjl)).join(repl)\n      }\n\n      if (countObj) {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n\n  return osa ? os : os[0]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_ireplace/index.html","comments":1,"_id":"cinoeja1n0072ou9y2hbeju2v","content":"module.exports = function str_ireplace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_ireplace/\n  // original by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //      note 1: Case-insensitive version of str_replace()\n  //      note 1: Compliant with PHP 5.0 str_ireplace() Full details at:\n  //      note 1: http://ca3.php.net/manual/en/function.str-ireplace.php\n  //      note 2: The countObj parameter (optional) if used must be passed in as a\n  //      note 2: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_ireplace('M', 'e', 'name')\n  //   returns 1: 'naee'\n  //   example 2: var $countObj = {}\n  //   example 2: str_ireplace('M', 'e', 'name', $countObj)\n  //   example 2: var $result = $countObj.value\n  //   returns 2: 1\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = ''\n  var r = ''\n  var s = ''\n  var ra = ''\n  var otemp = ''\n  var oi = ''\n  var ofjl = ''\n  var os = subject\n  var osa = Object.prototype.toString.call(os) === '[object Array]'\n  // var sa = ''\n\n  if (typeof (search) === 'object') {\n    temp = search\n    search = []\n    for (i = 0; i < temp.length; i += 1) {\n      search[i] = temp[i].toLowerCase()\n    }\n  } else {\n    search = search.toLowerCase()\n  }\n\n  if (typeof (subject) === 'object') {\n    temp = subject\n    subject = []\n    for (i = 0; i < temp.length; i += 1) {\n      subject[i] = temp[i].toLowerCase()\n    }\n  } else {\n    subject = subject.toLowerCase()\n  }\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n  }\n\n  temp = ''\n  f = [].concat(search)\n  r = [].concat(replace)\n  ra = Object.prototype.toString.call(r) === '[object Array]'\n  s = subject\n  // sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n  os = [].concat(os)\n\n  if (countObj) {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      otemp = os[i] + ''\n      oi = temp.indexOf(f[j])\n      ofjl = f[j].length\n      if (oi >= 0) {\n        os[i] = (otemp).split(otemp.substr(oi, ofjl)).join(repl)\n      }\n\n      if (countObj) {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n\n  return osa ? os : os[0]\n}\n","excerpt":"","more":"module.exports = function str_ireplace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_ireplace/\n  // original by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //      note 1: Case-insensitive version of str_replace()\n  //      note 1: Compliant with PHP 5.0 str_ireplace() Full details at:\n  //      note 1: http://ca3.php.net/manual/en/function.str-ireplace.php\n  //      note 2: The countObj parameter (optional) if used must be passed in as a\n  //      note 2: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_ireplace('M', 'e', 'name')\n  //   returns 1: 'naee'\n  //   example 2: var $countObj = {}\n  //   example 2: str_ireplace('M', 'e', 'name', $countObj)\n  //   example 2: var $result = $countObj.value\n  //   returns 2: 1\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = ''\n  var r = ''\n  var s = ''\n  var ra = ''\n  var otemp = ''\n  var oi = ''\n  var ofjl = ''\n  var os = subject\n  var osa = Object.prototype.toString.call(os) === '[object Array]'\n  // var sa = ''\n\n  if (typeof (search) === 'object') {\n    temp = search\n    search = []\n    for (i = 0; i < temp.length; i += 1) {\n      search[i] = temp[i].toLowerCase()\n    }\n  } else {\n    search = search.toLowerCase()\n  }\n\n  if (typeof (subject) === 'object') {\n    temp = subject\n    subject = []\n    for (i = 0; i < temp.length; i += 1) {\n      subject[i] = temp[i].toLowerCase()\n    }\n  } else {\n    subject = subject.toLowerCase()\n  }\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n  }\n\n  temp = ''\n  f = [].concat(search)\n  r = [].concat(replace)\n  ra = Object.prototype.toString.call(r) === '[object Array]'\n  s = subject\n  // sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n  os = [].concat(os)\n\n  if (countObj) {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      otemp = os[i] + ''\n      oi = temp.indexOf(f[j])\n      ofjl = f[j].length\n      if (oi >= 0) {\n        os[i] = (otemp).split(otemp.substr(oi, ofjl)).join(repl)\n      }\n\n      if (countObj) {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n\n  return osa ? os : os[0]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')","str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')"],"estarget":"es5","returns":["'-=-=-=-=-=-Kevin van Zonneveld'","'------Kevin van Zonneveld-----'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Michael White (http://getsprink.com)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Marco van Oort"]},"notes":[],"layout":"function","title":"php'sstr_pad in JavaScript","function":"str_pad","category":"strings","language":"php","alias":["/functions/php/str_pad/","/functions/strings/str_pad/","/php/str_pad/","/functions/str_pad/"],"_content":"module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n","source":"php/strings/str_pad.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_pad(''Kevin van Zonneveld'', 30, ''-='', ''STR_PAD_LEFT'')'\n  - 'str_pad(''Kevin van Zonneveld'', 30, ''-'', ''STR_PAD_BOTH'')'\nestarget: es5\nreturns:\n  - '''-=-=-=-=-=-Kevin van Zonneveld'''\n  - '''------Kevin van Zonneveld-----'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Marco van Oort\nnotes: []\nlayout: function\ntitle: php'sstr_pad in JavaScript\nfunction: str_pad\ncategory: strings\nlanguage: php\npermalink: php/strings/str_pad/\nalias:\n  - /functions/php/str_pad/\n  - /functions/strings/str_pad/\n  - /php/str_pad/\n  - /functions/str_pad/\n---\nmodule.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_pad/index.html","comments":1,"_id":"cinoeja1o0073ou9y6j3eqaca","content":"module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n","excerpt":"","more":"module.exports = function str_pad (input, padLength, padString, padType) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_pad/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Michael White (http://getsprink.com)\n  //    input by: Marco van Oort\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_pad('Kevin van Zonneveld', 30, '-=', 'STR_PAD_LEFT')\n  //   returns 1: '-=-=-=-=-=-Kevin van Zonneveld'\n  //   example 2: str_pad('Kevin van Zonneveld', 30, '-', 'STR_PAD_BOTH')\n  //   returns 2: '------Kevin van Zonneveld-----'\n\n  var half = ''\n  var padToGo\n\n  var _strPadRepeater = function (s, len) {\n    var collect = ''\n\n    while (collect.length < len) {\n      collect += s\n    }\n    collect = collect.substr(0, len)\n\n    return collect\n  }\n\n  input += ''\n  padString = padString !== undefined ? padString : ' '\n\n  if (padType !== 'STR_PAD_LEFT' && padType !== 'STR_PAD_RIGHT' && padType !== 'STR_PAD_BOTH') {\n    padType = 'STR_PAD_RIGHT'\n  }\n  if ((padToGo = padLength - input.length) > 0) {\n    if (padType === 'STR_PAD_LEFT') {\n      input = _strPadRepeater(padString, padToGo) + input\n    } else if (padType === 'STR_PAD_RIGHT') {\n      input = input + _strPadRepeater(padString, padToGo)\n    } else if (padType === 'STR_PAD_BOTH') {\n      half = _strPadRepeater(padString, Math.ceil(padToGo / 2))\n      input = half + input + half\n      input = input.substr(0, padLength)\n    }\n  }\n\n  return input\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_repeat('-=', 10)"],"estarget":"es5","returns":["'-=-=-=-=-=-=-=-=-=-='"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)","Ian Carter (http://euona.com/)"]},"notes":[],"layout":"function","title":"php'sstr_repeat in JavaScript","function":"str_repeat","category":"strings","language":"php","alias":["/functions/php/str_repeat/","/functions/strings/str_repeat/","/php/str_repeat/","/functions/str_repeat/"],"_content":"module.exports = function str_repeat (input, multiplier) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_repeat/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ian Carter (http://euona.com/)\n  //   example 1: str_repeat('-=', 10)\n  //   returns 1: '-=-=-=-=-=-=-=-=-=-='\n\n  var y = ''\n  while (true) {\n    if (multiplier & 1) {\n      y += input\n    }\n    multiplier >>= 1\n    if (multiplier) {\n      input += input\n    } else {\n      break\n    }\n  }\n  return y\n}\n","source":"php/strings/str_repeat.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_repeat(''-='', 10)'\nestarget: es5\nreturns:\n  - '''-=-=-=-=-=-=-=-=-=-='''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n    - 'Ian Carter (http://euona.com/)'\nnotes: []\nlayout: function\ntitle: php'sstr_repeat in JavaScript\nfunction: str_repeat\ncategory: strings\nlanguage: php\npermalink: php/strings/str_repeat/\nalias:\n  - /functions/php/str_repeat/\n  - /functions/strings/str_repeat/\n  - /php/str_repeat/\n  - /functions/str_repeat/\n---\nmodule.exports = function str_repeat (input, multiplier) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_repeat/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ian Carter (http://euona.com/)\n  //   example 1: str_repeat('-=', 10)\n  //   returns 1: '-=-=-=-=-=-=-=-=-=-='\n\n  var y = ''\n  while (true) {\n    if (multiplier & 1) {\n      y += input\n    }\n    multiplier >>= 1\n    if (multiplier) {\n      input += input\n    } else {\n      break\n    }\n  }\n  return y\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_repeat/index.html","comments":1,"_id":"cinoeja1o0074ou9yg6e8d6h3","content":"module.exports = function str_repeat (input, multiplier) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_repeat/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ian Carter (http://euona.com/)\n  //   example 1: str_repeat('-=', 10)\n  //   returns 1: '-=-=-=-=-=-=-=-=-=-='\n\n  var y = ''\n  while (true) {\n    if (multiplier & 1) {\n      y += input\n    }\n    multiplier >>= 1\n    if (multiplier) {\n      input += input\n    } else {\n      break\n    }\n  }\n  return y\n}\n","excerpt":"","more":"module.exports = function str_repeat (input, multiplier) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_repeat/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ian Carter (http://euona.com/)\n  //   example 1: str_repeat('-=', 10)\n  //   returns 1: '-=-=-=-=-=-=-=-=-=-='\n\n  var y = ''\n  while (true) {\n    if (multiplier & 1) {\n      y += input\n    }\n    multiplier >>= 1\n    if (multiplier) {\n      input += input\n    } else {\n      break\n    }\n  }\n  return y\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_replace(' ', '.', 'Kevin van Zonneveld')","str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')","str_replace(Array('S','F'),'x','ASDFASDF')","var countObj = {}\nstr_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\nvar $result = countObj.value"],"estarget":"es5","returns":["'Kevin.van.Zonneveld'","'hemmo, mars'","'AxDxAxDx'","4"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Gabriel Paderni","Philip Peterson","Simon Willison (http://simonwillison.net)","Kevin van Zonneveld (http://kvz.io)","Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Anton Ongson","Kevin van Zonneveld (http://kvz.io)","Oleg Eremeev","Glen Arason (http://CanadianDomainRegistry.ca)","Glen Arason (http://CanadianDomainRegistry.ca)"],"revised by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"input by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","Oleg Eremeev"]},"notes":["The countObj parameter (optional) if used must be passed in as a\nobject. The count will then be written by reference into it's `value` property"],"layout":"function","title":"php'sstr_replace in JavaScript","function":"str_replace","category":"strings","language":"php","alias":["/functions/php/str_replace/","/functions/strings/str_replace/","/php/str_replace/","/functions/str_replace/"],"_content":"module.exports = function str_replace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_replace/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Gabriel Paderni\n  // improved by: Philip Peterson\n  // improved by: Simon Willison (http://simonwillison.net)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Anton Ongson\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Oleg Eremeev\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Oleg Eremeev\n  //      note 1: The countObj parameter (optional) if used must be passed in as a\n  //      note 1: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_replace(' ', '.', 'Kevin van Zonneveld')\n  //   returns 1: 'Kevin.van.Zonneveld'\n  //   example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')\n  //   returns 2: 'hemmo, mars'\n  //   example 3: str_replace(Array('S','F'),'x','ASDFASDF')\n  //   returns 3: 'AxDxAxDx'\n  //   example 4: var countObj = {}\n  //   example 4: str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n  //   example 4: var $result = countObj.value\n  //   returns 4: 4\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = [].concat(search)\n  var r = [].concat(replace)\n  var s = subject\n  var ra = Object.prototype.toString.call(r) === '[object Array]'\n  var sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n    temp = ''\n    r = [].concat(replace)\n    ra = Object.prototype.toString.call(r) === '[object Array]'\n  }\n\n  if (typeof countObj !== 'undefined') {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      if (typeof countObj !== 'undefined') {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n  return sa ? s : s[0]\n}\n","source":"php/strings/str_replace.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_replace('' '', ''.'', ''Kevin van Zonneveld'')'\n  - 'str_replace([''{name}'', ''l''], [''hello'', ''m''], ''{name}, lars'')'\n  - 'str_replace(Array(''S'',''F''),''x'',''ASDFASDF'')'\n  - |-\n    var countObj = {}\n    str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n    var $result = countObj.value\nestarget: es5\nreturns:\n  - '''Kevin.van.Zonneveld'''\n  - '''hemmo, mars'''\n  - '''AxDxAxDx'''\n  - '4'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Gabriel Paderni\n    - Philip Peterson\n    - 'Simon Willison (http://simonwillison.net)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Anton Ongson\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Oleg Eremeev\n    - 'Glen Arason (http://CanadianDomainRegistry.ca)'\n    - 'Glen Arason (http://CanadianDomainRegistry.ca)'\n  revised by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  input by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Oleg Eremeev\nnotes:\n  - >-\n    The countObj parameter (optional) if used must be passed in as a\n\n    object. The count will then be written by reference into it's `value`\n    property\nlayout: function\ntitle: php'sstr_replace in JavaScript\nfunction: str_replace\ncategory: strings\nlanguage: php\npermalink: php/strings/str_replace/\nalias:\n  - /functions/php/str_replace/\n  - /functions/strings/str_replace/\n  - /php/str_replace/\n  - /functions/str_replace/\n---\nmodule.exports = function str_replace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_replace/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Gabriel Paderni\n  // improved by: Philip Peterson\n  // improved by: Simon Willison (http://simonwillison.net)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Anton Ongson\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Oleg Eremeev\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Oleg Eremeev\n  //      note 1: The countObj parameter (optional) if used must be passed in as a\n  //      note 1: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_replace(' ', '.', 'Kevin van Zonneveld')\n  //   returns 1: 'Kevin.van.Zonneveld'\n  //   example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')\n  //   returns 2: 'hemmo, mars'\n  //   example 3: str_replace(Array('S','F'),'x','ASDFASDF')\n  //   returns 3: 'AxDxAxDx'\n  //   example 4: var countObj = {}\n  //   example 4: str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n  //   example 4: var $result = countObj.value\n  //   returns 4: 4\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = [].concat(search)\n  var r = [].concat(replace)\n  var s = subject\n  var ra = Object.prototype.toString.call(r) === '[object Array]'\n  var sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n    temp = ''\n    r = [].concat(replace)\n    ra = Object.prototype.toString.call(r) === '[object Array]'\n  }\n\n  if (typeof countObj !== 'undefined') {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      if (typeof countObj !== 'undefined') {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n  return sa ? s : s[0]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_replace/index.html","comments":1,"_id":"cinoeja1o0075ou9yzbefutyy","content":"module.exports = function str_replace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_replace/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Gabriel Paderni\n  // improved by: Philip Peterson\n  // improved by: Simon Willison (http://simonwillison.net)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Anton Ongson\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Oleg Eremeev\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Oleg Eremeev\n  //      note 1: The countObj parameter (optional) if used must be passed in as a\n  //      note 1: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_replace(' ', '.', 'Kevin van Zonneveld')\n  //   returns 1: 'Kevin.van.Zonneveld'\n  //   example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')\n  //   returns 2: 'hemmo, mars'\n  //   example 3: str_replace(Array('S','F'),'x','ASDFASDF')\n  //   returns 3: 'AxDxAxDx'\n  //   example 4: var countObj = {}\n  //   example 4: str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n  //   example 4: var $result = countObj.value\n  //   returns 4: 4\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = [].concat(search)\n  var r = [].concat(replace)\n  var s = subject\n  var ra = Object.prototype.toString.call(r) === '[object Array]'\n  var sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n    temp = ''\n    r = [].concat(replace)\n    ra = Object.prototype.toString.call(r) === '[object Array]'\n  }\n\n  if (typeof countObj !== 'undefined') {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      if (typeof countObj !== 'undefined') {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n  return sa ? s : s[0]\n}\n","excerpt":"","more":"module.exports = function str_replace (search, replace, subject, countObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_replace/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Gabriel Paderni\n  // improved by: Philip Peterson\n  // improved by: Simon Willison (http://simonwillison.net)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Anton Ongson\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Oleg Eremeev\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  // bugfixed by: Glen Arason (http://CanadianDomainRegistry.ca)\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Oleg Eremeev\n  //      note 1: The countObj parameter (optional) if used must be passed in as a\n  //      note 1: object. The count will then be written by reference into it's `value` property\n  //   example 1: str_replace(' ', '.', 'Kevin van Zonneveld')\n  //   returns 1: 'Kevin.van.Zonneveld'\n  //   example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars')\n  //   returns 2: 'hemmo, mars'\n  //   example 3: str_replace(Array('S','F'),'x','ASDFASDF')\n  //   returns 3: 'AxDxAxDx'\n  //   example 4: var countObj = {}\n  //   example 4: str_replace(['A','D'], ['x','y'] , 'ASDFASDF' , countObj)\n  //   example 4: var $result = countObj.value\n  //   returns 4: 4\n\n  var i = 0\n  var j = 0\n  var temp = ''\n  var repl = ''\n  var sl = 0\n  var fl = 0\n  var f = [].concat(search)\n  var r = [].concat(replace)\n  var s = subject\n  var ra = Object.prototype.toString.call(r) === '[object Array]'\n  var sa = Object.prototype.toString.call(s) === '[object Array]'\n  s = [].concat(s)\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (typeof (search) === 'object' && typeof (replace) === 'string') {\n    temp = replace\n    replace = []\n    for (i = 0; i < search.length; i += 1) {\n      replace[i] = temp\n    }\n    temp = ''\n    r = [].concat(replace)\n    ra = Object.prototype.toString.call(r) === '[object Array]'\n  }\n\n  if (typeof countObj !== 'undefined') {\n    countObj.value = 0\n  }\n\n  for (i = 0, sl = s.length; i < sl; i++) {\n    if (s[i] === '') {\n      continue\n    }\n    for (j = 0, fl = f.length; j < fl; j++) {\n      temp = s[i] + ''\n      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0]\n      s[i] = (temp).split(f[j]).join(repl)\n      if (typeof countObj !== 'undefined') {\n        countObj.value += ((temp.split(f[j])).length - 1)\n      }\n    }\n  }\n  return sa ? s : s[0]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_rot13('Kevin van Zonneveld')","str_rot13('Xriva ina Mbaariryq')","str_rot13(33)"],"estarget":"es5","returns":["'Xriva ina Mbaariryq'","'Kevin van Zonneveld'","'33'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Ates Goral (http://magnetiq.com)","Rafał Kukawski (http://blog.kukawski.pl)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstr_rot13 in JavaScript","function":"str_rot13","category":"strings","language":"php","alias":["/functions/php/str_rot13/","/functions/strings/str_rot13/","/php/str_rot13/","/functions/str_rot13/"],"_content":"module.exports = function str_rot13 (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_rot13/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: str_rot13('Kevin van Zonneveld')\n  //   returns 1: 'Xriva ina Mbaariryq'\n  //   example 2: str_rot13('Xriva ina Mbaariryq')\n  //   returns 2: 'Kevin van Zonneveld'\n  //   example 3: str_rot13(33)\n  //   returns 3: '33'\n\n  return (str + '')\n    .replace(/[a-z]/gi, function (s) {\n      return String.fromCharCode(s.charCodeAt(0) + (s.toLowerCase() < 'n' ? 13 : -13))\n    })\n}\n","source":"php/strings/str_rot13.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - str_rot13('Kevin van Zonneveld')\n  - str_rot13('Xriva ina Mbaariryq')\n  - str_rot13(33)\nestarget: es5\nreturns:\n  - '''Xriva ina Mbaariryq'''\n  - '''Kevin van Zonneveld'''\n  - '''33'''\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Ates Goral (http://magnetiq.com)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstr_rot13 in JavaScript\nfunction: str_rot13\ncategory: strings\nlanguage: php\npermalink: php/strings/str_rot13/\nalias:\n  - /functions/php/str_rot13/\n  - /functions/strings/str_rot13/\n  - /php/str_rot13/\n  - /functions/str_rot13/\n---\nmodule.exports = function str_rot13 (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_rot13/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: str_rot13('Kevin van Zonneveld')\n  //   returns 1: 'Xriva ina Mbaariryq'\n  //   example 2: str_rot13('Xriva ina Mbaariryq')\n  //   returns 2: 'Kevin van Zonneveld'\n  //   example 3: str_rot13(33)\n  //   returns 3: '33'\n\n  return (str + '')\n    .replace(/[a-z]/gi, function (s) {\n      return String.fromCharCode(s.charCodeAt(0) + (s.toLowerCase() < 'n' ? 13 : -13))\n    })\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_rot13/index.html","comments":1,"_id":"cinoeja1p0076ou9yz8m8777l","content":"module.exports = function str_rot13 (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_rot13/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: str_rot13('Kevin van Zonneveld')\n  //   returns 1: 'Xriva ina Mbaariryq'\n  //   example 2: str_rot13('Xriva ina Mbaariryq')\n  //   returns 2: 'Kevin van Zonneveld'\n  //   example 3: str_rot13(33)\n  //   returns 3: '33'\n\n  return (str + '')\n    .replace(/[a-z]/gi, function (s) {\n      return String.fromCharCode(s.charCodeAt(0) + (s.toLowerCase() < 'n' ? 13 : -13))\n    })\n}\n","excerpt":"","more":"module.exports = function str_rot13 (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_rot13/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Ates Goral (http://magnetiq.com)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: str_rot13('Kevin van Zonneveld')\n  //   returns 1: 'Xriva ina Mbaariryq'\n  //   example 2: str_rot13('Xriva ina Mbaariryq')\n  //   returns 2: 'Kevin van Zonneveld'\n  //   example 3: str_rot13(33)\n  //   returns 3: '33'\n\n  return (str + '')\n    .replace(/[a-z]/gi, function (s) {\n      return String.fromCharCode(s.charCodeAt(0) + (s.toLowerCase() < 'n' ? 13 : -13))\n    })\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $shuffled = str_shuffle(\"abcdef\")\nvar $result = $shuffled.length"],"estarget":"es5","returns":["6"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstr_shuffle in JavaScript","function":"str_shuffle","category":"strings","language":"php","alias":["/functions/php/str_shuffle/","/functions/strings/str_shuffle/","/php/str_shuffle/","/functions/str_shuffle/"],"_content":"module.exports = function str_shuffle (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_shuffle/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $shuffled = str_shuffle(\"abcdef\")\n  //   example 1: var $result = $shuffled.length\n  //   returns 1: 6\n\n  if (arguments.length === 0) {\n    throw new Error('Wrong parameter count for str_shuffle()')\n  }\n\n  if (str === null) {\n    return ''\n  }\n\n  str += ''\n\n  var newStr = ''\n  var rand\n  var i = str.length\n\n  while (i) {\n    rand = Math.floor(Math.random() * i)\n    newStr += str.charAt(rand)\n    str = str.substring(0, rand) + str.substr(rand + 1)\n    i--\n  }\n\n  return newStr\n}\n","source":"php/strings/str_shuffle.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $shuffled = str_shuffle(\"abcdef\")\n    var $result = $shuffled.length\nestarget: es5\nreturns:\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstr_shuffle in JavaScript\nfunction: str_shuffle\ncategory: strings\nlanguage: php\npermalink: php/strings/str_shuffle/\nalias:\n  - /functions/php/str_shuffle/\n  - /functions/strings/str_shuffle/\n  - /php/str_shuffle/\n  - /functions/str_shuffle/\n---\nmodule.exports = function str_shuffle (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_shuffle/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $shuffled = str_shuffle(\"abcdef\")\n  //   example 1: var $result = $shuffled.length\n  //   returns 1: 6\n\n  if (arguments.length === 0) {\n    throw new Error('Wrong parameter count for str_shuffle()')\n  }\n\n  if (str === null) {\n    return ''\n  }\n\n  str += ''\n\n  var newStr = ''\n  var rand\n  var i = str.length\n\n  while (i) {\n    rand = Math.floor(Math.random() * i)\n    newStr += str.charAt(rand)\n    str = str.substring(0, rand) + str.substr(rand + 1)\n    i--\n  }\n\n  return newStr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_shuffle/index.html","comments":1,"_id":"cinoeja1p0077ou9y7pq2ib2p","content":"module.exports = function str_shuffle (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_shuffle/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $shuffled = str_shuffle(\"abcdef\")\n  //   example 1: var $result = $shuffled.length\n  //   returns 1: 6\n\n  if (arguments.length === 0) {\n    throw new Error('Wrong parameter count for str_shuffle()')\n  }\n\n  if (str === null) {\n    return ''\n  }\n\n  str += ''\n\n  var newStr = ''\n  var rand\n  var i = str.length\n\n  while (i) {\n    rand = Math.floor(Math.random() * i)\n    newStr += str.charAt(rand)\n    str = str.substring(0, rand) + str.substr(rand + 1)\n    i--\n  }\n\n  return newStr\n}\n","excerpt":"","more":"module.exports = function str_shuffle (str) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_shuffle/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $shuffled = str_shuffle(\"abcdef\")\n  //   example 1: var $result = $shuffled.length\n  //   returns 1: 6\n\n  if (arguments.length === 0) {\n    throw new Error('Wrong parameter count for str_shuffle()')\n  }\n\n  if (str === null) {\n    return ''\n  }\n\n  str += ''\n\n  var newStr = ''\n  var rand\n  var i = str.length\n\n  while (i) {\n    rand = Math.floor(Math.random() * i)\n    newStr += str.charAt(rand)\n    str = str.substring(0, rand) + str.substr(rand + 1)\n    i--\n  }\n\n  return newStr\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_split('Hello Friend', 3)"],"estarget":"es5","returns":["['Hel', 'lo ', 'Fri', 'end']"],"dependencies":[],"authors":{"original by":["Martijn Wieringa"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"revised by":["Theriault (https://github.com/Theriault)","Rafał Kukawski (http://blog.kukawski.pl)"],"input by":["Bjorn Roesbeke (http://www.bjornroesbeke.be/)"]},"notes":[],"layout":"function","title":"php'sstr_split in JavaScript","function":"str_split","category":"strings","language":"php","alias":["/functions/php/str_split/","/functions/strings/str_split/","/php/str_split/","/functions/str_split/"],"_content":"module.exports = function str_split (string, splitLength) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_split/\n  // original by: Martijn Wieringa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Bjorn Roesbeke (http://www.bjornroesbeke.be/)\n  //   example 1: str_split('Hello Friend', 3)\n  //   returns 1: ['Hel', 'lo ', 'Fri', 'end']\n\n  if (splitLength === null) {\n    splitLength = 1\n  }\n  if (string === null || splitLength < 1) {\n    return false\n  }\n\n  string += ''\n  var chunks = []\n  var pos = 0\n  var len = string.length\n\n  while (pos < len) {\n    chunks.push(string.slice(pos, pos += splitLength))\n  }\n\n  return chunks\n}\n","source":"php/strings/str_split.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'str_split(''Hello Friend'', 3)'\nestarget: es5\nreturns:\n  - '[''Hel'', ''lo '', ''Fri'', ''end'']'\ndependencies: []\nauthors:\n  original by:\n    - Martijn Wieringa\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  revised by:\n    - 'Theriault (https://github.com/Theriault)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  input by:\n    - 'Bjorn Roesbeke (http://www.bjornroesbeke.be/)'\nnotes: []\nlayout: function\ntitle: php'sstr_split in JavaScript\nfunction: str_split\ncategory: strings\nlanguage: php\npermalink: php/strings/str_split/\nalias:\n  - /functions/php/str_split/\n  - /functions/strings/str_split/\n  - /php/str_split/\n  - /functions/str_split/\n---\nmodule.exports = function str_split (string, splitLength) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_split/\n  // original by: Martijn Wieringa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Bjorn Roesbeke (http://www.bjornroesbeke.be/)\n  //   example 1: str_split('Hello Friend', 3)\n  //   returns 1: ['Hel', 'lo ', 'Fri', 'end']\n\n  if (splitLength === null) {\n    splitLength = 1\n  }\n  if (string === null || splitLength < 1) {\n    return false\n  }\n\n  string += ''\n  var chunks = []\n  var pos = 0\n  var len = string.length\n\n  while (pos < len) {\n    chunks.push(string.slice(pos, pos += splitLength))\n  }\n\n  return chunks\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_split/index.html","comments":1,"_id":"cinoeja1p0078ou9y4gk1t15x","content":"module.exports = function str_split (string, splitLength) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_split/\n  // original by: Martijn Wieringa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Bjorn Roesbeke (http://www.bjornroesbeke.be/)\n  //   example 1: str_split('Hello Friend', 3)\n  //   returns 1: ['Hel', 'lo ', 'Fri', 'end']\n\n  if (splitLength === null) {\n    splitLength = 1\n  }\n  if (string === null || splitLength < 1) {\n    return false\n  }\n\n  string += ''\n  var chunks = []\n  var pos = 0\n  var len = string.length\n\n  while (pos < len) {\n    chunks.push(string.slice(pos, pos += splitLength))\n  }\n\n  return chunks\n}\n","excerpt":"","more":"module.exports = function str_split (string, splitLength) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_split/\n  // original by: Martijn Wieringa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Bjorn Roesbeke (http://www.bjornroesbeke.be/)\n  //   example 1: str_split('Hello Friend', 3)\n  //   returns 1: ['Hel', 'lo ', 'Fri', 'end']\n\n  if (splitLength === null) {\n    splitLength = 1\n  }\n  if (string === null || splitLength < 1) {\n    return false\n  }\n\n  string += ''\n  var chunks = []\n  var pos = 0\n  var len = string.length\n\n  while (pos < len) {\n    chunks.push(string.slice(pos, pos += splitLength))\n  }\n\n  return chunks\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1)","str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 2)","str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')","str_word_count('hey', 2)"],"estarget":"es5","returns":["['Hello', 'fri', 'nd', \"you're\", 'looking', 'good', 'today']","{0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good', 51: 'today'}","['Hello', 'fri3nd', \"you're\", 'looking', 'good', 'today']","{0: 'hey'}"],"dependencies":[],"authors":{"original by":["Ole Vrijenhoek"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"input by":["Bug?"]},"notes":[],"layout":"function","title":"php'sstr_word_count in JavaScript","function":"str_word_count","category":"strings","language":"php","alias":["/functions/php/str_word_count/","/functions/strings/str_word_count/","/php/str_word_count/","/functions/str_word_count/"],"_content":"module.exports = function str_word_count (str, format, charlist) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_word_count/\n  // original by: Ole Vrijenhoek\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bug?\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1)\n  //   returns 1: ['Hello', 'fri', 'nd', \"you're\", 'looking', 'good', 'today']\n  //   example 2: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 2)\n  //   returns 2: {0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good', 51: 'today'}\n  //   example 3: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')\n  //   returns 3: ['Hello', 'fri3nd', \"you're\", 'looking', 'good', 'today']\n  //   example 4: str_word_count('hey', 2)\n  //   returns 4: {0: 'hey'}\n\n  var ctypeAlpha = require('../ctype/ctype_alpha')\n  var len = str.length\n  var cl = charlist && charlist.length\n  var chr = ''\n  var tmpStr = ''\n  var i = 0\n  var c = ''\n  var wArr = []\n  var wC = 0\n  var assoc = {}\n  var aC = 0\n  var reg = ''\n  var match = false\n\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n  var _getWholeChar = function (str, i) {\n    // Use for rare cases of non-BMP characters\n    var code = str.charCodeAt(i)\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i)\n    }\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single\n      // characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      var next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    var prev = str.charCodeAt(i - 1)\n    if (prev < 0xD800 || prev > 0xDBFF) {\n      // (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    // We can pass over low surrogates now as the second component in a pair which we have already\n    // processed\n    return false\n  }\n\n  if (cl) {\n    reg = '^(' + _pregQuote(_getWholeChar(charlist, 0))\n    for (i = 1; i < cl; i++) {\n      if ((chr = _getWholeChar(charlist, i)) === false) {\n        continue\n      }\n      reg += '|' + _pregQuote(chr)\n    }\n    reg += ')$'\n    reg = new RegExp(reg)\n  }\n\n  for (i = 0; i < len; i++) {\n    if ((c = _getWholeChar(str, i)) === false) {\n      continue\n    }\n    // No hyphen at beginning or end unless allowed in charlist (or locale)\n    // No apostrophe at beginning unless allowed in charlist (or locale)\n    // @todo: Make this more readable\n    match = ctypeAlpha(c) ||\n      (reg && c.search(reg) !== -1) ||\n      ((i !== 0 && i !== len - 1) && c === '-') ||\n      (i !== 0 && c === \"'\")\n    if (match) {\n      if (tmpStr === '' && format === 2) {\n        aC = i\n      }\n      tmpStr = tmpStr + c\n    }\n    if (i === len - 1 || !match && tmpStr !== '') {\n      if (format !== 2) {\n        wArr[wArr.length] = tmpStr\n      } else {\n        assoc[aC] = tmpStr\n      }\n      tmpStr = ''\n      wC++\n    }\n  }\n\n  if (!format) {\n    return wC\n  } else if (format === 1) {\n    return wArr\n  } else if (format === 2) {\n    return assoc\n  }\n\n  throw new Error('You have supplied an incorrect format')\n}\n","source":"php/strings/str_word_count.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good\n    today!\", 1)\n  - >-\n    str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good\n    today!\", 2)\n  - >-\n    str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good\n    today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')\n  - 'str_word_count(''hey'', 2)'\nestarget: es5\nreturns:\n  - '[''Hello'', ''fri'', ''nd'', \"you''re\", ''looking'', ''good'', ''today'']'\n  - >-\n    {0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good',\n    51: 'today'}\n  - '[''Hello'', ''fri3nd'', \"you''re\", ''looking'', ''good'', ''today'']'\n  - '{0: ''hey''}'\ndependencies: []\nauthors:\n  original by:\n    - Ole Vrijenhoek\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Bug?\nnotes: []\nlayout: function\ntitle: php'sstr_word_count in JavaScript\nfunction: str_word_count\ncategory: strings\nlanguage: php\npermalink: php/strings/str_word_count/\nalias:\n  - /functions/php/str_word_count/\n  - /functions/strings/str_word_count/\n  - /php/str_word_count/\n  - /functions/str_word_count/\n---\nmodule.exports = function str_word_count (str, format, charlist) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_word_count/\n  // original by: Ole Vrijenhoek\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bug?\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1)\n  //   returns 1: ['Hello', 'fri', 'nd', \"you're\", 'looking', 'good', 'today']\n  //   example 2: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 2)\n  //   returns 2: {0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good', 51: 'today'}\n  //   example 3: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')\n  //   returns 3: ['Hello', 'fri3nd', \"you're\", 'looking', 'good', 'today']\n  //   example 4: str_word_count('hey', 2)\n  //   returns 4: {0: 'hey'}\n\n  var ctypeAlpha = require('../ctype/ctype_alpha')\n  var len = str.length\n  var cl = charlist && charlist.length\n  var chr = ''\n  var tmpStr = ''\n  var i = 0\n  var c = ''\n  var wArr = []\n  var wC = 0\n  var assoc = {}\n  var aC = 0\n  var reg = ''\n  var match = false\n\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n  var _getWholeChar = function (str, i) {\n    // Use for rare cases of non-BMP characters\n    var code = str.charCodeAt(i)\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i)\n    }\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single\n      // characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      var next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    var prev = str.charCodeAt(i - 1)\n    if (prev < 0xD800 || prev > 0xDBFF) {\n      // (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    // We can pass over low surrogates now as the second component in a pair which we have already\n    // processed\n    return false\n  }\n\n  if (cl) {\n    reg = '^(' + _pregQuote(_getWholeChar(charlist, 0))\n    for (i = 1; i < cl; i++) {\n      if ((chr = _getWholeChar(charlist, i)) === false) {\n        continue\n      }\n      reg += '|' + _pregQuote(chr)\n    }\n    reg += ')$'\n    reg = new RegExp(reg)\n  }\n\n  for (i = 0; i < len; i++) {\n    if ((c = _getWholeChar(str, i)) === false) {\n      continue\n    }\n    // No hyphen at beginning or end unless allowed in charlist (or locale)\n    // No apostrophe at beginning unless allowed in charlist (or locale)\n    // @todo: Make this more readable\n    match = ctypeAlpha(c) ||\n      (reg && c.search(reg) !== -1) ||\n      ((i !== 0 && i !== len - 1) && c === '-') ||\n      (i !== 0 && c === \"'\")\n    if (match) {\n      if (tmpStr === '' && format === 2) {\n        aC = i\n      }\n      tmpStr = tmpStr + c\n    }\n    if (i === len - 1 || !match && tmpStr !== '') {\n      if (format !== 2) {\n        wArr[wArr.length] = tmpStr\n      } else {\n        assoc[aC] = tmpStr\n      }\n      tmpStr = ''\n      wC++\n    }\n  }\n\n  if (!format) {\n    return wC\n  } else if (format === 1) {\n    return wArr\n  } else if (format === 2) {\n    return assoc\n  }\n\n  throw new Error('You have supplied an incorrect format')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/str_word_count/index.html","comments":1,"_id":"cinoeja1q0079ou9y6rp0h4t8","content":"module.exports = function str_word_count (str, format, charlist) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_word_count/\n  // original by: Ole Vrijenhoek\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bug?\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1)\n  //   returns 1: ['Hello', 'fri', 'nd', \"you're\", 'looking', 'good', 'today']\n  //   example 2: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 2)\n  //   returns 2: {0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good', 51: 'today'}\n  //   example 3: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')\n  //   returns 3: ['Hello', 'fri3nd', \"you're\", 'looking', 'good', 'today']\n  //   example 4: str_word_count('hey', 2)\n  //   returns 4: {0: 'hey'}\n\n  var ctypeAlpha = require('../ctype/ctype_alpha')\n  var len = str.length\n  var cl = charlist && charlist.length\n  var chr = ''\n  var tmpStr = ''\n  var i = 0\n  var c = ''\n  var wArr = []\n  var wC = 0\n  var assoc = {}\n  var aC = 0\n  var reg = ''\n  var match = false\n\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n  var _getWholeChar = function (str, i) {\n    // Use for rare cases of non-BMP characters\n    var code = str.charCodeAt(i)\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i)\n    }\n    if (code >= 0xD800 && code <= 0xdbff)=\"\" {=\"\" high=\"\" surrogate=\"\" (could=\"\" change=\"\" last=\"\" hex=\"\" to=\"\" 0xdb7f=\"\" treat=\"\" private=\"\" surrogates=\"\" as=\"\" single=\"\" characters)=\"\" if=\"\" (str.length=\"\" <=\"(i\" +=\"\" 1))=\"\" throw=\"\" new=\"\" error('high=\"\" without=\"\" following=\"\" low=\"\" surrogate')=\"\" }=\"\" var=\"\" next=\"str.charCodeAt(i\" 1)=\"\" (next=\"\" 0xdc00=\"\" ||=\"\"> 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    }\n    // Low surrogate (0xDC00 <= code=\"\" &&=\"\" <=\"0xDFFF)\" if=\"\" (i=\"==\" 0)=\"\" {=\"\" throw=\"\" new=\"\" error('low=\"\" surrogate=\"\" without=\"\" preceding=\"\" high=\"\" surrogate')=\"\" }=\"\" var=\"\" prev=\"str.charCodeAt(i\" -=\"\" 1)=\"\" (prev=\"\" 0xd800=\"\" ||=\"\"> 0xDBFF) {\n      // (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    // We can pass over low surrogates now as the second component in a pair which we have already\n    // processed\n    return false\n  }\n\n  if (cl) {\n    reg = '^(' + _pregQuote(_getWholeChar(charlist, 0))\n    for (i = 1; i < cl; i++) {\n      if ((chr = _getWholeChar(charlist, i)) === false) {\n        continue\n      }\n      reg += '|' + _pregQuote(chr)\n    }\n    reg += ')$'\n    reg = new RegExp(reg)\n  }\n\n  for (i = 0; i < len; i++) {\n    if ((c = _getWholeChar(str, i)) === false) {\n      continue\n    }\n    // No hyphen at beginning or end unless allowed in charlist (or locale)\n    // No apostrophe at beginning unless allowed in charlist (or locale)\n    // @todo: Make this more readable\n    match = ctypeAlpha(c) ||\n      (reg && c.search(reg) !== -1) ||\n      ((i !== 0 && i !== len - 1) && c === '-') ||\n      (i !== 0 && c === \"'\")\n    if (match) {\n      if (tmpStr === '' && format === 2) {\n        aC = i\n      }\n      tmpStr = tmpStr + c\n    }\n    if (i === len - 1 || !match && tmpStr !== '') {\n      if (format !== 2) {\n        wArr[wArr.length] = tmpStr\n      } else {\n        assoc[aC] = tmpStr\n      }\n      tmpStr = ''\n      wC++\n    }\n  }\n\n  if (!format) {\n    return wC\n  } else if (format === 1) {\n    return wArr\n  } else if (format === 2) {\n    return assoc\n  }\n\n  throw new Error('You have supplied an incorrect format')\n}\n</=></=>","excerpt":"","more":"module.exports = function str_word_count (str, format, charlist) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/str_word_count/\n  // original by: Ole Vrijenhoek\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bug?\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1)\n  //   returns 1: ['Hello', 'fri', 'nd', \"you're\", 'looking', 'good', 'today']\n  //   example 2: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 2)\n  //   returns 2: {0: 'Hello', 6: 'fri', 10: 'nd', 14: \"you're\", 29: 'looking', 46: 'good', 51: 'today'}\n  //   example 3: str_word_count(\"Hello fri3nd, you're\\r\\n       looking          good today!\", 1, '\\u00e0\\u00e1\\u00e3\\u00e73')\n  //   returns 3: ['Hello', 'fri3nd', \"you're\", 'looking', 'good', 'today']\n  //   example 4: str_word_count('hey', 2)\n  //   returns 4: {0: 'hey'}\n\n  var ctypeAlpha = require('../ctype/ctype_alpha')\n  var len = str.length\n  var cl = charlist && charlist.length\n  var chr = ''\n  var tmpStr = ''\n  var i = 0\n  var c = ''\n  var wArr = []\n  var wC = 0\n  var assoc = {}\n  var aC = 0\n  var reg = ''\n  var match = false\n\n  var _pregQuote = function (str) {\n    return (str + '').replace(/([\\\\\\.\\+\\*\\?\\[\\^\\]\\$\\(\\)\\{\\}=!<>\\|:])/g, '\\\\$1')\n  }\n  var _getWholeChar = function (str, i) {\n    // Use for rare cases of non-BMP characters\n    var code = str.charCodeAt(i)\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i)\n    }\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single\n      // characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      var next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    var prev = str.charCodeAt(i - 1)\n    if (prev < 0xD800 || prev > 0xDBFF) {\n      // (could change last hex to 0xDB7F to treat high private surrogates as single characters)\n      throw new Error('Low surrogate without preceding high surrogate')\n    }\n    // We can pass over low surrogates now as the second component in a pair which we have already\n    // processed\n    return false\n  }\n\n  if (cl) {\n    reg = '^(' + _pregQuote(_getWholeChar(charlist, 0))\n    for (i = 1; i < cl; i++) {\n      if ((chr = _getWholeChar(charlist, i)) === false) {\n        continue\n      }\n      reg += '|' + _pregQuote(chr)\n    }\n    reg += ')$'\n    reg = new RegExp(reg)\n  }\n\n  for (i = 0; i < len; i++) {\n    if ((c = _getWholeChar(str, i)) === false) {\n      continue\n    }\n    // No hyphen at beginning or end unless allowed in charlist (or locale)\n    // No apostrophe at beginning unless allowed in charlist (or locale)\n    // @todo: Make this more readable\n    match = ctypeAlpha(c) ||\n      (reg && c.search(reg) !== -1) ||\n      ((i !== 0 && i !== len - 1) && c === '-') ||\n      (i !== 0 && c === \"'\")\n    if (match) {\n      if (tmpStr === '' && format === 2) {\n        aC = i\n      }\n      tmpStr = tmpStr + c\n    }\n    if (i === len - 1 || !match && tmpStr !== '') {\n      if (format !== 2) {\n        wArr[wArr.length] = tmpStr\n      } else {\n        assoc[aC] = tmpStr\n      }\n      tmpStr = ''\n      wC++\n    }\n  }\n\n  if (!format) {\n    return wC\n  } else if (format === 1) {\n    return wArr\n  } else if (format === 2) {\n    return assoc\n  }\n\n  throw new Error('You have supplied an incorrect format')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strcasecmp('Hello', 'hello')"],"estarget":"es5","returns":["0"],"dependencies":[],"authors":{"original by":["Martijn Wieringa"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstrcasecmp in JavaScript","function":"strcasecmp","category":"strings","language":"php","alias":["/functions/php/strcasecmp/","/functions/strings/strcasecmp/","/php/strcasecmp/","/functions/strcasecmp/"],"_content":"module.exports = function strcasecmp (fString1, fString2) {\n  //  discuss at: http://locutusjs.io/php/strcasecmp/\n  // original by: Martijn Wieringa\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strcasecmp('Hello', 'hello')\n  //   returns 1: 0\n\n  var string1 = (fString1 + '').toLowerCase()\n  var string2 = (fString2 + '').toLowerCase()\n\n  if (string1 > string2) {\n    return 1\n  } else if (string1 === string2) {\n    return 0\n  }\n\n  return -1\n}\n","source":"php/strings/strcasecmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strcasecmp(''Hello'', ''hello'')'\nestarget: es5\nreturns:\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - Martijn Wieringa\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstrcasecmp in JavaScript\nfunction: strcasecmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strcasecmp/\nalias:\n  - /functions/php/strcasecmp/\n  - /functions/strings/strcasecmp/\n  - /php/strcasecmp/\n  - /functions/strcasecmp/\n---\nmodule.exports = function strcasecmp (fString1, fString2) {\n  //  discuss at: http://locutusjs.io/php/strcasecmp/\n  // original by: Martijn Wieringa\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strcasecmp('Hello', 'hello')\n  //   returns 1: 0\n\n  var string1 = (fString1 + '').toLowerCase()\n  var string2 = (fString2 + '').toLowerCase()\n\n  if (string1 > string2) {\n    return 1\n  } else if (string1 === string2) {\n    return 0\n  }\n\n  return -1\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strcasecmp/index.html","comments":1,"_id":"cinoeja1q007aou9yx2oqv2tv","content":"module.exports = function strcasecmp (fString1, fString2) {\n  //  discuss at: http://locutusjs.io/php/strcasecmp/\n  // original by: Martijn Wieringa\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strcasecmp('Hello', 'hello')\n  //   returns 1: 0\n\n  var string1 = (fString1 + '').toLowerCase()\n  var string2 = (fString2 + '').toLowerCase()\n\n  if (string1 > string2) {\n    return 1\n  } else if (string1 === string2) {\n    return 0\n  }\n\n  return -1\n}\n","excerpt":"","more":"module.exports = function strcasecmp (fString1, fString2) {\n  //  discuss at: http://locutusjs.io/php/strcasecmp/\n  // original by: Martijn Wieringa\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strcasecmp('Hello', 'hello')\n  //   returns 1: 0\n\n  var string1 = (fString1 + '').toLowerCase()\n  var string2 = (fString2 + '').toLowerCase()\n\n  if (string1 > string2) {\n    return 1\n  } else if (string1 === string2) {\n    return 0\n  }\n\n  return -1\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strchr('Kevin van Zonneveld', 'van')","strchr('Kevin van Zonneveld', 'van', true)"],"estarget":"es5","returns":["'van Zonneveld'","'Kevin '"],"dependencies":[],"authors":{"original by":["Philip Peterson"]},"notes":[],"layout":"function","title":"php'sstrchr in JavaScript","function":"strchr","category":"strings","language":"php","alias":["/functions/php/strchr/","/functions/strings/strchr/","/php/strchr/","/functions/strchr/"],"_content":"module.exports = function strchr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strchr/\n  // original by: Philip Peterson\n  //   example 1: strchr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strchr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n\n  var strstr = require('../strings/strstr')\n  return strstr(haystack, needle, bool)\n}\n","source":"php/strings/strchr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strchr(''Kevin van Zonneveld'', ''van'')'\n  - 'strchr(''Kevin van Zonneveld'', ''van'', true)'\nestarget: es5\nreturns:\n  - '''van Zonneveld'''\n  - '''Kevin '''\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\nnotes: []\nlayout: function\ntitle: php'sstrchr in JavaScript\nfunction: strchr\ncategory: strings\nlanguage: php\npermalink: php/strings/strchr/\nalias:\n  - /functions/php/strchr/\n  - /functions/strings/strchr/\n  - /php/strchr/\n  - /functions/strchr/\n---\nmodule.exports = function strchr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strchr/\n  // original by: Philip Peterson\n  //   example 1: strchr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strchr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n\n  var strstr = require('../strings/strstr')\n  return strstr(haystack, needle, bool)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strchr/index.html","comments":1,"_id":"cinoeja1q007bou9y7oybym49","content":"module.exports = function strchr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strchr/\n  // original by: Philip Peterson\n  //   example 1: strchr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strchr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n\n  var strstr = require('../strings/strstr')\n  return strstr(haystack, needle, bool)\n}\n","excerpt":"","more":"module.exports = function strchr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strchr/\n  // original by: Philip Peterson\n  //   example 1: strchr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strchr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n\n  var strstr = require('../strings/strstr')\n  return strstr(haystack, needle, bool)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strcmp( 'waldo', 'owald' )","strcmp( 'owald', 'waldo' )"],"estarget":"es5","returns":["1","-1"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"revised by":["gorthaur"],"input by":["Steve Hilder"]},"notes":[],"layout":"function","title":"php'sstrcmp in JavaScript","function":"strcmp","category":"strings","language":"php","alias":["/functions/php/strcmp/","/functions/strings/strcmp/","/php/strcmp/","/functions/strcmp/"],"_content":"module.exports = function strcmp (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcmp/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: Steve Hilder\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: gorthaur\n  //   example 1: strcmp( 'waldo', 'owald' )\n  //   returns 1: 1\n  //   example 2: strcmp( 'owald', 'waldo' )\n  //   returns 2: -1\n\n  return ((str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1))\n}\n","source":"php/strings/strcmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strcmp( ''waldo'', ''owald'' )'\n  - 'strcmp( ''owald'', ''waldo'' )'\nestarget: es5\nreturns:\n  - '1'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - gorthaur\n  input by:\n    - Steve Hilder\nnotes: []\nlayout: function\ntitle: php'sstrcmp in JavaScript\nfunction: strcmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strcmp/\nalias:\n  - /functions/php/strcmp/\n  - /functions/strings/strcmp/\n  - /php/strcmp/\n  - /functions/strcmp/\n---\nmodule.exports = function strcmp (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcmp/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: Steve Hilder\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: gorthaur\n  //   example 1: strcmp( 'waldo', 'owald' )\n  //   returns 1: 1\n  //   example 2: strcmp( 'owald', 'waldo' )\n  //   returns 2: -1\n\n  return ((str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strcmp/index.html","comments":1,"_id":"cinoeja1r007cou9yxvstytzu","content":"module.exports = function strcmp (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcmp/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: Steve Hilder\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: gorthaur\n  //   example 1: strcmp( 'waldo', 'owald' )\n  //   returns 1: 1\n  //   example 2: strcmp( 'owald', 'waldo' )\n  //   returns 2: -1\n\n  return ((str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1))\n}\n","excerpt":"","more":"module.exports = function strcmp (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcmp/\n  // original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //    input by: Steve Hilder\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //  revised by: gorthaur\n  //   example 1: strcmp( 'waldo', 'owald' )\n  //   returns 1: 1\n  //   example 2: strcmp( 'owald', 'waldo' )\n  //   returns 2: -1\n\n  return ((str1 === str2) ? 0 : ((str1 > str2) ? 1 : -1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strcoll('a', 'b')"],"estarget":"es5","returns":["-1"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstrcoll in JavaScript","function":"strcoll","category":"strings","language":"php","alias":["/functions/php/strcoll/","/functions/strings/strcoll/","/php/strcoll/","/functions/strcoll/"],"_content":"module.exports = function strcoll (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcoll/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcoll('a', 'b')\n  //   returns 1: -1\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setlocale('LC_ALL', 0) // ensure setup of localization variables takes place\n\n  var cmp = $locutus.php.locales[$locutus.php.localeCategories.LC_COLLATE].LC_COLLATE\n\n  return cmp(str1, str2)\n}\n","source":"php/strings/strcoll.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strcoll(''a'', ''b'')'\nestarget: es5\nreturns:\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstrcoll in JavaScript\nfunction: strcoll\ncategory: strings\nlanguage: php\npermalink: php/strings/strcoll/\nalias:\n  - /functions/php/strcoll/\n  - /functions/strings/strcoll/\n  - /php/strcoll/\n  - /functions/strcoll/\n---\nmodule.exports = function strcoll (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcoll/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcoll('a', 'b')\n  //   returns 1: -1\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setlocale('LC_ALL', 0) // ensure setup of localization variables takes place\n\n  var cmp = $locutus.php.locales[$locutus.php.localeCategories.LC_COLLATE].LC_COLLATE\n\n  return cmp(str1, str2)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strcoll/index.html","comments":1,"_id":"cinoeja1r007dou9ymy75c3ov","content":"module.exports = function strcoll (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcoll/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcoll('a', 'b')\n  //   returns 1: -1\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setlocale('LC_ALL', 0) // ensure setup of localization variables takes place\n\n  var cmp = $locutus.php.locales[$locutus.php.localeCategories.LC_COLLATE].LC_COLLATE\n\n  return cmp(str1, str2)\n}\n","excerpt":"","more":"module.exports = function strcoll (str1, str2) {\n  //  discuss at: http://locutusjs.io/php/strcoll/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcoll('a', 'b')\n  //   returns 1: -1\n\n  var setlocale = require('../strings/setlocale')\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  setlocale('LC_ALL', 0) // ensure setup of localization variables takes place\n\n  var cmp = $locutus.php.locales[$locutus.php.localeCategories.LC_COLLATE].LC_COLLATE\n\n  return cmp(str1, str2)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strcspn('abcdefg123', '1234567890')","strcspn('123abc', '1234567890')"],"estarget":"es5","returns":["7","3"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstrcspn in JavaScript","function":"strcspn","category":"strings","language":"php","alias":["/functions/php/strcspn/","/functions/strings/strcspn/","/php/strcspn/","/functions/strcspn/"],"_content":"module.exports = function strcspn (str, mask, start, length) {\n  //  discuss at: http://locutusjs.io/php/strcspn/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcspn('abcdefg123', '1234567890')\n  //   returns 1: 7\n  //   example 2: strcspn('123abc', '1234567890')\n  //   returns 2: 3\n\n  start = start || 0\n  var count = (length && ((start + length) < str.length)) ? start + length : str.length\n  strct: for (var i = start, lgth = 0; i < count; i++) { // eslint-disable-line no-labels\n    for (var j = 0; j < mask.length; j++) {\n      if (str.charAt(i).indexOf(mask[j]) !== -1) {\n        continue strct // eslint-disable-line no-labels\n      }\n    }\n    ++lgth\n  }\n\n  return lgth\n}\n","source":"php/strings/strcspn.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strcspn(''abcdefg123'', ''1234567890'')'\n  - 'strcspn(''123abc'', ''1234567890'')'\nestarget: es5\nreturns:\n  - '7'\n  - '3'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstrcspn in JavaScript\nfunction: strcspn\ncategory: strings\nlanguage: php\npermalink: php/strings/strcspn/\nalias:\n  - /functions/php/strcspn/\n  - /functions/strings/strcspn/\n  - /php/strcspn/\n  - /functions/strcspn/\n---\nmodule.exports = function strcspn (str, mask, start, length) {\n  //  discuss at: http://locutusjs.io/php/strcspn/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcspn('abcdefg123', '1234567890')\n  //   returns 1: 7\n  //   example 2: strcspn('123abc', '1234567890')\n  //   returns 2: 3\n\n  start = start || 0\n  var count = (length && ((start + length) < str.length)) ? start + length : str.length\n  strct: for (var i = start, lgth = 0; i < count; i++) { // eslint-disable-line no-labels\n    for (var j = 0; j < mask.length; j++) {\n      if (str.charAt(i).indexOf(mask[j]) !== -1) {\n        continue strct // eslint-disable-line no-labels\n      }\n    }\n    ++lgth\n  }\n\n  return lgth\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strcspn/index.html","comments":1,"_id":"cinoeja1r007eou9y96sx8d66","content":"module.exports = function strcspn (str, mask, start, length) {\n  //  discuss at: http://locutusjs.io/php/strcspn/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcspn('abcdefg123', '1234567890')\n  //   returns 1: 7\n  //   example 2: strcspn('123abc', '1234567890')\n  //   returns 2: 3\n\n  start = start || 0\n  var count = (length && ((start + length) < str.length)) ? start + length : str.length\n  strct: for (var i = start, lgth = 0; i < count; i++) { // eslint-disable-line no-labels\n    for (var j = 0; j < mask.length; j++) {\n      if (str.charAt(i).indexOf(mask[j]) !== -1) {\n        continue strct // eslint-disable-line no-labels\n      }\n    }\n    ++lgth\n  }\n\n  return lgth\n}\n","excerpt":"","more":"module.exports = function strcspn (str, mask, start, length) {\n  //  discuss at: http://locutusjs.io/php/strcspn/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strcspn('abcdefg123', '1234567890')\n  //   returns 1: 7\n  //   example 2: strcspn('123abc', '1234567890')\n  //   returns 2: 3\n\n  start = start || 0\n  var count = (length && ((start + length) < str.length)) ? start + length : str.length\n  strct: for (var i = start, lgth = 0; i < count; i++) { // eslint-disable-line no-labels\n    for (var j = 0; j < mask.length; j++) {\n      if (str.charAt(i).indexOf(mask[j]) !== -1) {\n        continue strct // eslint-disable-line no-labels\n      }\n    }\n    ++lgth\n  }\n\n  return lgth\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strip_tags('<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>', '<i><b>')","strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')","strip_tags(\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\", \"<a>\")","strip_tags('1 < 5 5 > 1')","strip_tags('1 <br/> 1')","strip_tags('1 <br/> 1', '<br>')","strip_tags('1 <br/> 1', '<br><br/>')"],"estarget":"es5","returns":["'Kevin <b>van</b> <i>Zonneveld</i>'","'<p>Kevin van Zonneveld</p>'","\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\"","'1 < 5 5 > 1'","'1  1'","'1 <br/> 1'","'1 <br/> 1'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Luke Godfrey","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Onno Marsman (https://twitter.com/onnomarsman)","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Eric Nagel","Kevin van Zonneveld (http://kvz.io)","Tomasz Wesolowski"],"revised by":["Rafał Kukawski (http://blog.kukawski.pl)"],"input by":["Pul","Alex","Marc Palau","Brett Zamir (http://brett-zamir.me)","Bobby Drake","Evertjan Garretsen"]},"notes":[],"layout":"function","title":"php'sstrip_tags in JavaScript","function":"strip_tags","category":"strings","language":"php","alias":["/functions/php/strip_tags/","/functions/strings/strip_tags/","/php/strip_tags/","/functions/strip_tags/"],"_content":"module.exports = function strip_tags (input, allowed) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/strip_tags/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Luke Godfrey\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Pul\n  //    input by: Alex\n  //    input by: Marc Palau\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bobby Drake\n  //    input by: Evertjan Garretsen\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Eric Nagel\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Tomasz Wesolowski\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: strip_tags('<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>', '<i><b>')\n  //   returns 1: 'Kevin <b>van</b> <i>Zonneveld</i>'\n  //   example 2: strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  //   returns 2: '<p>Kevin van Zonneveld</p>'\n  //   example 3: strip_tags(\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\", \"<a>\")\n  //   returns 3: \"<a href='http://kvz.io'>Kevin van Zonneveld</a>\"\n  //   example 4: strip_tags('1 < 5 5 > 1')\n  //   returns 4: '1 < 5 5 > 1'\n  //   example 5: strip_tags('1 <br/> 1')\n  //   returns 5: '1  1'\n  //   example 6: strip_tags('1 <br/> 1', '<br>')\n  //   returns 6: '1 <br/> 1'\n  //   example 7: strip_tags('1 <br/> 1', '<br><br/>')\n  //   returns 7: '1 <br/> 1'\n\n  // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('')\n\n  var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi\n  var commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi\n\n  return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : ''\n  })\n}\n","source":"php/strings/strip_tags.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strip_tags(''<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>'', ''<i><b>'')'\n  - >-\n    strip_tags('<p>Kevin <img src=\"someimage.png\"\n    onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  - 'strip_tags(\"<a href=''http://kvz.io''>Kevin van Zonneveld</a>\", \"<a>\")'\n  - strip_tags('1 < 5 5 > 1')\n  - strip_tags('1 <br/> 1')\n  - 'strip_tags(''1 <br/> 1'', ''<br>'')'\n  - 'strip_tags(''1 <br/> 1'', ''<br><br/>'')'\nestarget: es5\nreturns:\n  - '''Kevin <b>van</b> <i>Zonneveld</i>'''\n  - '''<p>Kevin van Zonneveld</p>'''\n  - '\"<a href=''http://kvz.io''>Kevin van Zonneveld</a>\"'\n  - '''1 < 5 5 > 1'''\n  - '''1  1'''\n  - '''1 <br/> 1'''\n  - '''1 <br/> 1'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Luke Godfrey\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Eric Nagel\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Tomasz Wesolowski\n  revised by:\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  input by:\n    - Pul\n    - Alex\n    - Marc Palau\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Bobby Drake\n    - Evertjan Garretsen\nnotes: []\nlayout: function\ntitle: php'sstrip_tags in JavaScript\nfunction: strip_tags\ncategory: strings\nlanguage: php\npermalink: php/strings/strip_tags/\nalias:\n  - /functions/php/strip_tags/\n  - /functions/strings/strip_tags/\n  - /php/strip_tags/\n  - /functions/strip_tags/\n---\nmodule.exports = function strip_tags (input, allowed) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/strip_tags/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Luke Godfrey\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Pul\n  //    input by: Alex\n  //    input by: Marc Palau\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bobby Drake\n  //    input by: Evertjan Garretsen\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Eric Nagel\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Tomasz Wesolowski\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: strip_tags('<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>', '<i><b>')\n  //   returns 1: 'Kevin <b>van</b> <i>Zonneveld</i>'\n  //   example 2: strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  //   returns 2: '<p>Kevin van Zonneveld</p>'\n  //   example 3: strip_tags(\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\", \"<a>\")\n  //   returns 3: \"<a href='http://kvz.io'>Kevin van Zonneveld</a>\"\n  //   example 4: strip_tags('1 < 5 5 > 1')\n  //   returns 4: '1 < 5 5 > 1'\n  //   example 5: strip_tags('1 <br/> 1')\n  //   returns 5: '1  1'\n  //   example 6: strip_tags('1 <br/> 1', '<br>')\n  //   returns 6: '1 <br/> 1'\n  //   example 7: strip_tags('1 <br/> 1', '<br><br/>')\n  //   returns 7: '1 <br/> 1'\n\n  // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('')\n\n  var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi\n  var commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi\n\n  return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : ''\n  })\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strip_tags/index.html","comments":1,"_id":"cinoeja1s007fou9yt7flfgtz","content":"module.exports = function strip_tags (input, allowed) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/strip_tags/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Luke Godfrey\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Pul\n  //    input by: Alex\n  //    input by: Marc Palau\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bobby Drake\n  //    input by: Evertjan Garretsen\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Eric Nagel\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Tomasz Wesolowski\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: strip_tags('<p>Kevin</p> <br><b>van</b> <i>Zonneveld</i>', '<i><b>')\n  //   returns 1: 'Kevin <b>van</b> <i>Zonneveld</i>'\n  //   example 2: strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  //   returns 2: '</p><p>Kevin van Zonneveld</p>'\n  //   example 3: strip_tags(\"<a href=\"http://kvz.io\" target=\"_blank\" rel=\"external\">Kevin van Zonneveld</a>\", \"<a>\")\n  //   returns 3: \"<a href=\"http://kvz.io\" target=\"_blank\" rel=\"external\">Kevin van Zonneveld</a>\"\n  //   example 4: strip_tags('1 < 5 5 > 1')\n  //   returns 4: '1 < 5 5 > 1'\n  //   example 5: strip_tags('1 <br> 1')\n  //   returns 5: '1  1'\n  //   example 6: strip_tags('1 <br> 1', '<br>')\n  //   returns 6: '1 <br> 1'\n  //   example 7: strip_tags('1 <br> 1', '<br><br>')\n  //   returns 7: '1 <br> 1'\n\n  // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('')\n\n  var tags = /<\\ ?([a-z][a-z0-9]*)\\b[^=\"\">]*>/gi\n  var commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\s]*?\\?>/gi\n\n  return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n    return allowed.indexOf('<' +=\"\" $1.tolowercase()=\"\" '=\"\">') > -1 ? $0 : ''\n  })\n}\n</'></\\?(?:php)?[\\s\\s]*?\\?></\\></[a-z][a-z0-9]*></c></b></a></a></b></i>","excerpt":"","more":"module.exports = function strip_tags (input, allowed) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/strip_tags/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Luke Godfrey\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Pul\n  //    input by: Alex\n  //    input by: Marc Palau\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Bobby Drake\n  //    input by: Evertjan Garretsen\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Eric Nagel\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Tomasz Wesolowski\n  //  revised by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: strip_tags('<p>Kevin</p> <br /><b>van</b> <i>Zonneveld</i>', '<i><b>')\n  //   returns 1: 'Kevin <b>van</b> <i>Zonneveld</i>'\n  //   example 2: strip_tags('<p>Kevin <img src=\"someimage.png\" onmouseover=\"someFunction()\">van <i>Zonneveld</i></p>', '<p>')\n  //   returns 2: '<p>Kevin van Zonneveld</p>'\n  //   example 3: strip_tags(\"<a href='http://kvz.io'>Kevin van Zonneveld</a>\", \"<a>\")\n  //   returns 3: \"<a href='http://kvz.io'>Kevin van Zonneveld</a>\"\n  //   example 4: strip_tags('1 < 5 5 > 1')\n  //   returns 4: '1 < 5 5 > 1'\n  //   example 5: strip_tags('1 <br/> 1')\n  //   returns 5: '1  1'\n  //   example 6: strip_tags('1 <br/> 1', '<br>')\n  //   returns 6: '1 <br/> 1'\n  //   example 7: strip_tags('1 <br/> 1', '<br><br/>')\n  //   returns 7: '1 <br/> 1'\n\n  // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)\n  allowed = (((allowed || '') + '').toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('')\n\n  var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>/gi\n  var commentsAndPhpTags = /<!--[\\s\\S]*?-->|<\\?(?:php)?[\\s\\S]*?\\?>/gi\n\n  return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {\n    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : ''\n  })\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["stripos('ABC', 'a')"],"estarget":"es5","returns":["0"],"dependencies":[],"authors":{"original by":["Martijn Wieringa"],"revised by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstripos in JavaScript","function":"stripos","category":"strings","language":"php","alias":["/functions/php/stripos/","/functions/strings/stripos/","/php/stripos/","/functions/stripos/"],"_content":"module.exports = function stripos (fHaystack, fNeedle, fOffset) {\n  //  discuss at: http://locutusjs.io/php/stripos/\n  // original by: Martijn Wieringa\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stripos('ABC', 'a')\n  //   returns 1: 0\n\n  var haystack = (fHaystack + '').toLowerCase()\n  var needle = (fNeedle + '').toLowerCase()\n  var index = 0\n\n  if ((index = haystack.indexOf(needle, fOffset)) !== -1) {\n    return index\n  }\n\n  return false\n}\n","source":"php/strings/stripos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'stripos(''ABC'', ''a'')'\nestarget: es5\nreturns:\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - Martijn Wieringa\n  revised by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstripos in JavaScript\nfunction: stripos\ncategory: strings\nlanguage: php\npermalink: php/strings/stripos/\nalias:\n  - /functions/php/stripos/\n  - /functions/strings/stripos/\n  - /php/stripos/\n  - /functions/stripos/\n---\nmodule.exports = function stripos (fHaystack, fNeedle, fOffset) {\n  //  discuss at: http://locutusjs.io/php/stripos/\n  // original by: Martijn Wieringa\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stripos('ABC', 'a')\n  //   returns 1: 0\n\n  var haystack = (fHaystack + '').toLowerCase()\n  var needle = (fNeedle + '').toLowerCase()\n  var index = 0\n\n  if ((index = haystack.indexOf(needle, fOffset)) !== -1) {\n    return index\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/stripos/index.html","comments":1,"_id":"cinoeja1s007gou9ynvuwfoh5","content":"module.exports = function stripos (fHaystack, fNeedle, fOffset) {\n  //  discuss at: http://locutusjs.io/php/stripos/\n  // original by: Martijn Wieringa\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stripos('ABC', 'a')\n  //   returns 1: 0\n\n  var haystack = (fHaystack + '').toLowerCase()\n  var needle = (fNeedle + '').toLowerCase()\n  var index = 0\n\n  if ((index = haystack.indexOf(needle, fOffset)) !== -1) {\n    return index\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function stripos (fHaystack, fNeedle, fOffset) {\n  //  discuss at: http://locutusjs.io/php/stripos/\n  // original by: Martijn Wieringa\n  //  revised by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stripos('ABC', 'a')\n  //   returns 1: 0\n\n  var haystack = (fHaystack + '').toLowerCase()\n  var needle = (fNeedle + '').toLowerCase()\n  var index = 0\n\n  if ((index = haystack.indexOf(needle, fOffset)) !== -1) {\n    return index\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["stripslashes('Kevin\\'s code')","stripslashes('Kevin\\\\\\'s code')"],"estarget":"es5","returns":["\"Kevin's code\"","\"Kevin\\'s code\""],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Ates Goral (http://magnetiq.com)","marrtins","rezna"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"input by":["Rick Waldron","Brant Messenger (http://www.brantmessenger.com/)"]},"notes":[],"layout":"function","title":"php'sstripslashes in JavaScript","function":"stripslashes","category":"strings","language":"php","alias":["/functions/php/stripslashes/","/functions/strings/stripslashes/","/php/stripslashes/","/functions/stripslashes/"],"_content":"module.exports = function stripslashes (str) {\n  //       discuss at: http://locutusjs.io/php/stripslashes/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Ates Goral (http://magnetiq.com)\n  //      improved by: marrtins\n  //      improved by: rezna\n  //         fixed by: Mick@el\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Rick Waldron\n  //         input by: Brant Messenger (http://www.brantmessenger.com/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: stripslashes('Kevin\\'s code')\n  //        returns 1: \"Kevin's code\"\n  //        example 2: stripslashes('Kevin\\\\\\'s code')\n  //        returns 2: \"Kevin\\'s code\"\n\n  return (str + '')\n    .replace(/\\\\(.?)/g, function (s, n1) {\n      switch (n1) {\n        case '\\\\':\n          return '\\\\'\n        case '0':\n          return '\\u0000'\n        case '':\n          return ''\n        default:\n          return n1\n      }\n    })\n}\n","source":"php/strings/stripslashes.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - stripslashes('Kevin\\'s code')\n  - stripslashes('Kevin\\\\\\'s code')\nestarget: es5\nreturns:\n  - '\"Kevin''s code\"'\n  - '\"Kevin\\''s code\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Ates Goral (http://magnetiq.com)'\n    - marrtins\n    - rezna\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Rick Waldron\n    - 'Brant Messenger (http://www.brantmessenger.com/)'\nnotes: []\nlayout: function\ntitle: php'sstripslashes in JavaScript\nfunction: stripslashes\ncategory: strings\nlanguage: php\npermalink: php/strings/stripslashes/\nalias:\n  - /functions/php/stripslashes/\n  - /functions/strings/stripslashes/\n  - /php/stripslashes/\n  - /functions/stripslashes/\n---\nmodule.exports = function stripslashes (str) {\n  //       discuss at: http://locutusjs.io/php/stripslashes/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Ates Goral (http://magnetiq.com)\n  //      improved by: marrtins\n  //      improved by: rezna\n  //         fixed by: Mick@el\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Rick Waldron\n  //         input by: Brant Messenger (http://www.brantmessenger.com/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: stripslashes('Kevin\\'s code')\n  //        returns 1: \"Kevin's code\"\n  //        example 2: stripslashes('Kevin\\\\\\'s code')\n  //        returns 2: \"Kevin\\'s code\"\n\n  return (str + '')\n    .replace(/\\\\(.?)/g, function (s, n1) {\n      switch (n1) {\n        case '\\\\':\n          return '\\\\'\n        case '0':\n          return '\\u0000'\n        case '':\n          return ''\n        default:\n          return n1\n      }\n    })\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/stripslashes/index.html","comments":1,"_id":"cinoeja1s007hou9y3c4c69sb","content":"module.exports = function stripslashes (str) {\n  //       discuss at: http://locutusjs.io/php/stripslashes/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Ates Goral (http://magnetiq.com)\n  //      improved by: marrtins\n  //      improved by: rezna\n  //         fixed by: Mick@el\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Rick Waldron\n  //         input by: Brant Messenger (http://www.brantmessenger.com/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: stripslashes('Kevin\\'s code')\n  //        returns 1: \"Kevin's code\"\n  //        example 2: stripslashes('Kevin\\\\\\'s code')\n  //        returns 2: \"Kevin\\'s code\"\n\n  return (str + '')\n    .replace(/\\\\(.?)/g, function (s, n1) {\n      switch (n1) {\n        case '\\\\':\n          return '\\\\'\n        case '0':\n          return '\\u0000'\n        case '':\n          return ''\n        default:\n          return n1\n      }\n    })\n}\n","excerpt":"","more":"module.exports = function stripslashes (str) {\n  //       discuss at: http://locutusjs.io/php/stripslashes/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Ates Goral (http://magnetiq.com)\n  //      improved by: marrtins\n  //      improved by: rezna\n  //         fixed by: Mick@el\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Rick Waldron\n  //         input by: Brant Messenger (http://www.brantmessenger.com/)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: stripslashes('Kevin\\'s code')\n  //        returns 1: \"Kevin's code\"\n  //        example 2: stripslashes('Kevin\\\\\\'s code')\n  //        returns 2: \"Kevin\\'s code\"\n\n  return (str + '')\n    .replace(/\\\\(.?)/g, function (s, n1) {\n      switch (n1) {\n        case '\\\\':\n          return '\\\\'\n        case '0':\n          return '\\u0000'\n        case '':\n          return ''\n        default:\n          return n1\n      }\n    })\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["stristr('Kevin van Zonneveld', 'Van')","stristr('Kevin van Zonneveld', 'VAN', true)"],"estarget":"es5","returns":["'van Zonneveld'","'Kevin '"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstristr in JavaScript","function":"stristr","category":"strings","language":"php","alias":["/functions/php/stristr/","/functions/strings/stristr/","/php/stristr/","/functions/stristr/"],"_content":"module.exports = function stristr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/stristr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stristr('Kevin van Zonneveld', 'Van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: stristr('Kevin van Zonneveld', 'VAN', true)\n  //   returns 2: 'Kevin '\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.toLowerCase()\n    .indexOf((needle + '')\n      .toLowerCase())\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","source":"php/strings/stristr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'stristr(''Kevin van Zonneveld'', ''Van'')'\n  - 'stristr(''Kevin van Zonneveld'', ''VAN'', true)'\nestarget: es5\nreturns:\n  - '''van Zonneveld'''\n  - '''Kevin '''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstristr in JavaScript\nfunction: stristr\ncategory: strings\nlanguage: php\npermalink: php/strings/stristr/\nalias:\n  - /functions/php/stristr/\n  - /functions/strings/stristr/\n  - /php/stristr/\n  - /functions/stristr/\n---\nmodule.exports = function stristr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/stristr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stristr('Kevin van Zonneveld', 'Van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: stristr('Kevin van Zonneveld', 'VAN', true)\n  //   returns 2: 'Kevin '\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.toLowerCase()\n    .indexOf((needle + '')\n      .toLowerCase())\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/stristr/index.html","comments":1,"_id":"cinoeja1t007iou9y0vr2lxc4","content":"module.exports = function stristr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/stristr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stristr('Kevin van Zonneveld', 'Van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: stristr('Kevin van Zonneveld', 'VAN', true)\n  //   returns 2: 'Kevin '\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.toLowerCase()\n    .indexOf((needle + '')\n      .toLowerCase())\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function stristr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/stristr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: stristr('Kevin van Zonneveld', 'Van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: stristr('Kevin van Zonneveld', 'VAN', true)\n  //   returns 2: 'Kevin '\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.toLowerCase()\n    .indexOf((needle + '')\n      .toLowerCase())\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strlen('Kevin van Zonneveld')","ini_set('unicode.semantics', 'on')\nstrlen('A\\ud87e\\udc04Z')"],"estarget":"es5","returns":["19","3"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Sakimori","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"revised by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Kirk Strobeck"]},"notes":["May look like overkill, but in order to be truly faithful to handling all Unicode\ncharacters and to this function in PHP which does not count the number of bytes\nbut counts the number of characters, something like this is really necessary."],"layout":"function","title":"php'sstrlen in JavaScript","function":"strlen","category":"strings","language":"php","alias":["/functions/php/strlen/","/functions/strings/strlen/","/php/strlen/","/functions/strlen/"],"_content":"module.exports = function strlen (string) {\n  //  discuss at: http://locutusjs.io/php/strlen/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Kirk Strobeck\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: May look like overkill, but in order to be truly faithful to handling all Unicode\n  //      note 1: characters and to this function in PHP which does not count the number of bytes\n  //      note 1: but counts the number of characters, something like this is really necessary.\n  //   example 1: strlen('Kevin van Zonneveld')\n  //   returns 1: 19\n  //   example 2: ini_set('unicode.semantics', 'on')\n  //   example 2: strlen('A\\ud87e\\udc04Z')\n  //   returns 2: 3\n\n  var str = string + ''\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.semantics') : undefined) || 'off'\n  if (iniVal === 'off') {\n    return str.length\n  }\n\n  var i = 0\n  var lgth = 0\n\n  var getWholeChar = function (str, i) {\n    var code = str.charCodeAt(i)\n    var next = ''\n    var prev = ''\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to\n      // treat high private surrogates as single characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    } else if (code >= 0xDC00 && code <= 0xDFFF) {\n      // Low surrogate\n      if (i === 0) {\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      prev = str.charCodeAt(i - 1)\n      if (prev < 0xD800 || prev > 0xDBFF) {\n        // (could change last hex to 0xDB7F to treat high private surrogates\n        // as single characters)\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      // We can pass over low surrogates now as the second\n      // component in a pair which we have already processed\n      return false\n    }\n    return str.charAt(i)\n  }\n\n  for (i = 0, lgth = 0; i < str.length; i++) {\n    if ((getWholeChar(str, i)) === false) {\n      continue\n    }\n    // Adapt this line at the top of any loop, passing in the whole string and\n    // the current iteration and returning a variable to represent the individual character;\n    // purpose is to treat the first part of a surrogate pair as the whole character and then\n    // ignore the second part\n    lgth++\n  }\n\n  return lgth\n}\n","source":"php/strings/strlen.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - strlen('Kevin van Zonneveld')\n  - |-\n    ini_set('unicode.semantics', 'on')\n    strlen('A\\ud87e\\udc04Z')\nestarget: es5\nreturns:\n  - '19'\n  - '3'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Sakimori\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  revised by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Kirk Strobeck\nnotes:\n  - >-\n    May look like overkill, but in order to be truly faithful to handling all\n    Unicode\n\n    characters and to this function in PHP which does not count the number of\n    bytes\n\n    but counts the number of characters, something like this is really\n    necessary.\nlayout: function\ntitle: php'sstrlen in JavaScript\nfunction: strlen\ncategory: strings\nlanguage: php\npermalink: php/strings/strlen/\nalias:\n  - /functions/php/strlen/\n  - /functions/strings/strlen/\n  - /php/strlen/\n  - /functions/strlen/\n---\nmodule.exports = function strlen (string) {\n  //  discuss at: http://locutusjs.io/php/strlen/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Kirk Strobeck\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: May look like overkill, but in order to be truly faithful to handling all Unicode\n  //      note 1: characters and to this function in PHP which does not count the number of bytes\n  //      note 1: but counts the number of characters, something like this is really necessary.\n  //   example 1: strlen('Kevin van Zonneveld')\n  //   returns 1: 19\n  //   example 2: ini_set('unicode.semantics', 'on')\n  //   example 2: strlen('A\\ud87e\\udc04Z')\n  //   returns 2: 3\n\n  var str = string + ''\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.semantics') : undefined) || 'off'\n  if (iniVal === 'off') {\n    return str.length\n  }\n\n  var i = 0\n  var lgth = 0\n\n  var getWholeChar = function (str, i) {\n    var code = str.charCodeAt(i)\n    var next = ''\n    var prev = ''\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to\n      // treat high private surrogates as single characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    } else if (code >= 0xDC00 && code <= 0xDFFF) {\n      // Low surrogate\n      if (i === 0) {\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      prev = str.charCodeAt(i - 1)\n      if (prev < 0xD800 || prev > 0xDBFF) {\n        // (could change last hex to 0xDB7F to treat high private surrogates\n        // as single characters)\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      // We can pass over low surrogates now as the second\n      // component in a pair which we have already processed\n      return false\n    }\n    return str.charAt(i)\n  }\n\n  for (i = 0, lgth = 0; i < str.length; i++) {\n    if ((getWholeChar(str, i)) === false) {\n      continue\n    }\n    // Adapt this line at the top of any loop, passing in the whole string and\n    // the current iteration and returning a variable to represent the individual character;\n    // purpose is to treat the first part of a surrogate pair as the whole character and then\n    // ignore the second part\n    lgth++\n  }\n\n  return lgth\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strlen/index.html","comments":1,"_id":"cinoeja1t007jou9y9do0rteu","content":"module.exports = function strlen (string) {\n  //  discuss at: http://locutusjs.io/php/strlen/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Kirk Strobeck\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: May look like overkill, but in order to be truly faithful to handling all Unicode\n  //      note 1: characters and to this function in PHP which does not count the number of bytes\n  //      note 1: but counts the number of characters, something like this is really necessary.\n  //   example 1: strlen('Kevin van Zonneveld')\n  //   returns 1: 19\n  //   example 2: ini_set('unicode.semantics', 'on')\n  //   example 2: strlen('A\\ud87e\\udc04Z')\n  //   returns 2: 3\n\n  var str = string + ''\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.semantics') : undefined) || 'off'\n  if (iniVal === 'off') {\n    return str.length\n  }\n\n  var i = 0\n  var lgth = 0\n\n  var getWholeChar = function (str, i) {\n    var code = str.charCodeAt(i)\n    var next = ''\n    var prev = ''\n    if (code >= 0xD800 && code <= 0xdbff)=\"\" {=\"\" high=\"\" surrogate=\"\" (could=\"\" change=\"\" last=\"\" hex=\"\" to=\"\" 0xdb7f=\"\" treat=\"\" private=\"\" surrogates=\"\" as=\"\" single=\"\" characters)=\"\" if=\"\" (str.length=\"\" <=\"(i\" +=\"\" 1))=\"\" throw=\"\" new=\"\" error('high=\"\" without=\"\" following=\"\" low=\"\" surrogate')=\"\" }=\"\" next=\"str.charCodeAt(i\" 1)=\"\" (next=\"\" 0xdc00=\"\" ||=\"\"> 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    } else if (code >= 0xDC00 && code <= 0xdfff)=\"\" {=\"\" low=\"\" surrogate=\"\" if=\"\" (i=\"==\" 0)=\"\" throw=\"\" new=\"\" error('low=\"\" without=\"\" preceding=\"\" high=\"\" surrogate')=\"\" }=\"\" prev=\"str.charCodeAt(i\" -=\"\" 1)=\"\" (prev=\"\" <=\"\" 0xd800=\"\" ||=\"\"> 0xDBFF) {\n        // (could change last hex to 0xDB7F to treat high private surrogates\n        // as single characters)\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      // We can pass over low surrogates now as the second\n      // component in a pair which we have already processed\n      return false\n    }\n    return str.charAt(i)\n  }\n\n  for (i = 0, lgth = 0; i < str.length; i++) {\n    if ((getWholeChar(str, i)) === false) {\n      continue\n    }\n    // Adapt this line at the top of any loop, passing in the whole string and\n    // the current iteration and returning a variable to represent the individual character;\n    // purpose is to treat the first part of a surrogate pair as the whole character and then\n    // ignore the second part\n    lgth++\n  }\n\n  return lgth\n}\n</=></=>","excerpt":"","more":"module.exports = function strlen (string) {\n  //  discuss at: http://locutusjs.io/php/strlen/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Kirk Strobeck\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: May look like overkill, but in order to be truly faithful to handling all Unicode\n  //      note 1: characters and to this function in PHP which does not count the number of bytes\n  //      note 1: but counts the number of characters, something like this is really necessary.\n  //   example 1: strlen('Kevin van Zonneveld')\n  //   returns 1: 19\n  //   example 2: ini_set('unicode.semantics', 'on')\n  //   example 2: strlen('A\\ud87e\\udc04Z')\n  //   returns 2: 3\n\n  var str = string + ''\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.semantics') : undefined) || 'off'\n  if (iniVal === 'off') {\n    return str.length\n  }\n\n  var i = 0\n  var lgth = 0\n\n  var getWholeChar = function (str, i) {\n    var code = str.charCodeAt(i)\n    var next = ''\n    var prev = ''\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      // High surrogate (could change last hex to 0xDB7F to\n      // treat high private surrogates as single characters)\n      if (str.length <= (i + 1)) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        throw new Error('High surrogate without following low surrogate')\n      }\n      return str.charAt(i) + str.charAt(i + 1)\n    } else if (code >= 0xDC00 && code <= 0xDFFF) {\n      // Low surrogate\n      if (i === 0) {\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      prev = str.charCodeAt(i - 1)\n      if (prev < 0xD800 || prev > 0xDBFF) {\n        // (could change last hex to 0xDB7F to treat high private surrogates\n        // as single characters)\n        throw new Error('Low surrogate without preceding high surrogate')\n      }\n      // We can pass over low surrogates now as the second\n      // component in a pair which we have already processed\n      return false\n    }\n    return str.charAt(i)\n  }\n\n  for (i = 0, lgth = 0; i < str.length; i++) {\n    if ((getWholeChar(str, i)) === false) {\n      continue\n    }\n    // Adapt this line at the top of any loop, passing in the whole string and\n    // the current iteration and returning a variable to represent the individual character;\n    // purpose is to treat the first part of a surrogate pair as the whole character and then\n    // ignore the second part\n    lgth++\n  }\n\n  return lgth\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strnatcasecmp(10, 1)","strnatcasecmp('1', '10')"],"estarget":"es5","returns":["1","-1"],"dependencies":[],"authors":{"original by":["Martin Pool"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Devan Penner-Woelk"]},"notes":[],"layout":"function","title":"php'sstrnatcasecmp in JavaScript","function":"strnatcasecmp","category":"strings","language":"php","alias":["/functions/php/strnatcasecmp/","/functions/strings/strnatcasecmp/","/php/strnatcasecmp/","/functions/strnatcasecmp/"],"_content":"module.exports = function strnatcasecmp (str1, str2) {\n  //       discuss at: http://locutusjs.io/php/strnatcasecmp/\n  //      original by: Martin Pool\n  // reimplemented by: Pierre-Luc Paour\n  // reimplemented by: Kristof Coomans (SCK-CEN (Belgian Nucleair Research Centre))\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Devan Penner-Woelk\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //        example 1: strnatcasecmp(10, 1)\n  //        returns 1: 1\n  //        example 2: strnatcasecmp('1', '10')\n  //        returns 2: -1\n  //        test: skip-all\n\n  var a = (str1 + '').toLowerCase()\n  var b = (str2 + '').toLowerCase()\n\n  var isWhitespaceChar = function (a) {\n    return a.charCodeAt(0) <= 32\n  }\n\n  var isDigitChar = function (a) {\n    var charCode = a.charCodeAt(0)\n    return (charCode >= 48 && charCode <= 57)\n  }\n\n  var compareRight = function (a, b) {\n    var bias = 0\n    var ia = 0\n    var ib = 0\n\n    var ca\n    var cb\n\n    // The longest run of digits wins.  That aside, the greatest\n    // value wins, but we can't know that it will until we've scanned\n    // both numbers to know that they have the same magnitude, so we\n    // remember it in BIAS.\n    for (; true; ia++, ib++) {\n      ca = a.charAt(ia)\n      cb = b.charAt(ib)\n\n      if (!isDigitChar(ca) && !isDigitChar(cb)) {\n        return bias\n      } else if (!isDigitChar(ca)) {\n        return -1\n      } else if (!isDigitChar(cb)) {\n        return 1\n      } else if (ca < cb) {\n        if (bias === 0) {\n          bias = -1\n        }\n      } else if (ca > cb) {\n        if (bias === 0) {\n          bias = 1\n        }\n      } else if (ca === '0' && cb === '0') {\n        return bias\n      }\n    }\n  }\n\n  var ia = 0\n  var ib = 0\n  var nza = 0\n  var nzb = 0\n  var ca\n  var cb\n  var result\n\n  while (true) {\n    // only count the number of zeroes leading the last number compared\n    nza = nzb = 0\n\n    ca = a.charAt(ia)\n    cb = b.charAt(ib)\n\n    // skip over leading spaces or zeros\n    while (isWhitespaceChar(ca) || ca === '0') {\n      if (ca === '0') {\n        nza++\n      } else {\n        // only count consecutive zeroes\n        nza = 0\n      }\n\n      ca = a.charAt(++ia)\n    }\n\n    while (isWhitespaceChar(cb) || cb === '0') {\n      if (cb === '0') {\n        nzb++\n      } else {\n        // only count consecutive zeroes\n        nzb = 0\n      }\n\n      cb = b.charAt(++ib)\n    }\n\n    // process run of digits\n    if (isDigitChar(ca) && isDigitChar(cb)) {\n      if ((result = compareRight(a.substring(ia), b.substring(ib))) !== 0) {\n        return result\n      }\n    }\n\n    if (ca === '0' && cb === '0') {\n      // The strings compare the same.  Perhaps the caller\n      // will want to call strcmp to break the tie.\n      return nza - nzb\n    }\n\n    if (ca < cb) {\n      return -1\n    } else if (ca > cb) {\n      return +1\n    }\n\n    // prevent possible infinite loop\n    if (ia >= a.length && ib >= b.length) return 0;\n\n    ++ia;\n    ++ib\n  }\n}\n","source":"php/strings/strnatcasecmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strnatcasecmp(10, 1)'\n  - 'strnatcasecmp(''1'', ''10'')'\nestarget: es5\nreturns:\n  - '1'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - Martin Pool\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Devan Penner-Woelk\nnotes: []\nlayout: function\ntitle: php'sstrnatcasecmp in JavaScript\nfunction: strnatcasecmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strnatcasecmp/\nalias:\n  - /functions/php/strnatcasecmp/\n  - /functions/strings/strnatcasecmp/\n  - /php/strnatcasecmp/\n  - /functions/strnatcasecmp/\n---\nmodule.exports = function strnatcasecmp (str1, str2) {\n  //       discuss at: http://locutusjs.io/php/strnatcasecmp/\n  //      original by: Martin Pool\n  // reimplemented by: Pierre-Luc Paour\n  // reimplemented by: Kristof Coomans (SCK-CEN (Belgian Nucleair Research Centre))\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Devan Penner-Woelk\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //        example 1: strnatcasecmp(10, 1)\n  //        returns 1: 1\n  //        example 2: strnatcasecmp('1', '10')\n  //        returns 2: -1\n  //        test: skip-all\n\n  var a = (str1 + '').toLowerCase()\n  var b = (str2 + '').toLowerCase()\n\n  var isWhitespaceChar = function (a) {\n    return a.charCodeAt(0) <= 32\n  }\n\n  var isDigitChar = function (a) {\n    var charCode = a.charCodeAt(0)\n    return (charCode >= 48 && charCode <= 57)\n  }\n\n  var compareRight = function (a, b) {\n    var bias = 0\n    var ia = 0\n    var ib = 0\n\n    var ca\n    var cb\n\n    // The longest run of digits wins.  That aside, the greatest\n    // value wins, but we can't know that it will until we've scanned\n    // both numbers to know that they have the same magnitude, so we\n    // remember it in BIAS.\n    for (; true; ia++, ib++) {\n      ca = a.charAt(ia)\n      cb = b.charAt(ib)\n\n      if (!isDigitChar(ca) && !isDigitChar(cb)) {\n        return bias\n      } else if (!isDigitChar(ca)) {\n        return -1\n      } else if (!isDigitChar(cb)) {\n        return 1\n      } else if (ca < cb) {\n        if (bias === 0) {\n          bias = -1\n        }\n      } else if (ca > cb) {\n        if (bias === 0) {\n          bias = 1\n        }\n      } else if (ca === '0' && cb === '0') {\n        return bias\n      }\n    }\n  }\n\n  var ia = 0\n  var ib = 0\n  var nza = 0\n  var nzb = 0\n  var ca\n  var cb\n  var result\n\n  while (true) {\n    // only count the number of zeroes leading the last number compared\n    nza = nzb = 0\n\n    ca = a.charAt(ia)\n    cb = b.charAt(ib)\n\n    // skip over leading spaces or zeros\n    while (isWhitespaceChar(ca) || ca === '0') {\n      if (ca === '0') {\n        nza++\n      } else {\n        // only count consecutive zeroes\n        nza = 0\n      }\n\n      ca = a.charAt(++ia)\n    }\n\n    while (isWhitespaceChar(cb) || cb === '0') {\n      if (cb === '0') {\n        nzb++\n      } else {\n        // only count consecutive zeroes\n        nzb = 0\n      }\n\n      cb = b.charAt(++ib)\n    }\n\n    // process run of digits\n    if (isDigitChar(ca) && isDigitChar(cb)) {\n      if ((result = compareRight(a.substring(ia), b.substring(ib))) !== 0) {\n        return result\n      }\n    }\n\n    if (ca === '0' && cb === '0') {\n      // The strings compare the same.  Perhaps the caller\n      // will want to call strcmp to break the tie.\n      return nza - nzb\n    }\n\n    if (ca < cb) {\n      return -1\n    } else if (ca > cb) {\n      return +1\n    }\n\n    // prevent possible infinite loop\n    if (ia >= a.length && ib >= b.length) return 0;\n\n    ++ia;\n    ++ib\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strnatcasecmp/index.html","comments":1,"_id":"cinoeja1t007kou9yo36cbmen","content":"module.exports = function strnatcasecmp (str1, str2) {\n  //       discuss at: http://locutusjs.io/php/strnatcasecmp/\n  //      original by: Martin Pool\n  // reimplemented by: Pierre-Luc Paour\n  // reimplemented by: Kristof Coomans (SCK-CEN (Belgian Nucleair Research Centre))\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Devan Penner-Woelk\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //        example 1: strnatcasecmp(10, 1)\n  //        returns 1: 1\n  //        example 2: strnatcasecmp('1', '10')\n  //        returns 2: -1\n  //        test: skip-all\n\n  var a = (str1 + '').toLowerCase()\n  var b = (str2 + '').toLowerCase()\n\n  var isWhitespaceChar = function (a) {\n    return a.charCodeAt(0) <= 32=\"\" }=\"\" var=\"\" isdigitchar=\"function\" (a)=\"\" {=\"\" charcode=\"a.charCodeAt(0)\" return=\"\" (charcode=\"\">= 48 && charCode <= 1=\"\" 57)=\"\" }=\"\" var=\"\" compareright=\"function\" (a,=\"\" b)=\"\" {=\"\" bias=\"0\" ia=\"0\" ib=\"0\" ca=\"\" cb=\"\" the=\"\" longest=\"\" run=\"\" of=\"\" digits=\"\" wins.=\"\" that=\"\" aside,=\"\" greatest=\"\" value=\"\" wins,=\"\" but=\"\" we=\"\" can't=\"\" know=\"\" it=\"\" will=\"\" until=\"\" we've=\"\" scanned=\"\" both=\"\" numbers=\"\" to=\"\" they=\"\" have=\"\" same=\"\" magnitude,=\"\" so=\"\" remember=\"\" in=\"\" bias.=\"\" for=\"\" (;=\"\" true;=\"\" ia++,=\"\" ib++)=\"\" if=\"\" (!isdigitchar(ca)=\"\" &&=\"\" !isdigitchar(cb))=\"\" return=\"\" else=\"\" (!isdigitchar(ca))=\"\" -1=\"\" (!isdigitchar(cb))=\"\" (ca=\"\" <=\"\" cb)=\"\" (bias=\"==\" 0)=\"\"> cb) {\n        if (bias === 0) {\n          bias = 1\n        }\n      } else if (ca === '0' && cb === '0') {\n        return bias\n      }\n    }\n  }\n\n  var ia = 0\n  var ib = 0\n  var nza = 0\n  var nzb = 0\n  var ca\n  var cb\n  var result\n\n  while (true) {\n    // only count the number of zeroes leading the last number compared\n    nza = nzb = 0\n\n    ca = a.charAt(ia)\n    cb = b.charAt(ib)\n\n    // skip over leading spaces or zeros\n    while (isWhitespaceChar(ca) || ca === '0') {\n      if (ca === '0') {\n        nza++\n      } else {\n        // only count consecutive zeroes\n        nza = 0\n      }\n\n      ca = a.charAt(++ia)\n    }\n\n    while (isWhitespaceChar(cb) || cb === '0') {\n      if (cb === '0') {\n        nzb++\n      } else {\n        // only count consecutive zeroes\n        nzb = 0\n      }\n\n      cb = b.charAt(++ib)\n    }\n\n    // process run of digits\n    if (isDigitChar(ca) && isDigitChar(cb)) {\n      if ((result = compareRight(a.substring(ia), b.substring(ib))) !== 0) {\n        return result\n      }\n    }\n\n    if (ca === '0' && cb === '0') {\n      // The strings compare the same.  Perhaps the caller\n      // will want to call strcmp to break the tie.\n      return nza - nzb\n    }\n\n    if (ca < cb) {\n      return -1\n    } else if (ca > cb) {\n      return +1\n    }\n\n    // prevent possible infinite loop\n    if (ia >= a.length && ib >= b.length) return 0;\n\n    ++ia;\n    ++ib\n  }\n}\n</=></=>","excerpt":"","more":"module.exports = function strnatcasecmp (str1, str2) {\n  //       discuss at: http://locutusjs.io/php/strnatcasecmp/\n  //      original by: Martin Pool\n  // reimplemented by: Pierre-Luc Paour\n  // reimplemented by: Kristof Coomans (SCK-CEN (Belgian Nucleair Research Centre))\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //         input by: Devan Penner-Woelk\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //        example 1: strnatcasecmp(10, 1)\n  //        returns 1: 1\n  //        example 2: strnatcasecmp('1', '10')\n  //        returns 2: -1\n  //        test: skip-all\n\n  var a = (str1 + '').toLowerCase()\n  var b = (str2 + '').toLowerCase()\n\n  var isWhitespaceChar = function (a) {\n    return a.charCodeAt(0) <= 32\n  }\n\n  var isDigitChar = function (a) {\n    var charCode = a.charCodeAt(0)\n    return (charCode >= 48 && charCode <= 57)\n  }\n\n  var compareRight = function (a, b) {\n    var bias = 0\n    var ia = 0\n    var ib = 0\n\n    var ca\n    var cb\n\n    // The longest run of digits wins.  That aside, the greatest\n    // value wins, but we can't know that it will until we've scanned\n    // both numbers to know that they have the same magnitude, so we\n    // remember it in BIAS.\n    for (; true; ia++, ib++) {\n      ca = a.charAt(ia)\n      cb = b.charAt(ib)\n\n      if (!isDigitChar(ca) && !isDigitChar(cb)) {\n        return bias\n      } else if (!isDigitChar(ca)) {\n        return -1\n      } else if (!isDigitChar(cb)) {\n        return 1\n      } else if (ca < cb) {\n        if (bias === 0) {\n          bias = -1\n        }\n      } else if (ca > cb) {\n        if (bias === 0) {\n          bias = 1\n        }\n      } else if (ca === '0' && cb === '0') {\n        return bias\n      }\n    }\n  }\n\n  var ia = 0\n  var ib = 0\n  var nza = 0\n  var nzb = 0\n  var ca\n  var cb\n  var result\n\n  while (true) {\n    // only count the number of zeroes leading the last number compared\n    nza = nzb = 0\n\n    ca = a.charAt(ia)\n    cb = b.charAt(ib)\n\n    // skip over leading spaces or zeros\n    while (isWhitespaceChar(ca) || ca === '0') {\n      if (ca === '0') {\n        nza++\n      } else {\n        // only count consecutive zeroes\n        nza = 0\n      }\n\n      ca = a.charAt(++ia)\n    }\n\n    while (isWhitespaceChar(cb) || cb === '0') {\n      if (cb === '0') {\n        nzb++\n      } else {\n        // only count consecutive zeroes\n        nzb = 0\n      }\n\n      cb = b.charAt(++ib)\n    }\n\n    // process run of digits\n    if (isDigitChar(ca) && isDigitChar(cb)) {\n      if ((result = compareRight(a.substring(ia), b.substring(ib))) !== 0) {\n        return result\n      }\n    }\n\n    if (ca === '0' && cb === '0') {\n      // The strings compare the same.  Perhaps the caller\n      // will want to call strcmp to break the tie.\n      return nza - nzb\n    }\n\n    if (ca < cb) {\n      return -1\n    } else if (ca > cb) {\n      return +1\n    }\n\n    // prevent possible infinite loop\n    if (ia >= a.length && ib >= b.length) return 0;\n\n    ++ia;\n    ++ib\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strnatcmp('Price 12.9', 'Price 12.15')","strnatcmp('Price 12.09', 'Price 12.15')","strnatcmp('Price 12.90', 'Price 12.15')","strnatcmp('Version 12.9', 'Version 12.15', true)","strnatcmp('Version 12.15', 'Version 12.9', true)"],"estarget":"es5","returns":["1","-1","1","-6","6"],"dependencies":[],"authors":{"original by":["Martijn Wieringa"],"improved by":["Michael White (http://getsprink.com)","Jack"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Added fVersion argument against code guidelines, because it's so neat"],"layout":"function","title":"php'sstrnatcmp in JavaScript","function":"strnatcmp","category":"strings","language":"php","alias":["/functions/php/strnatcmp/","/functions/strings/strnatcmp/","/php/strnatcmp/","/functions/strnatcmp/"],"_content":"module.exports = function strnatcmp (fString1, fString2, fVersion) {\n  //  discuss at: http://locutusjs.io/php/strnatcmp/\n  // original by: Martijn Wieringa\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Added fVersion argument against code guidelines, because it's so neat\n  //   example 1: strnatcmp('Price 12.9', 'Price 12.15')\n  //   returns 1: 1\n  //   example 2: strnatcmp('Price 12.09', 'Price 12.15')\n  //   returns 2: -1\n  //   example 3: strnatcmp('Price 12.90', 'Price 12.15')\n  //   returns 3: 1\n  //   example 4: strnatcmp('Version 12.9', 'Version 12.15', true)\n  //   returns 4: -6\n  //   example 5: strnatcmp('Version 12.15', 'Version 12.9', true)\n  //   returns 5: 6\n  //        test: skip-2\n\n  var strcmp = require('../strings/strcmp')\n  var i = 0\n\n  if (fVersion === undefined) {\n    fVersion = false\n  }\n\n  var _strnatcmpSplit = function (fString) {\n    var result = []\n    var buffer = ''\n    var chr = ''\n    var i = 0\n    var fStringl = 0\n\n    var text = true\n\n    fStringl = fString.length\n    for (i = 0; i < fStringl; i++) {\n      chr = fString.substring(i, i + 1)\n      if (chr.match(/\\d/)) {\n        if (text) {\n          if (buffer.length > 0) {\n            result[result.length] = buffer\n            buffer = ''\n          }\n\n          text = false\n        }\n        buffer += chr\n      } else if ((text === false) &&\n        (chr === '.') &&\n        (i < (fString.length - 1)) &&\n        (fString.substring(i + 1, i + 2).match(/\\d/))) {\n        // @todo: ^--- Break this up to make it more readable\n        result[result.length] = buffer\n        buffer = ''\n      } else {\n        if (text === false) {\n          if (buffer.length > 0) {\n            result[result.length] = parseInt(buffer, 10)\n            buffer = ''\n          }\n          text = true\n        }\n        buffer += chr\n      }\n    }\n\n    if (buffer.length > 0) {\n      if (text) {\n        result[result.length] = buffer\n      } else {\n        result[result.length] = parseInt(buffer, 10)\n      }\n    }\n\n    return result\n  }\n\n  var array1 = _strnatcmpSplit(fString1 + '')\n  var array2 = _strnatcmpSplit(fString2 + '')\n\n  var len = array1.length\n  var text = true\n\n  var result = -1\n  var r = 0\n\n  if (len > array2.length) {\n    len = array2.length\n    result = 1\n  }\n\n  for (i = 0; i < len; i++) {\n    if (isNaN(array1[i])) {\n      if (isNaN(array2[i])) {\n        text = true\n\n        if ((r = strcmp(array1[i], array2[i])) !== 0) {\n          return r\n        }\n      } else if (text) {\n        return 1\n      } else {\n        return -1\n      }\n    } else if (isNaN(array2[i])) {\n      if (text) {\n        return -1\n      } else {\n        return 1\n      }\n    } else {\n      if (text || fVersion) {\n        if ((r = (array1[i] - array2[i])) !== 0) {\n          return r\n        }\n      } else {\n        if ((r = strcmp(array1[i].toString(), array2[i].toString())) !== 0) {\n          return r\n        }\n      }\n\n      text = false\n    }\n  }\n\n  return result\n}\n","source":"php/strings/strnatcmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strnatcmp(''Price 12.9'', ''Price 12.15'')'\n  - 'strnatcmp(''Price 12.09'', ''Price 12.15'')'\n  - 'strnatcmp(''Price 12.90'', ''Price 12.15'')'\n  - 'strnatcmp(''Version 12.9'', ''Version 12.15'', true)'\n  - 'strnatcmp(''Version 12.15'', ''Version 12.9'', true)'\nestarget: es5\nreturns:\n  - '1'\n  - '-1'\n  - '1'\n  - '-6'\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - Martijn Wieringa\n  improved by:\n    - 'Michael White (http://getsprink.com)'\n    - Jack\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - 'Added fVersion argument against code guidelines, because it''s so neat'\nlayout: function\ntitle: php'sstrnatcmp in JavaScript\nfunction: strnatcmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strnatcmp/\nalias:\n  - /functions/php/strnatcmp/\n  - /functions/strings/strnatcmp/\n  - /php/strnatcmp/\n  - /functions/strnatcmp/\n---\nmodule.exports = function strnatcmp (fString1, fString2, fVersion) {\n  //  discuss at: http://locutusjs.io/php/strnatcmp/\n  // original by: Martijn Wieringa\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Added fVersion argument against code guidelines, because it's so neat\n  //   example 1: strnatcmp('Price 12.9', 'Price 12.15')\n  //   returns 1: 1\n  //   example 2: strnatcmp('Price 12.09', 'Price 12.15')\n  //   returns 2: -1\n  //   example 3: strnatcmp('Price 12.90', 'Price 12.15')\n  //   returns 3: 1\n  //   example 4: strnatcmp('Version 12.9', 'Version 12.15', true)\n  //   returns 4: -6\n  //   example 5: strnatcmp('Version 12.15', 'Version 12.9', true)\n  //   returns 5: 6\n  //        test: skip-2\n\n  var strcmp = require('../strings/strcmp')\n  var i = 0\n\n  if (fVersion === undefined) {\n    fVersion = false\n  }\n\n  var _strnatcmpSplit = function (fString) {\n    var result = []\n    var buffer = ''\n    var chr = ''\n    var i = 0\n    var fStringl = 0\n\n    var text = true\n\n    fStringl = fString.length\n    for (i = 0; i < fStringl; i++) {\n      chr = fString.substring(i, i + 1)\n      if (chr.match(/\\d/)) {\n        if (text) {\n          if (buffer.length > 0) {\n            result[result.length] = buffer\n            buffer = ''\n          }\n\n          text = false\n        }\n        buffer += chr\n      } else if ((text === false) &&\n        (chr === '.') &&\n        (i < (fString.length - 1)) &&\n        (fString.substring(i + 1, i + 2).match(/\\d/))) {\n        // @todo: ^--- Break this up to make it more readable\n        result[result.length] = buffer\n        buffer = ''\n      } else {\n        if (text === false) {\n          if (buffer.length > 0) {\n            result[result.length] = parseInt(buffer, 10)\n            buffer = ''\n          }\n          text = true\n        }\n        buffer += chr\n      }\n    }\n\n    if (buffer.length > 0) {\n      if (text) {\n        result[result.length] = buffer\n      } else {\n        result[result.length] = parseInt(buffer, 10)\n      }\n    }\n\n    return result\n  }\n\n  var array1 = _strnatcmpSplit(fString1 + '')\n  var array2 = _strnatcmpSplit(fString2 + '')\n\n  var len = array1.length\n  var text = true\n\n  var result = -1\n  var r = 0\n\n  if (len > array2.length) {\n    len = array2.length\n    result = 1\n  }\n\n  for (i = 0; i < len; i++) {\n    if (isNaN(array1[i])) {\n      if (isNaN(array2[i])) {\n        text = true\n\n        if ((r = strcmp(array1[i], array2[i])) !== 0) {\n          return r\n        }\n      } else if (text) {\n        return 1\n      } else {\n        return -1\n      }\n    } else if (isNaN(array2[i])) {\n      if (text) {\n        return -1\n      } else {\n        return 1\n      }\n    } else {\n      if (text || fVersion) {\n        if ((r = (array1[i] - array2[i])) !== 0) {\n          return r\n        }\n      } else {\n        if ((r = strcmp(array1[i].toString(), array2[i].toString())) !== 0) {\n          return r\n        }\n      }\n\n      text = false\n    }\n  }\n\n  return result\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strnatcmp/index.html","comments":1,"_id":"cinoeja1u007lou9yt94p44en","content":"module.exports = function strnatcmp (fString1, fString2, fVersion) {\n  //  discuss at: http://locutusjs.io/php/strnatcmp/\n  // original by: Martijn Wieringa\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Added fVersion argument against code guidelines, because it's so neat\n  //   example 1: strnatcmp('Price 12.9', 'Price 12.15')\n  //   returns 1: 1\n  //   example 2: strnatcmp('Price 12.09', 'Price 12.15')\n  //   returns 2: -1\n  //   example 3: strnatcmp('Price 12.90', 'Price 12.15')\n  //   returns 3: 1\n  //   example 4: strnatcmp('Version 12.9', 'Version 12.15', true)\n  //   returns 4: -6\n  //   example 5: strnatcmp('Version 12.15', 'Version 12.9', true)\n  //   returns 5: 6\n  //        test: skip-2\n\n  var strcmp = require('../strings/strcmp')\n  var i = 0\n\n  if (fVersion === undefined) {\n    fVersion = false\n  }\n\n  var _strnatcmpSplit = function (fString) {\n    var result = []\n    var buffer = ''\n    var chr = ''\n    var i = 0\n    var fStringl = 0\n\n    var text = true\n\n    fStringl = fString.length\n    for (i = 0; i < fStringl; i++) {\n      chr = fString.substring(i, i + 1)\n      if (chr.match(/\\d/)) {\n        if (text) {\n          if (buffer.length > 0) {\n            result[result.length] = buffer\n            buffer = ''\n          }\n\n          text = false\n        }\n        buffer += chr\n      } else if ((text === false) &&\n        (chr === '.') &&\n        (i < (fString.length - 1)) &&\n        (fString.substring(i + 1, i + 2).match(/\\d/))) {\n        // @todo: ^--- Break this up to make it more readable\n        result[result.length] = buffer\n        buffer = ''\n      } else {\n        if (text === false) {\n          if (buffer.length > 0) {\n            result[result.length] = parseInt(buffer, 10)\n            buffer = ''\n          }\n          text = true\n        }\n        buffer += chr\n      }\n    }\n\n    if (buffer.length > 0) {\n      if (text) {\n        result[result.length] = buffer\n      } else {\n        result[result.length] = parseInt(buffer, 10)\n      }\n    }\n\n    return result\n  }\n\n  var array1 = _strnatcmpSplit(fString1 + '')\n  var array2 = _strnatcmpSplit(fString2 + '')\n\n  var len = array1.length\n  var text = true\n\n  var result = -1\n  var r = 0\n\n  if (len > array2.length) {\n    len = array2.length\n    result = 1\n  }\n\n  for (i = 0; i < len; i++) {\n    if (isNaN(array1[i])) {\n      if (isNaN(array2[i])) {\n        text = true\n\n        if ((r = strcmp(array1[i], array2[i])) !== 0) {\n          return r\n        }\n      } else if (text) {\n        return 1\n      } else {\n        return -1\n      }\n    } else if (isNaN(array2[i])) {\n      if (text) {\n        return -1\n      } else {\n        return 1\n      }\n    } else {\n      if (text || fVersion) {\n        if ((r = (array1[i] - array2[i])) !== 0) {\n          return r\n        }\n      } else {\n        if ((r = strcmp(array1[i].toString(), array2[i].toString())) !== 0) {\n          return r\n        }\n      }\n\n      text = false\n    }\n  }\n\n  return result\n}\n","excerpt":"","more":"module.exports = function strnatcmp (fString1, fString2, fVersion) {\n  //  discuss at: http://locutusjs.io/php/strnatcmp/\n  // original by: Martijn Wieringa\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Jack\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Added fVersion argument against code guidelines, because it's so neat\n  //   example 1: strnatcmp('Price 12.9', 'Price 12.15')\n  //   returns 1: 1\n  //   example 2: strnatcmp('Price 12.09', 'Price 12.15')\n  //   returns 2: -1\n  //   example 3: strnatcmp('Price 12.90', 'Price 12.15')\n  //   returns 3: 1\n  //   example 4: strnatcmp('Version 12.9', 'Version 12.15', true)\n  //   returns 4: -6\n  //   example 5: strnatcmp('Version 12.15', 'Version 12.9', true)\n  //   returns 5: 6\n  //        test: skip-2\n\n  var strcmp = require('../strings/strcmp')\n  var i = 0\n\n  if (fVersion === undefined) {\n    fVersion = false\n  }\n\n  var _strnatcmpSplit = function (fString) {\n    var result = []\n    var buffer = ''\n    var chr = ''\n    var i = 0\n    var fStringl = 0\n\n    var text = true\n\n    fStringl = fString.length\n    for (i = 0; i < fStringl; i++) {\n      chr = fString.substring(i, i + 1)\n      if (chr.match(/\\d/)) {\n        if (text) {\n          if (buffer.length > 0) {\n            result[result.length] = buffer\n            buffer = ''\n          }\n\n          text = false\n        }\n        buffer += chr\n      } else if ((text === false) &&\n        (chr === '.') &&\n        (i < (fString.length - 1)) &&\n        (fString.substring(i + 1, i + 2).match(/\\d/))) {\n        // @todo: ^--- Break this up to make it more readable\n        result[result.length] = buffer\n        buffer = ''\n      } else {\n        if (text === false) {\n          if (buffer.length > 0) {\n            result[result.length] = parseInt(buffer, 10)\n            buffer = ''\n          }\n          text = true\n        }\n        buffer += chr\n      }\n    }\n\n    if (buffer.length > 0) {\n      if (text) {\n        result[result.length] = buffer\n      } else {\n        result[result.length] = parseInt(buffer, 10)\n      }\n    }\n\n    return result\n  }\n\n  var array1 = _strnatcmpSplit(fString1 + '')\n  var array2 = _strnatcmpSplit(fString2 + '')\n\n  var len = array1.length\n  var text = true\n\n  var result = -1\n  var r = 0\n\n  if (len > array2.length) {\n    len = array2.length\n    result = 1\n  }\n\n  for (i = 0; i < len; i++) {\n    if (isNaN(array1[i])) {\n      if (isNaN(array2[i])) {\n        text = true\n\n        if ((r = strcmp(array1[i], array2[i])) !== 0) {\n          return r\n        }\n      } else if (text) {\n        return 1\n      } else {\n        return -1\n      }\n    } else if (isNaN(array2[i])) {\n      if (text) {\n        return -1\n      } else {\n        return 1\n      }\n    } else {\n      if (text || fVersion) {\n        if ((r = (array1[i] - array2[i])) !== 0) {\n          return r\n        }\n      } else {\n        if ((r = strcmp(array1[i].toString(), array2[i].toString())) !== 0) {\n          return r\n        }\n      }\n\n      text = false\n    }\n  }\n\n  return result\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strncasecmp('Price 12.9', 'Price 12.15', 2)","strncasecmp('Price 12.09', 'Price 12.15', 10)","strncasecmp('Price 12.90', 'Price 12.15', 30)","strncasecmp('Version 12.9', 'Version 12.15', 20)","strncasecmp('Version 12.15', 'Version 12.9', 20)"],"estarget":"es5","returns":["0","-1","8","8","-8"],"dependencies":[],"authors":{"original by":["Saulo Vallory"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["Nate"]},"notes":["Returns < 0 if str1 is less than str2 ; > 0\nif str1 is greater than str2, and 0 if they are equal."],"layout":"function","title":"php'sstrncasecmp in JavaScript","function":"strncasecmp","category":"strings","language":"php","alias":["/functions/php/strncasecmp/","/functions/strings/strncasecmp/","/php/strncasecmp/","/functions/strncasecmp/"],"_content":"module.exports = function strncasecmp (argStr1, argStr2, len) {\n  //  discuss at: http://locutusjs.io/php/strncasecmp/\n  // original by: Saulo Vallory\n  //    input by: Nate\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Returns < 0 if str1 is less than str2 ; > 0\n  //      note 1: if str1 is greater than str2, and 0 if they are equal.\n  //   example 1: strncasecmp('Price 12.9', 'Price 12.15', 2)\n  //   returns 1: 0\n  //   example 2: strncasecmp('Price 12.09', 'Price 12.15', 10)\n  //   returns 2: -1\n  //   example 3: strncasecmp('Price 12.90', 'Price 12.15', 30)\n  //   returns 3: 8\n  //   example 4: strncasecmp('Version 12.9', 'Version 12.15', 20)\n  //   returns 4: 8\n  //   example 5: strncasecmp('Version 12.15', 'Version 12.9', 20)\n  //   returns 5: -8\n\n  var diff\n  var i = 0\n  var str1 = (argStr1 + '').toLowerCase().substr(0, len)\n  var str2 = (argStr2 + '').toLowerCase().substr(0, len)\n\n  if (str1.length !== str2.length) {\n    if (str1.length < str2.length) {\n      len = str1.length\n      if (str2.substr(0, str1.length) === str1) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    } else {\n      len = str2.length\n      // str1 is longer than str2\n      if (str1.substr(0, str2.length) === str2) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    }\n  } else {\n    // Avoids trying to get a char that does not exist\n    len = str1.length\n  }\n\n  for (diff = 0, i = 0; i < len; i++) {\n    diff = str1.charCodeAt(i) - str2.charCodeAt(i)\n    if (diff !== 0) {\n      return diff\n    }\n  }\n\n  return 0\n}\n","source":"php/strings/strncasecmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strncasecmp(''Price 12.9'', ''Price 12.15'', 2)'\n  - 'strncasecmp(''Price 12.09'', ''Price 12.15'', 10)'\n  - 'strncasecmp(''Price 12.90'', ''Price 12.15'', 30)'\n  - 'strncasecmp(''Version 12.9'', ''Version 12.15'', 20)'\n  - 'strncasecmp(''Version 12.15'', ''Version 12.9'', 20)'\nestarget: es5\nreturns:\n  - '0'\n  - '-1'\n  - '8'\n  - '8'\n  - '-8'\ndependencies: []\nauthors:\n  original by:\n    - Saulo Vallory\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - Nate\nnotes:\n  - |-\n    Returns < 0 if str1 is less than str2 ; > 0\n    if str1 is greater than str2, and 0 if they are equal.\nlayout: function\ntitle: php'sstrncasecmp in JavaScript\nfunction: strncasecmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strncasecmp/\nalias:\n  - /functions/php/strncasecmp/\n  - /functions/strings/strncasecmp/\n  - /php/strncasecmp/\n  - /functions/strncasecmp/\n---\nmodule.exports = function strncasecmp (argStr1, argStr2, len) {\n  //  discuss at: http://locutusjs.io/php/strncasecmp/\n  // original by: Saulo Vallory\n  //    input by: Nate\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Returns < 0 if str1 is less than str2 ; > 0\n  //      note 1: if str1 is greater than str2, and 0 if they are equal.\n  //   example 1: strncasecmp('Price 12.9', 'Price 12.15', 2)\n  //   returns 1: 0\n  //   example 2: strncasecmp('Price 12.09', 'Price 12.15', 10)\n  //   returns 2: -1\n  //   example 3: strncasecmp('Price 12.90', 'Price 12.15', 30)\n  //   returns 3: 8\n  //   example 4: strncasecmp('Version 12.9', 'Version 12.15', 20)\n  //   returns 4: 8\n  //   example 5: strncasecmp('Version 12.15', 'Version 12.9', 20)\n  //   returns 5: -8\n\n  var diff\n  var i = 0\n  var str1 = (argStr1 + '').toLowerCase().substr(0, len)\n  var str2 = (argStr2 + '').toLowerCase().substr(0, len)\n\n  if (str1.length !== str2.length) {\n    if (str1.length < str2.length) {\n      len = str1.length\n      if (str2.substr(0, str1.length) === str1) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    } else {\n      len = str2.length\n      // str1 is longer than str2\n      if (str1.substr(0, str2.length) === str2) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    }\n  } else {\n    // Avoids trying to get a char that does not exist\n    len = str1.length\n  }\n\n  for (diff = 0, i = 0; i < len; i++) {\n    diff = str1.charCodeAt(i) - str2.charCodeAt(i)\n    if (diff !== 0) {\n      return diff\n    }\n  }\n\n  return 0\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strncasecmp/index.html","comments":1,"_id":"cinoeja1u007mou9yoz59q905","content":"module.exports = function strncasecmp (argStr1, argStr2, len) {\n  //  discuss at: http://locutusjs.io/php/strncasecmp/\n  // original by: Saulo Vallory\n  //    input by: Nate\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Returns < 0 if str1 is less than str2 ; > 0\n  //      note 1: if str1 is greater than str2, and 0 if they are equal.\n  //   example 1: strncasecmp('Price 12.9', 'Price 12.15', 2)\n  //   returns 1: 0\n  //   example 2: strncasecmp('Price 12.09', 'Price 12.15', 10)\n  //   returns 2: -1\n  //   example 3: strncasecmp('Price 12.90', 'Price 12.15', 30)\n  //   returns 3: 8\n  //   example 4: strncasecmp('Version 12.9', 'Version 12.15', 20)\n  //   returns 4: 8\n  //   example 5: strncasecmp('Version 12.15', 'Version 12.9', 20)\n  //   returns 5: -8\n\n  var diff\n  var i = 0\n  var str1 = (argStr1 + '').toLowerCase().substr(0, len)\n  var str2 = (argStr2 + '').toLowerCase().substr(0, len)\n\n  if (str1.length !== str2.length) {\n    if (str1.length < str2.length) {\n      len = str1.length\n      if (str2.substr(0, str1.length) === str1) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    } else {\n      len = str2.length\n      // str1 is longer than str2\n      if (str1.substr(0, str2.length) === str2) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    }\n  } else {\n    // Avoids trying to get a char that does not exist\n    len = str1.length\n  }\n\n  for (diff = 0, i = 0; i < len; i++) {\n    diff = str1.charCodeAt(i) - str2.charCodeAt(i)\n    if (diff !== 0) {\n      return diff\n    }\n  }\n\n  return 0\n}\n","excerpt":"","more":"module.exports = function strncasecmp (argStr1, argStr2, len) {\n  //  discuss at: http://locutusjs.io/php/strncasecmp/\n  // original by: Saulo Vallory\n  //    input by: Nate\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Returns < 0 if str1 is less than str2 ; > 0\n  //      note 1: if str1 is greater than str2, and 0 if they are equal.\n  //   example 1: strncasecmp('Price 12.9', 'Price 12.15', 2)\n  //   returns 1: 0\n  //   example 2: strncasecmp('Price 12.09', 'Price 12.15', 10)\n  //   returns 2: -1\n  //   example 3: strncasecmp('Price 12.90', 'Price 12.15', 30)\n  //   returns 3: 8\n  //   example 4: strncasecmp('Version 12.9', 'Version 12.15', 20)\n  //   returns 4: 8\n  //   example 5: strncasecmp('Version 12.15', 'Version 12.9', 20)\n  //   returns 5: -8\n\n  var diff\n  var i = 0\n  var str1 = (argStr1 + '').toLowerCase().substr(0, len)\n  var str2 = (argStr2 + '').toLowerCase().substr(0, len)\n\n  if (str1.length !== str2.length) {\n    if (str1.length < str2.length) {\n      len = str1.length\n      if (str2.substr(0, str1.length) === str1) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    } else {\n      len = str2.length\n      // str1 is longer than str2\n      if (str1.substr(0, str2.length) === str2) {\n        // return the difference of chars\n        return str1.length - str2.length\n      }\n    }\n  } else {\n    // Avoids trying to get a char that does not exist\n    len = str1.length\n  }\n\n  for (diff = 0, i = 0; i < len; i++) {\n    diff = str1.charCodeAt(i) - str2.charCodeAt(i)\n    if (diff !== 0) {\n      return diff\n    }\n  }\n\n  return 0\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strncmp('aaa', 'aab', 2)","strncmp('aaa', 'aab', 3 )"],"estarget":"es5","returns":["0","-1"],"dependencies":[],"authors":{"original by":["Waldo Malqui Silva (http://waldo.malqui.info)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"revised by":["gorthaur"],"input by":["Steve Hilder"]},"notes":[],"layout":"function","title":"php'sstrncmp in JavaScript","function":"strncmp","category":"strings","language":"php","alias":["/functions/php/strncmp/","/functions/strings/strncmp/","/php/strncmp/","/functions/strncmp/"],"_content":"module.exports = function strncmp (str1, str2, lgth) {\n  //       discuss at: http://locutusjs.io/php/strncmp/\n  //      original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //         input by: Steve Hilder\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //       revised by: gorthaur\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strncmp('aaa', 'aab', 2)\n  //        returns 1: 0\n  //        example 2: strncmp('aaa', 'aab', 3 )\n  //        returns 2: -1\n\n  var s1 = (str1 + '')\n    .substr(0, lgth)\n  var s2 = (str2 + '')\n    .substr(0, lgth)\n\n  return ((s1 === s2) ? 0 : ((s1 > s2) ? 1 : -1))\n}\n","source":"php/strings/strncmp.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strncmp(''aaa'', ''aab'', 2)'\n  - 'strncmp(''aaa'', ''aab'', 3 )'\nestarget: es5\nreturns:\n  - '0'\n  - '-1'\ndependencies: []\nauthors:\n  original by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - gorthaur\n  input by:\n    - Steve Hilder\nnotes: []\nlayout: function\ntitle: php'sstrncmp in JavaScript\nfunction: strncmp\ncategory: strings\nlanguage: php\npermalink: php/strings/strncmp/\nalias:\n  - /functions/php/strncmp/\n  - /functions/strings/strncmp/\n  - /php/strncmp/\n  - /functions/strncmp/\n---\nmodule.exports = function strncmp (str1, str2, lgth) {\n  //       discuss at: http://locutusjs.io/php/strncmp/\n  //      original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //         input by: Steve Hilder\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //       revised by: gorthaur\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strncmp('aaa', 'aab', 2)\n  //        returns 1: 0\n  //        example 2: strncmp('aaa', 'aab', 3 )\n  //        returns 2: -1\n\n  var s1 = (str1 + '')\n    .substr(0, lgth)\n  var s2 = (str2 + '')\n    .substr(0, lgth)\n\n  return ((s1 === s2) ? 0 : ((s1 > s2) ? 1 : -1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strncmp/index.html","comments":1,"_id":"cinoeja1u007nou9yvro3pgiu","content":"module.exports = function strncmp (str1, str2, lgth) {\n  //       discuss at: http://locutusjs.io/php/strncmp/\n  //      original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //         input by: Steve Hilder\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //       revised by: gorthaur\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strncmp('aaa', 'aab', 2)\n  //        returns 1: 0\n  //        example 2: strncmp('aaa', 'aab', 3 )\n  //        returns 2: -1\n\n  var s1 = (str1 + '')\n    .substr(0, lgth)\n  var s2 = (str2 + '')\n    .substr(0, lgth)\n\n  return ((s1 === s2) ? 0 : ((s1 > s2) ? 1 : -1))\n}\n","excerpt":"","more":"module.exports = function strncmp (str1, str2, lgth) {\n  //       discuss at: http://locutusjs.io/php/strncmp/\n  //      original by: Waldo Malqui Silva (http://waldo.malqui.info)\n  //         input by: Steve Hilder\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //       revised by: gorthaur\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strncmp('aaa', 'aab', 2)\n  //        returns 1: 0\n  //        example 2: strncmp('aaa', 'aab', 3 )\n  //        returns 2: -1\n\n  var s1 = (str1 + '')\n    .substr(0, lgth)\n  var s2 = (str2 + '')\n    .substr(0, lgth)\n\n  return ((s1 === s2) ? 0 : ((s1 > s2) ? 1 : -1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strpbrk('This is a Simple text.', 'is')"],"estarget":"es5","returns":["'is is a Simple text.'"],"dependencies":[],"authors":{"original by":["Alfonso Jimenez (http://www.alfonsojimenez.com)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"revised by":["Christoph"]},"notes":[],"layout":"function","title":"php'sstrpbrk in JavaScript","function":"strpbrk","category":"strings","language":"php","alias":["/functions/php/strpbrk/","/functions/strings/strpbrk/","/php/strpbrk/","/functions/strpbrk/"],"_content":"module.exports = function strpbrk (haystack, charList) {\n  //  discuss at: http://locutusjs.io/php/strpbrk/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Christoph\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strpbrk('This is a Simple text.', 'is')\n  //   returns 1: 'is is a Simple text.'\n\n  for (var i = 0, len = haystack.length; i < len; ++i) {\n    if (charList.indexOf(haystack.charAt(i)) >= 0) {\n      return haystack.slice(i)\n    }\n  }\n  return false\n}\n","source":"php/strings/strpbrk.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strpbrk(''This is a Simple text.'', ''is'')'\nestarget: es5\nreturns:\n  - '''is is a Simple text.'''\ndependencies: []\nauthors:\n  original by:\n    - 'Alfonso Jimenez (http://www.alfonsojimenez.com)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  revised by:\n    - Christoph\nnotes: []\nlayout: function\ntitle: php'sstrpbrk in JavaScript\nfunction: strpbrk\ncategory: strings\nlanguage: php\npermalink: php/strings/strpbrk/\nalias:\n  - /functions/php/strpbrk/\n  - /functions/strings/strpbrk/\n  - /php/strpbrk/\n  - /functions/strpbrk/\n---\nmodule.exports = function strpbrk (haystack, charList) {\n  //  discuss at: http://locutusjs.io/php/strpbrk/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Christoph\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strpbrk('This is a Simple text.', 'is')\n  //   returns 1: 'is is a Simple text.'\n\n  for (var i = 0, len = haystack.length; i < len; ++i) {\n    if (charList.indexOf(haystack.charAt(i)) >= 0) {\n      return haystack.slice(i)\n    }\n  }\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strpbrk/index.html","comments":1,"_id":"cinoeja1v007oou9yrmiprydr","content":"module.exports = function strpbrk (haystack, charList) {\n  //  discuss at: http://locutusjs.io/php/strpbrk/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Christoph\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strpbrk('This is a Simple text.', 'is')\n  //   returns 1: 'is is a Simple text.'\n\n  for (var i = 0, len = haystack.length; i < len; ++i) {\n    if (charList.indexOf(haystack.charAt(i)) >= 0) {\n      return haystack.slice(i)\n    }\n  }\n  return false\n}\n","excerpt":"","more":"module.exports = function strpbrk (haystack, charList) {\n  //  discuss at: http://locutusjs.io/php/strpbrk/\n  // original by: Alfonso Jimenez (http://www.alfonsojimenez.com)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //  revised by: Christoph\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strpbrk('This is a Simple text.', 'is')\n  //   returns 1: 'is is a Simple text.'\n\n  for (var i = 0, len = haystack.length; i < len; ++i) {\n    if (charList.indexOf(haystack.charAt(i)) >= 0) {\n      return haystack.slice(i)\n    }\n  }\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strpos('Kevin van Zonneveld', 'e', 5)"],"estarget":"es5","returns":["14"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Daniel Esteban"]},"notes":[],"layout":"function","title":"php'sstrpos in JavaScript","function":"strpos","category":"strings","language":"php","alias":["/functions/php/strpos/","/functions/strings/strpos/","/php/strpos/","/functions/strpos/"],"_content":"module.exports = function strpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Daniel Esteban\n  //   example 1: strpos('Kevin van Zonneveld', 'e', 5)\n  //   returns 1: 14\n\n  var i = (haystack + '')\n    .indexOf(needle, (offset || 0))\n  return i === -1 ? false : i\n}\n","source":"php/strings/strpos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strpos(''Kevin van Zonneveld'', ''e'', 5)'\nestarget: es5\nreturns:\n  - '14'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Daniel Esteban\nnotes: []\nlayout: function\ntitle: php'sstrpos in JavaScript\nfunction: strpos\ncategory: strings\nlanguage: php\npermalink: php/strings/strpos/\nalias:\n  - /functions/php/strpos/\n  - /functions/strings/strpos/\n  - /php/strpos/\n  - /functions/strpos/\n---\nmodule.exports = function strpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Daniel Esteban\n  //   example 1: strpos('Kevin van Zonneveld', 'e', 5)\n  //   returns 1: 14\n\n  var i = (haystack + '')\n    .indexOf(needle, (offset || 0))\n  return i === -1 ? false : i\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strpos/index.html","comments":1,"_id":"cinoeja1v007pou9yv20mw7oj","content":"module.exports = function strpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Daniel Esteban\n  //   example 1: strpos('Kevin van Zonneveld', 'e', 5)\n  //   returns 1: 14\n\n  var i = (haystack + '')\n    .indexOf(needle, (offset || 0))\n  return i === -1 ? false : i\n}\n","excerpt":"","more":"module.exports = function strpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Daniel Esteban\n  //   example 1: strpos('Kevin van Zonneveld', 'e', 5)\n  //   returns 1: 14\n\n  var i = (haystack + '')\n    .indexOf(needle, (offset || 0))\n  return i === -1 ? false : i\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)"],"estarget":"es5","returns":["'Line 3'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Jason Wong (http://carrot.org/)"]},"notes":[],"layout":"function","title":"php'sstrrchr in JavaScript","function":"strrchr","category":"strings","language":"php","alias":["/functions/php/strrchr/","/functions/strings/strrchr/","/php/strrchr/","/functions/strrchr/"],"_content":"module.exports = function strrchr (haystack, needle) {\n  //  discuss at: http://locutusjs.io/php/strrchr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Jason Wong (http://carrot.org/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)\n  //   returns 1: 'Line 3'\n\n  var pos = 0\n\n  if (typeof needle !== 'string') {\n    needle = String.fromCharCode(parseInt(needle, 10))\n  }\n  needle = needle.charAt(0)\n  pos = haystack.lastIndexOf(needle)\n  if (pos === -1) {\n    return false\n  }\n\n  return haystack.substr(pos)\n}\n","source":"php/strings/strrchr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)'\nestarget: es5\nreturns:\n  - '''Line 3'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Jason Wong (http://carrot.org/)'\nnotes: []\nlayout: function\ntitle: php'sstrrchr in JavaScript\nfunction: strrchr\ncategory: strings\nlanguage: php\npermalink: php/strings/strrchr/\nalias:\n  - /functions/php/strrchr/\n  - /functions/strings/strrchr/\n  - /php/strrchr/\n  - /functions/strrchr/\n---\nmodule.exports = function strrchr (haystack, needle) {\n  //  discuss at: http://locutusjs.io/php/strrchr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Jason Wong (http://carrot.org/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)\n  //   returns 1: 'Line 3'\n\n  var pos = 0\n\n  if (typeof needle !== 'string') {\n    needle = String.fromCharCode(parseInt(needle, 10))\n  }\n  needle = needle.charAt(0)\n  pos = haystack.lastIndexOf(needle)\n  if (pos === -1) {\n    return false\n  }\n\n  return haystack.substr(pos)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strrchr/index.html","comments":1,"_id":"cinoeja1v007qou9yl5uv372q","content":"module.exports = function strrchr (haystack, needle) {\n  //  discuss at: http://locutusjs.io/php/strrchr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Jason Wong (http://carrot.org/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)\n  //   returns 1: 'Line 3'\n\n  var pos = 0\n\n  if (typeof needle !== 'string') {\n    needle = String.fromCharCode(parseInt(needle, 10))\n  }\n  needle = needle.charAt(0)\n  pos = haystack.lastIndexOf(needle)\n  if (pos === -1) {\n    return false\n  }\n\n  return haystack.substr(pos)\n}\n","excerpt":"","more":"module.exports = function strrchr (haystack, needle) {\n  //  discuss at: http://locutusjs.io/php/strrchr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Jason Wong (http://carrot.org/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strrchr(\"Line 1\\nLine 2\\nLine 3\", 10).substr(1)\n  //   returns 1: 'Line 3'\n\n  var pos = 0\n\n  if (typeof needle !== 'string') {\n    needle = String.fromCharCode(parseInt(needle, 10))\n  }\n  needle = needle.charAt(0)\n  pos = haystack.lastIndexOf(needle)\n  if (pos === -1) {\n    return false\n  }\n\n  return haystack.substr(pos)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strrev('Kevin van Zonneveld')","strrev('a\\u0301haB')","strrev('A\\uD87E\\uDC04Z')"],"estarget":"es5","returns":["'dlevennoZ nav niveK'","'Baha\\u0301' // combining","'Z\\uD87E\\uDC04A' // surrogates"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstrrev in JavaScript","function":"strrev","category":"strings","language":"php","alias":["/functions/php/strrev/","/functions/strings/strrev/","/php/strrev/","/functions/strrev/"],"_content":"module.exports = function strrev (string) {\n  //       discuss at: http://locutusjs.io/php/strrev/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strrev('Kevin van Zonneveld')\n  //        returns 1: 'dlevennoZ nav niveK'\n  //        example 2: strrev('a\\u0301haB')\n  //        returns 2: 'Baha\\u0301' // combining\n  //        example 3: strrev('A\\uD87E\\uDC04Z')\n  //        returns 3: 'Z\\uD87E\\uDC04A' // surrogates\n  //             test: 'skip-3'\n\n  string = string + ''\n\n  // Performance will be enhanced with the next two lines of code commented\n  // out if you don't care about combining characters\n  // Keep Unicode combining characters together with the character preceding\n  // them and which they are modifying (as in PHP 6)\n  // See http://unicode.org/reports/tr44/#Property_Table (Me+Mn)\n  // We also add the low surrogate range at the beginning here so it will be\n  // maintained with its preceding high surrogate\n\n  var chars = [\n    '\\uDC00-\\uDFFF',\n    '\\u0300-\\u036F',\n    '\\u0483-\\u0489',\n    '\\u0591-\\u05BD',\n    '\\u05BF',\n    '\\u05C1',\n    '\\u05C2',\n    '\\u05C4',\n    '\\u05C5',\n    '\\u05C7',\n    '\\u0610-\\u061A',\n    '\\u064B-\\u065E',\n    '\\u0670',\n    '\\u06D6-\\u06DC',\n    '\\u06DE-\\u06E4',\n    '\\u06E7\\u06E8',\n    '\\u06EA-\\u06ED',\n    '\\u0711',\n    '\\u0730-\\u074A',\n    '\\u07A6-\\u07B0',\n    '\\u07EB-\\u07F3',\n    '\\u0901-\\u0903',\n    '\\u093C',\n    '\\u093E-\\u094D',\n    '\\u0951-\\u0954',\n    '\\u0962',\n    '\\u0963',\n    '\\u0981-\\u0983',\n    '\\u09BC',\n    '\\u09BE-\\u09C4',\n    '\\u09C7',\n    '\\u09C8',\n    '\\u09CB-\\u09CD',\n    '\\u09D7',\n    '\\u09E2',\n    '\\u09E3',\n    '\\u0A01-\\u0A03',\n    '\\u0A3C',\n    '\\u0A3E-\\u0A42',\n    '\\u0A47',\n    '\\u0A48',\n    '\\u0A4B-\\u0A4D',\n    '\\u0A51',\n    '\\u0A70',\n    '\\u0A71',\n    '\\u0A75',\n    '\\u0A81-\\u0A83',\n    '\\u0ABC',\n    '\\u0ABE-\\u0AC5',\n    '\\u0AC7-\\u0AC9',\n    '\\u0ACB-\\u0ACD',\n    '\\u0AE2',\n    '\\u0AE3',\n    '\\u0B01-\\u0B03',\n    '\\u0B3C',\n    '\\u0B3E-\\u0B44',\n    '\\u0B47',\n    '\\u0B48',\n    '\\u0B4B-\\u0B4D',\n    '\\u0B56',\n    '\\u0B57',\n    '\\u0B62',\n    '\\u0B63',\n    '\\u0B82',\n    '\\u0BBE-\\u0BC2',\n    '\\u0BC6-\\u0BC8',\n    '\\u0BCA-\\u0BCD',\n    '\\u0BD7',\n    '\\u0C01-\\u0C03',\n    '\\u0C3E-\\u0C44',\n    '\\u0C46-\\u0C48',\n    '\\u0C4A-\\u0C4D',\n    '\\u0C55',\n    '\\u0C56',\n    '\\u0C62',\n    '\\u0C63',\n    '\\u0C82',\n    '\\u0C83',\n    '\\u0CBC',\n    '\\u0CBE-\\u0CC4',\n    '\\u0CC6-\\u0CC8',\n    '\\u0CCA-\\u0CCD',\n    '\\u0CD5',\n    '\\u0CD6',\n    '\\u0CE2',\n    '\\u0CE3',\n    '\\u0D02',\n    '\\u0D03',\n    '\\u0D3E-\\u0D44',\n    '\\u0D46-\\u0D48',\n    '\\u0D4A-\\u0D4D',\n    '\\u0D57',\n    '\\u0D62',\n    '\\u0D63',\n    '\\u0D82',\n    '\\u0D83',\n    '\\u0DCA',\n    '\\u0DCF-\\u0DD4',\n    '\\u0DD6',\n    '\\u0DD8-\\u0DDF',\n    '\\u0DF2',\n    '\\u0DF3',\n    '\\u0E31',\n    '\\u0E34-\\u0E3A',\n    '\\u0E47-\\u0E4E',\n    '\\u0EB1',\n    '\\u0EB4-\\u0EB9',\n    '\\u0EBB',\n    '\\u0EBC',\n    '\\u0EC8-\\u0ECD',\n    '\\u0F18',\n    '\\u0F19',\n    '\\u0F35',\n    '\\u0F37',\n    '\\u0F39',\n    '\\u0F3E',\n    '\\u0F3F',\n    '\\u0F71-\\u0F84',\n    '\\u0F86',\n    '\\u0F87',\n    '\\u0F90-\\u0F97',\n    '\\u0F99-\\u0FBC',\n    '\\u0FC6',\n    '\\u102B-\\u103E',\n    '\\u1056-\\u1059',\n    '\\u105E-\\u1060',\n    '\\u1062-\\u1064',\n    '\\u1067-\\u106D',\n    '\\u1071-\\u1074',\n    '\\u1082-\\u108D',\n    '\\u108F',\n    '\\u135F',\n    '\\u1712-\\u1714',\n    '\\u1732-\\u1734',\n    '\\u1752',\n    '\\u1753',\n    '\\u1772',\n    '\\u1773',\n    '\\u17B6-\\u17D3',\n    '\\u17DD',\n    '\\u180B-\\u180D',\n    '\\u18A9',\n    '\\u1920-\\u192B',\n    '\\u1930-\\u193B',\n    '\\u19B0-\\u19C0',\n    '\\u19C8',\n    '\\u19C9',\n    '\\u1A17-\\u1A1B',\n    '\\u1B00-\\u1B04',\n    '\\u1B34-\\u1B44',\n    '\\u1B6B-\\u1B73',\n    '\\u1B80-\\u1B82',\n    '\\u1BA1-\\u1BAA',\n    '\\u1C24-\\u1C37',\n    '\\u1DC0-\\u1DE6',\n    '\\u1DFE',\n    '\\u1DFF',\n    '\\u20D0-\\u20F0',\n    '\\u2DE0-\\u2DFF',\n    '\\u302A-\\u302F',\n    '\\u3099',\n    '\\u309A',\n    '\\uA66F-\\uA672',\n    '\\uA67C',\n    '\\uA67D',\n    '\\uA802',\n    '\\uA806',\n    '\\uA80B',\n    '\\uA823-\\uA827',\n    '\\uA880',\n    '\\uA881',\n    '\\uA8B4-\\uA8C4',\n    '\\uA926-\\uA92D',\n    '\\uA947-\\uA953',\n    '\\uAA29-\\uAA36',\n    '\\uAA43',\n    '\\uAA4C',\n    '\\uAA4D',\n    '\\uFB1E',\n    '\\uFE00-\\uFE0F',\n    '\\uFE20-\\uFE26'\n  ]\n\n  var graphemeExtend = new RegExp('(.)([' + chars.join('') + ']+)', 'g')\n\n  // Temporarily reverse\n  string = string.replace(graphemeExtend, '$2$1')\n  return string.split('').reverse().join('')\n}\n","source":"php/strings/strrev.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - strrev('Kevin van Zonneveld')\n  - strrev('a\\u0301haB')\n  - strrev('A\\uD87E\\uDC04Z')\nestarget: es5\nreturns:\n  - '''dlevennoZ nav niveK'''\n  - '''Baha\\u0301'' // combining'\n  - '''Z\\uD87E\\uDC04A'' // surrogates'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstrrev in JavaScript\nfunction: strrev\ncategory: strings\nlanguage: php\npermalink: php/strings/strrev/\nalias:\n  - /functions/php/strrev/\n  - /functions/strings/strrev/\n  - /php/strrev/\n  - /functions/strrev/\n---\nmodule.exports = function strrev (string) {\n  //       discuss at: http://locutusjs.io/php/strrev/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strrev('Kevin van Zonneveld')\n  //        returns 1: 'dlevennoZ nav niveK'\n  //        example 2: strrev('a\\u0301haB')\n  //        returns 2: 'Baha\\u0301' // combining\n  //        example 3: strrev('A\\uD87E\\uDC04Z')\n  //        returns 3: 'Z\\uD87E\\uDC04A' // surrogates\n  //             test: 'skip-3'\n\n  string = string + ''\n\n  // Performance will be enhanced with the next two lines of code commented\n  // out if you don't care about combining characters\n  // Keep Unicode combining characters together with the character preceding\n  // them and which they are modifying (as in PHP 6)\n  // See http://unicode.org/reports/tr44/#Property_Table (Me+Mn)\n  // We also add the low surrogate range at the beginning here so it will be\n  // maintained with its preceding high surrogate\n\n  var chars = [\n    '\\uDC00-\\uDFFF',\n    '\\u0300-\\u036F',\n    '\\u0483-\\u0489',\n    '\\u0591-\\u05BD',\n    '\\u05BF',\n    '\\u05C1',\n    '\\u05C2',\n    '\\u05C4',\n    '\\u05C5',\n    '\\u05C7',\n    '\\u0610-\\u061A',\n    '\\u064B-\\u065E',\n    '\\u0670',\n    '\\u06D6-\\u06DC',\n    '\\u06DE-\\u06E4',\n    '\\u06E7\\u06E8',\n    '\\u06EA-\\u06ED',\n    '\\u0711',\n    '\\u0730-\\u074A',\n    '\\u07A6-\\u07B0',\n    '\\u07EB-\\u07F3',\n    '\\u0901-\\u0903',\n    '\\u093C',\n    '\\u093E-\\u094D',\n    '\\u0951-\\u0954',\n    '\\u0962',\n    '\\u0963',\n    '\\u0981-\\u0983',\n    '\\u09BC',\n    '\\u09BE-\\u09C4',\n    '\\u09C7',\n    '\\u09C8',\n    '\\u09CB-\\u09CD',\n    '\\u09D7',\n    '\\u09E2',\n    '\\u09E3',\n    '\\u0A01-\\u0A03',\n    '\\u0A3C',\n    '\\u0A3E-\\u0A42',\n    '\\u0A47',\n    '\\u0A48',\n    '\\u0A4B-\\u0A4D',\n    '\\u0A51',\n    '\\u0A70',\n    '\\u0A71',\n    '\\u0A75',\n    '\\u0A81-\\u0A83',\n    '\\u0ABC',\n    '\\u0ABE-\\u0AC5',\n    '\\u0AC7-\\u0AC9',\n    '\\u0ACB-\\u0ACD',\n    '\\u0AE2',\n    '\\u0AE3',\n    '\\u0B01-\\u0B03',\n    '\\u0B3C',\n    '\\u0B3E-\\u0B44',\n    '\\u0B47',\n    '\\u0B48',\n    '\\u0B4B-\\u0B4D',\n    '\\u0B56',\n    '\\u0B57',\n    '\\u0B62',\n    '\\u0B63',\n    '\\u0B82',\n    '\\u0BBE-\\u0BC2',\n    '\\u0BC6-\\u0BC8',\n    '\\u0BCA-\\u0BCD',\n    '\\u0BD7',\n    '\\u0C01-\\u0C03',\n    '\\u0C3E-\\u0C44',\n    '\\u0C46-\\u0C48',\n    '\\u0C4A-\\u0C4D',\n    '\\u0C55',\n    '\\u0C56',\n    '\\u0C62',\n    '\\u0C63',\n    '\\u0C82',\n    '\\u0C83',\n    '\\u0CBC',\n    '\\u0CBE-\\u0CC4',\n    '\\u0CC6-\\u0CC8',\n    '\\u0CCA-\\u0CCD',\n    '\\u0CD5',\n    '\\u0CD6',\n    '\\u0CE2',\n    '\\u0CE3',\n    '\\u0D02',\n    '\\u0D03',\n    '\\u0D3E-\\u0D44',\n    '\\u0D46-\\u0D48',\n    '\\u0D4A-\\u0D4D',\n    '\\u0D57',\n    '\\u0D62',\n    '\\u0D63',\n    '\\u0D82',\n    '\\u0D83',\n    '\\u0DCA',\n    '\\u0DCF-\\u0DD4',\n    '\\u0DD6',\n    '\\u0DD8-\\u0DDF',\n    '\\u0DF2',\n    '\\u0DF3',\n    '\\u0E31',\n    '\\u0E34-\\u0E3A',\n    '\\u0E47-\\u0E4E',\n    '\\u0EB1',\n    '\\u0EB4-\\u0EB9',\n    '\\u0EBB',\n    '\\u0EBC',\n    '\\u0EC8-\\u0ECD',\n    '\\u0F18',\n    '\\u0F19',\n    '\\u0F35',\n    '\\u0F37',\n    '\\u0F39',\n    '\\u0F3E',\n    '\\u0F3F',\n    '\\u0F71-\\u0F84',\n    '\\u0F86',\n    '\\u0F87',\n    '\\u0F90-\\u0F97',\n    '\\u0F99-\\u0FBC',\n    '\\u0FC6',\n    '\\u102B-\\u103E',\n    '\\u1056-\\u1059',\n    '\\u105E-\\u1060',\n    '\\u1062-\\u1064',\n    '\\u1067-\\u106D',\n    '\\u1071-\\u1074',\n    '\\u1082-\\u108D',\n    '\\u108F',\n    '\\u135F',\n    '\\u1712-\\u1714',\n    '\\u1732-\\u1734',\n    '\\u1752',\n    '\\u1753',\n    '\\u1772',\n    '\\u1773',\n    '\\u17B6-\\u17D3',\n    '\\u17DD',\n    '\\u180B-\\u180D',\n    '\\u18A9',\n    '\\u1920-\\u192B',\n    '\\u1930-\\u193B',\n    '\\u19B0-\\u19C0',\n    '\\u19C8',\n    '\\u19C9',\n    '\\u1A17-\\u1A1B',\n    '\\u1B00-\\u1B04',\n    '\\u1B34-\\u1B44',\n    '\\u1B6B-\\u1B73',\n    '\\u1B80-\\u1B82',\n    '\\u1BA1-\\u1BAA',\n    '\\u1C24-\\u1C37',\n    '\\u1DC0-\\u1DE6',\n    '\\u1DFE',\n    '\\u1DFF',\n    '\\u20D0-\\u20F0',\n    '\\u2DE0-\\u2DFF',\n    '\\u302A-\\u302F',\n    '\\u3099',\n    '\\u309A',\n    '\\uA66F-\\uA672',\n    '\\uA67C',\n    '\\uA67D',\n    '\\uA802',\n    '\\uA806',\n    '\\uA80B',\n    '\\uA823-\\uA827',\n    '\\uA880',\n    '\\uA881',\n    '\\uA8B4-\\uA8C4',\n    '\\uA926-\\uA92D',\n    '\\uA947-\\uA953',\n    '\\uAA29-\\uAA36',\n    '\\uAA43',\n    '\\uAA4C',\n    '\\uAA4D',\n    '\\uFB1E',\n    '\\uFE00-\\uFE0F',\n    '\\uFE20-\\uFE26'\n  ]\n\n  var graphemeExtend = new RegExp('(.)([' + chars.join('') + ']+)', 'g')\n\n  // Temporarily reverse\n  string = string.replace(graphemeExtend, '$2$1')\n  return string.split('').reverse().join('')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strrev/index.html","comments":1,"_id":"cinoeja1w007rou9y27r9kf04","content":"module.exports = function strrev (string) {\n  //       discuss at: http://locutusjs.io/php/strrev/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strrev('Kevin van Zonneveld')\n  //        returns 1: 'dlevennoZ nav niveK'\n  //        example 2: strrev('a\\u0301haB')\n  //        returns 2: 'Baha\\u0301' // combining\n  //        example 3: strrev('A\\uD87E\\uDC04Z')\n  //        returns 3: 'Z\\uD87E\\uDC04A' // surrogates\n  //             test: 'skip-3'\n\n  string = string + ''\n\n  // Performance will be enhanced with the next two lines of code commented\n  // out if you don't care about combining characters\n  // Keep Unicode combining characters together with the character preceding\n  // them and which they are modifying (as in PHP 6)\n  // See http://unicode.org/reports/tr44/#Property_Table (Me+Mn)\n  // We also add the low surrogate range at the beginning here so it will be\n  // maintained with its preceding high surrogate\n\n  var chars = [\n    '\\uDC00-\\uDFFF',\n    '\\u0300-\\u036F',\n    '\\u0483-\\u0489',\n    '\\u0591-\\u05BD',\n    '\\u05BF',\n    '\\u05C1',\n    '\\u05C2',\n    '\\u05C4',\n    '\\u05C5',\n    '\\u05C7',\n    '\\u0610-\\u061A',\n    '\\u064B-\\u065E',\n    '\\u0670',\n    '\\u06D6-\\u06DC',\n    '\\u06DE-\\u06E4',\n    '\\u06E7\\u06E8',\n    '\\u06EA-\\u06ED',\n    '\\u0711',\n    '\\u0730-\\u074A',\n    '\\u07A6-\\u07B0',\n    '\\u07EB-\\u07F3',\n    '\\u0901-\\u0903',\n    '\\u093C',\n    '\\u093E-\\u094D',\n    '\\u0951-\\u0954',\n    '\\u0962',\n    '\\u0963',\n    '\\u0981-\\u0983',\n    '\\u09BC',\n    '\\u09BE-\\u09C4',\n    '\\u09C7',\n    '\\u09C8',\n    '\\u09CB-\\u09CD',\n    '\\u09D7',\n    '\\u09E2',\n    '\\u09E3',\n    '\\u0A01-\\u0A03',\n    '\\u0A3C',\n    '\\u0A3E-\\u0A42',\n    '\\u0A47',\n    '\\u0A48',\n    '\\u0A4B-\\u0A4D',\n    '\\u0A51',\n    '\\u0A70',\n    '\\u0A71',\n    '\\u0A75',\n    '\\u0A81-\\u0A83',\n    '\\u0ABC',\n    '\\u0ABE-\\u0AC5',\n    '\\u0AC7-\\u0AC9',\n    '\\u0ACB-\\u0ACD',\n    '\\u0AE2',\n    '\\u0AE3',\n    '\\u0B01-\\u0B03',\n    '\\u0B3C',\n    '\\u0B3E-\\u0B44',\n    '\\u0B47',\n    '\\u0B48',\n    '\\u0B4B-\\u0B4D',\n    '\\u0B56',\n    '\\u0B57',\n    '\\u0B62',\n    '\\u0B63',\n    '\\u0B82',\n    '\\u0BBE-\\u0BC2',\n    '\\u0BC6-\\u0BC8',\n    '\\u0BCA-\\u0BCD',\n    '\\u0BD7',\n    '\\u0C01-\\u0C03',\n    '\\u0C3E-\\u0C44',\n    '\\u0C46-\\u0C48',\n    '\\u0C4A-\\u0C4D',\n    '\\u0C55',\n    '\\u0C56',\n    '\\u0C62',\n    '\\u0C63',\n    '\\u0C82',\n    '\\u0C83',\n    '\\u0CBC',\n    '\\u0CBE-\\u0CC4',\n    '\\u0CC6-\\u0CC8',\n    '\\u0CCA-\\u0CCD',\n    '\\u0CD5',\n    '\\u0CD6',\n    '\\u0CE2',\n    '\\u0CE3',\n    '\\u0D02',\n    '\\u0D03',\n    '\\u0D3E-\\u0D44',\n    '\\u0D46-\\u0D48',\n    '\\u0D4A-\\u0D4D',\n    '\\u0D57',\n    '\\u0D62',\n    '\\u0D63',\n    '\\u0D82',\n    '\\u0D83',\n    '\\u0DCA',\n    '\\u0DCF-\\u0DD4',\n    '\\u0DD6',\n    '\\u0DD8-\\u0DDF',\n    '\\u0DF2',\n    '\\u0DF3',\n    '\\u0E31',\n    '\\u0E34-\\u0E3A',\n    '\\u0E47-\\u0E4E',\n    '\\u0EB1',\n    '\\u0EB4-\\u0EB9',\n    '\\u0EBB',\n    '\\u0EBC',\n    '\\u0EC8-\\u0ECD',\n    '\\u0F18',\n    '\\u0F19',\n    '\\u0F35',\n    '\\u0F37',\n    '\\u0F39',\n    '\\u0F3E',\n    '\\u0F3F',\n    '\\u0F71-\\u0F84',\n    '\\u0F86',\n    '\\u0F87',\n    '\\u0F90-\\u0F97',\n    '\\u0F99-\\u0FBC',\n    '\\u0FC6',\n    '\\u102B-\\u103E',\n    '\\u1056-\\u1059',\n    '\\u105E-\\u1060',\n    '\\u1062-\\u1064',\n    '\\u1067-\\u106D',\n    '\\u1071-\\u1074',\n    '\\u1082-\\u108D',\n    '\\u108F',\n    '\\u135F',\n    '\\u1712-\\u1714',\n    '\\u1732-\\u1734',\n    '\\u1752',\n    '\\u1753',\n    '\\u1772',\n    '\\u1773',\n    '\\u17B6-\\u17D3',\n    '\\u17DD',\n    '\\u180B-\\u180D',\n    '\\u18A9',\n    '\\u1920-\\u192B',\n    '\\u1930-\\u193B',\n    '\\u19B0-\\u19C0',\n    '\\u19C8',\n    '\\u19C9',\n    '\\u1A17-\\u1A1B',\n    '\\u1B00-\\u1B04',\n    '\\u1B34-\\u1B44',\n    '\\u1B6B-\\u1B73',\n    '\\u1B80-\\u1B82',\n    '\\u1BA1-\\u1BAA',\n    '\\u1C24-\\u1C37',\n    '\\u1DC0-\\u1DE6',\n    '\\u1DFE',\n    '\\u1DFF',\n    '\\u20D0-\\u20F0',\n    '\\u2DE0-\\u2DFF',\n    '\\u302A-\\u302F',\n    '\\u3099',\n    '\\u309A',\n    '\\uA66F-\\uA672',\n    '\\uA67C',\n    '\\uA67D',\n    '\\uA802',\n    '\\uA806',\n    '\\uA80B',\n    '\\uA823-\\uA827',\n    '\\uA880',\n    '\\uA881',\n    '\\uA8B4-\\uA8C4',\n    '\\uA926-\\uA92D',\n    '\\uA947-\\uA953',\n    '\\uAA29-\\uAA36',\n    '\\uAA43',\n    '\\uAA4C',\n    '\\uAA4D',\n    '\\uFB1E',\n    '\\uFE00-\\uFE0F',\n    '\\uFE20-\\uFE26'\n  ]\n\n  var graphemeExtend = new RegExp('(.)([' + chars.join('') + ']+)', 'g')\n\n  // Temporarily reverse\n  string = string.replace(graphemeExtend, '$2$1')\n  return string.split('').reverse().join('')\n}\n","excerpt":"","more":"module.exports = function strrev (string) {\n  //       discuss at: http://locutusjs.io/php/strrev/\n  //      original by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: strrev('Kevin van Zonneveld')\n  //        returns 1: 'dlevennoZ nav niveK'\n  //        example 2: strrev('a\\u0301haB')\n  //        returns 2: 'Baha\\u0301' // combining\n  //        example 3: strrev('A\\uD87E\\uDC04Z')\n  //        returns 3: 'Z\\uD87E\\uDC04A' // surrogates\n  //             test: 'skip-3'\n\n  string = string + ''\n\n  // Performance will be enhanced with the next two lines of code commented\n  // out if you don't care about combining characters\n  // Keep Unicode combining characters together with the character preceding\n  // them and which they are modifying (as in PHP 6)\n  // See http://unicode.org/reports/tr44/#Property_Table (Me+Mn)\n  // We also add the low surrogate range at the beginning here so it will be\n  // maintained with its preceding high surrogate\n\n  var chars = [\n    '\\uDC00-\\uDFFF',\n    '\\u0300-\\u036F',\n    '\\u0483-\\u0489',\n    '\\u0591-\\u05BD',\n    '\\u05BF',\n    '\\u05C1',\n    '\\u05C2',\n    '\\u05C4',\n    '\\u05C5',\n    '\\u05C7',\n    '\\u0610-\\u061A',\n    '\\u064B-\\u065E',\n    '\\u0670',\n    '\\u06D6-\\u06DC',\n    '\\u06DE-\\u06E4',\n    '\\u06E7\\u06E8',\n    '\\u06EA-\\u06ED',\n    '\\u0711',\n    '\\u0730-\\u074A',\n    '\\u07A6-\\u07B0',\n    '\\u07EB-\\u07F3',\n    '\\u0901-\\u0903',\n    '\\u093C',\n    '\\u093E-\\u094D',\n    '\\u0951-\\u0954',\n    '\\u0962',\n    '\\u0963',\n    '\\u0981-\\u0983',\n    '\\u09BC',\n    '\\u09BE-\\u09C4',\n    '\\u09C7',\n    '\\u09C8',\n    '\\u09CB-\\u09CD',\n    '\\u09D7',\n    '\\u09E2',\n    '\\u09E3',\n    '\\u0A01-\\u0A03',\n    '\\u0A3C',\n    '\\u0A3E-\\u0A42',\n    '\\u0A47',\n    '\\u0A48',\n    '\\u0A4B-\\u0A4D',\n    '\\u0A51',\n    '\\u0A70',\n    '\\u0A71',\n    '\\u0A75',\n    '\\u0A81-\\u0A83',\n    '\\u0ABC',\n    '\\u0ABE-\\u0AC5',\n    '\\u0AC7-\\u0AC9',\n    '\\u0ACB-\\u0ACD',\n    '\\u0AE2',\n    '\\u0AE3',\n    '\\u0B01-\\u0B03',\n    '\\u0B3C',\n    '\\u0B3E-\\u0B44',\n    '\\u0B47',\n    '\\u0B48',\n    '\\u0B4B-\\u0B4D',\n    '\\u0B56',\n    '\\u0B57',\n    '\\u0B62',\n    '\\u0B63',\n    '\\u0B82',\n    '\\u0BBE-\\u0BC2',\n    '\\u0BC6-\\u0BC8',\n    '\\u0BCA-\\u0BCD',\n    '\\u0BD7',\n    '\\u0C01-\\u0C03',\n    '\\u0C3E-\\u0C44',\n    '\\u0C46-\\u0C48',\n    '\\u0C4A-\\u0C4D',\n    '\\u0C55',\n    '\\u0C56',\n    '\\u0C62',\n    '\\u0C63',\n    '\\u0C82',\n    '\\u0C83',\n    '\\u0CBC',\n    '\\u0CBE-\\u0CC4',\n    '\\u0CC6-\\u0CC8',\n    '\\u0CCA-\\u0CCD',\n    '\\u0CD5',\n    '\\u0CD6',\n    '\\u0CE2',\n    '\\u0CE3',\n    '\\u0D02',\n    '\\u0D03',\n    '\\u0D3E-\\u0D44',\n    '\\u0D46-\\u0D48',\n    '\\u0D4A-\\u0D4D',\n    '\\u0D57',\n    '\\u0D62',\n    '\\u0D63',\n    '\\u0D82',\n    '\\u0D83',\n    '\\u0DCA',\n    '\\u0DCF-\\u0DD4',\n    '\\u0DD6',\n    '\\u0DD8-\\u0DDF',\n    '\\u0DF2',\n    '\\u0DF3',\n    '\\u0E31',\n    '\\u0E34-\\u0E3A',\n    '\\u0E47-\\u0E4E',\n    '\\u0EB1',\n    '\\u0EB4-\\u0EB9',\n    '\\u0EBB',\n    '\\u0EBC',\n    '\\u0EC8-\\u0ECD',\n    '\\u0F18',\n    '\\u0F19',\n    '\\u0F35',\n    '\\u0F37',\n    '\\u0F39',\n    '\\u0F3E',\n    '\\u0F3F',\n    '\\u0F71-\\u0F84',\n    '\\u0F86',\n    '\\u0F87',\n    '\\u0F90-\\u0F97',\n    '\\u0F99-\\u0FBC',\n    '\\u0FC6',\n    '\\u102B-\\u103E',\n    '\\u1056-\\u1059',\n    '\\u105E-\\u1060',\n    '\\u1062-\\u1064',\n    '\\u1067-\\u106D',\n    '\\u1071-\\u1074',\n    '\\u1082-\\u108D',\n    '\\u108F',\n    '\\u135F',\n    '\\u1712-\\u1714',\n    '\\u1732-\\u1734',\n    '\\u1752',\n    '\\u1753',\n    '\\u1772',\n    '\\u1773',\n    '\\u17B6-\\u17D3',\n    '\\u17DD',\n    '\\u180B-\\u180D',\n    '\\u18A9',\n    '\\u1920-\\u192B',\n    '\\u1930-\\u193B',\n    '\\u19B0-\\u19C0',\n    '\\u19C8',\n    '\\u19C9',\n    '\\u1A17-\\u1A1B',\n    '\\u1B00-\\u1B04',\n    '\\u1B34-\\u1B44',\n    '\\u1B6B-\\u1B73',\n    '\\u1B80-\\u1B82',\n    '\\u1BA1-\\u1BAA',\n    '\\u1C24-\\u1C37',\n    '\\u1DC0-\\u1DE6',\n    '\\u1DFE',\n    '\\u1DFF',\n    '\\u20D0-\\u20F0',\n    '\\u2DE0-\\u2DFF',\n    '\\u302A-\\u302F',\n    '\\u3099',\n    '\\u309A',\n    '\\uA66F-\\uA672',\n    '\\uA67C',\n    '\\uA67D',\n    '\\uA802',\n    '\\uA806',\n    '\\uA80B',\n    '\\uA823-\\uA827',\n    '\\uA880',\n    '\\uA881',\n    '\\uA8B4-\\uA8C4',\n    '\\uA926-\\uA92D',\n    '\\uA947-\\uA953',\n    '\\uAA29-\\uAA36',\n    '\\uAA43',\n    '\\uAA4C',\n    '\\uAA4D',\n    '\\uFB1E',\n    '\\uFE00-\\uFE0F',\n    '\\uFE20-\\uFE26'\n  ]\n\n  var graphemeExtend = new RegExp('(.)([' + chars.join('') + ']+)', 'g')\n\n  // Temporarily reverse\n  string = string.replace(graphemeExtend, '$2$1')\n  return string.split('').reverse().join('')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strripos('Kevin van Zonneveld', 'E')"],"estarget":"es5","returns":["16"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"input by":["saulius"]},"notes":[],"layout":"function","title":"php'sstrripos in JavaScript","function":"strripos","category":"strings","language":"php","alias":["/functions/php/strripos/","/functions/strings/strripos/","/php/strripos/","/functions/strripos/"],"_content":"module.exports = function strripos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strripos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strripos('Kevin van Zonneveld', 'E')\n  //   returns 1: 16\n\n  haystack = (haystack + '')\n    .toLowerCase()\n  needle = (needle + '')\n    .toLowerCase()\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","source":"php/strings/strripos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strripos(''Kevin van Zonneveld'', ''E'')'\nestarget: es5\nreturns:\n  - '16'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - saulius\nnotes: []\nlayout: function\ntitle: php'sstrripos in JavaScript\nfunction: strripos\ncategory: strings\nlanguage: php\npermalink: php/strings/strripos/\nalias:\n  - /functions/php/strripos/\n  - /functions/strings/strripos/\n  - /php/strripos/\n  - /functions/strripos/\n---\nmodule.exports = function strripos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strripos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strripos('Kevin van Zonneveld', 'E')\n  //   returns 1: 16\n\n  haystack = (haystack + '')\n    .toLowerCase()\n  needle = (needle + '')\n    .toLowerCase()\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strripos/index.html","comments":1,"_id":"cinoeja1w007sou9y92oksohr","content":"module.exports = function strripos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strripos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strripos('Kevin van Zonneveld', 'E')\n  //   returns 1: 16\n\n  haystack = (haystack + '')\n    .toLowerCase()\n  needle = (needle + '')\n    .toLowerCase()\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","excerpt":"","more":"module.exports = function strripos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strripos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strripos('Kevin van Zonneveld', 'E')\n  //   returns 1: 16\n\n  haystack = (haystack + '')\n    .toLowerCase()\n  needle = (needle + '')\n    .toLowerCase()\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strrpos('Kevin van Zonneveld', 'e')","strrpos('somepage.com', '.', false)","strrpos('baa', 'a', 3)","strrpos('baa', 'a', 2)"],"estarget":"es5","returns":["16","8","false","2"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"input by":["saulius"]},"notes":[],"layout":"function","title":"php'sstrrpos in JavaScript","function":"strrpos","category":"strings","language":"php","alias":["/functions/php/strrpos/","/functions/strings/strrpos/","/php/strrpos/","/functions/strrpos/"],"_content":"module.exports = function strrpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strrpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strrpos('Kevin van Zonneveld', 'e')\n  //   returns 1: 16\n  //   example 2: strrpos('somepage.com', '.', false)\n  //   returns 2: 8\n  //   example 3: strrpos('baa', 'a', 3)\n  //   returns 3: false\n  //   example 4: strrpos('baa', 'a', 2)\n  //   returns 4: 2\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","source":"php/strings/strrpos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strrpos(''Kevin van Zonneveld'', ''e'')'\n  - 'strrpos(''somepage.com'', ''.'', false)'\n  - 'strrpos(''baa'', ''a'', 3)'\n  - 'strrpos(''baa'', ''a'', 2)'\nestarget: es5\nreturns:\n  - '16'\n  - '8'\n  - 'false'\n  - '2'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - saulius\nnotes: []\nlayout: function\ntitle: php'sstrrpos in JavaScript\nfunction: strrpos\ncategory: strings\nlanguage: php\npermalink: php/strings/strrpos/\nalias:\n  - /functions/php/strrpos/\n  - /functions/strings/strrpos/\n  - /php/strrpos/\n  - /functions/strrpos/\n---\nmodule.exports = function strrpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strrpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strrpos('Kevin van Zonneveld', 'e')\n  //   returns 1: 16\n  //   example 2: strrpos('somepage.com', '.', false)\n  //   returns 2: 8\n  //   example 3: strrpos('baa', 'a', 3)\n  //   returns 3: false\n  //   example 4: strrpos('baa', 'a', 2)\n  //   returns 4: 2\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strrpos/index.html","comments":1,"_id":"cinoeja1w007tou9y5d7t3ofo","content":"module.exports = function strrpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strrpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strrpos('Kevin van Zonneveld', 'e')\n  //   returns 1: 16\n  //   example 2: strrpos('somepage.com', '.', false)\n  //   returns 2: 8\n  //   example 3: strrpos('baa', 'a', 3)\n  //   returns 3: false\n  //   example 4: strrpos('baa', 'a', 2)\n  //   returns 4: 2\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n","excerpt":"","more":"module.exports = function strrpos (haystack, needle, offset) {\n  //  discuss at: http://locutusjs.io/php/strrpos/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //    input by: saulius\n  //   example 1: strrpos('Kevin van Zonneveld', 'e')\n  //   returns 1: 16\n  //   example 2: strrpos('somepage.com', '.', false)\n  //   returns 2: 8\n  //   example 3: strrpos('baa', 'a', 3)\n  //   returns 3: false\n  //   example 4: strrpos('baa', 'a', 2)\n  //   returns 4: 2\n\n  var i = -1\n  if (offset) {\n    i = (haystack + '')\n      .slice(offset)\n      .lastIndexOf(needle) // strrpos' offset indicates starting point of range till end,\n    // while lastIndexOf's optional 2nd argument indicates ending point of range from the beginning\n    if (i !== -1) {\n      i += offset\n    }\n  } else {\n    i = (haystack + '')\n      .lastIndexOf(needle)\n  }\n  return i >= 0 ? i : false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strspn('42 is the answer, what is the question ...', '1234567890')","strspn('foo', 'o', 1, 2)"],"estarget":"es5","returns":["2","2"],"dependencies":[],"authors":{"original by":["Valentina De Rosa"],"improved by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstrspn in JavaScript","function":"strspn","category":"strings","language":"php","alias":["/functions/php/strspn/","/functions/strings/strspn/","/php/strspn/","/functions/strspn/"],"_content":"module.exports = function strspn (str1, str2, start, lgth) {\n  //  discuss at: http://locutusjs.io/php/strspn/\n  // original by: Valentina De Rosa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strspn('42 is the answer, what is the question ...', '1234567890')\n  //   returns 1: 2\n  //   example 2: strspn('foo', 'o', 1, 2)\n  //   returns 2: 2\n\n  var found\n  var stri\n  var strj\n  var j = 0\n  var i = 0\n\n  start = start ? (start < 0 ? (str1.length + start) : start) : 0\n  lgth = lgth ? ((lgth < 0) ? (str1.length + lgth - start) : lgth) : str1.length - start\n  str1 = str1.substr(start, lgth)\n\n  for (i = 0; i < str1.length; i++) {\n    found = 0\n    stri = str1.substring(i, i + 1)\n    for (j = 0; j <= str2.length; j++) {\n      strj = str2.substring(j, j + 1)\n      if (stri === strj) {\n        found = 1\n        break\n      }\n    }\n    if (found !== 1) {\n      return i\n    }\n  }\n\n  return i\n}\n","source":"php/strings/strspn.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strspn(''42 is the answer, what is the question ...'', ''1234567890'')'\n  - 'strspn(''foo'', ''o'', 1, 2)'\nestarget: es5\nreturns:\n  - '2'\n  - '2'\ndependencies: []\nauthors:\n  original by:\n    - Valentina De Rosa\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstrspn in JavaScript\nfunction: strspn\ncategory: strings\nlanguage: php\npermalink: php/strings/strspn/\nalias:\n  - /functions/php/strspn/\n  - /functions/strings/strspn/\n  - /php/strspn/\n  - /functions/strspn/\n---\nmodule.exports = function strspn (str1, str2, start, lgth) {\n  //  discuss at: http://locutusjs.io/php/strspn/\n  // original by: Valentina De Rosa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strspn('42 is the answer, what is the question ...', '1234567890')\n  //   returns 1: 2\n  //   example 2: strspn('foo', 'o', 1, 2)\n  //   returns 2: 2\n\n  var found\n  var stri\n  var strj\n  var j = 0\n  var i = 0\n\n  start = start ? (start < 0 ? (str1.length + start) : start) : 0\n  lgth = lgth ? ((lgth < 0) ? (str1.length + lgth - start) : lgth) : str1.length - start\n  str1 = str1.substr(start, lgth)\n\n  for (i = 0; i < str1.length; i++) {\n    found = 0\n    stri = str1.substring(i, i + 1)\n    for (j = 0; j <= str2.length; j++) {\n      strj = str2.substring(j, j + 1)\n      if (stri === strj) {\n        found = 1\n        break\n      }\n    }\n    if (found !== 1) {\n      return i\n    }\n  }\n\n  return i\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strspn/index.html","comments":1,"_id":"cinoeja1x007uou9y7txq2xew","content":"module.exports = function strspn (str1, str2, start, lgth) {\n  //  discuss at: http://locutusjs.io/php/strspn/\n  // original by: Valentina De Rosa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strspn('42 is the answer, what is the question ...', '1234567890')\n  //   returns 1: 2\n  //   example 2: strspn('foo', 'o', 1, 2)\n  //   returns 2: 2\n\n  var found\n  var stri\n  var strj\n  var j = 0\n  var i = 0\n\n  start = start ? (start < 0 ? (str1.length + start) : start) : 0\n  lgth = lgth ? ((lgth < 0) ? (str1.length + lgth - start) : lgth) : str1.length - start\n  str1 = str1.substr(start, lgth)\n\n  for (i = 0; i < str1.length; i++) {\n    found = 0\n    stri = str1.substring(i, i + 1)\n    for (j = 0; j ","excerpt":"","more":"module.exports = function strspn (str1, str2, start, lgth) {\n  //  discuss at: http://locutusjs.io/php/strspn/\n  // original by: Valentina De Rosa\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strspn('42 is the answer, what is the question ...', '1234567890')\n  //   returns 1: 2\n  //   example 2: strspn('foo', 'o', 1, 2)\n  //   returns 2: 2\n\n  var found\n  var stri\n  var strj\n  var j = 0\n  var i = 0\n\n  start = start ? (start < 0 ? (str1.length + start) : start) : 0\n  lgth = lgth ? ((lgth < 0) ? (str1.length + lgth - start) : lgth) : str1.length - start\n  str1 = str1.substr(start, lgth)\n\n  for (i = 0; i < str1.length; i++) {\n    found = 0\n    stri = str1.substring(i, i + 1)\n    for (j = 0; j <= str2.length; j++) {\n      strj = str2.substring(j, j + 1)\n      if (stri === strj) {\n        found = 1\n        break\n      }\n    }\n    if (found !== 1) {\n      return i\n    }\n  }\n\n  return i\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strstr('Kevin van Zonneveld', 'van')","strstr('Kevin van Zonneveld', 'van', true)","strstr('name@example.com', '@')","strstr('name@example.com', '@', true)"],"estarget":"es5","returns":["'van Zonneveld'","'Kevin '","'@example.com'","'name'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstrstr in JavaScript","function":"strstr","category":"strings","language":"php","alias":["/functions/php/strstr/","/functions/strings/strstr/","/php/strstr/","/functions/strstr/"],"_content":"module.exports = function strstr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strstr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: strstr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strstr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n  //   example 3: strstr('name@example.com', '@')\n  //   returns 3: '@example.com'\n  //   example 4: strstr('name@example.com', '@', true)\n  //   returns 4: 'name'\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.indexOf(needle)\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","source":"php/strings/strstr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strstr(''Kevin van Zonneveld'', ''van'')'\n  - 'strstr(''Kevin van Zonneveld'', ''van'', true)'\n  - 'strstr(''name@example.com'', ''@'')'\n  - 'strstr(''name@example.com'', ''@'', true)'\nestarget: es5\nreturns:\n  - '''van Zonneveld'''\n  - '''Kevin '''\n  - '''@example.com'''\n  - '''name'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstrstr in JavaScript\nfunction: strstr\ncategory: strings\nlanguage: php\npermalink: php/strings/strstr/\nalias:\n  - /functions/php/strstr/\n  - /functions/strings/strstr/\n  - /php/strstr/\n  - /functions/strstr/\n---\nmodule.exports = function strstr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strstr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: strstr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strstr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n  //   example 3: strstr('name@example.com', '@')\n  //   returns 3: '@example.com'\n  //   example 4: strstr('name@example.com', '@', true)\n  //   returns 4: 'name'\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.indexOf(needle)\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strstr/index.html","comments":1,"_id":"cinoeja1x007vou9yfemixaiw","content":"module.exports = function strstr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strstr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: strstr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strstr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n  //   example 3: strstr('name@example.com', '@')\n  //   returns 3: '@example.com'\n  //   example 4: strstr('name@example.com', '@', true)\n  //   returns 4: 'name'\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.indexOf(needle)\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function strstr (haystack, needle, bool) {\n  //  discuss at: http://locutusjs.io/php/strstr/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: strstr('Kevin van Zonneveld', 'van')\n  //   returns 1: 'van Zonneveld'\n  //   example 2: strstr('Kevin van Zonneveld', 'van', true)\n  //   returns 2: 'Kevin '\n  //   example 3: strstr('name@example.com', '@')\n  //   returns 3: '@example.com'\n  //   example 4: strstr('name@example.com', '@', true)\n  //   returns 4: 'name'\n\n  var pos = 0\n\n  haystack += ''\n  pos = haystack.indexOf(needle)\n  if (pos === -1) {\n    return false\n  } else {\n    if (bool) {\n      return haystack.substr(0, pos)\n    } else {\n      return haystack.slice(pos)\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\nvar $tok = strtok($string, \" \\n\\t\")\nvar $b = ''\nwhile ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\nvar $result = $b"],"estarget":"es5","returns":["\"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\""],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Use tab and newline as tokenizing characters as well"],"layout":"function","title":"php'sstrtok in JavaScript","function":"strtok","category":"strings","language":"php","alias":["/functions/php/strtok/","/functions/strings/strtok/","/php/strtok/","/functions/strtok/"],"_content":"module.exports = function strtok (str, tokens) {\n  //  discuss at: http://locutusjs.io/php/strtok/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Use tab and newline as tokenizing characters as well\n  //   example 1: var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\n  //   example 1: var $tok = strtok($string, \" \\n\\t\")\n  //   example 1: var $b = ''\n  //   example 1: while ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\n  //   example 1: var $result = $b\n  //   returns 1: \"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\"\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (tokens === undefined) {\n    tokens = str\n    str = $locutus.php.strtokleftOver\n  }\n  if (str.length === 0) {\n    return false\n  }\n  if (tokens.indexOf(str.charAt(0)) !== -1) {\n    return strtok(str.substr(1), tokens)\n  }\n  for (var i = 0; i < str.length; i++) {\n    if (tokens.indexOf(str.charAt(i)) !== -1) {\n      break\n    }\n  }\n  $locutus.php.strtokleftOver = str.substr(i + 1)\n\n  return str.substring(0, i)\n}\n","source":"php/strings/strtok.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\n    var $tok = strtok($string, \" \\n\\t\")\n    var $b = ''\n    while ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\n    var $result = $b\nestarget: es5\nreturns:\n  - '\"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\"'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - Use tab and newline as tokenizing characters as well\nlayout: function\ntitle: php'sstrtok in JavaScript\nfunction: strtok\ncategory: strings\nlanguage: php\npermalink: php/strings/strtok/\nalias:\n  - /functions/php/strtok/\n  - /functions/strings/strtok/\n  - /php/strtok/\n  - /functions/strtok/\n---\nmodule.exports = function strtok (str, tokens) {\n  //  discuss at: http://locutusjs.io/php/strtok/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Use tab and newline as tokenizing characters as well\n  //   example 1: var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\n  //   example 1: var $tok = strtok($string, \" \\n\\t\")\n  //   example 1: var $b = ''\n  //   example 1: while ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\n  //   example 1: var $result = $b\n  //   returns 1: \"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\"\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (tokens === undefined) {\n    tokens = str\n    str = $locutus.php.strtokleftOver\n  }\n  if (str.length === 0) {\n    return false\n  }\n  if (tokens.indexOf(str.charAt(0)) !== -1) {\n    return strtok(str.substr(1), tokens)\n  }\n  for (var i = 0; i < str.length; i++) {\n    if (tokens.indexOf(str.charAt(i)) !== -1) {\n      break\n    }\n  }\n  $locutus.php.strtokleftOver = str.substr(i + 1)\n\n  return str.substring(0, i)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strtok/index.html","comments":1,"_id":"cinoeja1x007wou9ysnmq88uu","content":"module.exports = function strtok (str, tokens) {\n  //  discuss at: http://locutusjs.io/php/strtok/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Use tab and newline as tokenizing characters as well\n  //   example 1: var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\n  //   example 1: var $tok = strtok($string, \" \\n\\t\")\n  //   example 1: var $b = ''\n  //   example 1: while ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\n  //   example 1: var $result = $b\n  //   returns 1: \"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\"\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (tokens === undefined) {\n    tokens = str\n    str = $locutus.php.strtokleftOver\n  }\n  if (str.length === 0) {\n    return false\n  }\n  if (tokens.indexOf(str.charAt(0)) !== -1) {\n    return strtok(str.substr(1), tokens)\n  }\n  for (var i = 0; i < str.length; i++) {\n    if (tokens.indexOf(str.charAt(i)) !== -1) {\n      break\n    }\n  }\n  $locutus.php.strtokleftOver = str.substr(i + 1)\n\n  return str.substring(0, i)\n}\n","excerpt":"","more":"module.exports = function strtok (str, tokens) {\n  //  discuss at: http://locutusjs.io/php/strtok/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Use tab and newline as tokenizing characters as well\n  //   example 1: var $string = \"\\t\\t\\t\\nThis is\\tan example\\nstring\\n\"\n  //   example 1: var $tok = strtok($string, \" \\n\\t\")\n  //   example 1: var $b = ''\n  //   example 1: while ($tok !== false) {$b += \"Word=\"+$tok+\"\\n\"; $tok = strtok(\" \\n\\t\");}\n  //   example 1: var $result = $b\n  //   returns 1: \"Word=This\\nWord=is\\nWord=an\\nWord=example\\nWord=string\\n\"\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n  $global.$locutus = $global.$locutus || {}\n  var $locutus = $global.$locutus\n  $locutus.php = $locutus.php || {}\n\n  if (tokens === undefined) {\n    tokens = str\n    str = $locutus.php.strtokleftOver\n  }\n  if (str.length === 0) {\n    return false\n  }\n  if (tokens.indexOf(str.charAt(0)) !== -1) {\n    return strtok(str.substr(1), tokens)\n  }\n  for (var i = 0; i < str.length; i++) {\n    if (tokens.indexOf(str.charAt(i)) !== -1) {\n      break\n    }\n  }\n  $locutus.php.strtokleftOver = str.substr(i + 1)\n\n  return str.substring(0, i)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strtolower('Kevin van Zonneveld')"],"estarget":"es5","returns":["'kevin van zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstrtolower in JavaScript","function":"strtolower","category":"strings","language":"php","alias":["/functions/php/strtolower/","/functions/strings/strtolower/","/php/strtolower/","/functions/strtolower/"],"_content":"module.exports = function strtolower (str) {\n  //  discuss at: http://locutusjs.io/php/strtolower/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtolower('Kevin van Zonneveld')\n  //   returns 1: 'kevin van zonneveld'\n\n  return (str + '')\n    .toLowerCase()\n}\n","source":"php/strings/strtolower.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - strtolower('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''kevin van zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstrtolower in JavaScript\nfunction: strtolower\ncategory: strings\nlanguage: php\npermalink: php/strings/strtolower/\nalias:\n  - /functions/php/strtolower/\n  - /functions/strings/strtolower/\n  - /php/strtolower/\n  - /functions/strtolower/\n---\nmodule.exports = function strtolower (str) {\n  //  discuss at: http://locutusjs.io/php/strtolower/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtolower('Kevin van Zonneveld')\n  //   returns 1: 'kevin van zonneveld'\n\n  return (str + '')\n    .toLowerCase()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strtolower/index.html","comments":1,"_id":"cinoeja1y007xou9yzg9jhwh5","content":"module.exports = function strtolower (str) {\n  //  discuss at: http://locutusjs.io/php/strtolower/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtolower('Kevin van Zonneveld')\n  //   returns 1: 'kevin van zonneveld'\n\n  return (str + '')\n    .toLowerCase()\n}\n","excerpt":"","more":"module.exports = function strtolower (str) {\n  //  discuss at: http://locutusjs.io/php/strtolower/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtolower('Kevin van Zonneveld')\n  //   returns 1: 'kevin van zonneveld'\n\n  return (str + '')\n    .toLowerCase()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strtoupper('Kevin van Zonneveld')"],"estarget":"es5","returns":["'KEVIN VAN ZONNEVELD'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sstrtoupper in JavaScript","function":"strtoupper","category":"strings","language":"php","alias":["/functions/php/strtoupper/","/functions/strings/strtoupper/","/php/strtoupper/","/functions/strtoupper/"],"_content":"module.exports = function strtoupper (str) {\n  //  discuss at: http://locutusjs.io/php/strtoupper/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtoupper('Kevin van Zonneveld')\n  //   returns 1: 'KEVIN VAN ZONNEVELD'\n\n  return (str + '')\n    .toUpperCase()\n}\n","source":"php/strings/strtoupper.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - strtoupper('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''KEVIN VAN ZONNEVELD'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sstrtoupper in JavaScript\nfunction: strtoupper\ncategory: strings\nlanguage: php\npermalink: php/strings/strtoupper/\nalias:\n  - /functions/php/strtoupper/\n  - /functions/strings/strtoupper/\n  - /php/strtoupper/\n  - /functions/strtoupper/\n---\nmodule.exports = function strtoupper (str) {\n  //  discuss at: http://locutusjs.io/php/strtoupper/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtoupper('Kevin van Zonneveld')\n  //   returns 1: 'KEVIN VAN ZONNEVELD'\n\n  return (str + '')\n    .toUpperCase()\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strtoupper/index.html","comments":1,"_id":"cinoeja1y007you9y0wmjswr6","content":"module.exports = function strtoupper (str) {\n  //  discuss at: http://locutusjs.io/php/strtoupper/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtoupper('Kevin van Zonneveld')\n  //   returns 1: 'KEVIN VAN ZONNEVELD'\n\n  return (str + '')\n    .toUpperCase()\n}\n","excerpt":"","more":"module.exports = function strtoupper (str) {\n  //  discuss at: http://locutusjs.io/php/strtoupper/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: strtoupper('Kevin van Zonneveld')\n  //   returns 1: 'KEVIN VAN ZONNEVELD'\n\n  return (str + '')\n    .toUpperCase()\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var $trans = {'hello' : 'hi', 'hi' : 'hello'}\nstrtr('hi all, I said hello', $trans)","strtr('äaabaåccasdeöoo', 'äåö','aao')","strtr('ääääääää', 'ä', 'a')","strtr('http', 'pthxyz','xyzpth')","strtr('zyyx', 'pthxyz','xyzpth')","strtr('aa', {'a':1,'aa':2})"],"estarget":"es5","returns":["'hello all, I said hi'","'aaabaaccasdeooo'","'aaaaaaaa'","'zyyx'","'http'","'2'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"input by":["uestla","Alan C","Taras Bogach","jpfle"]},"notes":[],"layout":"function","title":"php'sstrtr in JavaScript","function":"strtr","category":"strings","language":"php","alias":["/functions/php/strtr/","/functions/strings/strtr/","/php/strtr/","/functions/strtr/"],"_content":"module.exports = function strtr (str, trFrom, trTo) {\n  //  discuss at: http://locutusjs.io/php/strtr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: uestla\n  //    input by: Alan C\n  //    input by: Taras Bogach\n  //    input by: jpfle\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n  //   example 1: strtr('hi all, I said hello', $trans)\n  //   returns 1: 'hello all, I said hi'\n  //   example 2: strtr('äaabaåccasdeöoo', 'äåö','aao')\n  //   returns 2: 'aaabaaccasdeooo'\n  //   example 3: strtr('ääääääää', 'ä', 'a')\n  //   returns 3: 'aaaaaaaa'\n  //   example 4: strtr('http', 'pthxyz','xyzpth')\n  //   returns 4: 'zyyx'\n  //   example 5: strtr('zyyx', 'pthxyz','xyzpth')\n  //   returns 5: 'http'\n  //   example 6: strtr('aa', {'a':1,'aa':2})\n  //   returns 6: '2'\n\n  var krsort = require('../array/krsort')\n  var iniSet = require('../info/ini_set')\n\n  var fr = ''\n  var i = 0\n  var j = 0\n  var lenStr = 0\n  var lenFrom = 0\n  var sortByReference = false\n  var fromTypeStr = ''\n  var toTypeStr = ''\n  var istr = ''\n  var tmpFrom = []\n  var tmpTo = []\n  var ret = ''\n  var match = false\n\n  // Received replace_pairs?\n  // Convert to normal trFrom->trTo chars\n  if (typeof trFrom === 'object') {\n    // Not thread-safe; temporarily set to true\n    // @todo: Don't rely on ini here, use internal krsort instead\n    sortByReference = iniSet('locutus.sortByReference', false)\n    trFrom = krsort(trFrom)\n    iniSet('locutus.sortByReference', sortByReference)\n\n    for (fr in trFrom) {\n      if (trFrom.hasOwnProperty(fr)) {\n        tmpFrom.push(fr)\n        tmpTo.push(trFrom[fr])\n      }\n    }\n\n    trFrom = tmpFrom\n    trTo = tmpTo\n  }\n\n  // Walk through subject and replace chars when needed\n  lenStr = str.length\n  lenFrom = trFrom.length\n  fromTypeStr = typeof trFrom === 'string'\n  toTypeStr = typeof trTo === 'string'\n\n  for (i = 0; i < lenStr; i++) {\n    match = false\n    if (fromTypeStr) {\n      istr = str.charAt(i)\n      for (j = 0; j < lenFrom; j++) {\n        if (istr === trFrom.charAt(j)) {\n          match = true\n          break\n        }\n      }\n    } else {\n      for (j = 0; j < lenFrom; j++) {\n        if (str.substr(i, trFrom[j].length) === trFrom[j]) {\n          match = true\n          // Fast forward\n          i = (i + trFrom[j].length) - 1\n          break\n        }\n      }\n    }\n    if (match) {\n      ret += toTypeStr ? trTo.charAt(j) : trTo[j]\n    } else {\n      ret += str.charAt(i)\n    }\n  }\n\n  return ret\n}\n","source":"php/strings/strtr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - |-\n    var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n    strtr('hi all, I said hello', $trans)\n  - 'strtr(''äaabaåccasdeöoo'', ''äåö'',''aao'')'\n  - 'strtr(''ääääääää'', ''ä'', ''a'')'\n  - 'strtr(''http'', ''pthxyz'',''xyzpth'')'\n  - 'strtr(''zyyx'', ''pthxyz'',''xyzpth'')'\n  - 'strtr(''aa'', {''a'':1,''aa'':2})'\nestarget: es5\nreturns:\n  - '''hello all, I said hi'''\n  - '''aaabaaccasdeooo'''\n  - '''aaaaaaaa'''\n  - '''zyyx'''\n  - '''http'''\n  - '''2'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - uestla\n    - Alan C\n    - Taras Bogach\n    - jpfle\nnotes: []\nlayout: function\ntitle: php'sstrtr in JavaScript\nfunction: strtr\ncategory: strings\nlanguage: php\npermalink: php/strings/strtr/\nalias:\n  - /functions/php/strtr/\n  - /functions/strings/strtr/\n  - /php/strtr/\n  - /functions/strtr/\n---\nmodule.exports = function strtr (str, trFrom, trTo) {\n  //  discuss at: http://locutusjs.io/php/strtr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: uestla\n  //    input by: Alan C\n  //    input by: Taras Bogach\n  //    input by: jpfle\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n  //   example 1: strtr('hi all, I said hello', $trans)\n  //   returns 1: 'hello all, I said hi'\n  //   example 2: strtr('äaabaåccasdeöoo', 'äåö','aao')\n  //   returns 2: 'aaabaaccasdeooo'\n  //   example 3: strtr('ääääääää', 'ä', 'a')\n  //   returns 3: 'aaaaaaaa'\n  //   example 4: strtr('http', 'pthxyz','xyzpth')\n  //   returns 4: 'zyyx'\n  //   example 5: strtr('zyyx', 'pthxyz','xyzpth')\n  //   returns 5: 'http'\n  //   example 6: strtr('aa', {'a':1,'aa':2})\n  //   returns 6: '2'\n\n  var krsort = require('../array/krsort')\n  var iniSet = require('../info/ini_set')\n\n  var fr = ''\n  var i = 0\n  var j = 0\n  var lenStr = 0\n  var lenFrom = 0\n  var sortByReference = false\n  var fromTypeStr = ''\n  var toTypeStr = ''\n  var istr = ''\n  var tmpFrom = []\n  var tmpTo = []\n  var ret = ''\n  var match = false\n\n  // Received replace_pairs?\n  // Convert to normal trFrom->trTo chars\n  if (typeof trFrom === 'object') {\n    // Not thread-safe; temporarily set to true\n    // @todo: Don't rely on ini here, use internal krsort instead\n    sortByReference = iniSet('locutus.sortByReference', false)\n    trFrom = krsort(trFrom)\n    iniSet('locutus.sortByReference', sortByReference)\n\n    for (fr in trFrom) {\n      if (trFrom.hasOwnProperty(fr)) {\n        tmpFrom.push(fr)\n        tmpTo.push(trFrom[fr])\n      }\n    }\n\n    trFrom = tmpFrom\n    trTo = tmpTo\n  }\n\n  // Walk through subject and replace chars when needed\n  lenStr = str.length\n  lenFrom = trFrom.length\n  fromTypeStr = typeof trFrom === 'string'\n  toTypeStr = typeof trTo === 'string'\n\n  for (i = 0; i < lenStr; i++) {\n    match = false\n    if (fromTypeStr) {\n      istr = str.charAt(i)\n      for (j = 0; j < lenFrom; j++) {\n        if (istr === trFrom.charAt(j)) {\n          match = true\n          break\n        }\n      }\n    } else {\n      for (j = 0; j < lenFrom; j++) {\n        if (str.substr(i, trFrom[j].length) === trFrom[j]) {\n          match = true\n          // Fast forward\n          i = (i + trFrom[j].length) - 1\n          break\n        }\n      }\n    }\n    if (match) {\n      ret += toTypeStr ? trTo.charAt(j) : trTo[j]\n    } else {\n      ret += str.charAt(i)\n    }\n  }\n\n  return ret\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/strtr/index.html","comments":1,"_id":"cinoeja1y007zou9yt5sfr2m6","content":"module.exports = function strtr (str, trFrom, trTo) {\n  //  discuss at: http://locutusjs.io/php/strtr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: uestla\n  //    input by: Alan C\n  //    input by: Taras Bogach\n  //    input by: jpfle\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n  //   example 1: strtr('hi all, I said hello', $trans)\n  //   returns 1: 'hello all, I said hi'\n  //   example 2: strtr('äaabaåccasdeöoo', 'äåö','aao')\n  //   returns 2: 'aaabaaccasdeooo'\n  //   example 3: strtr('ääääääää', 'ä', 'a')\n  //   returns 3: 'aaaaaaaa'\n  //   example 4: strtr('http', 'pthxyz','xyzpth')\n  //   returns 4: 'zyyx'\n  //   example 5: strtr('zyyx', 'pthxyz','xyzpth')\n  //   returns 5: 'http'\n  //   example 6: strtr('aa', {'a':1,'aa':2})\n  //   returns 6: '2'\n\n  var krsort = require('../array/krsort')\n  var iniSet = require('../info/ini_set')\n\n  var fr = ''\n  var i = 0\n  var j = 0\n  var lenStr = 0\n  var lenFrom = 0\n  var sortByReference = false\n  var fromTypeStr = ''\n  var toTypeStr = ''\n  var istr = ''\n  var tmpFrom = []\n  var tmpTo = []\n  var ret = ''\n  var match = false\n\n  // Received replace_pairs?\n  // Convert to normal trFrom->trTo chars\n  if (typeof trFrom === 'object') {\n    // Not thread-safe; temporarily set to true\n    // @todo: Don't rely on ini here, use internal krsort instead\n    sortByReference = iniSet('locutus.sortByReference', false)\n    trFrom = krsort(trFrom)\n    iniSet('locutus.sortByReference', sortByReference)\n\n    for (fr in trFrom) {\n      if (trFrom.hasOwnProperty(fr)) {\n        tmpFrom.push(fr)\n        tmpTo.push(trFrom[fr])\n      }\n    }\n\n    trFrom = tmpFrom\n    trTo = tmpTo\n  }\n\n  // Walk through subject and replace chars when needed\n  lenStr = str.length\n  lenFrom = trFrom.length\n  fromTypeStr = typeof trFrom === 'string'\n  toTypeStr = typeof trTo === 'string'\n\n  for (i = 0; i < lenStr; i++) {\n    match = false\n    if (fromTypeStr) {\n      istr = str.charAt(i)\n      for (j = 0; j < lenFrom; j++) {\n        if (istr === trFrom.charAt(j)) {\n          match = true\n          break\n        }\n      }\n    } else {\n      for (j = 0; j < lenFrom; j++) {\n        if (str.substr(i, trFrom[j].length) === trFrom[j]) {\n          match = true\n          // Fast forward\n          i = (i + trFrom[j].length) - 1\n          break\n        }\n      }\n    }\n    if (match) {\n      ret += toTypeStr ? trTo.charAt(j) : trTo[j]\n    } else {\n      ret += str.charAt(i)\n    }\n  }\n\n  return ret\n}\n","excerpt":"","more":"module.exports = function strtr (str, trFrom, trTo) {\n  //  discuss at: http://locutusjs.io/php/strtr/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: uestla\n  //    input by: Alan C\n  //    input by: Taras Bogach\n  //    input by: jpfle\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var $trans = {'hello' : 'hi', 'hi' : 'hello'}\n  //   example 1: strtr('hi all, I said hello', $trans)\n  //   returns 1: 'hello all, I said hi'\n  //   example 2: strtr('äaabaåccasdeöoo', 'äåö','aao')\n  //   returns 2: 'aaabaaccasdeooo'\n  //   example 3: strtr('ääääääää', 'ä', 'a')\n  //   returns 3: 'aaaaaaaa'\n  //   example 4: strtr('http', 'pthxyz','xyzpth')\n  //   returns 4: 'zyyx'\n  //   example 5: strtr('zyyx', 'pthxyz','xyzpth')\n  //   returns 5: 'http'\n  //   example 6: strtr('aa', {'a':1,'aa':2})\n  //   returns 6: '2'\n\n  var krsort = require('../array/krsort')\n  var iniSet = require('../info/ini_set')\n\n  var fr = ''\n  var i = 0\n  var j = 0\n  var lenStr = 0\n  var lenFrom = 0\n  var sortByReference = false\n  var fromTypeStr = ''\n  var toTypeStr = ''\n  var istr = ''\n  var tmpFrom = []\n  var tmpTo = []\n  var ret = ''\n  var match = false\n\n  // Received replace_pairs?\n  // Convert to normal trFrom->trTo chars\n  if (typeof trFrom === 'object') {\n    // Not thread-safe; temporarily set to true\n    // @todo: Don't rely on ini here, use internal krsort instead\n    sortByReference = iniSet('locutus.sortByReference', false)\n    trFrom = krsort(trFrom)\n    iniSet('locutus.sortByReference', sortByReference)\n\n    for (fr in trFrom) {\n      if (trFrom.hasOwnProperty(fr)) {\n        tmpFrom.push(fr)\n        tmpTo.push(trFrom[fr])\n      }\n    }\n\n    trFrom = tmpFrom\n    trTo = tmpTo\n  }\n\n  // Walk through subject and replace chars when needed\n  lenStr = str.length\n  lenFrom = trFrom.length\n  fromTypeStr = typeof trFrom === 'string'\n  toTypeStr = typeof trTo === 'string'\n\n  for (i = 0; i < lenStr; i++) {\n    match = false\n    if (fromTypeStr) {\n      istr = str.charAt(i)\n      for (j = 0; j < lenFrom; j++) {\n        if (istr === trFrom.charAt(j)) {\n          match = true\n          break\n        }\n      }\n    } else {\n      for (j = 0; j < lenFrom; j++) {\n        if (str.substr(i, trFrom[j].length) === trFrom[j]) {\n          match = true\n          // Fast forward\n          i = (i + trFrom[j].length) - 1\n          break\n        }\n      }\n    }\n    if (match) {\n      ret += toTypeStr ? trTo.charAt(j) : trTo[j]\n    } else {\n      ret += str.charAt(i)\n    }\n  }\n\n  return ret\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["substr('abcdef', 0, -1)","substr(2, 0, -6)","ini_set('unicode.semantics', 'on')\nsubstr('a\\uD801\\uDC00', 0, -1)","ini_set('unicode.semantics', 'on')\nsubstr('a\\uD801\\uDC00', 0, 2)","ini_set('unicode.semantics', 'on')\nsubstr('a\\uD801\\uDC00', -1, 1)","ini_set('unicode.semantics', 'on')\nsubstr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)","ini_set('unicode.semantics', 'on')\nsubstr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)"],"estarget":"es5","returns":["'abcde'","false","'a'","'a\\uD801\\uDC00'","'\\uD801\\uDC00'","'\\uD801\\uDC00z'","'\\uD801\\uDC00z'"],"dependencies":[],"authors":{"original by":["Martijn Wieringa"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["T.Wild"],"revised by":["Theriault (https://github.com/Theriault)"]},"notes":["Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'"],"layout":"function","title":"php'ssubstr in JavaScript","function":"substr","category":"strings","language":"php","alias":["/functions/php/substr/","/functions/strings/substr/","/php/substr/","/functions/substr/"],"_content":"module.exports = function substr (str, start, len) {\n  //  discuss at: http://locutusjs.io/php/substr/\n  // original by: Martijn Wieringa\n  // bugfixed by: T.Wild\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'\n  //   example 1: substr('abcdef', 0, -1)\n  //   returns 1: 'abcde'\n  //   example 2: substr(2, 0, -6)\n  //   returns 2: false\n  //   example 3: ini_set('unicode.semantics', 'on')\n  //   example 3: substr('a\\uD801\\uDC00', 0, -1)\n  //   returns 3: 'a'\n  //   example 4: ini_set('unicode.semantics', 'on')\n  //   example 4: substr('a\\uD801\\uDC00', 0, 2)\n  //   returns 4: 'a\\uD801\\uDC00'\n  //   example 5: ini_set('unicode.semantics', 'on')\n  //   example 5: substr('a\\uD801\\uDC00', -1, 1)\n  //   returns 5: '\\uD801\\uDC00'\n  //   example 6: ini_set('unicode.semantics', 'on')\n  //   example 6: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  //   returns 6: '\\uD801\\uDC00z'\n  //   example 7: ini_set('unicode.semantics', 'on')\n  //   example 7: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\n  //   returns 7: '\\uD801\\uDC00z'\n  //        test: skip-3 skip-4 skip-5 skip-6 skip-7\n\n  str += ''\n  var end = str.length\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.emantics') : undefined) || 'off'\n\n  if (iniVal === 'off') {\n    // assumes there are no non-BMP characters;\n    // if there may be such characters, then it is best to turn it on (critical in true XHTML/XML)\n    if (start < 0) {\n      start += end\n    }\n    if (typeof len !== 'undefined') {\n      if (len < 0) {\n        end = len + end\n      } else {\n        end = len + start\n      }\n    }\n\n    // PHP returns false if start does not fall within the string.\n    // PHP returns false if the calculated end comes before the calculated start.\n    // PHP returns an empty string if start and end are the same.\n    // Otherwise, PHP returns the portion of the string from start to end.\n    if (start >= str.length || start < 0 || start > end) {\n      return false\n    }\n\n    return str.slice(start, end)\n  }\n\n  // Full-blown Unicode including non-Basic-Multilingual-Plane characters\n  var i = 0\n  var allBMP = true\n  var es = 0\n  var el = 0\n  var se = 0\n  var ret = ''\n\n  for (i = 0; i < str.length; i++) {\n    if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n      allBMP = false\n      break\n    }\n  }\n\n  if (!allBMP) {\n    if (start < 0) {\n      for (i = end - 1, es = (start += end); i >= es; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          start--\n          es--\n        }\n      }\n    } else {\n      var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n      while ((surrogatePairs.exec(str)) !== null) {\n        var li = surrogatePairs.lastIndex\n        if (li - 2 < start) {\n          start++\n        } else {\n          break\n        }\n      }\n    }\n\n    if (start >= end || start < 0) {\n      return false\n    }\n    if (len < 0) {\n      for (i = end - 1, el = (end += len); i >= el; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          end--\n          el--\n        }\n      }\n      if (start > end) {\n        return false\n      }\n      return str.slice(start, end)\n    } else {\n      se = start + len\n      for (i = start; i < se; i++) {\n        ret += str.charAt(i)\n        if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n          // Go one further, since one of the \"characters\" is part of a surrogate pair\n          se++\n        }\n      }\n      return ret\n    }\n  }\n}\n","source":"php/strings/substr.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'substr(''abcdef'', 0, -1)'\n  - 'substr(2, 0, -6)'\n  - |-\n    ini_set('unicode.semantics', 'on')\n    substr('a\\uD801\\uDC00', 0, -1)\n  - |-\n    ini_set('unicode.semantics', 'on')\n    substr('a\\uD801\\uDC00', 0, 2)\n  - |-\n    ini_set('unicode.semantics', 'on')\n    substr('a\\uD801\\uDC00', -1, 1)\n  - |-\n    ini_set('unicode.semantics', 'on')\n    substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  - |-\n    ini_set('unicode.semantics', 'on')\n    substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\nestarget: es5\nreturns:\n  - '''abcde'''\n  - 'false'\n  - '''a'''\n  - '''a\\uD801\\uDC00'''\n  - '''\\uD801\\uDC00'''\n  - '''\\uD801\\uDC00z'''\n  - '''\\uD801\\uDC00z'''\ndependencies: []\nauthors:\n  original by:\n    - Martijn Wieringa\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - T.Wild\n  revised by:\n    - 'Theriault (https://github.com/Theriault)'\nnotes:\n  - >-\n    Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to\n    'on'\nlayout: function\ntitle: php'ssubstr in JavaScript\nfunction: substr\ncategory: strings\nlanguage: php\npermalink: php/strings/substr/\nalias:\n  - /functions/php/substr/\n  - /functions/strings/substr/\n  - /php/substr/\n  - /functions/substr/\n---\nmodule.exports = function substr (str, start, len) {\n  //  discuss at: http://locutusjs.io/php/substr/\n  // original by: Martijn Wieringa\n  // bugfixed by: T.Wild\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'\n  //   example 1: substr('abcdef', 0, -1)\n  //   returns 1: 'abcde'\n  //   example 2: substr(2, 0, -6)\n  //   returns 2: false\n  //   example 3: ini_set('unicode.semantics', 'on')\n  //   example 3: substr('a\\uD801\\uDC00', 0, -1)\n  //   returns 3: 'a'\n  //   example 4: ini_set('unicode.semantics', 'on')\n  //   example 4: substr('a\\uD801\\uDC00', 0, 2)\n  //   returns 4: 'a\\uD801\\uDC00'\n  //   example 5: ini_set('unicode.semantics', 'on')\n  //   example 5: substr('a\\uD801\\uDC00', -1, 1)\n  //   returns 5: '\\uD801\\uDC00'\n  //   example 6: ini_set('unicode.semantics', 'on')\n  //   example 6: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  //   returns 6: '\\uD801\\uDC00z'\n  //   example 7: ini_set('unicode.semantics', 'on')\n  //   example 7: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\n  //   returns 7: '\\uD801\\uDC00z'\n  //        test: skip-3 skip-4 skip-5 skip-6 skip-7\n\n  str += ''\n  var end = str.length\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.emantics') : undefined) || 'off'\n\n  if (iniVal === 'off') {\n    // assumes there are no non-BMP characters;\n    // if there may be such characters, then it is best to turn it on (critical in true XHTML/XML)\n    if (start < 0) {\n      start += end\n    }\n    if (typeof len !== 'undefined') {\n      if (len < 0) {\n        end = len + end\n      } else {\n        end = len + start\n      }\n    }\n\n    // PHP returns false if start does not fall within the string.\n    // PHP returns false if the calculated end comes before the calculated start.\n    // PHP returns an empty string if start and end are the same.\n    // Otherwise, PHP returns the portion of the string from start to end.\n    if (start >= str.length || start < 0 || start > end) {\n      return false\n    }\n\n    return str.slice(start, end)\n  }\n\n  // Full-blown Unicode including non-Basic-Multilingual-Plane characters\n  var i = 0\n  var allBMP = true\n  var es = 0\n  var el = 0\n  var se = 0\n  var ret = ''\n\n  for (i = 0; i < str.length; i++) {\n    if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n      allBMP = false\n      break\n    }\n  }\n\n  if (!allBMP) {\n    if (start < 0) {\n      for (i = end - 1, es = (start += end); i >= es; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          start--\n          es--\n        }\n      }\n    } else {\n      var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n      while ((surrogatePairs.exec(str)) !== null) {\n        var li = surrogatePairs.lastIndex\n        if (li - 2 < start) {\n          start++\n        } else {\n          break\n        }\n      }\n    }\n\n    if (start >= end || start < 0) {\n      return false\n    }\n    if (len < 0) {\n      for (i = end - 1, el = (end += len); i >= el; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          end--\n          el--\n        }\n      }\n      if (start > end) {\n        return false\n      }\n      return str.slice(start, end)\n    } else {\n      se = start + len\n      for (i = start; i < se; i++) {\n        ret += str.charAt(i)\n        if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n          // Go one further, since one of the \"characters\" is part of a surrogate pair\n          se++\n        }\n      }\n      return ret\n    }\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/substr/index.html","comments":1,"_id":"cinoeja1z0080ou9y1dg3zvvt","content":"module.exports = function substr (str, start, len) {\n  //  discuss at: http://locutusjs.io/php/substr/\n  // original by: Martijn Wieringa\n  // bugfixed by: T.Wild\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'\n  //   example 1: substr('abcdef', 0, -1)\n  //   returns 1: 'abcde'\n  //   example 2: substr(2, 0, -6)\n  //   returns 2: false\n  //   example 3: ini_set('unicode.semantics', 'on')\n  //   example 3: substr('a\\uD801\\uDC00', 0, -1)\n  //   returns 3: 'a'\n  //   example 4: ini_set('unicode.semantics', 'on')\n  //   example 4: substr('a\\uD801\\uDC00', 0, 2)\n  //   returns 4: 'a\\uD801\\uDC00'\n  //   example 5: ini_set('unicode.semantics', 'on')\n  //   example 5: substr('a\\uD801\\uDC00', -1, 1)\n  //   returns 5: '\\uD801\\uDC00'\n  //   example 6: ini_set('unicode.semantics', 'on')\n  //   example 6: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  //   returns 6: '\\uD801\\uDC00z'\n  //   example 7: ini_set('unicode.semantics', 'on')\n  //   example 7: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\n  //   returns 7: '\\uD801\\uDC00z'\n  //        test: skip-3 skip-4 skip-5 skip-6 skip-7\n\n  str += ''\n  var end = str.length\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.emantics') : undefined) || 'off'\n\n  if (iniVal === 'off') {\n    // assumes there are no non-BMP characters;\n    // if there may be such characters, then it is best to turn it on (critical in true XHTML/XML)\n    if (start < 0) {\n      start += end\n    }\n    if (typeof len !== 'undefined') {\n      if (len < 0) {\n        end = len + end\n      } else {\n        end = len + start\n      }\n    }\n\n    // PHP returns false if start does not fall within the string.\n    // PHP returns false if the calculated end comes before the calculated start.\n    // PHP returns an empty string if start and end are the same.\n    // Otherwise, PHP returns the portion of the string from start to end.\n    if (start >= str.length || start < 0 || start > end) {\n      return false\n    }\n\n    return str.slice(start, end)\n  }\n\n  // Full-blown Unicode including non-Basic-Multilingual-Plane characters\n  var i = 0\n  var allBMP = true\n  var es = 0\n  var el = 0\n  var se = 0\n  var ret = ''\n\n  for (i = 0; i < str.length; i++) {\n    if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n      allBMP = false\n      break\n    }\n  }\n\n  if (!allBMP) {\n    if (start < 0) {\n      for (i = end - 1, es = (start += end); i >= es; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          start--\n          es--\n        }\n      }\n    } else {\n      var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n      while ((surrogatePairs.exec(str)) !== null) {\n        var li = surrogatePairs.lastIndex\n        if (li - 2 < start) {\n          start++\n        } else {\n          break\n        }\n      }\n    }\n\n    if (start >= end || start < 0) {\n      return false\n    }\n    if (len < 0) {\n      for (i = end - 1, el = (end += len); i >= el; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          end--\n          el--\n        }\n      }\n      if (start > end) {\n        return false\n      }\n      return str.slice(start, end)\n    } else {\n      se = start + len\n      for (i = start; i < se; i++) {\n        ret += str.charAt(i)\n        if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n          // Go one further, since one of the \"characters\" is part of a surrogate pair\n          se++\n        }\n      }\n      return ret\n    }\n  }\n}\n","excerpt":"","more":"module.exports = function substr (str, start, len) {\n  //  discuss at: http://locutusjs.io/php/substr/\n  // original by: Martijn Wieringa\n  // bugfixed by: T.Wild\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Theriault (https://github.com/Theriault)\n  //      note 1: Handles rare Unicode characters if 'unicode.semantics' ini (PHP6) is set to 'on'\n  //   example 1: substr('abcdef', 0, -1)\n  //   returns 1: 'abcde'\n  //   example 2: substr(2, 0, -6)\n  //   returns 2: false\n  //   example 3: ini_set('unicode.semantics', 'on')\n  //   example 3: substr('a\\uD801\\uDC00', 0, -1)\n  //   returns 3: 'a'\n  //   example 4: ini_set('unicode.semantics', 'on')\n  //   example 4: substr('a\\uD801\\uDC00', 0, 2)\n  //   returns 4: 'a\\uD801\\uDC00'\n  //   example 5: ini_set('unicode.semantics', 'on')\n  //   example 5: substr('a\\uD801\\uDC00', -1, 1)\n  //   returns 5: '\\uD801\\uDC00'\n  //   example 6: ini_set('unicode.semantics', 'on')\n  //   example 6: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, 2)\n  //   returns 6: '\\uD801\\uDC00z'\n  //   example 7: ini_set('unicode.semantics', 'on')\n  //   example 7: substr('a\\uD801\\uDC00z\\uD801\\uDC00', -3, -1)\n  //   returns 7: '\\uD801\\uDC00z'\n  //        test: skip-3 skip-4 skip-5 skip-6 skip-7\n\n  str += ''\n  var end = str.length\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('unicode.emantics') : undefined) || 'off'\n\n  if (iniVal === 'off') {\n    // assumes there are no non-BMP characters;\n    // if there may be such characters, then it is best to turn it on (critical in true XHTML/XML)\n    if (start < 0) {\n      start += end\n    }\n    if (typeof len !== 'undefined') {\n      if (len < 0) {\n        end = len + end\n      } else {\n        end = len + start\n      }\n    }\n\n    // PHP returns false if start does not fall within the string.\n    // PHP returns false if the calculated end comes before the calculated start.\n    // PHP returns an empty string if start and end are the same.\n    // Otherwise, PHP returns the portion of the string from start to end.\n    if (start >= str.length || start < 0 || start > end) {\n      return false\n    }\n\n    return str.slice(start, end)\n  }\n\n  // Full-blown Unicode including non-Basic-Multilingual-Plane characters\n  var i = 0\n  var allBMP = true\n  var es = 0\n  var el = 0\n  var se = 0\n  var ret = ''\n\n  for (i = 0; i < str.length; i++) {\n    if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n      allBMP = false\n      break\n    }\n  }\n\n  if (!allBMP) {\n    if (start < 0) {\n      for (i = end - 1, es = (start += end); i >= es; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          start--\n          es--\n        }\n      }\n    } else {\n      var surrogatePairs = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n      while ((surrogatePairs.exec(str)) !== null) {\n        var li = surrogatePairs.lastIndex\n        if (li - 2 < start) {\n          start++\n        } else {\n          break\n        }\n      }\n    }\n\n    if (start >= end || start < 0) {\n      return false\n    }\n    if (len < 0) {\n      for (i = end - 1, el = (end += len); i >= el; i--) {\n        if (/[\\uDC00-\\uDFFF]/.test(str.charAt(i)) && /[\\uD800-\\uDBFF]/.test(str.charAt(i - 1))) {\n          end--\n          el--\n        }\n      }\n      if (start > end) {\n        return false\n      }\n      return str.slice(start, end)\n    } else {\n      se = start + len\n      for (i = start; i < se; i++) {\n        ret += str.charAt(i)\n        if (/[\\uD800-\\uDBFF]/.test(str.charAt(i)) && /[\\uDC00-\\uDFFF]/.test(str.charAt(i + 1))) {\n          // Go one further, since one of the \"characters\" is part of a surrogate pair\n          se++\n        }\n      }\n      return ret\n    }\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["substr_compare(\"abcde\", \"bc\", 1, 2)"],"estarget":"es5","returns":["0"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)","strcasecmp, strcmp"]},"notes":[],"layout":"function","title":"php'ssubstr_compare in JavaScript","function":"substr_compare","category":"strings","language":"php","alias":["/functions/php/substr_compare/","/functions/strings/substr_compare/","/php/substr_compare/","/functions/substr_compare/"],"_content":"module.exports = function substr_compare (mainStr, str, offset, length, caseInsensitivity) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_compare/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strcasecmp, strcmp\n  //   example 1: substr_compare(\"abcde\", \"bc\", 1, 2)\n  //   returns 1: 0\n\n  if (!offset && offset !== 0) {\n    throw new Error('Missing offset for substr_compare()')\n  }\n\n  if (offset < 0) {\n    offset = mainStr.length + offset\n  }\n\n  if (length && length > (mainStr.length - offset)) {\n    return false\n  }\n  length = length || mainStr.length - offset\n\n  mainStr = mainStr.substr(offset, length)\n  // Should only compare up to the desired length\n  str = str.substr(0, length)\n  if (caseInsensitivity) {\n    // Works as strcasecmp\n    mainStr = (mainStr + '').toLowerCase()\n    str = (str + '').toLowerCase()\n    if (mainStr === str) {\n      return 0\n    }\n    return (mainStr > str) ? 1 : -1\n  }\n  // Works as strcmp\n  return ((mainStr === str) ? 0 : ((mainStr > str) ? 1 : -1))\n}\n","source":"php/strings/substr_compare.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'substr_compare(\"abcde\", \"bc\", 1, 2)'\nestarget: es5\nreturns:\n  - '0'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'strcasecmp, strcmp'\nnotes: []\nlayout: function\ntitle: php'ssubstr_compare in JavaScript\nfunction: substr_compare\ncategory: strings\nlanguage: php\npermalink: php/strings/substr_compare/\nalias:\n  - /functions/php/substr_compare/\n  - /functions/strings/substr_compare/\n  - /php/substr_compare/\n  - /functions/substr_compare/\n---\nmodule.exports = function substr_compare (mainStr, str, offset, length, caseInsensitivity) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_compare/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strcasecmp, strcmp\n  //   example 1: substr_compare(\"abcde\", \"bc\", 1, 2)\n  //   returns 1: 0\n\n  if (!offset && offset !== 0) {\n    throw new Error('Missing offset for substr_compare()')\n  }\n\n  if (offset < 0) {\n    offset = mainStr.length + offset\n  }\n\n  if (length && length > (mainStr.length - offset)) {\n    return false\n  }\n  length = length || mainStr.length - offset\n\n  mainStr = mainStr.substr(offset, length)\n  // Should only compare up to the desired length\n  str = str.substr(0, length)\n  if (caseInsensitivity) {\n    // Works as strcasecmp\n    mainStr = (mainStr + '').toLowerCase()\n    str = (str + '').toLowerCase()\n    if (mainStr === str) {\n      return 0\n    }\n    return (mainStr > str) ? 1 : -1\n  }\n  // Works as strcmp\n  return ((mainStr === str) ? 0 : ((mainStr > str) ? 1 : -1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/substr_compare/index.html","comments":1,"_id":"cinoeja1z0081ou9yiela18zh","content":"module.exports = function substr_compare (mainStr, str, offset, length, caseInsensitivity) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_compare/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strcasecmp, strcmp\n  //   example 1: substr_compare(\"abcde\", \"bc\", 1, 2)\n  //   returns 1: 0\n\n  if (!offset && offset !== 0) {\n    throw new Error('Missing offset for substr_compare()')\n  }\n\n  if (offset < 0) {\n    offset = mainStr.length + offset\n  }\n\n  if (length && length > (mainStr.length - offset)) {\n    return false\n  }\n  length = length || mainStr.length - offset\n\n  mainStr = mainStr.substr(offset, length)\n  // Should only compare up to the desired length\n  str = str.substr(0, length)\n  if (caseInsensitivity) {\n    // Works as strcasecmp\n    mainStr = (mainStr + '').toLowerCase()\n    str = (str + '').toLowerCase()\n    if (mainStr === str) {\n      return 0\n    }\n    return (mainStr > str) ? 1 : -1\n  }\n  // Works as strcmp\n  return ((mainStr === str) ? 0 : ((mainStr > str) ? 1 : -1))\n}\n","excerpt":"","more":"module.exports = function substr_compare (mainStr, str, offset, length, caseInsensitivity) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_compare/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // original by: strcasecmp, strcmp\n  //   example 1: substr_compare(\"abcde\", \"bc\", 1, 2)\n  //   returns 1: 0\n\n  if (!offset && offset !== 0) {\n    throw new Error('Missing offset for substr_compare()')\n  }\n\n  if (offset < 0) {\n    offset = mainStr.length + offset\n  }\n\n  if (length && length > (mainStr.length - offset)) {\n    return false\n  }\n  length = length || mainStr.length - offset\n\n  mainStr = mainStr.substr(offset, length)\n  // Should only compare up to the desired length\n  str = str.substr(0, length)\n  if (caseInsensitivity) {\n    // Works as strcasecmp\n    mainStr = (mainStr + '').toLowerCase()\n    str = (str + '').toLowerCase()\n    if (mainStr === str) {\n      return 0\n    }\n    return (mainStr > str) ? 1 : -1\n  }\n  // Works as strcmp\n  return ((mainStr === str) ? 0 : ((mainStr > str) ? 1 : -1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["substr_count('Kevin van Zonneveld', 'e')","substr_count('Kevin van Zonneveld', 'K', 1)","substr_count('Kevin van Zonneveld', 'Z', 0, 10)"],"estarget":"es5","returns":["3","0","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)","Thomas"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'ssubstr_count in JavaScript","function":"substr_count","category":"strings","language":"php","alias":["/functions/php/substr_count/","/functions/strings/substr_count/","/php/substr_count/","/functions/substr_count/"],"_content":"module.exports = function substr_count (haystack, needle, offset, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  var cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && (offset + needle.length) > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n","source":"php/strings/substr_count.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'substr_count(''Kevin van Zonneveld'', ''e'')'\n  - 'substr_count(''Kevin van Zonneveld'', ''K'', 1)'\n  - 'substr_count(''Kevin van Zonneveld'', ''Z'', 0, 10)'\nestarget: es5\nreturns:\n  - '3'\n  - '0'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Thomas\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'ssubstr_count in JavaScript\nfunction: substr_count\ncategory: strings\nlanguage: php\npermalink: php/strings/substr_count/\nalias:\n  - /functions/php/substr_count/\n  - /functions/strings/substr_count/\n  - /php/substr_count/\n  - /functions/substr_count/\n---\nmodule.exports = function substr_count (haystack, needle, offset, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  var cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && (offset + needle.length) > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/substr_count/index.html","comments":1,"_id":"cinoeja1z0082ou9yr5nq6xr6","content":"module.exports = function substr_count (haystack, needle, offset, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  var cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && (offset + needle.length) > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n","excerpt":"","more":"module.exports = function substr_count (haystack, needle, offset, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_count/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Thomas\n  //   example 1: substr_count('Kevin van Zonneveld', 'e')\n  //   returns 1: 3\n  //   example 2: substr_count('Kevin van Zonneveld', 'K', 1)\n  //   returns 2: 0\n  //   example 3: substr_count('Kevin van Zonneveld', 'Z', 0, 10)\n  //   returns 3: false\n\n  var cnt = 0\n\n  haystack += ''\n  needle += ''\n  if (isNaN(offset)) {\n    offset = 0\n  }\n  if (isNaN(length)) {\n    length = 0\n  }\n  if (needle.length === 0) {\n    return false\n  }\n  offset--\n\n  while ((offset = haystack.indexOf(needle, offset + 1)) !== -1) {\n    if (length > 0 && (offset + needle.length) > length) {\n      return false\n    }\n    cnt++\n  }\n\n  return cnt\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0)","var $var = 'ABCDEFGH:/MNRPQR/'\nsubstr_replace($var, 'bob', 0, $var.length)","substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0, 0)","substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 10, -1)","substr_replace('ABCDEFGH:/MNRPQR/', 'bob', -7, -1)","substr_replace('ABCDEFGH:/MNRPQR/', '', 10, -1)"],"estarget":"es5","returns":["'bob'","'bob'","'bobABCDEFGH:/MNRPQR/'","'ABCDEFGH:/bob/'","'ABCDEFGH:/bob/'","'ABCDEFGH://'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'ssubstr_replace in JavaScript","function":"substr_replace","category":"strings","language":"php","alias":["/functions/php/substr_replace/","/functions/strings/substr_replace/","/php/substr_replace/","/functions/substr_replace/"],"_content":"module.exports = function substr_replace (str, replace, start, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0)\n  //   returns 1: 'bob'\n  //   example 2: var $var = 'ABCDEFGH:/MNRPQR/'\n  //   example 2: substr_replace($var, 'bob', 0, $var.length)\n  //   returns 2: 'bob'\n  //   example 3: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0, 0)\n  //   returns 3: 'bobABCDEFGH:/MNRPQR/'\n  //   example 4: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 10, -1)\n  //   returns 4: 'ABCDEFGH:/bob/'\n  //   example 5: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', -7, -1)\n  //   returns 5: 'ABCDEFGH:/bob/'\n  //   example 6: substr_replace('ABCDEFGH:/MNRPQR/', '', 10, -1)\n  //   returns 6: 'ABCDEFGH://'\n\n  if (start < 0) {\n    // start position in str\n    start = start + str.length\n  }\n  length = length !== undefined ? length : str.length\n  if (length < 0) {\n    length = length + str.length - start\n  }\n\n  return [\n    str.slice(0, start),\n    replace.substr(0, length),\n    replace.slice(length),\n    str.slice(start + length)\n  ].join('')\n}\n","source":"php/strings/substr_replace.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'substr_replace(''ABCDEFGH:/MNRPQR/'', ''bob'', 0)'\n  - |-\n    var $var = 'ABCDEFGH:/MNRPQR/'\n    substr_replace($var, 'bob', 0, $var.length)\n  - 'substr_replace(''ABCDEFGH:/MNRPQR/'', ''bob'', 0, 0)'\n  - 'substr_replace(''ABCDEFGH:/MNRPQR/'', ''bob'', 10, -1)'\n  - 'substr_replace(''ABCDEFGH:/MNRPQR/'', ''bob'', -7, -1)'\n  - 'substr_replace(''ABCDEFGH:/MNRPQR/'', '''', 10, -1)'\nestarget: es5\nreturns:\n  - '''bob'''\n  - '''bob'''\n  - '''bobABCDEFGH:/MNRPQR/'''\n  - '''ABCDEFGH:/bob/'''\n  - '''ABCDEFGH:/bob/'''\n  - '''ABCDEFGH://'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'ssubstr_replace in JavaScript\nfunction: substr_replace\ncategory: strings\nlanguage: php\npermalink: php/strings/substr_replace/\nalias:\n  - /functions/php/substr_replace/\n  - /functions/strings/substr_replace/\n  - /php/substr_replace/\n  - /functions/substr_replace/\n---\nmodule.exports = function substr_replace (str, replace, start, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0)\n  //   returns 1: 'bob'\n  //   example 2: var $var = 'ABCDEFGH:/MNRPQR/'\n  //   example 2: substr_replace($var, 'bob', 0, $var.length)\n  //   returns 2: 'bob'\n  //   example 3: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0, 0)\n  //   returns 3: 'bobABCDEFGH:/MNRPQR/'\n  //   example 4: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 10, -1)\n  //   returns 4: 'ABCDEFGH:/bob/'\n  //   example 5: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', -7, -1)\n  //   returns 5: 'ABCDEFGH:/bob/'\n  //   example 6: substr_replace('ABCDEFGH:/MNRPQR/', '', 10, -1)\n  //   returns 6: 'ABCDEFGH://'\n\n  if (start < 0) {\n    // start position in str\n    start = start + str.length\n  }\n  length = length !== undefined ? length : str.length\n  if (length < 0) {\n    length = length + str.length - start\n  }\n\n  return [\n    str.slice(0, start),\n    replace.substr(0, length),\n    replace.slice(length),\n    str.slice(start + length)\n  ].join('')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/substr_replace/index.html","comments":1,"_id":"cinoeja200083ou9ynamuw8za","content":"module.exports = function substr_replace (str, replace, start, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0)\n  //   returns 1: 'bob'\n  //   example 2: var $var = 'ABCDEFGH:/MNRPQR/'\n  //   example 2: substr_replace($var, 'bob', 0, $var.length)\n  //   returns 2: 'bob'\n  //   example 3: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0, 0)\n  //   returns 3: 'bobABCDEFGH:/MNRPQR/'\n  //   example 4: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 10, -1)\n  //   returns 4: 'ABCDEFGH:/bob/'\n  //   example 5: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', -7, -1)\n  //   returns 5: 'ABCDEFGH:/bob/'\n  //   example 6: substr_replace('ABCDEFGH:/MNRPQR/', '', 10, -1)\n  //   returns 6: 'ABCDEFGH://'\n\n  if (start < 0) {\n    // start position in str\n    start = start + str.length\n  }\n  length = length !== undefined ? length : str.length\n  if (length < 0) {\n    length = length + str.length - start\n  }\n\n  return [\n    str.slice(0, start),\n    replace.substr(0, length),\n    replace.slice(length),\n    str.slice(start + length)\n  ].join('')\n}\n","excerpt":"","more":"module.exports = function substr_replace (str, replace, start, length) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/substr_replace/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0)\n  //   returns 1: 'bob'\n  //   example 2: var $var = 'ABCDEFGH:/MNRPQR/'\n  //   example 2: substr_replace($var, 'bob', 0, $var.length)\n  //   returns 2: 'bob'\n  //   example 3: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 0, 0)\n  //   returns 3: 'bobABCDEFGH:/MNRPQR/'\n  //   example 4: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', 10, -1)\n  //   returns 4: 'ABCDEFGH:/bob/'\n  //   example 5: substr_replace('ABCDEFGH:/MNRPQR/', 'bob', -7, -1)\n  //   returns 5: 'ABCDEFGH:/bob/'\n  //   example 6: substr_replace('ABCDEFGH:/MNRPQR/', '', 10, -1)\n  //   returns 6: 'ABCDEFGH://'\n\n  if (start < 0) {\n    // start position in str\n    start = start + str.length\n  }\n  length = length !== undefined ? length : str.length\n  if (length < 0) {\n    length = length + str.length - start\n  }\n\n  return [\n    str.slice(0, start),\n    replace.substr(0, length),\n    replace.slice(length),\n    str.slice(start + length)\n  ].join('')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["trim('    Kevin van Zonneveld    ')","trim('Hello World', 'Hdle')","trim(16, 1)"],"estarget":"es5","returns":["'Kevin van Zonneveld'","'o Wor'","'6'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["mdsjack (http://www.mdsjack.bo.it)","Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)","Kevin van Zonneveld (http://kvz.io)","Steven Levithan (http://blog.stevenlevithan.com)","Jack"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["Erkekjetter","DxGx"]},"notes":[],"layout":"function","title":"php'strim in JavaScript","function":"trim","category":"strings","language":"php","alias":["/functions/php/trim/","/functions/strings/trim/","/php/trim/","/functions/trim/"],"_content":"module.exports = function trim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/trim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: mdsjack (http://www.mdsjack.bo.it)\n  // improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steven Levithan (http://blog.stevenlevithan.com)\n  // improved by: Jack\n  //    input by: Erkekjetter\n  //    input by: DxGx\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: trim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: trim('Hello World', 'Hdle')\n  //   returns 2: 'o Wor'\n  //   example 3: trim(16, 1)\n  //   returns 3: '6'\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n  var l = 0\n  var i = 0\n  str += ''\n\n  if (charlist) {\n    whitespace = (charlist + '').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n  }\n\n  l = str.length\n  for (i = 0; i < l; i++) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(i)\n      break\n    }\n  }\n\n  l = str.length\n  for (i = l - 1; i >= 0; i--) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(0, i + 1)\n      break\n    }\n  }\n\n  return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n}\n","source":"php/strings/trim.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - trim('    Kevin van Zonneveld    ')\n  - 'trim(''Hello World'', ''Hdle'')'\n  - 'trim(16, 1)'\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\n  - '''o Wor'''\n  - '''6'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'mdsjack (http://www.mdsjack.bo.it)'\n    - 'Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Steven Levithan (http://blog.stevenlevithan.com)'\n    - Jack\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - Erkekjetter\n    - DxGx\nnotes: []\nlayout: function\ntitle: php'strim in JavaScript\nfunction: trim\ncategory: strings\nlanguage: php\npermalink: php/strings/trim/\nalias:\n  - /functions/php/trim/\n  - /functions/strings/trim/\n  - /php/trim/\n  - /functions/trim/\n---\nmodule.exports = function trim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/trim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: mdsjack (http://www.mdsjack.bo.it)\n  // improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steven Levithan (http://blog.stevenlevithan.com)\n  // improved by: Jack\n  //    input by: Erkekjetter\n  //    input by: DxGx\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: trim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: trim('Hello World', 'Hdle')\n  //   returns 2: 'o Wor'\n  //   example 3: trim(16, 1)\n  //   returns 3: '6'\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n  var l = 0\n  var i = 0\n  str += ''\n\n  if (charlist) {\n    whitespace = (charlist + '').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n  }\n\n  l = str.length\n  for (i = 0; i < l; i++) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(i)\n      break\n    }\n  }\n\n  l = str.length\n  for (i = l - 1; i >= 0; i--) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(0, i + 1)\n      break\n    }\n  }\n\n  return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/trim/index.html","comments":1,"_id":"cinoeja200084ou9yopb57m2r","content":"module.exports = function trim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/trim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: mdsjack (http://www.mdsjack.bo.it)\n  // improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steven Levithan (http://blog.stevenlevithan.com)\n  // improved by: Jack\n  //    input by: Erkekjetter\n  //    input by: DxGx\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: trim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: trim('Hello World', 'Hdle')\n  //   returns 2: 'o Wor'\n  //   example 3: trim(16, 1)\n  //   returns 3: '6'\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n  var l = 0\n  var i = 0\n  str += ''\n\n  if (charlist) {\n    whitespace = (charlist + '').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n  }\n\n  l = str.length\n  for (i = 0; i < l; i++) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(i)\n      break\n    }\n  }\n\n  l = str.length\n  for (i = l - 1; i >= 0; i--) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(0, i + 1)\n      break\n    }\n  }\n\n  return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n}\n","excerpt":"","more":"module.exports = function trim (str, charlist) {\n  //  discuss at: http://locutusjs.io/php/trim/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: mdsjack (http://www.mdsjack.bo.it)\n  // improved by: Alexander Ermolaev (http://snippets.dzone.com/user/AlexanderErmolaev)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Steven Levithan (http://blog.stevenlevithan.com)\n  // improved by: Jack\n  //    input by: Erkekjetter\n  //    input by: DxGx\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //   example 1: trim('    Kevin van Zonneveld    ')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: trim('Hello World', 'Hdle')\n  //   returns 2: 'o Wor'\n  //   example 3: trim(16, 1)\n  //   returns 3: '6'\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n  var l = 0\n  var i = 0\n  str += ''\n\n  if (charlist) {\n    whitespace = (charlist + '').replace(/([\\[\\]\\(\\)\\.\\?\\/\\*\\{\\}\\+\\$\\^:])/g, '$1')\n  }\n\n  l = str.length\n  for (i = 0; i < l; i++) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(i)\n      break\n    }\n  }\n\n  l = str.length\n  for (i = l - 1; i >= 0; i--) {\n    if (whitespace.indexOf(str.charAt(i)) === -1) {\n      str = str.substring(0, i + 1)\n      break\n    }\n  }\n\n  return whitespace.indexOf(str.charAt(0)) === -1 ? str : ''\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ucfirst('kevin van zonneveld')"],"estarget":"es5","returns":["'Kevin van zonneveld'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":[],"layout":"function","title":"php'sucfirst in JavaScript","function":"ucfirst","category":"strings","language":"php","alias":["/functions/php/ucfirst/","/functions/strings/ucfirst/","/php/ucfirst/","/functions/ucfirst/"],"_content":"module.exports = function ucfirst (str) {\n  //  discuss at: http://locutusjs.io/php/ucfirst/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ucfirst('kevin van zonneveld')\n  //   returns 1: 'Kevin van zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toUpperCase()\n  return f + str.substr(1)\n}\n","source":"php/strings/ucfirst.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ucfirst('kevin van zonneveld')\nestarget: es5\nreturns:\n  - '''Kevin van zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes: []\nlayout: function\ntitle: php'sucfirst in JavaScript\nfunction: ucfirst\ncategory: strings\nlanguage: php\npermalink: php/strings/ucfirst/\nalias:\n  - /functions/php/ucfirst/\n  - /functions/strings/ucfirst/\n  - /php/ucfirst/\n  - /functions/ucfirst/\n---\nmodule.exports = function ucfirst (str) {\n  //  discuss at: http://locutusjs.io/php/ucfirst/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ucfirst('kevin van zonneveld')\n  //   returns 1: 'Kevin van zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toUpperCase()\n  return f + str.substr(1)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/ucfirst/index.html","comments":1,"_id":"cinoeja200085ou9y0r6i2fia","content":"module.exports = function ucfirst (str) {\n  //  discuss at: http://locutusjs.io/php/ucfirst/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ucfirst('kevin van zonneveld')\n  //   returns 1: 'Kevin van zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toUpperCase()\n  return f + str.substr(1)\n}\n","excerpt":"","more":"module.exports = function ucfirst (str) {\n  //  discuss at: http://locutusjs.io/php/ucfirst/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: ucfirst('kevin van zonneveld')\n  //   returns 1: 'Kevin van zonneveld'\n\n  str += ''\n  var f = str.charAt(0)\n    .toUpperCase()\n  return f + str.substr(1)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["ucwords('kevin van  zonneveld')","ucwords('HELLO WORLD')"],"estarget":"es5","returns":["'Kevin Van  Zonneveld'","'HELLO WORLD'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Waldo Malqui Silva (http://waldo.malqui.info)","Robin","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["James (http://www.james-bell.co.uk/)"]},"notes":[],"layout":"function","title":"php'sucwords in JavaScript","function":"ucwords","category":"strings","language":"php","alias":["/functions/php/ucwords/","/functions/strings/ucwords/","/php/ucwords/","/functions/ucwords/"],"_content":"module.exports = function ucwords (str) {\n  //  discuss at: http://locutusjs.io/php/ucwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: ucwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: ucwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  return (str + '')\n    .replace(/^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g, function ($1) {\n      return $1.toUpperCase()\n    })\n}\n","source":"php/strings/ucwords.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - ucwords('kevin van  zonneveld')\n  - ucwords('HELLO WORLD')\nestarget: es5\nreturns:\n  - '''Kevin Van  Zonneveld'''\n  - '''HELLO WORLD'''\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n    - Robin\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - 'James (http://www.james-bell.co.uk/)'\nnotes: []\nlayout: function\ntitle: php'sucwords in JavaScript\nfunction: ucwords\ncategory: strings\nlanguage: php\npermalink: php/strings/ucwords/\nalias:\n  - /functions/php/ucwords/\n  - /functions/strings/ucwords/\n  - /php/ucwords/\n  - /functions/ucwords/\n---\nmodule.exports = function ucwords (str) {\n  //  discuss at: http://locutusjs.io/php/ucwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: ucwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: ucwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  return (str + '')\n    .replace(/^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g, function ($1) {\n      return $1.toUpperCase()\n    })\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/ucwords/index.html","comments":1,"_id":"cinoeja210086ou9ye6j1eufs","content":"module.exports = function ucwords (str) {\n  //  discuss at: http://locutusjs.io/php/ucwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: ucwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: ucwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  return (str + '')\n    .replace(/^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g, function ($1) {\n      return $1.toUpperCase()\n    })\n}\n","excerpt":"","more":"module.exports = function ucwords (str) {\n  //  discuss at: http://locutusjs.io/php/ucwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: ucwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: ucwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  return (str + '')\n    .replace(/^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g, function ($1) {\n      return $1.toUpperCase()\n    })\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["vprintf(\"%01.2f\", 123.1)"],"estarget":"es5","returns":["6"],"dependencies":[],"authors":{"original by":["Ash Searle (http://hexmen.com/blog/)"],"improved by":["Michael White (http://getsprink.com)"]},"notes":[],"layout":"function","title":"php'svprintf in JavaScript","function":"vprintf","category":"strings","language":"php","alias":["/functions/php/vprintf/","/functions/strings/vprintf/","/php/vprintf/","/functions/vprintf/"],"_content":"module.exports = function vprintf (format, args) {\n  //       discuss at: http://locutusjs.io/php/vprintf/\n  //      original by: Ash Searle (http://hexmen.com/blog/)\n  //      improved by: Michael White (http://getsprink.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: vprintf(\"%01.2f\", 123.1)\n  //        returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, [format].concat(args))\n  echo(ret)\n\n  return ret.length\n}\n","source":"php/strings/vprintf.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'vprintf(\"%01.2f\", 123.1)'\nestarget: es5\nreturns:\n  - '6'\ndependencies: []\nauthors:\n  original by:\n    - 'Ash Searle (http://hexmen.com/blog/)'\n  improved by:\n    - 'Michael White (http://getsprink.com)'\nnotes: []\nlayout: function\ntitle: php'svprintf in JavaScript\nfunction: vprintf\ncategory: strings\nlanguage: php\npermalink: php/strings/vprintf/\nalias:\n  - /functions/php/vprintf/\n  - /functions/strings/vprintf/\n  - /php/vprintf/\n  - /functions/vprintf/\n---\nmodule.exports = function vprintf (format, args) {\n  //       discuss at: http://locutusjs.io/php/vprintf/\n  //      original by: Ash Searle (http://hexmen.com/blog/)\n  //      improved by: Michael White (http://getsprink.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: vprintf(\"%01.2f\", 123.1)\n  //        returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, [format].concat(args))\n  echo(ret)\n\n  return ret.length\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/vprintf/index.html","comments":1,"_id":"cinoeja210087ou9y484fazwd","content":"module.exports = function vprintf (format, args) {\n  //       discuss at: http://locutusjs.io/php/vprintf/\n  //      original by: Ash Searle (http://hexmen.com/blog/)\n  //      improved by: Michael White (http://getsprink.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: vprintf(\"%01.2f\", 123.1)\n  //        returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, [format].concat(args))\n  echo(ret)\n\n  return ret.length\n}\n","excerpt":"","more":"module.exports = function vprintf (format, args) {\n  //       discuss at: http://locutusjs.io/php/vprintf/\n  //      original by: Ash Searle (http://hexmen.com/blog/)\n  //      improved by: Michael White (http://getsprink.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //        example 1: vprintf(\"%01.2f\", 123.1)\n  //        returns 1: 6\n\n  var sprintf = require('../strings/sprintf')\n  var echo = require('../strings/echo')\n  var ret = sprintf.apply(this, [format].concat(args))\n  echo(ret)\n\n  return ret.length\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["vsprintf('%04d-%02d-%02d', [1988, 8, 1])"],"estarget":"es5","returns":["'1988-08-01'"],"dependencies":[],"authors":{"original by":["ejsanders"]},"notes":[],"layout":"function","title":"php'svsprintf in JavaScript","function":"vsprintf","category":"strings","language":"php","alias":["/functions/php/vsprintf/","/functions/strings/vsprintf/","/php/vsprintf/","/functions/vsprintf/"],"_content":"module.exports = function vsprintf (format, args) {\n  //  discuss at: http://locutusjs.io/php/vsprintf/\n  // original by: ejsanders\n  //   example 1: vsprintf('%04d-%02d-%02d', [1988, 8, 1])\n  //   returns 1: '1988-08-01'\n\n  var sprintf = require('../strings/sprintf')\n\n  return sprintf.apply(this, [format].concat(args))\n}\n","source":"php/strings/vsprintf.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'vsprintf(''%04d-%02d-%02d'', [1988, 8, 1])'\nestarget: es5\nreturns:\n  - '''1988-08-01'''\ndependencies: []\nauthors:\n  original by:\n    - ejsanders\nnotes: []\nlayout: function\ntitle: php'svsprintf in JavaScript\nfunction: vsprintf\ncategory: strings\nlanguage: php\npermalink: php/strings/vsprintf/\nalias:\n  - /functions/php/vsprintf/\n  - /functions/strings/vsprintf/\n  - /php/vsprintf/\n  - /functions/vsprintf/\n---\nmodule.exports = function vsprintf (format, args) {\n  //  discuss at: http://locutusjs.io/php/vsprintf/\n  // original by: ejsanders\n  //   example 1: vsprintf('%04d-%02d-%02d', [1988, 8, 1])\n  //   returns 1: '1988-08-01'\n\n  var sprintf = require('../strings/sprintf')\n\n  return sprintf.apply(this, [format].concat(args))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/vsprintf/index.html","comments":1,"_id":"cinoeja210088ou9yku6abzqf","content":"module.exports = function vsprintf (format, args) {\n  //  discuss at: http://locutusjs.io/php/vsprintf/\n  // original by: ejsanders\n  //   example 1: vsprintf('%04d-%02d-%02d', [1988, 8, 1])\n  //   returns 1: '1988-08-01'\n\n  var sprintf = require('../strings/sprintf')\n\n  return sprintf.apply(this, [format].concat(args))\n}\n","excerpt":"","more":"module.exports = function vsprintf (format, args) {\n  //  discuss at: http://locutusjs.io/php/vsprintf/\n  // original by: ejsanders\n  //   example 1: vsprintf('%04d-%02d-%02d', [1988, 8, 1])\n  //   returns 1: '1988-08-01'\n\n  var sprintf = require('../strings/sprintf')\n\n  return sprintf.apply(this, [format].concat(args))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["wordwrap('Kevin van Zonneveld', 6, '|', true)","wordwrap('The quick brown fox jumped over the lazy dog.', 20, '<br />\\n')","wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')"],"estarget":"es5","returns":["'Kevin |van |Zonnev|eld'","'The quick brown fox <br />\\njumped over the lazy<br />\\n dog.'","'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea \\ncommodo consequat.'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Nick Callen","Kevin van Zonneveld (http://kvz.io)","Sakimori"],"bugfixed by":["Michael Grier","Feras ALHAEK"],"revised by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"]},"notes":["It would be great if this function could be split up to have\nsmaller line lengths, less ternary operators, and more readable variable names"],"layout":"function","title":"php'swordwrap in JavaScript","function":"wordwrap","category":"strings","language":"php","alias":["/functions/php/wordwrap/","/functions/strings/wordwrap/","/php/wordwrap/","/functions/wordwrap/"],"_content":"module.exports = function wordwrap (str, intWidth, strBreak, cut) {\n  //  discuss at: http://locutusjs.io/php/wordwrap/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Nick Callen\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Michael Grier\n  // bugfixed by: Feras ALHAEK\n  //      note 1: It would be great if this function could be split up to have\n  //      note 1: smaller line lengths, less ternary operators, and more readable variable names\n  //   example 1: wordwrap('Kevin van Zonneveld', 6, '|', true)\n  //   returns 1: 'Kevin |van |Zonnev|eld'\n  //   example 2: wordwrap('The quick brown fox jumped over the lazy dog.', 20, '<br />\\n')\n  //   returns 2: 'The quick brown fox <br />\\njumped over the lazy<br />\\n dog.'\n  //   example 3: wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n  //   returns 3: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea \\ncommodo consequat.'\n\n  var m = ((arguments.length >= 2) ? arguments[1] : 75)\n  var b = ((arguments.length >= 3) ? arguments[2] : '\\n')\n  var c = ((arguments.length >= 4) ? arguments[3] : false)\n\n  var i, j, l, s, r\n\n  str += ''\n\n  if (m < 1) {\n    return str\n  }\n\n  for (i = -1, l = (r = str.split(/\\r\\n|\\n|\\r/)).length; ++i < l; r[i] += s) {\n    // @todo: Split this up over many more lines and more semantic variable names\n    // so it becomes readable\n    for (s = r[i], r[i] = '';\n      s.length > m;\n      r[i] += s.slice(0, j) + ((s = s.slice(j)).length ? b : '')) {\n      j = c === 2 || (j = s.slice(0, m + 1).match(/\\S*(\\s)?$/))[1]\n        ? m\n        : j.input.length - j[0].length || c === true && m ||\n          j.input.length + (j = s.slice(m).match(/^\\S*/))[0].length\n    }\n  }\n\n  return r.join('\\n')\n}\n","source":"php/strings/wordwrap.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'wordwrap(''Kevin van Zonneveld'', 6, ''|'', true)'\n  - 'wordwrap(''The quick brown fox jumped over the lazy dog.'', 20, ''<br />\\n'')'\n  - >-\n    wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n    veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n    commodo consequat.')\nestarget: es5\nreturns:\n  - '''Kevin |van |Zonnev|eld'''\n  - '''The quick brown fox <br />\\njumped over the lazy<br />\\n dog.'''\n  - >-\n    'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n    \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n    \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n    \\ncommodo consequat.'\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - Nick Callen\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Sakimori\n  bugfixed by:\n    - Michael Grier\n    - Feras ALHAEK\n  revised by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\nnotes:\n  - >-\n    It would be great if this function could be split up to have\n\n    smaller line lengths, less ternary operators, and more readable variable\n    names\nlayout: function\ntitle: php'swordwrap in JavaScript\nfunction: wordwrap\ncategory: strings\nlanguage: php\npermalink: php/strings/wordwrap/\nalias:\n  - /functions/php/wordwrap/\n  - /functions/strings/wordwrap/\n  - /php/wordwrap/\n  - /functions/wordwrap/\n---\nmodule.exports = function wordwrap (str, intWidth, strBreak, cut) {\n  //  discuss at: http://locutusjs.io/php/wordwrap/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Nick Callen\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Michael Grier\n  // bugfixed by: Feras ALHAEK\n  //      note 1: It would be great if this function could be split up to have\n  //      note 1: smaller line lengths, less ternary operators, and more readable variable names\n  //   example 1: wordwrap('Kevin van Zonneveld', 6, '|', true)\n  //   returns 1: 'Kevin |van |Zonnev|eld'\n  //   example 2: wordwrap('The quick brown fox jumped over the lazy dog.', 20, '<br />\\n')\n  //   returns 2: 'The quick brown fox <br />\\njumped over the lazy<br />\\n dog.'\n  //   example 3: wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n  //   returns 3: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea \\ncommodo consequat.'\n\n  var m = ((arguments.length >= 2) ? arguments[1] : 75)\n  var b = ((arguments.length >= 3) ? arguments[2] : '\\n')\n  var c = ((arguments.length >= 4) ? arguments[3] : false)\n\n  var i, j, l, s, r\n\n  str += ''\n\n  if (m < 1) {\n    return str\n  }\n\n  for (i = -1, l = (r = str.split(/\\r\\n|\\n|\\r/)).length; ++i < l; r[i] += s) {\n    // @todo: Split this up over many more lines and more semantic variable names\n    // so it becomes readable\n    for (s = r[i], r[i] = '';\n      s.length > m;\n      r[i] += s.slice(0, j) + ((s = s.slice(j)).length ? b : '')) {\n      j = c === 2 || (j = s.slice(0, m + 1).match(/\\S*(\\s)?$/))[1]\n        ? m\n        : j.input.length - j[0].length || c === true && m ||\n          j.input.length + (j = s.slice(m).match(/^\\S*/))[0].length\n    }\n  }\n\n  return r.join('\\n')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/strings/wordwrap/index.html","comments":1,"_id":"cinoeja220089ou9y7ru7zdfg","content":"module.exports = function wordwrap (str, intWidth, strBreak, cut) {\n  //  discuss at: http://locutusjs.io/php/wordwrap/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Nick Callen\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Michael Grier\n  // bugfixed by: Feras ALHAEK\n  //      note 1: It would be great if this function could be split up to have\n  //      note 1: smaller line lengths, less ternary operators, and more readable variable names\n  //   example 1: wordwrap('Kevin van Zonneveld', 6, '|', true)\n  //   returns 1: 'Kevin |van |Zonnev|eld'\n  //   example 2: wordwrap('The quick brown fox jumped over the lazy dog.', 20, '<br>\\n')\n  //   returns 2: 'The quick brown fox <br>\\njumped over the lazy<br>\\n dog.'\n  //   example 3: wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n  //   returns 3: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea \\ncommodo consequat.'\n\n  var m = ((arguments.length >= 2) ? arguments[1] : 75)\n  var b = ((arguments.length >= 3) ? arguments[2] : '\\n')\n  var c = ((arguments.length >= 4) ? arguments[3] : false)\n\n  var i, j, l, s, r\n\n  str += ''\n\n  if (m < 1) {\n    return str\n  }\n\n  for (i = -1, l = (r = str.split(/\\r\\n|\\n|\\r/)).length; ++i < l; r[i] += s) {\n    // @todo: Split this up over many more lines and more semantic variable names\n    // so it becomes readable\n    for (s = r[i], r[i] = '';\n      s.length > m;\n      r[i] += s.slice(0, j) + ((s = s.slice(j)).length ? b : '')) {\n      j = c === 2 || (j = s.slice(0, m + 1).match(/\\S*(\\s)?$/))[1]\n        ? m\n        : j.input.length - j[0].length || c === true && m ||\n          j.input.length + (j = s.slice(m).match(/^\\S*/))[0].length\n    }\n  }\n\n  return r.join('\\n')\n}\n","excerpt":"","more":"module.exports = function wordwrap (str, intWidth, strBreak, cut) {\n  //  discuss at: http://locutusjs.io/php/wordwrap/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Nick Callen\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Sakimori\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // bugfixed by: Michael Grier\n  // bugfixed by: Feras ALHAEK\n  //      note 1: It would be great if this function could be split up to have\n  //      note 1: smaller line lengths, less ternary operators, and more readable variable names\n  //   example 1: wordwrap('Kevin van Zonneveld', 6, '|', true)\n  //   returns 1: 'Kevin |van |Zonnev|eld'\n  //   example 2: wordwrap('The quick brown fox jumped over the lazy dog.', 20, '<br />\\n')\n  //   returns 2: 'The quick brown fox <br />\\njumped over the lazy<br />\\n dog.'\n  //   example 3: wordwrap('Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.')\n  //   returns 3: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod \\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim \\nveniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea \\ncommodo consequat.'\n\n  var m = ((arguments.length >= 2) ? arguments[1] : 75)\n  var b = ((arguments.length >= 3) ? arguments[2] : '\\n')\n  var c = ((arguments.length >= 4) ? arguments[3] : false)\n\n  var i, j, l, s, r\n\n  str += ''\n\n  if (m < 1) {\n    return str\n  }\n\n  for (i = -1, l = (r = str.split(/\\r\\n|\\n|\\r/)).length; ++i < l; r[i] += s) {\n    // @todo: Split this up over many more lines and more semantic variable names\n    // so it becomes readable\n    for (s = r[i], r[i] = '';\n      s.length > m;\n      r[i] += s.slice(0, j) + ((s = s.slice(j)).length ? b : '')) {\n      j = c === 2 || (j = s.slice(0, m + 1).match(/\\S*(\\s)?$/))[1]\n        ? m\n        : j.input.length - j[0].length || c === true && m ||\n          j.input.length + (j = s.slice(m).match(/^\\S*/))[0].length\n    }\n  }\n\n  return r.join('\\n')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["base64_encode('Kevin van Zonneveld')","base64_encode('a')","base64_encode('✓ à la mode')"],"estarget":"es5","returns":["'S2V2aW4gdmFuIFpvbm5ldmVsZA=='","'YQ=='","'4pyTIMOgIGxhIG1vZGU='"],"dependencies":[],"authors":{"original by":["Tyler Akins (http://rumkin.com)"],"improved by":["Bayron Guevara","Thunder.m","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Rafał Kukawski (http://blog.kukawski.pl)"],"bugfixed by":["Pellentesque Malesuada"]},"notes":[],"layout":"function","title":"php'sbase64_encode in JavaScript","function":"base64_encode","category":"url","language":"php","alias":["/functions/php/base64_encode/","/functions/url/base64_encode/","/php/base64_encode/","/functions/base64_encode/"],"_content":"module.exports = function base64_encode (stringToEncode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  //   example 1: base64_encode('Kevin van Zonneveld')\n  //   returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  //   example 2: base64_encode('a')\n  //   returns 2: 'YQ=='\n  //   example 3: base64_encode('✓ à la mode')\n  //   returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.btoa !== 'undefined') {\n      return window.btoa(escape(encodeURIComponent(stringToEncode)))\n    }\n  } else {\n    return new Buffer(stringToEncode).toString('base64')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var enc = ''\n  var tmpArr = []\n\n  if (!stringToEncode) {\n    return stringToEncode\n  }\n\n  stringToEncode = unescape(encodeURIComponent(stringToEncode))\n\n  do {\n    // pack three octets into four hexets\n    o1 = stringToEncode.charCodeAt(i++)\n    o2 = stringToEncode.charCodeAt(i++)\n    o3 = stringToEncode.charCodeAt(i++)\n\n    bits = o1 << 16 | o2 << 8 | o3\n\n    h1 = bits >> 18 & 0x3f\n    h2 = bits >> 12 & 0x3f\n    h3 = bits >> 6 & 0x3f\n    h4 = bits & 0x3f\n\n    // use hexets to index into b64, and append result to encoded string\n    tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4)\n  } while (i < stringToEncode.length)\n\n  enc = tmpArr.join('')\n\n  var r = stringToEncode.length % 3\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3)\n}\n","source":"php/url/base64_encode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - base64_encode('Kevin van Zonneveld')\n  - base64_encode('a')\n  - base64_encode('✓ à la mode')\nestarget: es5\nreturns:\n  - '''S2V2aW4gdmFuIFpvbm5ldmVsZA=='''\n  - '''YQ=='''\n  - '''4pyTIMOgIGxhIG1vZGU='''\ndependencies: []\nauthors:\n  original by:\n    - 'Tyler Akins (http://rumkin.com)'\n  improved by:\n    - Bayron Guevara\n    - Thunder.m\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  bugfixed by:\n    - Pellentesque Malesuada\nnotes: []\nlayout: function\ntitle: php'sbase64_encode in JavaScript\nfunction: base64_encode\ncategory: url\nlanguage: php\npermalink: php/url/base64_encode/\nalias:\n  - /functions/php/base64_encode/\n  - /functions/url/base64_encode/\n  - /php/base64_encode/\n  - /functions/base64_encode/\n---\nmodule.exports = function base64_encode (stringToEncode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  //   example 1: base64_encode('Kevin van Zonneveld')\n  //   returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  //   example 2: base64_encode('a')\n  //   returns 2: 'YQ=='\n  //   example 3: base64_encode('✓ à la mode')\n  //   returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.btoa !== 'undefined') {\n      return window.btoa(escape(encodeURIComponent(stringToEncode)))\n    }\n  } else {\n    return new Buffer(stringToEncode).toString('base64')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var enc = ''\n  var tmpArr = []\n\n  if (!stringToEncode) {\n    return stringToEncode\n  }\n\n  stringToEncode = unescape(encodeURIComponent(stringToEncode))\n\n  do {\n    // pack three octets into four hexets\n    o1 = stringToEncode.charCodeAt(i++)\n    o2 = stringToEncode.charCodeAt(i++)\n    o3 = stringToEncode.charCodeAt(i++)\n\n    bits = o1 << 16 | o2 << 8 | o3\n\n    h1 = bits >> 18 & 0x3f\n    h2 = bits >> 12 & 0x3f\n    h3 = bits >> 6 & 0x3f\n    h4 = bits & 0x3f\n\n    // use hexets to index into b64, and append result to encoded string\n    tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4)\n  } while (i < stringToEncode.length)\n\n  enc = tmpArr.join('')\n\n  var r = stringToEncode.length % 3\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/base64_encode/index.html","comments":1,"_id":"cinoeja22008aou9yvkj6qgrr","content":"module.exports = function base64_encode (stringToEncode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  //   example 1: base64_encode('Kevin van Zonneveld')\n  //   returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  //   example 2: base64_encode('a')\n  //   returns 2: 'YQ=='\n  //   example 3: base64_encode('✓ à la mode')\n  //   returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.btoa !== 'undefined') {\n      return window.btoa(escape(encodeURIComponent(stringToEncode)))\n    }\n  } else {\n    return new Buffer(stringToEncode).toString('base64')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var enc = ''\n  var tmpArr = []\n\n  if (!stringToEncode) {\n    return stringToEncode\n  }\n\n  stringToEncode = unescape(encodeURIComponent(stringToEncode))\n\n  do {\n    // pack three octets into four hexets\n    o1 = stringToEncode.charCodeAt(i++)\n    o2 = stringToEncode.charCodeAt(i++)\n    o3 = stringToEncode.charCodeAt(i++)\n\n    bits = o1 << 16 | o2 << 8 | o3\n\n    h1 = bits >> 18 & 0x3f\n    h2 = bits >> 12 & 0x3f\n    h3 = bits >> 6 & 0x3f\n    h4 = bits & 0x3f\n\n    // use hexets to index into b64, and append result to encoded string\n    tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4)\n  } while (i < stringToEncode.length)\n\n  enc = tmpArr.join('')\n\n  var r = stringToEncode.length % 3\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3)\n}\n","excerpt":"","more":"module.exports = function base64_encode (stringToEncode) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_encode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Bayron Guevara\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: Pellentesque Malesuada\n  //   example 1: base64_encode('Kevin van Zonneveld')\n  //   returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n  //   example 2: base64_encode('a')\n  //   returns 2: 'YQ=='\n  //   example 3: base64_encode('✓ à la mode')\n  //   returns 3: '4pyTIMOgIGxhIG1vZGU='\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.btoa !== 'undefined') {\n      return window.btoa(escape(encodeURIComponent(stringToEncode)))\n    }\n  } else {\n    return new Buffer(stringToEncode).toString('base64')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var enc = ''\n  var tmpArr = []\n\n  if (!stringToEncode) {\n    return stringToEncode\n  }\n\n  stringToEncode = unescape(encodeURIComponent(stringToEncode))\n\n  do {\n    // pack three octets into four hexets\n    o1 = stringToEncode.charCodeAt(i++)\n    o2 = stringToEncode.charCodeAt(i++)\n    o3 = stringToEncode.charCodeAt(i++)\n\n    bits = o1 << 16 | o2 << 8 | o3\n\n    h1 = bits >> 18 & 0x3f\n    h2 = bits >> 12 & 0x3f\n    h3 = bits >> 6 & 0x3f\n    h4 = bits & 0x3f\n\n    // use hexets to index into b64, and append result to encoded string\n    tmpArr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4)\n  } while (i < stringToEncode.length)\n\n  enc = tmpArr.join('')\n\n  var r = stringToEncode.length % 3\n\n  return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')","base64_decode('YQ==')","base64_decode('4pyTIMOgIGxhIG1vZGU=')"],"estarget":"es5","returns":["'Kevin van Zonneveld'","'a'","'✓ à la mode'"],"dependencies":[],"authors":{"original by":["Tyler Akins (http://rumkin.com)"],"improved by":["Thunder.m","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Pellentesque Malesuada","Kevin van Zonneveld (http://kvz.io)"],"input by":["Aman Gupta","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sbase64_decode in JavaScript","function":"base64_decode","category":"url","language":"php","alias":["/functions/php/base64_decode/","/functions/url/base64_decode/","/php/base64_decode/","/functions/base64_decode/"],"_content":"module.exports = function base64_decode (encodedData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.atob !== 'undefined') {\n      return decodeURIComponent(unescape(window.atob(encodedData)))\n    }\n  } else {\n    return new Buffer(encodedData, 'base64').toString('utf-8')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var dec = ''\n  var tmpArr = []\n\n  if (!encodedData) {\n    return encodedData\n  }\n\n  encodedData += ''\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++))\n    h2 = b64.indexOf(encodedData.charAt(i++))\n    h3 = b64.indexOf(encodedData.charAt(i++))\n    h4 = b64.indexOf(encodedData.charAt(i++))\n\n    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n    o1 = bits >> 16 & 0xff\n    o2 = bits >> 8 & 0xff\n    o3 = bits & 0xff\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1)\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2)\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3)\n    }\n  } while (i < encodedData.length)\n\n  dec = tmpArr.join('')\n\n  return decodeURIComponent(escape(dec.replace(/\\0+$/, '')))\n}\n","source":"php/url/base64_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  - base64_decode('YQ==')\n  - base64_decode('4pyTIMOgIGxhIG1vZGU=')\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\n  - '''a'''\n  - '''✓ à la mode'''\ndependencies: []\nauthors:\n  original by:\n    - 'Tyler Akins (http://rumkin.com)'\n  improved by:\n    - Thunder.m\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Pellentesque Malesuada\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - Aman Gupta\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sbase64_decode in JavaScript\nfunction: base64_decode\ncategory: url\nlanguage: php\npermalink: php/url/base64_decode/\nalias:\n  - /functions/php/base64_decode/\n  - /functions/url/base64_decode/\n  - /php/base64_decode/\n  - /functions/base64_decode/\n---\nmodule.exports = function base64_decode (encodedData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.atob !== 'undefined') {\n      return decodeURIComponent(unescape(window.atob(encodedData)))\n    }\n  } else {\n    return new Buffer(encodedData, 'base64').toString('utf-8')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var dec = ''\n  var tmpArr = []\n\n  if (!encodedData) {\n    return encodedData\n  }\n\n  encodedData += ''\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++))\n    h2 = b64.indexOf(encodedData.charAt(i++))\n    h3 = b64.indexOf(encodedData.charAt(i++))\n    h4 = b64.indexOf(encodedData.charAt(i++))\n\n    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n    o1 = bits >> 16 & 0xff\n    o2 = bits >> 8 & 0xff\n    o3 = bits & 0xff\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1)\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2)\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3)\n    }\n  } while (i < encodedData.length)\n\n  dec = tmpArr.join('')\n\n  return decodeURIComponent(escape(dec.replace(/\\0+$/, '')))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/base64_decode/index.html","comments":1,"_id":"cinoeja22008bou9y1x8mdspe","content":"module.exports = function base64_decode (encodedData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.atob !== 'undefined') {\n      return decodeURIComponent(unescape(window.atob(encodedData)))\n    }\n  } else {\n    return new Buffer(encodedData, 'base64').toString('utf-8')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var dec = ''\n  var tmpArr = []\n\n  if (!encodedData) {\n    return encodedData\n  }\n\n  encodedData += ''\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++))\n    h2 = b64.indexOf(encodedData.charAt(i++))\n    h3 = b64.indexOf(encodedData.charAt(i++))\n    h4 = b64.indexOf(encodedData.charAt(i++))\n\n    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n    o1 = bits >> 16 & 0xff\n    o2 = bits >> 8 & 0xff\n    o3 = bits & 0xff\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1)\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2)\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3)\n    }\n  } while (i < encodedData.length)\n\n  dec = tmpArr.join('')\n\n  return decodeURIComponent(escape(dec.replace(/\\0+$/, '')))\n}\n","excerpt":"","more":"module.exports = function base64_decode (encodedData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/base64_decode/\n  // original by: Tyler Akins (http://rumkin.com)\n  // improved by: Thunder.m\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Pellentesque Malesuada\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==')\n  //   returns 1: 'Kevin van Zonneveld'\n  //   example 2: base64_decode('YQ==')\n  //   returns 2: 'a'\n  //   example 3: base64_decode('4pyTIMOgIGxhIG1vZGU=')\n  //   returns 3: '✓ à la mode'\n\n  if (typeof window !== 'undefined') {\n    if (typeof window.atob !== 'undefined') {\n      return decodeURIComponent(unescape(window.atob(encodedData)))\n    }\n  } else {\n    return new Buffer(encodedData, 'base64').toString('utf-8')\n  }\n\n  var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  var o1\n  var o2\n  var o3\n  var h1\n  var h2\n  var h3\n  var h4\n  var bits\n  var i = 0\n  var ac = 0\n  var dec = ''\n  var tmpArr = []\n\n  if (!encodedData) {\n    return encodedData\n  }\n\n  encodedData += ''\n\n  do {\n    // unpack four hexets into three octets using index points in b64\n    h1 = b64.indexOf(encodedData.charAt(i++))\n    h2 = b64.indexOf(encodedData.charAt(i++))\n    h3 = b64.indexOf(encodedData.charAt(i++))\n    h4 = b64.indexOf(encodedData.charAt(i++))\n\n    bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n    o1 = bits >> 16 & 0xff\n    o2 = bits >> 8 & 0xff\n    o3 = bits & 0xff\n\n    if (h3 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1)\n    } else if (h4 === 64) {\n      tmpArr[ac++] = String.fromCharCode(o1, o2)\n    } else {\n      tmpArr[ac++] = String.fromCharCode(o1, o2, o3)\n    }\n  } while (i < encodedData.length)\n\n  dec = tmpArr.join('')\n\n  return decodeURIComponent(escape(dec.replace(/\\0+$/, '')))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow: 'milk'}, '', '&amp;')","http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2: 'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')"],"estarget":"es5","returns":["'foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'","'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Legaev Andrey","Michael White (http://getsprink.com)","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)","MIO_KODUKI (http://mio-koduki.blogspot.com/)"],"revised by":["stag019"],"input by":["Dreamer"]},"notes":["If the value is null, key and value are skipped in the\nhttp_build_query of PHP while in locutus they are not."],"layout":"function","title":"php'shttp_build_query in JavaScript","function":"http_build_query","category":"url","language":"php","alias":["/functions/php/http_build_query/","/functions/url/http_build_query/","/php/http_build_query/","/functions/http_build_query/"],"_content":"module.exports = function http_build_query (formdata, numericPrefix, argSeparator) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/http_build_query/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: stag019\n  //    input by: Dreamer\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  //      note 1: If the value is null, key and value are skipped in the\n  //      note 1: http_build_query of PHP while in locutus they are not.\n  //   example 1: http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow: 'milk'}, '', '&amp;')\n  //   returns 1: 'foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'\n  //   example 2: http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2: 'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')\n  //   returns 2: 'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'\n\n  var urlencode = require('../url/urlencode')\n\n  var value\n  var key\n  var tmp = []\n\n  var _httpBuildQueryHelper = function (key, val, argSeparator) {\n    var k\n    var tmp = []\n    if (val === true) {\n      val = '1'\n    } else if (val === false) {\n      val = '0'\n    }\n    if (val !== null) {\n      if (typeof val === 'object') {\n        for (k in val) {\n          if (val[k] !== null) {\n            tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n          }\n        }\n        return tmp.join(argSeparator)\n      } else if (typeof val !== 'function') {\n        return urlencode(key) + '=' + urlencode(val)\n      } else {\n        throw new Error('There was an error processing for http_build_query().')\n      }\n    } else {\n      return ''\n    }\n  }\n\n  if (!argSeparator) {\n    argSeparator = '&'\n  }\n  for (key in formdata) {\n    value = formdata[key]\n    if (numericPrefix && !isNaN(key)) {\n      key = String(numericPrefix) + key\n    }\n    var query = _httpBuildQueryHelper(key, value, argSeparator)\n    if (query !== '') {\n      tmp.push(query)\n    }\n  }\n\n  return tmp.join(argSeparator)\n}\n","source":"php/url/http_build_query.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - >-\n    http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow:\n    'milk'}, '', '&amp;')\n  - >-\n    http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2:\n    'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')\nestarget: es5\nreturns:\n  - '''foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'''\n  - >-\n    'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Legaev Andrey\n    - 'Michael White (http://getsprink.com)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'MIO_KODUKI (http://mio-koduki.blogspot.com/)'\n  revised by:\n    - stag019\n  input by:\n    - Dreamer\nnotes:\n  - |-\n    If the value is null, key and value are skipped in the\n    http_build_query of PHP while in locutus they are not.\nlayout: function\ntitle: php'shttp_build_query in JavaScript\nfunction: http_build_query\ncategory: url\nlanguage: php\npermalink: php/url/http_build_query/\nalias:\n  - /functions/php/http_build_query/\n  - /functions/url/http_build_query/\n  - /php/http_build_query/\n  - /functions/http_build_query/\n---\nmodule.exports = function http_build_query (formdata, numericPrefix, argSeparator) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/http_build_query/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: stag019\n  //    input by: Dreamer\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  //      note 1: If the value is null, key and value are skipped in the\n  //      note 1: http_build_query of PHP while in locutus they are not.\n  //   example 1: http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow: 'milk'}, '', '&amp;')\n  //   returns 1: 'foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'\n  //   example 2: http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2: 'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')\n  //   returns 2: 'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'\n\n  var urlencode = require('../url/urlencode')\n\n  var value\n  var key\n  var tmp = []\n\n  var _httpBuildQueryHelper = function (key, val, argSeparator) {\n    var k\n    var tmp = []\n    if (val === true) {\n      val = '1'\n    } else if (val === false) {\n      val = '0'\n    }\n    if (val !== null) {\n      if (typeof val === 'object') {\n        for (k in val) {\n          if (val[k] !== null) {\n            tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n          }\n        }\n        return tmp.join(argSeparator)\n      } else if (typeof val !== 'function') {\n        return urlencode(key) + '=' + urlencode(val)\n      } else {\n        throw new Error('There was an error processing for http_build_query().')\n      }\n    } else {\n      return ''\n    }\n  }\n\n  if (!argSeparator) {\n    argSeparator = '&'\n  }\n  for (key in formdata) {\n    value = formdata[key]\n    if (numericPrefix && !isNaN(key)) {\n      key = String(numericPrefix) + key\n    }\n    var query = _httpBuildQueryHelper(key, value, argSeparator)\n    if (query !== '') {\n      tmp.push(query)\n    }\n  }\n\n  return tmp.join(argSeparator)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/http_build_query/index.html","comments":1,"_id":"cinoeja23008cou9y3or5yirq","content":"module.exports = function http_build_query (formdata, numericPrefix, argSeparator) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/http_build_query/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: stag019\n  //    input by: Dreamer\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  //      note 1: If the value is null, key and value are skipped in the\n  //      note 1: http_build_query of PHP while in locutus they are not.\n  //   example 1: http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow: 'milk'}, '', '&amp;')\n  //   returns 1: 'foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'\n  //   example 2: http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2: 'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')\n  //   returns 2: 'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'\n\n  var urlencode = require('../url/urlencode')\n\n  var value\n  var key\n  var tmp = []\n\n  var _httpBuildQueryHelper = function (key, val, argSeparator) {\n    var k\n    var tmp = []\n    if (val === true) {\n      val = '1'\n    } else if (val === false) {\n      val = '0'\n    }\n    if (val !== null) {\n      if (typeof val === 'object') {\n        for (k in val) {\n          if (val[k] !== null) {\n            tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n          }\n        }\n        return tmp.join(argSeparator)\n      } else if (typeof val !== 'function') {\n        return urlencode(key) + '=' + urlencode(val)\n      } else {\n        throw new Error('There was an error processing for http_build_query().')\n      }\n    } else {\n      return ''\n    }\n  }\n\n  if (!argSeparator) {\n    argSeparator = '&'\n  }\n  for (key in formdata) {\n    value = formdata[key]\n    if (numericPrefix && !isNaN(key)) {\n      key = String(numericPrefix) + key\n    }\n    var query = _httpBuildQueryHelper(key, value, argSeparator)\n    if (query !== '') {\n      tmp.push(query)\n    }\n  }\n\n  return tmp.join(argSeparator)\n}\n","excerpt":"","more":"module.exports = function http_build_query (formdata, numericPrefix, argSeparator) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/http_build_query/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: stag019\n  //    input by: Dreamer\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: MIO_KODUKI (http://mio-koduki.blogspot.com/)\n  //      note 1: If the value is null, key and value are skipped in the\n  //      note 1: http_build_query of PHP while in locutus they are not.\n  //   example 1: http_build_query({foo: 'bar', php: 'hypertext processor', baz: 'boom', cow: 'milk'}, '', '&amp;')\n  //   returns 1: 'foo=bar&amp;php=hypertext+processor&amp;baz=boom&amp;cow=milk'\n  //   example 2: http_build_query({'php': 'hypertext processor', 0: 'foo', 1: 'bar', 2: 'baz', 3: 'boom', 'cow': 'milk'}, 'myvar_')\n  //   returns 2: 'myvar_0=foo&myvar_1=bar&myvar_2=baz&myvar_3=boom&php=hypertext+processor&cow=milk'\n\n  var urlencode = require('../url/urlencode')\n\n  var value\n  var key\n  var tmp = []\n\n  var _httpBuildQueryHelper = function (key, val, argSeparator) {\n    var k\n    var tmp = []\n    if (val === true) {\n      val = '1'\n    } else if (val === false) {\n      val = '0'\n    }\n    if (val !== null) {\n      if (typeof val === 'object') {\n        for (k in val) {\n          if (val[k] !== null) {\n            tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n          }\n        }\n        return tmp.join(argSeparator)\n      } else if (typeof val !== 'function') {\n        return urlencode(key) + '=' + urlencode(val)\n      } else {\n        throw new Error('There was an error processing for http_build_query().')\n      }\n    } else {\n      return ''\n    }\n  }\n\n  if (!argSeparator) {\n    argSeparator = '&'\n  }\n  for (key in formdata) {\n    value = formdata[key]\n    if (numericPrefix && !isNaN(key)) {\n      key = String(numericPrefix) + key\n    }\n    var query = _httpBuildQueryHelper(key, value, argSeparator)\n    if (query !== '') {\n      tmp.push(query)\n    }\n  }\n\n  return tmp.join(argSeparator)\n}\n"},{"type":"category","language":"php","category":"url","title":"url","_content":"","source":"php/url/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: url\ntitle: url\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/index.html","comments":1,"layout":"page","_id":"cinoeja23008dou9yez4nh401","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["parse_url('http://user:pass@host/path?a=v#a')","parse_url('http://en.wikipedia.org/wiki/%22@%22_%28album%29')","parse_url('https://host.domain.tld/a@b.c/folder')","parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')"],"estarget":"es5","returns":["{scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path', query: 'a=v', fragment: 'a'}","{scheme: 'http', host: 'en.wikipedia.org', path: '/wiki/%22@%22_%28album%29'}","{scheme: 'https', host: 'host.domain.tld', path: '/a@b.c/folder'}","{ scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query: 'foo=bar', user: 'gooduser', pass: 'secretpassword' }"],"dependencies":[],"authors":{"original by":["Steven Levithan (http://blog.stevenlevithan.com)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"input by":["Lorenzo Pisani","Tony"]},"notes":["original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\nblog post at http://blog.stevenlevithan.com/archives/parseuri\ndemo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\nDoes not replace invalid characters with '_' as in PHP,\nnor does it return false with\na seriously malformed URL.\nBesides function name, is essentially the same as parseUri as\nwell as our allowing\nan extra slash after the scheme/protocol (to allow file:/// as in PHP)"],"layout":"function","title":"php'sparse_url in JavaScript","function":"parse_url","category":"url","language":"php","alias":["/functions/php/parse_url/","/functions/url/parse_url/","/php/parse_url/","/functions/parse_url/"],"_content":"module.exports = function parse_url (str, component) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_url/\n  //      original by: Steven Levithan (http://blog.stevenlevithan.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Lorenzo Pisani\n  //         input by: Tony\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: blog post at http://blog.stevenlevithan.com/archives/parseuri\n  //           note 1: demo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: Does not replace invalid characters with '_' as in PHP,\n  //           note 1: nor does it return false with\n  //           note 1: a seriously malformed URL.\n  //           note 1: Besides function name, is essentially the same as parseUri as\n  //           note 1: well as our allowing\n  //           note 1: an extra slash after the scheme/protocol (to allow file:/// as in PHP)\n  //        example 1: parse_url('http://user:pass@host/path?a=v#a')\n  //        returns 1: {scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path', query: 'a=v', fragment: 'a'}\n  //        example 2: parse_url('http://en.wikipedia.org/wiki/%22@%22_%28album%29')\n  //        returns 2: {scheme: 'http', host: 'en.wikipedia.org', path: '/wiki/%22@%22_%28album%29'}\n  //        example 3: parse_url('https://host.domain.tld/a@b.c/folder')\n  //        returns 3: {scheme: 'https', host: 'host.domain.tld', path: '/a@b.c/folder'}\n  //        example 4: parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')\n  //        returns 4: { scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query: 'foo=bar', user: 'gooduser', pass: 'secretpassword' }\n\n  var query\n\n  var mode = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.mode') : undefined) || 'php'\n\n  var key = [\n    'source',\n    'scheme',\n    'authority',\n    'userInfo',\n    'user',\n    'pass',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'fragment'\n  ]\n\n  // For loose we added one optional slash to post-scheme to catch file:/// (should restrict this)\n  var parser = {\n    php: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/()(?:(?:()(?:([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '()',\n      '(?:(()(?:(?:[^?#\\\\/]*\\\\/)*)()(?:[^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    strict: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '((((?:[^?#\\\\/]*\\\\/)*)([^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    loose: new RegExp([\n      '(?:(?![^:@]+:[^:@\\\\/]*@)([^:\\\\/?#.]+):)?',\n      '(?:\\\\/\\\\/\\\\/?)?',\n      '((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?)',\n      '(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))',\n      '(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join(''))\n  }\n\n  var m = parser[mode].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) {\n    if (m[i]) {\n      uri[key[i]] = m[i]\n    }\n  }\n\n  if (component) {\n    return uri[component.replace('PHP_URL_', '').toLowerCase()]\n  }\n\n  if (mode !== 'php') {\n    var name = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.queryKey') : undefined) || 'queryKey'\n    parser = /(?:^|&)([^&=]*)=?([^&]*)/g\n    uri[name] = {}\n    query = uri[key[12]] || ''\n    query.replace(parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[name][$1] = $2\n      }\n    })\n  }\n\n  delete uri.source\n  return uri\n}\n","source":"php/url/parse_url.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'parse_url(''http://user:pass@host/path?a=v#a'')'\n  - 'parse_url(''http://en.wikipedia.org/wiki/%22@%22_%28album%29'')'\n  - 'parse_url(''https://host.domain.tld/a@b.c/folder'')'\n  - >-\n    parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')\nestarget: es5\nreturns:\n  - >-\n    {scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path',\n    query: 'a=v', fragment: 'a'}\n  - >-\n    {scheme: 'http', host: 'en.wikipedia.org', path:\n    '/wiki/%22@%22_%28album%29'}\n  - '{scheme: ''https'', host: ''host.domain.tld'', path: ''/a@b.c/folder''}'\n  - >-\n    { scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query:\n    'foo=bar', user: 'gooduser', pass: 'secretpassword' }\ndependencies: []\nauthors:\n  original by:\n    - 'Steven Levithan (http://blog.stevenlevithan.com)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - Lorenzo Pisani\n    - Tony\nnotes:\n  - |-\n    original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n    blog post at http://blog.stevenlevithan.com/archives/parseuri\n    demo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n    Does not replace invalid characters with '_' as in PHP,\n    nor does it return false with\n    a seriously malformed URL.\n    Besides function name, is essentially the same as parseUri as\n    well as our allowing\n    an extra slash after the scheme/protocol (to allow file:/// as in PHP)\nlayout: function\ntitle: php'sparse_url in JavaScript\nfunction: parse_url\ncategory: url\nlanguage: php\npermalink: php/url/parse_url/\nalias:\n  - /functions/php/parse_url/\n  - /functions/url/parse_url/\n  - /php/parse_url/\n  - /functions/parse_url/\n---\nmodule.exports = function parse_url (str, component) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_url/\n  //      original by: Steven Levithan (http://blog.stevenlevithan.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Lorenzo Pisani\n  //         input by: Tony\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: blog post at http://blog.stevenlevithan.com/archives/parseuri\n  //           note 1: demo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: Does not replace invalid characters with '_' as in PHP,\n  //           note 1: nor does it return false with\n  //           note 1: a seriously malformed URL.\n  //           note 1: Besides function name, is essentially the same as parseUri as\n  //           note 1: well as our allowing\n  //           note 1: an extra slash after the scheme/protocol (to allow file:/// as in PHP)\n  //        example 1: parse_url('http://user:pass@host/path?a=v#a')\n  //        returns 1: {scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path', query: 'a=v', fragment: 'a'}\n  //        example 2: parse_url('http://en.wikipedia.org/wiki/%22@%22_%28album%29')\n  //        returns 2: {scheme: 'http', host: 'en.wikipedia.org', path: '/wiki/%22@%22_%28album%29'}\n  //        example 3: parse_url('https://host.domain.tld/a@b.c/folder')\n  //        returns 3: {scheme: 'https', host: 'host.domain.tld', path: '/a@b.c/folder'}\n  //        example 4: parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')\n  //        returns 4: { scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query: 'foo=bar', user: 'gooduser', pass: 'secretpassword' }\n\n  var query\n\n  var mode = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.mode') : undefined) || 'php'\n\n  var key = [\n    'source',\n    'scheme',\n    'authority',\n    'userInfo',\n    'user',\n    'pass',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'fragment'\n  ]\n\n  // For loose we added one optional slash to post-scheme to catch file:/// (should restrict this)\n  var parser = {\n    php: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/()(?:(?:()(?:([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '()',\n      '(?:(()(?:(?:[^?#\\\\/]*\\\\/)*)()(?:[^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    strict: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '((((?:[^?#\\\\/]*\\\\/)*)([^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    loose: new RegExp([\n      '(?:(?![^:@]+:[^:@\\\\/]*@)([^:\\\\/?#.]+):)?',\n      '(?:\\\\/\\\\/\\\\/?)?',\n      '((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?)',\n      '(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))',\n      '(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join(''))\n  }\n\n  var m = parser[mode].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) {\n    if (m[i]) {\n      uri[key[i]] = m[i]\n    }\n  }\n\n  if (component) {\n    return uri[component.replace('PHP_URL_', '').toLowerCase()]\n  }\n\n  if (mode !== 'php') {\n    var name = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.queryKey') : undefined) || 'queryKey'\n    parser = /(?:^|&)([^&=]*)=?([^&]*)/g\n    uri[name] = {}\n    query = uri[key[12]] || ''\n    query.replace(parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[name][$1] = $2\n      }\n    })\n  }\n\n  delete uri.source\n  return uri\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/parse_url/index.html","comments":1,"_id":"cinoeja23008eou9yp9elm38v","content":"module.exports = function parse_url (str, component) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_url/\n  //      original by: Steven Levithan (http://blog.stevenlevithan.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Lorenzo Pisani\n  //         input by: Tony\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: blog post at http://blog.stevenlevithan.com/archives/parseuri\n  //           note 1: demo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: Does not replace invalid characters with '_' as in PHP,\n  //           note 1: nor does it return false with\n  //           note 1: a seriously malformed URL.\n  //           note 1: Besides function name, is essentially the same as parseUri as\n  //           note 1: well as our allowing\n  //           note 1: an extra slash after the scheme/protocol (to allow file:/// as in PHP)\n  //        example 1: parse_url('http://user:pass@host/path?a=v#a')\n  //        returns 1: {scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path', query: 'a=v', fragment: 'a'}\n  //        example 2: parse_url('http://en.wikipedia.org/wiki/%22@%22_%28album%29')\n  //        returns 2: {scheme: 'http', host: 'en.wikipedia.org', path: '/wiki/%22@%22_%28album%29'}\n  //        example 3: parse_url('https://host.domain.tld/a@b.c/folder')\n  //        returns 3: {scheme: 'https', host: 'host.domain.tld', path: '/a@b.c/folder'}\n  //        example 4: parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')\n  //        returns 4: { scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query: 'foo=bar', user: 'gooduser', pass: 'secretpassword' }\n\n  var query\n\n  var mode = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.mode') : undefined) || 'php'\n\n  var key = [\n    'source',\n    'scheme',\n    'authority',\n    'userInfo',\n    'user',\n    'pass',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'fragment'\n  ]\n\n  // For loose we added one optional slash to post-scheme to catch file:/// (should restrict this)\n  var parser = {\n    php: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/()(?:(?:()(?:([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '()',\n      '(?:(()(?:(?:[^?#\\\\/]*\\\\/)*)()(?:[^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    strict: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '((((?:[^?#\\\\/]*\\\\/)*)([^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    loose: new RegExp([\n      '(?:(?![^:@]+:[^:@\\\\/]*@)([^:\\\\/?#.]+):)?',\n      '(?:\\\\/\\\\/\\\\/?)?',\n      '((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?)',\n      '(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))',\n      '(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join(''))\n  }\n\n  var m = parser[mode].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) {\n    if (m[i]) {\n      uri[key[i]] = m[i]\n    }\n  }\n\n  if (component) {\n    return uri[component.replace('PHP_URL_', '').toLowerCase()]\n  }\n\n  if (mode !== 'php') {\n    var name = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.queryKey') : undefined) || 'queryKey'\n    parser = /(?:^|&)([^&=]*)=?([^&]*)/g\n    uri[name] = {}\n    query = uri[key[12]] || ''\n    query.replace(parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[name][$1] = $2\n      }\n    })\n  }\n\n  delete uri.source\n  return uri\n}\n","excerpt":"","more":"module.exports = function parse_url (str, component) { // eslint-disable-line camelcase\n  //       discuss at: http://locutusjs.io/php/parse_url/\n  //      original by: Steven Levithan (http://blog.stevenlevithan.com)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Lorenzo Pisani\n  //         input by: Tony\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: original by http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: blog post at http://blog.stevenlevithan.com/archives/parseuri\n  //           note 1: demo at http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js\n  //           note 1: Does not replace invalid characters with '_' as in PHP,\n  //           note 1: nor does it return false with\n  //           note 1: a seriously malformed URL.\n  //           note 1: Besides function name, is essentially the same as parseUri as\n  //           note 1: well as our allowing\n  //           note 1: an extra slash after the scheme/protocol (to allow file:/// as in PHP)\n  //        example 1: parse_url('http://user:pass@host/path?a=v#a')\n  //        returns 1: {scheme: 'http', host: 'host', user: 'user', pass: 'pass', path: '/path', query: 'a=v', fragment: 'a'}\n  //        example 2: parse_url('http://en.wikipedia.org/wiki/%22@%22_%28album%29')\n  //        returns 2: {scheme: 'http', host: 'en.wikipedia.org', path: '/wiki/%22@%22_%28album%29'}\n  //        example 3: parse_url('https://host.domain.tld/a@b.c/folder')\n  //        returns 3: {scheme: 'https', host: 'host.domain.tld', path: '/a@b.c/folder'}\n  //        example 4: parse_url('https://gooduser:secretpassword@www.example.com/a@b.c/folder?foo=bar')\n  //        returns 4: { scheme: 'https', host: 'www.example.com', path: '/a@b.c/folder', query: 'foo=bar', user: 'gooduser', pass: 'secretpassword' }\n\n  var query\n\n  var mode = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.mode') : undefined) || 'php'\n\n  var key = [\n    'source',\n    'scheme',\n    'authority',\n    'userInfo',\n    'user',\n    'pass',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'fragment'\n  ]\n\n  // For loose we added one optional slash to post-scheme to catch file:/// (should restrict this)\n  var parser = {\n    php: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/()(?:(?:()(?:([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '()',\n      '(?:(()(?:(?:[^?#\\\\/]*\\\\/)*)()(?:[^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    strict: new RegExp([\n      '(?:([^:\\\\/?#]+):)?',\n      '(?:\\\\/\\\\/((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?))?',\n      '((((?:[^?#\\\\/]*\\\\/)*)([^?#]*))(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join('')),\n    loose: new RegExp([\n      '(?:(?![^:@]+:[^:@\\\\/]*@)([^:\\\\/?#.]+):)?',\n      '(?:\\\\/\\\\/\\\\/?)?',\n      '((?:(([^:@\\\\/]*):?([^:@\\\\/]*))?@)?([^:\\\\/?#]*)(?::(\\\\d*))?)',\n      '(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))',\n      '(?:\\\\?([^#]*))?(?:#(.*))?)'\n    ].join(''))\n  }\n\n  var m = parser[mode].exec(str)\n  var uri = {}\n  var i = 14\n\n  while (i--) {\n    if (m[i]) {\n      uri[key[i]] = m[i]\n    }\n  }\n\n  if (component) {\n    return uri[component.replace('PHP_URL_', '').toLowerCase()]\n  }\n\n  if (mode !== 'php') {\n    var name = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.parse_url.queryKey') : undefined) || 'queryKey'\n    parser = /(?:^|&)([^&=]*)=?([^&]*)/g\n    uri[name] = {}\n    query = uri[key[12]] || ''\n    query.replace(parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[name][$1] = $2\n      }\n    })\n  }\n\n  delete uri.source\n  return uri\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["rawurldecode('Kevin+van+Zonneveld%21')","rawurldecode('http%3A%2F%2Fkvz.io%2F')","rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')"],"estarget":"es5","returns":["'Kevin+van+Zonneveld!'","'http://kvz.io/'","'http://www.google.nl/search?q=Locutus&ie='"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["travc","Brett Zamir (http://brett-zamir.me)","Ratheous","lovio"]},"notes":["Please be aware that this function expects to decode\nfrom UTF-8 encoded strings, as found on\npages served as UTF-8"],"layout":"function","title":"php'srawurldecode in JavaScript","function":"rawurldecode","category":"url","language":"php","alias":["/functions/php/rawurldecode/","/functions/url/rawurldecode/","/php/rawurldecode/","/functions/rawurldecode/"],"_content":"module.exports = function rawurldecode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurldecode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin+van+Zonneveld!'\n  //        example 2: rawurldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie='\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    }))\n}\n","source":"php/url/rawurldecode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - rawurldecode('Kevin+van+Zonneveld%21')\n  - rawurldecode('http%3A%2F%2Fkvz.io%2F')\n  - rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')\nestarget: es5\nreturns:\n  - '''Kevin+van+Zonneveld!'''\n  - '''http://kvz.io/'''\n  - '''http://www.google.nl/search?q=Locutus&ie='''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - travc\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Ratheous\n    - lovio\nnotes:\n  - |-\n    Please be aware that this function expects to decode\n    from UTF-8 encoded strings, as found on\n    pages served as UTF-8\nlayout: function\ntitle: php'srawurldecode in JavaScript\nfunction: rawurldecode\ncategory: url\nlanguage: php\npermalink: php/url/rawurldecode/\nalias:\n  - /functions/php/rawurldecode/\n  - /functions/url/rawurldecode/\n  - /php/rawurldecode/\n  - /functions/rawurldecode/\n---\nmodule.exports = function rawurldecode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurldecode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin+van+Zonneveld!'\n  //        example 2: rawurldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie='\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    }))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/rawurldecode/index.html","comments":1,"_id":"cinoeja24008fou9yfj4bit7x","content":"module.exports = function rawurldecode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurldecode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin+van+Zonneveld!'\n  //        example 2: rawurldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie='\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    }))\n}\n","excerpt":"","more":"module.exports = function rawurldecode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurldecode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin+van+Zonneveld!'\n  //        example 2: rawurldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: rawurldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3D')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie='\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    }))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["rawurlencode('Kevin van Zonneveld!')","rawurlencode('http://kvz.io/')","rawurlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')"],"estarget":"es5","returns":["'Kevin%20van%20Zonneveld%21'","'http%3A%2F%2Fkvz.io%2F'","'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Joris"],"input by":["travc","Brett Zamir (http://brett-zamir.me)","Michael Grier","Ratheous"]},"notes":["This reflects PHP 5.3/6.0+ behavior\nPlease be aware that this function expects \\\nto encode into UTF-8 encoded strings, as found on\npages served as UTF-8"],"layout":"function","title":"php'srawurlencode in JavaScript","function":"rawurlencode","category":"url","language":"php","alias":["/functions/php/rawurlencode/","/functions/url/rawurlencode/","/php/rawurlencode/","/functions/rawurlencode/"],"_content":"module.exports = function rawurlencode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function expects \\\n  //           note 1: to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n}\n","source":"php/url/rawurlencode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - rawurlencode('Kevin van Zonneveld!')\n  - 'rawurlencode(''http://kvz.io/'')'\n  - 'rawurlencode(''http://www.google.nl/search?q=Locutus&ie=utf-8'')'\nestarget: es5\nreturns:\n  - '''Kevin%20van%20Zonneveld%21'''\n  - '''http%3A%2F%2Fkvz.io%2F'''\n  - '''http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Joris\n  input by:\n    - travc\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Michael Grier\n    - Ratheous\nnotes:\n  - |-\n    This reflects PHP 5.3/6.0+ behavior\n    Please be aware that this function expects \\\n    to encode into UTF-8 encoded strings, as found on\n    pages served as UTF-8\nlayout: function\ntitle: php'srawurlencode in JavaScript\nfunction: rawurlencode\ncategory: url\nlanguage: php\npermalink: php/url/rawurlencode/\nalias:\n  - /functions/php/rawurlencode/\n  - /functions/url/rawurlencode/\n  - /php/rawurlencode/\n  - /functions/rawurlencode/\n---\nmodule.exports = function rawurlencode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function expects \\\n  //           note 1: to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/rawurlencode/index.html","comments":1,"_id":"cinoeja24008gou9ygqlth6uc","content":"module.exports = function rawurlencode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function expects \\\n  //           note 1: to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n}\n","excerpt":"","more":"module.exports = function rawurlencode (str) {\n  //       discuss at: http://locutusjs.io/php/rawurlencode/\n  //      original by: Brett Zamir (http://brett-zamir.me)\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Michael Grier\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function expects \\\n  //           note 1: to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: rawurlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin%20van%20Zonneveld%21'\n  //        example 2: rawurlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: rawurlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["urldecode('Kevin+van+Zonneveld%21')","urldecode('http%3A%2F%2Fkvz.io%2F')","urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')","urldecode('%E5%A5%BD%3_4')"],"estarget":"es5","returns":["'Kevin van Zonneveld!'","'http://kvz.io/'","'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'","'\\u597d%3_4'"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Lars Fischer","Orlando","Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Rob"],"input by":["AJ","travc","Brett Zamir (http://brett-zamir.me)","Ratheous","e-mike","lovio"]},"notes":["info on what encoding functions to use from:\nhttp://xkr.us/articles/javascript/encode-compare/\nPlease be aware that this function expects to decode\nfrom UTF-8 encoded strings, as found on\npages served as UTF-8"],"layout":"function","title":"php'surldecode in JavaScript","function":"urldecode","category":"url","language":"php","alias":["/functions/php/urldecode/","/functions/url/urldecode/","/php/urldecode/","/functions/urldecode/"],"_content":"module.exports = function urldecode (str) {\n  //       discuss at: http://locutusjs.io/php/urldecode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //      improved by: Orlando\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: e-mike\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Rob\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: info on what encoding functions to use from:\n  //           note 1: http://xkr.us/articles/javascript/encode-compare/\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin van Zonneveld!'\n  //        example 2: urldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'\n  //        example 4: urldecode('%E5%A5%BD%3_4')\n  //        returns 4: '\\u597d%3_4'\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    })\n    .replace(/\\+/g, '%20'))\n}\n","source":"php/url/urldecode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - urldecode('Kevin+van+Zonneveld%21')\n  - urldecode('http%3A%2F%2Fkvz.io%2F')\n  - >-\n    urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')\n  - urldecode('%E5%A5%BD%3_4')\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld!'''\n  - '''http://kvz.io/'''\n  - >-\n    'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'\n  - '''\\u597d%3_4'''\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Lars Fischer\n    - Orlando\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Rob\n  input by:\n    - AJ\n    - travc\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Ratheous\n    - e-mike\n    - lovio\nnotes:\n  - |-\n    info on what encoding functions to use from:\n    http://xkr.us/articles/javascript/encode-compare/\n    Please be aware that this function expects to decode\n    from UTF-8 encoded strings, as found on\n    pages served as UTF-8\nlayout: function\ntitle: php'surldecode in JavaScript\nfunction: urldecode\ncategory: url\nlanguage: php\npermalink: php/url/urldecode/\nalias:\n  - /functions/php/urldecode/\n  - /functions/url/urldecode/\n  - /php/urldecode/\n  - /functions/urldecode/\n---\nmodule.exports = function urldecode (str) {\n  //       discuss at: http://locutusjs.io/php/urldecode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //      improved by: Orlando\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: e-mike\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Rob\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: info on what encoding functions to use from:\n  //           note 1: http://xkr.us/articles/javascript/encode-compare/\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin van Zonneveld!'\n  //        example 2: urldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'\n  //        example 4: urldecode('%E5%A5%BD%3_4')\n  //        returns 4: '\\u597d%3_4'\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    })\n    .replace(/\\+/g, '%20'))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/urldecode/index.html","comments":1,"_id":"cinoeja24008hou9yby3vmmkq","content":"module.exports = function urldecode (str) {\n  //       discuss at: http://locutusjs.io/php/urldecode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //      improved by: Orlando\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: e-mike\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Rob\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: info on what encoding functions to use from:\n  //           note 1: http://xkr.us/articles/javascript/encode-compare/\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin van Zonneveld!'\n  //        example 2: urldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'\n  //        example 4: urldecode('%E5%A5%BD%3_4')\n  //        returns 4: '\\u597d%3_4'\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    })\n    .replace(/\\+/g, '%20'))\n}\n","excerpt":"","more":"module.exports = function urldecode (str) {\n  //       discuss at: http://locutusjs.io/php/urldecode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //      improved by: Orlando\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //         input by: e-mike\n  //         input by: lovio\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Rob\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: info on what encoding functions to use from:\n  //           note 1: http://xkr.us/articles/javascript/encode-compare/\n  //           note 1: Please be aware that this function expects to decode\n  //           note 1: from UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urldecode('Kevin+van+Zonneveld%21')\n  //        returns 1: 'Kevin van Zonneveld!'\n  //        example 2: urldecode('http%3A%2F%2Fkvz.io%2F')\n  //        returns 2: 'http://kvz.io/'\n  //        example 3: urldecode('http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu%3Aen-US%3Aunofficial%26client%3Dfirefox-a')\n  //        returns 3: 'http://www.google.nl/search?q=Locutus&ie=utf-8&oe=utf-8&aq=t&rls=com.ubuntu:en-US:unofficial&client=firefox-a'\n  //        example 4: urldecode('%E5%A5%BD%3_4')\n  //        returns 4: '\\u597d%3_4'\n\n  return decodeURIComponent((str + '')\n    .replace(/%(?![\\da-f]{2})/gi, function () {\n      // PHP tolerates poorly formed escape sequences\n      return '%25'\n    })\n    .replace(/\\+/g, '%20'))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["urlencode('Kevin van Zonneveld!')","urlencode('http://kvz.io/')","urlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')"],"estarget":"es5","returns":["'Kevin+van+Zonneveld%21'","'http%3A%2F%2Fkvz.io%2F'","'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'"],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Lars Fischer"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Joris"],"input by":["AJ","travc","Brett Zamir (http://brett-zamir.me)","Ratheous"]},"notes":["This reflects PHP 5.3/6.0+ behavior\nPlease be aware that this function\nexpects to encode into UTF-8 encoded strings, as found on\npages served as UTF-8"],"layout":"function","title":"php'surlencode in JavaScript","function":"urlencode","category":"url","language":"php","alias":["/functions/php/urlencode/","/functions/url/urlencode/","/php/urlencode/","/functions/urlencode/"],"_content":"module.exports = function urlencode (str) {\n  //       discuss at: http://locutusjs.io/php/urlencode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function\n  //           note 1: expects to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin+van+Zonneveld%21'\n  //        example 2: urlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: urlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n    .replace(/%20/g, '+')\n}\n","source":"php/url/urlencode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - urlencode('Kevin van Zonneveld!')\n  - 'urlencode(''http://kvz.io/'')'\n  - 'urlencode(''http://www.google.nl/search?q=Locutus&ie=utf-8'')'\nestarget: es5\nreturns:\n  - '''Kevin+van+Zonneveld%21'''\n  - '''http%3A%2F%2Fkvz.io%2F'''\n  - '''http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'''\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Lars Fischer\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Joris\n  input by:\n    - AJ\n    - travc\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Ratheous\nnotes:\n  - |-\n    This reflects PHP 5.3/6.0+ behavior\n    Please be aware that this function\n    expects to encode into UTF-8 encoded strings, as found on\n    pages served as UTF-8\nlayout: function\ntitle: php'surlencode in JavaScript\nfunction: urlencode\ncategory: url\nlanguage: php\npermalink: php/url/urlencode/\nalias:\n  - /functions/php/urlencode/\n  - /functions/url/urlencode/\n  - /php/urlencode/\n  - /functions/urlencode/\n---\nmodule.exports = function urlencode (str) {\n  //       discuss at: http://locutusjs.io/php/urlencode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function\n  //           note 1: expects to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin+van+Zonneveld%21'\n  //        example 2: urlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: urlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n    .replace(/%20/g, '+')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/url/urlencode/index.html","comments":1,"_id":"cinoeja25008iou9ye5g6fo72","content":"module.exports = function urlencode (str) {\n  //       discuss at: http://locutusjs.io/php/urlencode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function\n  //           note 1: expects to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin+van+Zonneveld%21'\n  //        example 2: urlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: urlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n    .replace(/%20/g, '+')\n}\n","excerpt":"","more":"module.exports = function urlencode (str) {\n  //       discuss at: http://locutusjs.io/php/urlencode/\n  //      original by: Philip Peterson\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Kevin van Zonneveld (http://kvz.io)\n  //      improved by: Brett Zamir (http://brett-zamir.me)\n  //      improved by: Lars Fischer\n  //         input by: AJ\n  //         input by: travc\n  //         input by: Brett Zamir (http://brett-zamir.me)\n  //         input by: Ratheous\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      bugfixed by: Joris\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  // reimplemented by: Brett Zamir (http://brett-zamir.me)\n  //           note 1: This reflects PHP 5.3/6.0+ behavior\n  //           note 1: Please be aware that this function\n  //           note 1: expects to encode into UTF-8 encoded strings, as found on\n  //           note 1: pages served as UTF-8\n  //        example 1: urlencode('Kevin van Zonneveld!')\n  //        returns 1: 'Kevin+van+Zonneveld%21'\n  //        example 2: urlencode('http://kvz.io/')\n  //        returns 2: 'http%3A%2F%2Fkvz.io%2F'\n  //        example 3: urlencode('http://www.google.nl/search?q=Locutus&ie=utf-8')\n  //        returns 3: 'http%3A%2F%2Fwww.google.nl%2Fsearch%3Fq%3DLocutus%26ie%3Dutf-8'\n\n  str = (str + '')\n\n  // Tilde should be allowed unescaped in future versions of PHP (as reflected below),\n  // but if you want to reflect current\n  // PHP behavior, you would need to add \".replace(/~/g, '%7E');\" to the following.\n  return encodeURIComponent(str)\n    .replace(/!/g, '%21')\n    .replace(/'/g, '%27')\n    .replace(/\\(/g, '%28')\n    .replace(/\\)/g, '%29')\n    .replace(/\\*/g, '%2A')\n    .replace(/%20/g, '+')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["doubleval(186)"],"estarget":"es5","returns":["186.00"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sdoubleval in JavaScript","function":"doubleval","category":"var","language":"php","alias":["/functions/php/doubleval/","/functions/var/doubleval/","/php/doubleval/","/functions/doubleval/"],"_content":"module.exports = function doubleval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/doubleval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  var floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n","source":"php/var/doubleval.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - doubleval(186)\nestarget: es5\nreturns:\n  - '186.00'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sdoubleval in JavaScript\nfunction: doubleval\ncategory: var\nlanguage: php\npermalink: php/var/doubleval/\nalias:\n  - /functions/php/doubleval/\n  - /functions/var/doubleval/\n  - /php/doubleval/\n  - /functions/doubleval/\n---\nmodule.exports = function doubleval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/doubleval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  var floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/doubleval/index.html","comments":1,"_id":"cinoeja26008jou9y600x7m2k","content":"module.exports = function doubleval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/doubleval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  var floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n","excerpt":"","more":"module.exports = function doubleval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/doubleval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: doubleval(186)\n  //   returns 1: 186.00\n\n  var floatval = require('../var/floatval')\n\n  return floatval(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["empty(null)","empty(undefined)","empty([])","empty({})","empty({'aFunc' : function () { alert('humpty'); } })"],"estarget":"es5","returns":["true","true","true","true","false"],"dependencies":[],"authors":{"original by":["Philippe Baumann"],"improved by":["Onno Marsman (https://twitter.com/onnomarsman)","Francesco","Marc Jansen","Rafał Kukawski (http://blog.kukawski.pl)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"input by":["Onno Marsman (https://twitter.com/onnomarsman)","LH","Stoyan Kyosev (http://www.svest.org/)"]},"notes":[],"layout":"function","title":"php'sempty in JavaScript","function":"empty","category":"var","language":"php","alias":["/functions/php/empty/","/functions/var/empty/","/php/empty/","/functions/empty/"],"_content":"module.exports = function empty (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/empty/\n  // original by: Philippe Baumann\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: LH\n  //    input by: Stoyan Kyosev (http://www.svest.org/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Francesco\n  // improved by: Marc Jansen\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: empty(null)\n  //   returns 1: true\n  //   example 2: empty(undefined)\n  //   returns 2: true\n  //   example 3: empty([])\n  //   returns 3: true\n  //   example 4: empty({})\n  //   returns 4: true\n  //   example 5: empty({'aFunc' : function () { alert('humpty'); } })\n  //   returns 5: false\n\n  var undef\n  var key\n  var i\n  var len\n  var emptyValues = [undef, null, false, 0, '', '0']\n\n  for (i = 0, len = emptyValues.length; i < len; i++) {\n    if (mixedVar === emptyValues[i]) {\n      return true\n    }\n  }\n\n  if (typeof mixedVar === 'object') {\n    for (key in mixedVar) {\n      if (mixedVar.hasOwnProperty(key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  return false\n}\n","source":"php/var/empty.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - empty(null)\n  - empty(undefined)\n  - 'empty([])'\n  - 'empty({})'\n  - 'empty({''aFunc'' : function () { alert(''humpty''); } })'\nestarget: es5\nreturns:\n  - 'true'\n  - 'true'\n  - 'true'\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - Philippe Baumann\n  improved by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Francesco\n    - Marc Jansen\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - LH\n    - 'Stoyan Kyosev (http://www.svest.org/)'\nnotes: []\nlayout: function\ntitle: php'sempty in JavaScript\nfunction: empty\ncategory: var\nlanguage: php\npermalink: php/var/empty/\nalias:\n  - /functions/php/empty/\n  - /functions/var/empty/\n  - /php/empty/\n  - /functions/empty/\n---\nmodule.exports = function empty (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/empty/\n  // original by: Philippe Baumann\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: LH\n  //    input by: Stoyan Kyosev (http://www.svest.org/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Francesco\n  // improved by: Marc Jansen\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: empty(null)\n  //   returns 1: true\n  //   example 2: empty(undefined)\n  //   returns 2: true\n  //   example 3: empty([])\n  //   returns 3: true\n  //   example 4: empty({})\n  //   returns 4: true\n  //   example 5: empty({'aFunc' : function () { alert('humpty'); } })\n  //   returns 5: false\n\n  var undef\n  var key\n  var i\n  var len\n  var emptyValues = [undef, null, false, 0, '', '0']\n\n  for (i = 0, len = emptyValues.length; i < len; i++) {\n    if (mixedVar === emptyValues[i]) {\n      return true\n    }\n  }\n\n  if (typeof mixedVar === 'object') {\n    for (key in mixedVar) {\n      if (mixedVar.hasOwnProperty(key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/empty/index.html","comments":1,"_id":"cinoeja26008kou9yvlxw20w7","content":"module.exports = function empty (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/empty/\n  // original by: Philippe Baumann\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: LH\n  //    input by: Stoyan Kyosev (http://www.svest.org/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Francesco\n  // improved by: Marc Jansen\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: empty(null)\n  //   returns 1: true\n  //   example 2: empty(undefined)\n  //   returns 2: true\n  //   example 3: empty([])\n  //   returns 3: true\n  //   example 4: empty({})\n  //   returns 4: true\n  //   example 5: empty({'aFunc' : function () { alert('humpty'); } })\n  //   returns 5: false\n\n  var undef\n  var key\n  var i\n  var len\n  var emptyValues = [undef, null, false, 0, '', '0']\n\n  for (i = 0, len = emptyValues.length; i < len; i++) {\n    if (mixedVar === emptyValues[i]) {\n      return true\n    }\n  }\n\n  if (typeof mixedVar === 'object') {\n    for (key in mixedVar) {\n      if (mixedVar.hasOwnProperty(key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function empty (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/empty/\n  // original by: Philippe Baumann\n  //    input by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: LH\n  //    input by: Stoyan Kyosev (http://www.svest.org/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Francesco\n  // improved by: Marc Jansen\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: empty(null)\n  //   returns 1: true\n  //   example 2: empty(undefined)\n  //   returns 2: true\n  //   example 3: empty([])\n  //   returns 3: true\n  //   example 4: empty({})\n  //   returns 4: true\n  //   example 5: empty({'aFunc' : function () { alert('humpty'); } })\n  //   returns 5: false\n\n  var undef\n  var key\n  var i\n  var len\n  var emptyValues = [undef, null, false, 0, '', '0']\n\n  for (i = 0, len = emptyValues.length; i < len; i++) {\n    if (mixedVar === emptyValues[i]) {\n      return true\n    }\n  }\n\n  if (typeof mixedVar === 'object') {\n    for (key in mixedVar) {\n      if (mixedVar.hasOwnProperty(key)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["floatval('150.03_page-section')","floatval('page: 3')\nfloatval('-50 + 8')"],"estarget":"es5","returns":["150.03","0\n-50"],"dependencies":[],"authors":{"original by":["Michael White (http://getsprink.com)"]},"notes":["The native parseFloat() method of JavaScript returns NaN\nwhen it encounters a string before an int or float value."],"layout":"function","title":"php'sfloatval in JavaScript","function":"floatval","category":"var","language":"php","alias":["/functions/php/floatval/","/functions/var/floatval/","/php/floatval/","/functions/floatval/"],"_content":"module.exports = function floatval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/floatval/\n  // original by: Michael White (http://getsprink.com)\n  //      note 1: The native parseFloat() method of JavaScript returns NaN\n  //      note 1: when it encounters a string before an int or float value.\n  //   example 1: floatval('150.03_page-section')\n  //   returns 1: 150.03\n  //   example 2: floatval('page: 3')\n  //   example 2: floatval('-50 + 8')\n  //   returns 2: 0\n  //   returns 2: -50\n\n  return (parseFloat(mixedVar) || 0)\n}\n","source":"php/var/floatval.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - floatval('150.03_page-section')\n  - |-\n    floatval('page: 3')\n    floatval('-50 + 8')\nestarget: es5\nreturns:\n  - '150.03'\n  - |-\n    0\n    -50\ndependencies: []\nauthors:\n  original by:\n    - 'Michael White (http://getsprink.com)'\nnotes:\n  - |-\n    The native parseFloat() method of JavaScript returns NaN\n    when it encounters a string before an int or float value.\nlayout: function\ntitle: php'sfloatval in JavaScript\nfunction: floatval\ncategory: var\nlanguage: php\npermalink: php/var/floatval/\nalias:\n  - /functions/php/floatval/\n  - /functions/var/floatval/\n  - /php/floatval/\n  - /functions/floatval/\n---\nmodule.exports = function floatval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/floatval/\n  // original by: Michael White (http://getsprink.com)\n  //      note 1: The native parseFloat() method of JavaScript returns NaN\n  //      note 1: when it encounters a string before an int or float value.\n  //   example 1: floatval('150.03_page-section')\n  //   returns 1: 150.03\n  //   example 2: floatval('page: 3')\n  //   example 2: floatval('-50 + 8')\n  //   returns 2: 0\n  //   returns 2: -50\n\n  return (parseFloat(mixedVar) || 0)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/floatval/index.html","comments":1,"_id":"cinoeja27008lou9ybhghv51d","content":"module.exports = function floatval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/floatval/\n  // original by: Michael White (http://getsprink.com)\n  //      note 1: The native parseFloat() method of JavaScript returns NaN\n  //      note 1: when it encounters a string before an int or float value.\n  //   example 1: floatval('150.03_page-section')\n  //   returns 1: 150.03\n  //   example 2: floatval('page: 3')\n  //   example 2: floatval('-50 + 8')\n  //   returns 2: 0\n  //   returns 2: -50\n\n  return (parseFloat(mixedVar) || 0)\n}\n","excerpt":"","more":"module.exports = function floatval (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/floatval/\n  // original by: Michael White (http://getsprink.com)\n  //      note 1: The native parseFloat() method of JavaScript returns NaN\n  //      note 1: when it encounters a string before an int or float value.\n  //   example 1: floatval('150.03_page-section')\n  //   returns 1: 150.03\n  //   example 2: floatval('page: 3')\n  //   example 2: floatval('-50 + 8')\n  //   returns 2: 0\n  //   returns 2: -50\n\n  return (parseFloat(mixedVar) || 0)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["gettype(1)","gettype(undefined)","gettype({0: 'Kevin van Zonneveld'})","gettype('foo')","gettype({0: function () {return false;}})","gettype({0: 'test', length: 1, splice: function () {}})","gettype(['test'])"],"estarget":"es5","returns":["'integer'","'undefined'","'object'","'string'","'object'","'object'","'array'"],"dependencies":[],"authors":{"original by":["Paulo Freitas"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Douglas Crockford (http://javascript.crockford.com)","Brett Zamir (http://brett-zamir.me)"],"input by":["KELAN"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sgettype in JavaScript","function":"gettype","category":"var","language":"php","alias":["/functions/php/gettype/","/functions/var/gettype/","/php/gettype/","/functions/gettype/"],"_content":"module.exports = function gettype (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/gettype/\n  // original by: Paulo Freitas\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Douglas Crockford (http://javascript.crockford.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: KELAN\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: gettype(1)\n  //   returns 1: 'integer'\n  //   example 2: gettype(undefined)\n  //   returns 2: 'undefined'\n  //   example 3: gettype({0: 'Kevin van Zonneveld'})\n  //   returns 3: 'object'\n  //   example 4: gettype('foo')\n  //   returns 4: 'string'\n  //   example 5: gettype({0: function () {return false;}})\n  //   returns 5: 'object'\n  //   example 6: gettype({0: 'test', length: 1, splice: function () {}})\n  //   returns 6: 'object'\n  //   example 7: gettype(['test'])\n  //   returns 7: 'array'\n\n  var isFloat = require('../var/is_float')\n\n  var s = typeof mixedVar\n  var name\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (s === 'object') {\n    if (mixedVar !== null) {\n      // From: http://javascript.crockford.com/remedial.html\n      // @todo: Break up this lengthy if statement\n      if (typeof mixedVar.length === 'number' &&\n        !(mixedVar.propertyIsEnumerable('length')) &&\n        typeof mixedVar.splice === 'function') {\n        s = 'array'\n      } else if (mixedVar.constructor && _getFuncName(mixedVar.constructor)) {\n        name = _getFuncName(mixedVar.constructor)\n        if (name === 'Date') {\n          // not in PHP\n          s = 'date'\n        } else if (name === 'RegExp') {\n          // not in PHP\n          s = 'regexp'\n        } else if (name === 'LOCUTUS_Resource') {\n          // Check against our own resource constructor\n          s = 'resource'\n        }\n      }\n    } else {\n      s = 'null'\n    }\n  } else if (s === 'number') {\n    s = isFloat(mixedVar) ? 'double' : 'integer'\n  }\n\n  return s\n}\n","source":"php/var/gettype.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - gettype(1)\n  - gettype(undefined)\n  - 'gettype({0: ''Kevin van Zonneveld''})'\n  - gettype('foo')\n  - 'gettype({0: function () {return false;}})'\n  - 'gettype({0: ''test'', length: 1, splice: function () {}})'\n  - 'gettype([''test''])'\nestarget: es5\nreturns:\n  - '''integer'''\n  - '''undefined'''\n  - '''object'''\n  - '''string'''\n  - '''object'''\n  - '''object'''\n  - '''array'''\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Douglas Crockford (http://javascript.crockford.com)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - KELAN\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sgettype in JavaScript\nfunction: gettype\ncategory: var\nlanguage: php\npermalink: php/var/gettype/\nalias:\n  - /functions/php/gettype/\n  - /functions/var/gettype/\n  - /php/gettype/\n  - /functions/gettype/\n---\nmodule.exports = function gettype (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/gettype/\n  // original by: Paulo Freitas\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Douglas Crockford (http://javascript.crockford.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: KELAN\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: gettype(1)\n  //   returns 1: 'integer'\n  //   example 2: gettype(undefined)\n  //   returns 2: 'undefined'\n  //   example 3: gettype({0: 'Kevin van Zonneveld'})\n  //   returns 3: 'object'\n  //   example 4: gettype('foo')\n  //   returns 4: 'string'\n  //   example 5: gettype({0: function () {return false;}})\n  //   returns 5: 'object'\n  //   example 6: gettype({0: 'test', length: 1, splice: function () {}})\n  //   returns 6: 'object'\n  //   example 7: gettype(['test'])\n  //   returns 7: 'array'\n\n  var isFloat = require('../var/is_float')\n\n  var s = typeof mixedVar\n  var name\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (s === 'object') {\n    if (mixedVar !== null) {\n      // From: http://javascript.crockford.com/remedial.html\n      // @todo: Break up this lengthy if statement\n      if (typeof mixedVar.length === 'number' &&\n        !(mixedVar.propertyIsEnumerable('length')) &&\n        typeof mixedVar.splice === 'function') {\n        s = 'array'\n      } else if (mixedVar.constructor && _getFuncName(mixedVar.constructor)) {\n        name = _getFuncName(mixedVar.constructor)\n        if (name === 'Date') {\n          // not in PHP\n          s = 'date'\n        } else if (name === 'RegExp') {\n          // not in PHP\n          s = 'regexp'\n        } else if (name === 'LOCUTUS_Resource') {\n          // Check against our own resource constructor\n          s = 'resource'\n        }\n      }\n    } else {\n      s = 'null'\n    }\n  } else if (s === 'number') {\n    s = isFloat(mixedVar) ? 'double' : 'integer'\n  }\n\n  return s\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/gettype/index.html","comments":1,"_id":"cinoeja27008mou9yv0qxb800","content":"module.exports = function gettype (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/gettype/\n  // original by: Paulo Freitas\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Douglas Crockford (http://javascript.crockford.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: KELAN\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: gettype(1)\n  //   returns 1: 'integer'\n  //   example 2: gettype(undefined)\n  //   returns 2: 'undefined'\n  //   example 3: gettype({0: 'Kevin van Zonneveld'})\n  //   returns 3: 'object'\n  //   example 4: gettype('foo')\n  //   returns 4: 'string'\n  //   example 5: gettype({0: function () {return false;}})\n  //   returns 5: 'object'\n  //   example 6: gettype({0: 'test', length: 1, splice: function () {}})\n  //   returns 6: 'object'\n  //   example 7: gettype(['test'])\n  //   returns 7: 'array'\n\n  var isFloat = require('../var/is_float')\n\n  var s = typeof mixedVar\n  var name\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (s === 'object') {\n    if (mixedVar !== null) {\n      // From: http://javascript.crockford.com/remedial.html\n      // @todo: Break up this lengthy if statement\n      if (typeof mixedVar.length === 'number' &&\n        !(mixedVar.propertyIsEnumerable('length')) &&\n        typeof mixedVar.splice === 'function') {\n        s = 'array'\n      } else if (mixedVar.constructor && _getFuncName(mixedVar.constructor)) {\n        name = _getFuncName(mixedVar.constructor)\n        if (name === 'Date') {\n          // not in PHP\n          s = 'date'\n        } else if (name === 'RegExp') {\n          // not in PHP\n          s = 'regexp'\n        } else if (name === 'LOCUTUS_Resource') {\n          // Check against our own resource constructor\n          s = 'resource'\n        }\n      }\n    } else {\n      s = 'null'\n    }\n  } else if (s === 'number') {\n    s = isFloat(mixedVar) ? 'double' : 'integer'\n  }\n\n  return s\n}\n","excerpt":"","more":"module.exports = function gettype (mixedVar) {\n  //  discuss at: http://locutusjs.io/php/gettype/\n  // original by: Paulo Freitas\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Douglas Crockford (http://javascript.crockford.com)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: KELAN\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: gettype(1)\n  //   returns 1: 'integer'\n  //   example 2: gettype(undefined)\n  //   returns 2: 'undefined'\n  //   example 3: gettype({0: 'Kevin van Zonneveld'})\n  //   returns 3: 'object'\n  //   example 4: gettype('foo')\n  //   returns 4: 'string'\n  //   example 5: gettype({0: function () {return false;}})\n  //   returns 5: 'object'\n  //   example 6: gettype({0: 'test', length: 1, splice: function () {}})\n  //   returns 6: 'object'\n  //   example 7: gettype(['test'])\n  //   returns 7: 'array'\n\n  var isFloat = require('../var/is_float')\n\n  var s = typeof mixedVar\n  var name\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (s === 'object') {\n    if (mixedVar !== null) {\n      // From: http://javascript.crockford.com/remedial.html\n      // @todo: Break up this lengthy if statement\n      if (typeof mixedVar.length === 'number' &&\n        !(mixedVar.propertyIsEnumerable('length')) &&\n        typeof mixedVar.splice === 'function') {\n        s = 'array'\n      } else if (mixedVar.constructor && _getFuncName(mixedVar.constructor)) {\n        name = _getFuncName(mixedVar.constructor)\n        if (name === 'Date') {\n          // not in PHP\n          s = 'date'\n        } else if (name === 'RegExp') {\n          // not in PHP\n          s = 'regexp'\n        } else if (name === 'LOCUTUS_Resource') {\n          // Check against our own resource constructor\n          s = 'resource'\n        }\n      }\n    } else {\n      s = 'null'\n    }\n  } else if (s === 'number') {\n    s = isFloat(mixedVar) ? 'double' : 'integer'\n  }\n\n  return s\n}\n"},{"type":"category","language":"php","category":"var","title":"var","_content":"","source":"php/var/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: var\ntitle: var\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/index.html","comments":1,"layout":"page","_id":"cinoeja27008nou9ykx6l5hlz","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["intval('Kevin van Zonneveld')","intval(4.2)","intval(42, 8)","intval('09')","intval('1e', 16)"],"estarget":"es5","returns":["0","4","42","9","30"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["stensi"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)","Rafał Kukawski (http://blog.kukawski.pl)"],"input by":["Matteo"]},"notes":[],"layout":"function","title":"php'sintval in JavaScript","function":"intval","category":"var","language":"php","alias":["/functions/php/intval/","/functions/var/intval/","/php/intval/","/functions/intval/"],"_content":"module.exports = function intval (mixedVar, base) {\n  //  discuss at: http://locutusjs.io/php/intval/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: stensi\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Matteo\n  //   example 1: intval('Kevin van Zonneveld')\n  //   returns 1: 0\n  //   example 2: intval(4.2)\n  //   returns 2: 4\n  //   example 3: intval(42, 8)\n  //   returns 3: 42\n  //   example 4: intval('09')\n  //   returns 4: 9\n  //   example 5: intval('1e', 16)\n  //   returns 5: 30\n\n  var tmp\n\n  var type = typeof mixedVar\n\n  if (type === 'boolean') {\n    return +mixedVar\n  } else if (type === 'string') {\n    tmp = parseInt(mixedVar, base || 10)\n    return (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp\n  } else if (type === 'number' && isFinite(mixedVar)) {\n    return mixedVar | 0\n  } else {\n    return 0\n  }\n}\n","source":"php/var/intval.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - intval('Kevin van Zonneveld')\n  - intval(4.2)\n  - 'intval(42, 8)'\n  - intval('09')\n  - 'intval(''1e'', 16)'\nestarget: es5\nreturns:\n  - '0'\n  - '4'\n  - '42'\n  - '9'\n  - '30'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - stensi\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  input by:\n    - Matteo\nnotes: []\nlayout: function\ntitle: php'sintval in JavaScript\nfunction: intval\ncategory: var\nlanguage: php\npermalink: php/var/intval/\nalias:\n  - /functions/php/intval/\n  - /functions/var/intval/\n  - /php/intval/\n  - /functions/intval/\n---\nmodule.exports = function intval (mixedVar, base) {\n  //  discuss at: http://locutusjs.io/php/intval/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: stensi\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Matteo\n  //   example 1: intval('Kevin van Zonneveld')\n  //   returns 1: 0\n  //   example 2: intval(4.2)\n  //   returns 2: 4\n  //   example 3: intval(42, 8)\n  //   returns 3: 42\n  //   example 4: intval('09')\n  //   returns 4: 9\n  //   example 5: intval('1e', 16)\n  //   returns 5: 30\n\n  var tmp\n\n  var type = typeof mixedVar\n\n  if (type === 'boolean') {\n    return +mixedVar\n  } else if (type === 'string') {\n    tmp = parseInt(mixedVar, base || 10)\n    return (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp\n  } else if (type === 'number' && isFinite(mixedVar)) {\n    return mixedVar | 0\n  } else {\n    return 0\n  }\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/intval/index.html","comments":1,"_id":"cinoeja28008oou9y49qrskco","content":"module.exports = function intval (mixedVar, base) {\n  //  discuss at: http://locutusjs.io/php/intval/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: stensi\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Matteo\n  //   example 1: intval('Kevin van Zonneveld')\n  //   returns 1: 0\n  //   example 2: intval(4.2)\n  //   returns 2: 4\n  //   example 3: intval(42, 8)\n  //   returns 3: 42\n  //   example 4: intval('09')\n  //   returns 4: 9\n  //   example 5: intval('1e', 16)\n  //   returns 5: 30\n\n  var tmp\n\n  var type = typeof mixedVar\n\n  if (type === 'boolean') {\n    return +mixedVar\n  } else if (type === 'string') {\n    tmp = parseInt(mixedVar, base || 10)\n    return (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp\n  } else if (type === 'number' && isFinite(mixedVar)) {\n    return mixedVar | 0\n  } else {\n    return 0\n  }\n}\n","excerpt":"","more":"module.exports = function intval (mixedVar, base) {\n  //  discuss at: http://locutusjs.io/php/intval/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: stensi\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  //    input by: Matteo\n  //   example 1: intval('Kevin van Zonneveld')\n  //   returns 1: 0\n  //   example 2: intval(4.2)\n  //   returns 2: 4\n  //   example 3: intval(42, 8)\n  //   returns 3: 42\n  //   example 4: intval('09')\n  //   returns 4: 9\n  //   example 5: intval('1e', 16)\n  //   returns 5: 30\n\n  var tmp\n\n  var type = typeof mixedVar\n\n  if (type === 'boolean') {\n    return +mixedVar\n  } else if (type === 'string') {\n    tmp = parseInt(mixedVar, base || 10)\n    return (isNaN(tmp) || !isFinite(tmp)) ? 0 : tmp\n  } else if (type === 'number' && isFinite(mixedVar)) {\n    return mixedVar | 0\n  } else {\n    return 0\n  }\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_array(['Kevin', 'van', 'Zonneveld'])","is_array('Kevin van Zonneveld')","is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})","ini_set('locutus.objectsAsArrays', 0)\nis_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})","is_array(function tmp_a (){ this.name = 'Kevin' })"],"estarget":"es5","returns":["true","false","true","false","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Legaev Andrey","Onno Marsman (https://twitter.com/onnomarsman)","Brett Zamir (http://brett-zamir.me)","Nathan Sepulveda","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Cord","Manish","Brett Zamir (http://brett-zamir.me)"]},"notes":["In Locutus, javascript objects are like php associative arrays,\nthus JavaScript objects will also\nreturn true in this function (except for objects which inherit properties,\nbeing thus used as objects),\nunless you do ini_set('locutus.objectsAsArrays', 0),\nin which case only genuine JavaScript arrays\nwill return true"],"layout":"function","title":"php'sis_array in JavaScript","function":"is_array","category":"var","language":"php","alias":["/functions/php/is_array/","/functions/var/is_array/","/php/is_array/","/functions/is_array/"],"_content":"module.exports = function is_array (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Nathan Sepulveda\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Cord\n  // bugfixed by: Manish\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: In Locutus, javascript objects are like php associative arrays,\n  //      note 1: thus JavaScript objects will also\n  //      note 1: return true in this function (except for objects which inherit properties,\n  //      note 1: being thus used as objects),\n  //      note 1: unless you do ini_set('locutus.objectsAsArrays', 0),\n  //      note 1: in which case only genuine JavaScript arrays\n  //      note 1: will return true\n  //   example 1: is_array(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: is_array('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 3: true\n  //   example 4: ini_set('locutus.objectsAsArrays', 0)\n  //   example 4: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 4: false\n  //   example 5: is_array(function tmp_a (){ this.name = 'Kevin' })\n  //   returns 5: false\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n  var _isArray = function (mixedVar) {\n    // return Object.prototype.toString.call(mixedVar) === '[object Array]';\n    // The above works, but let's do the even more stringent approach:\n    // (since Object.prototype.toString could be overridden)\n    // Null, Not an object, no length property so couldn't be an Array (or String)\n    if (!mixedVar || typeof mixedVar !== 'object' || typeof mixedVar.length !== 'number') {\n      return false\n    }\n    var len = mixedVar.length\n    mixedVar[mixedVar.length] = 'bogus'\n    // The only way I can think of to get around this (or where there would be trouble)\n    // would be to have an object defined\n    // with a custom \"length\" getter which changed behavior on each call\n    // (or a setter to mess up the following below) or a custom\n    // setter for numeric properties, but even that would need to listen for\n    // specific indexes; but there should be no false negatives\n    // and such a false positive would need to rely on later JavaScript\n    // innovations like __defineSetter__\n    if (len !== mixedVar.length) {\n      // We know it's an array since length auto-changed with the addition of a\n      // numeric property at its length end, so safely get rid of our bogus element\n      mixedVar.length -= 1\n      return true\n    }\n    // Get rid of the property we added onto a non-array object; only possible\n    // side-effect is if the user adds back the property later, it will iterate\n    // this property in the older order placement in IE (an order which should not\n    // be depended on anyways)\n    delete mixedVar[mixedVar.length]\n    return false\n  }\n\n  if (!mixedVar || typeof mixedVar !== 'object') {\n    return false\n  }\n\n  var isArray = _isArray(mixedVar)\n\n  if (isArray) {\n    return true\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.objectsAsArrays') : undefined) || 'on'\n  if (iniVal === 'on') {\n    var asString = Object.prototype.toString.call(mixedVar)\n    var asFunc = _getFuncName(mixedVar.constructor)\n\n    if (asString === '[object Object]' && asFunc === 'Object') {\n      // Most likely a literal and intended as assoc. array\n      return true\n    }\n  }\n\n  return false\n}\n","source":"php/var/is_array.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'is_array([''Kevin'', ''van'', ''Zonneveld''])'\n  - is_array('Kevin van Zonneveld')\n  - 'is_array({0: ''Kevin'', 1: ''van'', 2: ''Zonneveld''})'\n  - |-\n    ini_set('locutus.objectsAsArrays', 0)\n    is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  - 'is_array(function tmp_a (){ this.name = ''Kevin'' })'\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\n  - 'true'\n  - 'false'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Legaev Andrey\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - Nathan Sepulveda\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - Cord\n    - Manish\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    In Locutus, javascript objects are like php associative arrays,\n    thus JavaScript objects will also\n    return true in this function (except for objects which inherit properties,\n    being thus used as objects),\n    unless you do ini_set('locutus.objectsAsArrays', 0),\n    in which case only genuine JavaScript arrays\n    will return true\nlayout: function\ntitle: php'sis_array in JavaScript\nfunction: is_array\ncategory: var\nlanguage: php\npermalink: php/var/is_array/\nalias:\n  - /functions/php/is_array/\n  - /functions/var/is_array/\n  - /php/is_array/\n  - /functions/is_array/\n---\nmodule.exports = function is_array (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Nathan Sepulveda\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Cord\n  // bugfixed by: Manish\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: In Locutus, javascript objects are like php associative arrays,\n  //      note 1: thus JavaScript objects will also\n  //      note 1: return true in this function (except for objects which inherit properties,\n  //      note 1: being thus used as objects),\n  //      note 1: unless you do ini_set('locutus.objectsAsArrays', 0),\n  //      note 1: in which case only genuine JavaScript arrays\n  //      note 1: will return true\n  //   example 1: is_array(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: is_array('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 3: true\n  //   example 4: ini_set('locutus.objectsAsArrays', 0)\n  //   example 4: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 4: false\n  //   example 5: is_array(function tmp_a (){ this.name = 'Kevin' })\n  //   returns 5: false\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n  var _isArray = function (mixedVar) {\n    // return Object.prototype.toString.call(mixedVar) === '[object Array]';\n    // The above works, but let's do the even more stringent approach:\n    // (since Object.prototype.toString could be overridden)\n    // Null, Not an object, no length property so couldn't be an Array (or String)\n    if (!mixedVar || typeof mixedVar !== 'object' || typeof mixedVar.length !== 'number') {\n      return false\n    }\n    var len = mixedVar.length\n    mixedVar[mixedVar.length] = 'bogus'\n    // The only way I can think of to get around this (or where there would be trouble)\n    // would be to have an object defined\n    // with a custom \"length\" getter which changed behavior on each call\n    // (or a setter to mess up the following below) or a custom\n    // setter for numeric properties, but even that would need to listen for\n    // specific indexes; but there should be no false negatives\n    // and such a false positive would need to rely on later JavaScript\n    // innovations like __defineSetter__\n    if (len !== mixedVar.length) {\n      // We know it's an array since length auto-changed with the addition of a\n      // numeric property at its length end, so safely get rid of our bogus element\n      mixedVar.length -= 1\n      return true\n    }\n    // Get rid of the property we added onto a non-array object; only possible\n    // side-effect is if the user adds back the property later, it will iterate\n    // this property in the older order placement in IE (an order which should not\n    // be depended on anyways)\n    delete mixedVar[mixedVar.length]\n    return false\n  }\n\n  if (!mixedVar || typeof mixedVar !== 'object') {\n    return false\n  }\n\n  var isArray = _isArray(mixedVar)\n\n  if (isArray) {\n    return true\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.objectsAsArrays') : undefined) || 'on'\n  if (iniVal === 'on') {\n    var asString = Object.prototype.toString.call(mixedVar)\n    var asFunc = _getFuncName(mixedVar.constructor)\n\n    if (asString === '[object Object]' && asFunc === 'Object') {\n      // Most likely a literal and intended as assoc. array\n      return true\n    }\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_array/index.html","comments":1,"_id":"cinoeja28008pou9yc62zl50i","content":"module.exports = function is_array (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Nathan Sepulveda\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Cord\n  // bugfixed by: Manish\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: In Locutus, javascript objects are like php associative arrays,\n  //      note 1: thus JavaScript objects will also\n  //      note 1: return true in this function (except for objects which inherit properties,\n  //      note 1: being thus used as objects),\n  //      note 1: unless you do ini_set('locutus.objectsAsArrays', 0),\n  //      note 1: in which case only genuine JavaScript arrays\n  //      note 1: will return true\n  //   example 1: is_array(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: is_array('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 3: true\n  //   example 4: ini_set('locutus.objectsAsArrays', 0)\n  //   example 4: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 4: false\n  //   example 5: is_array(function tmp_a (){ this.name = 'Kevin' })\n  //   returns 5: false\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n  var _isArray = function (mixedVar) {\n    // return Object.prototype.toString.call(mixedVar) === '[object Array]';\n    // The above works, but let's do the even more stringent approach:\n    // (since Object.prototype.toString could be overridden)\n    // Null, Not an object, no length property so couldn't be an Array (or String)\n    if (!mixedVar || typeof mixedVar !== 'object' || typeof mixedVar.length !== 'number') {\n      return false\n    }\n    var len = mixedVar.length\n    mixedVar[mixedVar.length] = 'bogus'\n    // The only way I can think of to get around this (or where there would be trouble)\n    // would be to have an object defined\n    // with a custom \"length\" getter which changed behavior on each call\n    // (or a setter to mess up the following below) or a custom\n    // setter for numeric properties, but even that would need to listen for\n    // specific indexes; but there should be no false negatives\n    // and such a false positive would need to rely on later JavaScript\n    // innovations like __defineSetter__\n    if (len !== mixedVar.length) {\n      // We know it's an array since length auto-changed with the addition of a\n      // numeric property at its length end, so safely get rid of our bogus element\n      mixedVar.length -= 1\n      return true\n    }\n    // Get rid of the property we added onto a non-array object; only possible\n    // side-effect is if the user adds back the property later, it will iterate\n    // this property in the older order placement in IE (an order which should not\n    // be depended on anyways)\n    delete mixedVar[mixedVar.length]\n    return false\n  }\n\n  if (!mixedVar || typeof mixedVar !== 'object') {\n    return false\n  }\n\n  var isArray = _isArray(mixedVar)\n\n  if (isArray) {\n    return true\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.objectsAsArrays') : undefined) || 'on'\n  if (iniVal === 'on') {\n    var asString = Object.prototype.toString.call(mixedVar)\n    var asFunc = _getFuncName(mixedVar.constructor)\n\n    if (asString === '[object Object]' && asFunc === 'Object') {\n      // Most likely a literal and intended as assoc. array\n      return true\n    }\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function is_array (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_array/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Nathan Sepulveda\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Cord\n  // bugfixed by: Manish\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: In Locutus, javascript objects are like php associative arrays,\n  //      note 1: thus JavaScript objects will also\n  //      note 1: return true in this function (except for objects which inherit properties,\n  //      note 1: being thus used as objects),\n  //      note 1: unless you do ini_set('locutus.objectsAsArrays', 0),\n  //      note 1: in which case only genuine JavaScript arrays\n  //      note 1: will return true\n  //   example 1: is_array(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: true\n  //   example 2: is_array('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 3: true\n  //   example 4: ini_set('locutus.objectsAsArrays', 0)\n  //   example 4: is_array({0: 'Kevin', 1: 'van', 2: 'Zonneveld'})\n  //   returns 4: false\n  //   example 5: is_array(function tmp_a (){ this.name = 'Kevin' })\n  //   returns 5: false\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n  var _isArray = function (mixedVar) {\n    // return Object.prototype.toString.call(mixedVar) === '[object Array]';\n    // The above works, but let's do the even more stringent approach:\n    // (since Object.prototype.toString could be overridden)\n    // Null, Not an object, no length property so couldn't be an Array (or String)\n    if (!mixedVar || typeof mixedVar !== 'object' || typeof mixedVar.length !== 'number') {\n      return false\n    }\n    var len = mixedVar.length\n    mixedVar[mixedVar.length] = 'bogus'\n    // The only way I can think of to get around this (or where there would be trouble)\n    // would be to have an object defined\n    // with a custom \"length\" getter which changed behavior on each call\n    // (or a setter to mess up the following below) or a custom\n    // setter for numeric properties, but even that would need to listen for\n    // specific indexes; but there should be no false negatives\n    // and such a false positive would need to rely on later JavaScript\n    // innovations like __defineSetter__\n    if (len !== mixedVar.length) {\n      // We know it's an array since length auto-changed with the addition of a\n      // numeric property at its length end, so safely get rid of our bogus element\n      mixedVar.length -= 1\n      return true\n    }\n    // Get rid of the property we added onto a non-array object; only possible\n    // side-effect is if the user adds back the property later, it will iterate\n    // this property in the older order placement in IE (an order which should not\n    // be depended on anyways)\n    delete mixedVar[mixedVar.length]\n    return false\n  }\n\n  if (!mixedVar || typeof mixedVar !== 'object') {\n    return false\n  }\n\n  var isArray = _isArray(mixedVar)\n\n  if (isArray) {\n    return true\n  }\n\n  var iniVal = (typeof require !== 'undefined' ? require('../info/ini_get')('locutus.objectsAsArrays') : undefined) || 'on'\n  if (iniVal === 'on') {\n    var asString = Object.prototype.toString.call(mixedVar)\n    var asFunc = _getFuncName(mixedVar.constructor)\n\n    if (asString === '[object Object]' && asFunc === 'Object') {\n      // Most likely a literal and intended as assoc. array\n      return true\n    }\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_binary('This could be binary as far as JavaScript knows...')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sis_binary in JavaScript","function":"is_binary","category":"var","language":"php","alias":["/functions/php/is_binary/","/functions/var/is_binary/","/php/is_binary/","/functions/is_binary/"],"_content":"module.exports = function is_binary (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_binary/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_binary('This could be binary as far as JavaScript knows...')\n  //   returns 1: true\n\n  return typeof vr === 'string' // If it is a string of any kind, it could be binary\n}\n","source":"php/var/is_binary.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_binary('This could be binary as far as JavaScript knows...')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sis_binary in JavaScript\nfunction: is_binary\ncategory: var\nlanguage: php\npermalink: php/var/is_binary/\nalias:\n  - /functions/php/is_binary/\n  - /functions/var/is_binary/\n  - /php/is_binary/\n  - /functions/is_binary/\n---\nmodule.exports = function is_binary (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_binary/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_binary('This could be binary as far as JavaScript knows...')\n  //   returns 1: true\n\n  return typeof vr === 'string' // If it is a string of any kind, it could be binary\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_binary/index.html","comments":1,"_id":"cinoeja28008qou9y3svviii5","content":"module.exports = function is_binary (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_binary/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_binary('This could be binary as far as JavaScript knows...')\n  //   returns 1: true\n\n  return typeof vr === 'string' // If it is a string of any kind, it could be binary\n}\n","excerpt":"","more":"module.exports = function is_binary (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_binary/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_binary('This could be binary as far as JavaScript knows...')\n  //   returns 1: true\n\n  return typeof vr === 'string' // If it is a string of any kind, it could be binary\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_bool(false)","is_bool(0)"],"estarget":"es5","returns":["true","false"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"],"improved by":["CoursesWeb (http://www.coursesweb.net/)"]},"notes":[],"layout":"function","title":"php'sis_bool in JavaScript","function":"is_bool","category":"var","language":"php","alias":["/functions/php/is_bool/","/functions/var/is_bool/","/php/is_bool/","/functions/is_bool/"],"_content":"module.exports = function is_bool (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_bool/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: CoursesWeb (http://www.coursesweb.net/)\n  //   example 1: is_bool(false)\n  //   returns 1: true\n  //   example 2: is_bool(0)\n  //   returns 2: false\n\n  return (mixedVar === true || mixedVar === false) // Faster (in FF) than type checking\n}\n","source":"php/var/is_bool.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_bool(false)\n  - is_bool(0)\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  improved by:\n    - 'CoursesWeb (http://www.coursesweb.net/)'\nnotes: []\nlayout: function\ntitle: php'sis_bool in JavaScript\nfunction: is_bool\ncategory: var\nlanguage: php\npermalink: php/var/is_bool/\nalias:\n  - /functions/php/is_bool/\n  - /functions/var/is_bool/\n  - /php/is_bool/\n  - /functions/is_bool/\n---\nmodule.exports = function is_bool (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_bool/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: CoursesWeb (http://www.coursesweb.net/)\n  //   example 1: is_bool(false)\n  //   returns 1: true\n  //   example 2: is_bool(0)\n  //   returns 2: false\n\n  return (mixedVar === true || mixedVar === false) // Faster (in FF) than type checking\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_bool/index.html","comments":1,"_id":"cinoeja29008rou9y9g6eopie","content":"module.exports = function is_bool (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_bool/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: CoursesWeb (http://www.coursesweb.net/)\n  //   example 1: is_bool(false)\n  //   returns 1: true\n  //   example 2: is_bool(0)\n  //   returns 2: false\n\n  return (mixedVar === true || mixedVar === false) // Faster (in FF) than type checking\n}\n","excerpt":"","more":"module.exports = function is_bool (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_bool/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: CoursesWeb (http://www.coursesweb.net/)\n  //   example 1: is_bool(false)\n  //   returns 1: true\n  //   example 2: is_bool(0)\n  //   returns 2: false\n\n  return (mixedVar === true || mixedVar === false) // Faster (in FF) than type checking\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_buffer('This could be binary or a regular string...')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sis_buffer in JavaScript","function":"is_buffer","category":"var","language":"php","alias":["/functions/php/is_buffer/","/functions/var/is_buffer/","/php/is_buffer/","/functions/is_buffer/"],"_content":"module.exports = function is_buffer (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_buffer/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_buffer('This could be binary or a regular string...')\n  //   returns 1: true\n\n  return typeof vr === 'string'\n}\n","source":"php/var/is_buffer.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_buffer('This could be binary or a regular string...')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sis_buffer in JavaScript\nfunction: is_buffer\ncategory: var\nlanguage: php\npermalink: php/var/is_buffer/\nalias:\n  - /functions/php/is_buffer/\n  - /functions/var/is_buffer/\n  - /php/is_buffer/\n  - /functions/is_buffer/\n---\nmodule.exports = function is_buffer (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_buffer/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_buffer('This could be binary or a regular string...')\n  //   returns 1: true\n\n  return typeof vr === 'string'\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_buffer/index.html","comments":1,"_id":"cinoeja29008sou9ysdrovp8y","content":"module.exports = function is_buffer (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_buffer/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_buffer('This could be binary or a regular string...')\n  //   returns 1: true\n\n  return typeof vr === 'string'\n}\n","excerpt":"","more":"module.exports = function is_buffer (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_buffer/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: is_buffer('This could be binary or a regular string...')\n  //   returns 1: true\n\n  return typeof vr === 'string'\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_callable('is_callable')","is_callable('bogusFunction', true)","function SomeClass () {}\nSomeClass.prototype.someMethod = function (){}\nvar testObj = new SomeClass()\nis_callable([testObj, 'someMethod'], true, 'myVar')\nvar $result = myVar","is_callable(function () {})"],"estarget":"es5","returns":["true","true // gives true because does not do strict checking","'SomeClass::someMethod'","true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"input by":["François"]},"notes":["The variable callableName cannot work as a string variable passed by\nreference as in PHP (since JavaScript does not support passing\nstrings by reference), but instead will take the name of\na global variable and set that instead.\nWhen used on an object, depends on a constructor property\nbeing kept on the object prototype","Depending on the `callableName` that is passed, this function can use eval.\nThe eval input is however checked to only allow valid function names,\nSo it should not be unsafer than uses without eval (seeing as you can)\nalready pass any function to be executed here."],"layout":"function","title":"php'sis_callable in JavaScript","function":"is_callable","category":"var","language":"php","alias":["/functions/php/is_callable/","/functions/var/is_callable/","/php/is_callable/","/functions/is_callable/"],"_content":"module.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_callable/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: François\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  var name = ''\n  var obj = {}\n  var method = ''\n  var validFunctionName = false\n\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  } else {\n    return false\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n","source":"php/var/is_callable.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_callable('is_callable')\n  - 'is_callable(''bogusFunction'', true)'\n  - |-\n    function SomeClass () {}\n    SomeClass.prototype.someMethod = function (){}\n    var testObj = new SomeClass()\n    is_callable([testObj, 'someMethod'], true, 'myVar')\n    var $result = myVar\n  - 'is_callable(function () {})'\nestarget: es5\nreturns:\n  - 'true'\n  - true // gives true because does not do strict checking\n  - '''SomeClass::someMethod'''\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - François\nnotes:\n  - |-\n    The variable callableName cannot work as a string variable passed by\n    reference as in PHP (since JavaScript does not support passing\n    strings by reference), but instead will take the name of\n    a global variable and set that instead.\n    When used on an object, depends on a constructor property\n    being kept on the object prototype\n  - |-\n    Depending on the `callableName` that is passed, this function can use eval.\n    The eval input is however checked to only allow valid function names,\n    So it should not be unsafer than uses without eval (seeing as you can)\n    already pass any function to be executed here.\nlayout: function\ntitle: php'sis_callable in JavaScript\nfunction: is_callable\ncategory: var\nlanguage: php\npermalink: php/var/is_callable/\nalias:\n  - /functions/php/is_callable/\n  - /functions/var/is_callable/\n  - /php/is_callable/\n  - /functions/is_callable/\n---\nmodule.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_callable/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: François\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  var name = ''\n  var obj = {}\n  var method = ''\n  var validFunctionName = false\n\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  } else {\n    return false\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_callable/index.html","comments":1,"_id":"cinoeja29008tou9y5qi9045b","content":"module.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_callable/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: François\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  var name = ''\n  var obj = {}\n  var method = ''\n  var validFunctionName = false\n\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  } else {\n    return false\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n","excerpt":"","more":"module.exports = function is_callable (mixedVar, syntaxOnly, callableName) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_callable/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    input by: François\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The variable callableName cannot work as a string variable passed by\n  //      note 1: reference as in PHP (since JavaScript does not support passing\n  //      note 1: strings by reference), but instead will take the name of\n  //      note 1: a global variable and set that instead.\n  //      note 1: When used on an object, depends on a constructor property\n  //      note 1: being kept on the object prototype\n  //      note 2: Depending on the `callableName` that is passed, this function can use eval.\n  //      note 2: The eval input is however checked to only allow valid function names,\n  //      note 2: So it should not be unsafer than uses without eval (seeing as you can)\n  //      note 2: already pass any function to be executed here.\n  //   example 1: is_callable('is_callable')\n  //   returns 1: true\n  //   example 2: is_callable('bogusFunction', true)\n  //   returns 2: true // gives true because does not do strict checking\n  //   example 3: function SomeClass () {}\n  //   example 3: SomeClass.prototype.someMethod = function (){}\n  //   example 3: var testObj = new SomeClass()\n  //   example 3: is_callable([testObj, 'someMethod'], true, 'myVar')\n  //   example 3: var $result = myVar\n  //   returns 3: 'SomeClass::someMethod'\n  //   example 4: is_callable(function () {})\n  //   returns 4: true\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var validJSFunctionNamePattern = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/\n\n  var name = ''\n  var obj = {}\n  var method = ''\n  var validFunctionName = false\n\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  if (typeof mixedVar === 'string') {\n    obj = $global\n    method = mixedVar\n    name = mixedVar\n    validFunctionName = !!name.match(validJSFunctionNamePattern)\n  } else if (typeof mixedVar === 'function') {\n    return true\n  } else if (Object.prototype.toString.call(mixedVar) === '[object Array]' &&\n    mixedVar.length === 2 &&\n    typeof mixedVar[0] === 'object' &&\n    typeof mixedVar[1] === 'string') {\n    obj = mixedVar[0]\n    method = mixedVar[1]\n    name = (obj.constructor && getFuncName(obj.constructor)) + '::' + method\n  } else {\n    return false\n  }\n\n  if (syntaxOnly || typeof obj[method] === 'function') {\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  // validFunctionName avoids exploits\n  if (validFunctionName && typeof eval(method) === 'function') { // eslint-disable-line no-eval\n    if (callableName) {\n      $global[callableName] = name\n    }\n    return true\n  }\n\n  return false\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_double(186.31)"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_double in JavaScript","function":"is_double","category":"var","language":"php","alias":["/functions/php/is_double/","/functions/var/is_double/","/php/is_double/","/functions/is_double/"],"_content":"module.exports = function is_double (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_double/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_double(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","source":"php/var/is_double.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_double(186.31)\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_double in JavaScript\nfunction: is_double\ncategory: var\nlanguage: php\npermalink: php/var/is_double/\nalias:\n  - /functions/php/is_double/\n  - /functions/var/is_double/\n  - /php/is_double/\n  - /functions/is_double/\n---\nmodule.exports = function is_double (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_double/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_double(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_double/index.html","comments":1,"_id":"cinoeja2a008uou9yjjudnim1","content":"module.exports = function is_double (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_double/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_double(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_double (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_double/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_double(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_float(186.31)"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Paulo Freitas"],"improved by":["WebDevHobo (http://webdevhobo.blogspot.com/)","Rafał Kukawski (http://blog.kukawski.pl)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_float in JavaScript","function":"is_float","category":"var","language":"php","alias":["/functions/php/is_float/","/functions/var/is_float/","/php/is_float/","/functions/is_float/"],"_content":"module.exports = function is_float (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_float/\n  // original by: Paulo Freitas\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_float(186.31)\n  //   returns 1: true\n\n  return +mixedVar === mixedVar && (!isFinite(mixedVar) || !!(mixedVar % 1))\n}\n","source":"php/var/is_float.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_float(186.31)\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\n  improved by:\n    - 'WebDevHobo (http://webdevhobo.blogspot.com/)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_float in JavaScript\nfunction: is_float\ncategory: var\nlanguage: php\npermalink: php/var/is_float/\nalias:\n  - /functions/php/is_float/\n  - /functions/var/is_float/\n  - /php/is_float/\n  - /functions/is_float/\n---\nmodule.exports = function is_float (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_float/\n  // original by: Paulo Freitas\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_float(186.31)\n  //   returns 1: true\n\n  return +mixedVar === mixedVar && (!isFinite(mixedVar) || !!(mixedVar % 1))\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_float/index.html","comments":1,"_id":"cinoeja2a008vou9y507sb7qs","content":"module.exports = function is_float (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_float/\n  // original by: Paulo Freitas\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_float(186.31)\n  //   returns 1: true\n\n  return +mixedVar === mixedVar && (!isFinite(mixedVar) || !!(mixedVar % 1))\n}\n","excerpt":"","more":"module.exports = function is_float (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_float/\n  // original by: Paulo Freitas\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_float(186.31)\n  //   returns 1: true\n\n  return +mixedVar === mixedVar && (!isFinite(mixedVar) || !!(mixedVar % 1))\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_int(23)","is_int('23')","is_int(23.5)","is_int(true)"],"estarget":"es5","returns":["true","false","false","false"],"dependencies":[],"authors":{"original by":["Alex"],"improved by":["Kevin van Zonneveld (http://kvz.io)","WebDevHobo (http://webdevhobo.blogspot.com/)","Rafał Kukawski (http://blog.kukawski.pl)"],"bugfixed by":["Kevin van Zonneveld (http://kvz.io)"],"revised by":["Matt Bradley"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_int in JavaScript","function":"is_int","category":"var","language":"php","alias":["/functions/php/is_int/","/functions/var/is_int/","/php/is_int/","/functions/is_int/"],"_content":"module.exports = function is_int (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_int/\n  // original by: Alex\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //  revised by: Matt Bradley\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_int(23)\n  //   returns 1: true\n  //   example 2: is_int('23')\n  //   returns 2: false\n  //   example 3: is_int(23.5)\n  //   returns 3: false\n  //   example 4: is_int(true)\n  //   returns 4: false\n\n  return mixedVar === +mixedVar && isFinite(mixedVar) && !(mixedVar % 1)\n}\n","source":"php/var/is_int.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_int(23)\n  - is_int('23')\n  - is_int(23.5)\n  - is_int(true)\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\n  - 'false'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - Alex\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'WebDevHobo (http://webdevhobo.blogspot.com/)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n  bugfixed by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  revised by:\n    - Matt Bradley\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_int in JavaScript\nfunction: is_int\ncategory: var\nlanguage: php\npermalink: php/var/is_int/\nalias:\n  - /functions/php/is_int/\n  - /functions/var/is_int/\n  - /php/is_int/\n  - /functions/is_int/\n---\nmodule.exports = function is_int (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_int/\n  // original by: Alex\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //  revised by: Matt Bradley\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_int(23)\n  //   returns 1: true\n  //   example 2: is_int('23')\n  //   returns 2: false\n  //   example 3: is_int(23.5)\n  //   returns 3: false\n  //   example 4: is_int(true)\n  //   returns 4: false\n\n  return mixedVar === +mixedVar && isFinite(mixedVar) && !(mixedVar % 1)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_int/index.html","comments":1,"_id":"cinoeja2a008wou9yt0da8gl3","content":"module.exports = function is_int (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_int/\n  // original by: Alex\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //  revised by: Matt Bradley\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_int(23)\n  //   returns 1: true\n  //   example 2: is_int('23')\n  //   returns 2: false\n  //   example 3: is_int(23.5)\n  //   returns 3: false\n  //   example 4: is_int(true)\n  //   returns 4: false\n\n  return mixedVar === +mixedVar && isFinite(mixedVar) && !(mixedVar % 1)\n}\n","excerpt":"","more":"module.exports = function is_int (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_int/\n  // original by: Alex\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //  revised by: Matt Bradley\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_int(23)\n  //   returns 1: true\n  //   example 2: is_int('23')\n  //   returns 2: false\n  //   example 3: is_int(23.5)\n  //   returns 3: false\n  //   example 4: is_int(true)\n  //   returns 4: false\n\n  return mixedVar === +mixedVar && isFinite(mixedVar) && !(mixedVar % 1)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_integer(186.31)","is_integer(12)"],"estarget":"es5","returns":["false","true"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_integer in JavaScript","function":"is_integer","category":"var","language":"php","alias":["/functions/php/is_integer/","/functions/var/is_integer/","/php/is_integer/","/functions/is_integer/"],"_content":"module.exports = function is_integer (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_integer/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_integer(186.31)\n  //   returns 1: false\n  //   example 2: is_integer(12)\n  //   returns 2: true\n\n  var _isInt = require('../var/is_int')\n  return _isInt(mixedVar)\n}\n","source":"php/var/is_integer.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_integer(186.31)\n  - is_integer(12)\nestarget: es5\nreturns:\n  - 'false'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_integer in JavaScript\nfunction: is_integer\ncategory: var\nlanguage: php\npermalink: php/var/is_integer/\nalias:\n  - /functions/php/is_integer/\n  - /functions/var/is_integer/\n  - /php/is_integer/\n  - /functions/is_integer/\n---\nmodule.exports = function is_integer (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_integer/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_integer(186.31)\n  //   returns 1: false\n  //   example 2: is_integer(12)\n  //   returns 2: true\n\n  var _isInt = require('../var/is_int')\n  return _isInt(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_integer/index.html","comments":1,"_id":"cinoeja2b008xou9yk2xsh8us","content":"module.exports = function is_integer (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_integer/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_integer(186.31)\n  //   returns 1: false\n  //   example 2: is_integer(12)\n  //   returns 2: true\n\n  var _isInt = require('../var/is_int')\n  return _isInt(mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_integer (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_integer/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_integer(186.31)\n  //   returns 1: false\n  //   example 2: is_integer(12)\n  //   returns 2: true\n\n  var _isInt = require('../var/is_int')\n  return _isInt(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_long(186.31)"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_long in JavaScript","function":"is_long","category":"var","language":"php","alias":["/functions/php/is_long/","/functions/var/is_long/","/php/is_long/","/functions/is_long/"],"_content":"module.exports = function is_long (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_long/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_long(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","source":"php/var/is_long.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_long(186.31)\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_long in JavaScript\nfunction: is_long\ncategory: var\nlanguage: php\npermalink: php/var/is_long/\nalias:\n  - /functions/php/is_long/\n  - /functions/var/is_long/\n  - /php/is_long/\n  - /functions/is_long/\n---\nmodule.exports = function is_long (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_long/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_long(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_long/index.html","comments":1,"_id":"cinoeja2b008you9yf3c9xy3x","content":"module.exports = function is_long (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_long/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_long(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_long (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_long/\n  // original by: Paulo Freitas\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_long(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_null('23')","is_null(null)"],"estarget":"es5","returns":["false","true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"php'sis_null in JavaScript","function":"is_null","category":"var","language":"php","alias":["/functions/php/is_null/","/functions/var/is_null/","/php/is_null/","/functions/is_null/"],"_content":"module.exports = function is_null (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_null/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_null('23')\n  //   returns 1: false\n  //   example 2: is_null(null)\n  //   returns 2: true\n\n  return (mixedVar === null)\n}\n","source":"php/var/is_null.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_null('23')\n  - is_null(null)\nestarget: es5\nreturns:\n  - 'false'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: php'sis_null in JavaScript\nfunction: is_null\ncategory: var\nlanguage: php\npermalink: php/var/is_null/\nalias:\n  - /functions/php/is_null/\n  - /functions/var/is_null/\n  - /php/is_null/\n  - /functions/is_null/\n---\nmodule.exports = function is_null (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_null/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_null('23')\n  //   returns 1: false\n  //   example 2: is_null(null)\n  //   returns 2: true\n\n  return (mixedVar === null)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_null/index.html","comments":1,"_id":"cinoeja2b008zou9y090rpn67","content":"module.exports = function is_null (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_null/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_null('23')\n  //   returns 1: false\n  //   example 2: is_null(null)\n  //   returns 2: true\n\n  return (mixedVar === null)\n}\n","excerpt":"","more":"module.exports = function is_null (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_null/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_null('23')\n  //   returns 1: false\n  //   example 2: is_null(null)\n  //   returns 2: true\n\n  return (mixedVar === null)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_numeric(186.31)","is_numeric('Kevin van Zonneveld')","is_numeric(' +186.31e2')","is_numeric('')","is_numeric([])","is_numeric('1 ')"],"estarget":"es5","returns":["true","false","true","false","false","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["David","taith"],"bugfixed by":["Tim de Koning","WebDevHobo (http://webdevhobo.blogspot.com/)","Brett Zamir (http://brett-zamir.me)","Denis Chenu (http://shnoulle.net)"]},"notes":[],"layout":"function","title":"php'sis_numeric in JavaScript","function":"is_numeric","category":"var","language":"php","alias":["/functions/php/is_numeric/","/functions/var/is_numeric/","/php/is_numeric/","/functions/is_numeric/"],"_content":"module.exports = function is_numeric (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (typeof mixedVar === 'number' ||\n    (typeof mixedVar === 'string' &&\n    whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n}\n","source":"php/var/is_numeric.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_numeric(186.31)\n  - is_numeric('Kevin van Zonneveld')\n  - is_numeric(' +186.31e2')\n  - is_numeric('')\n  - 'is_numeric([])'\n  - is_numeric('1 ')\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\n  - 'true'\n  - 'false'\n  - 'false'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - David\n    - taith\n  bugfixed by:\n    - Tim de Koning\n    - 'WebDevHobo (http://webdevhobo.blogspot.com/)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Denis Chenu (http://shnoulle.net)'\nnotes: []\nlayout: function\ntitle: php'sis_numeric in JavaScript\nfunction: is_numeric\ncategory: var\nlanguage: php\npermalink: php/var/is_numeric/\nalias:\n  - /functions/php/is_numeric/\n  - /functions/var/is_numeric/\n  - /php/is_numeric/\n  - /functions/is_numeric/\n---\nmodule.exports = function is_numeric (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (typeof mixedVar === 'number' ||\n    (typeof mixedVar === 'string' &&\n    whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_numeric/index.html","comments":1,"_id":"cinoeja2c0090ou9yyr98lwn8","content":"module.exports = function is_numeric (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (typeof mixedVar === 'number' ||\n    (typeof mixedVar === 'string' &&\n    whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_numeric (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_numeric/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: David\n  // improved by: taith\n  // bugfixed by: Tim de Koning\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\n  //   example 1: is_numeric(186.31)\n  //   returns 1: true\n  //   example 2: is_numeric('Kevin van Zonneveld')\n  //   returns 2: false\n  //   example 3: is_numeric(' +186.31e2')\n  //   returns 3: true\n  //   example 4: is_numeric('')\n  //   returns 4: false\n  //   example 5: is_numeric([])\n  //   returns 5: false\n  //   example 6: is_numeric('1 ')\n  //   returns 6: false\n\n  var whitespace = [\n    ' ',\n    '\\n',\n    '\\r',\n    '\\t',\n    '\\f',\n    '\\x0b',\n    '\\xa0',\n    '\\u2000',\n    '\\u2001',\n    '\\u2002',\n    '\\u2003',\n    '\\u2004',\n    '\\u2005',\n    '\\u2006',\n    '\\u2007',\n    '\\u2008',\n    '\\u2009',\n    '\\u200a',\n    '\\u200b',\n    '\\u2028',\n    '\\u2029',\n    '\\u3000'\n  ].join('')\n\n  // @todo: Break this up using many single conditions with early returns\n  return (typeof mixedVar === 'number' ||\n    (typeof mixedVar === 'string' &&\n    whitespace.indexOf(mixedVar.slice(-1)) === -1)) &&\n    mixedVar !== '' &&\n    !isNaN(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_object('23')","is_object({foo: 'bar'})","is_object(null)"],"estarget":"es5","returns":["false","true","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["Legaev Andrey","Michael White (http://getsprink.com)"]},"notes":[],"layout":"function","title":"php'sis_object in JavaScript","function":"is_object","category":"var","language":"php","alias":["/functions/php/is_object/","/functions/var/is_object/","/php/is_object/","/functions/is_object/"],"_content":"module.exports = function is_object (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_object/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  //   example 1: is_object('23')\n  //   returns 1: false\n  //   example 2: is_object({foo: 'bar'})\n  //   returns 2: true\n  //   example 3: is_object(null)\n  //   returns 3: false\n\n  if (Object.prototype.toString.call(mixedVar) === '[object Array]') {\n    return false\n  }\n  return mixedVar !== null && typeof mixedVar === 'object'\n}\n","source":"php/var/is_object.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_object('23')\n  - 'is_object({foo: ''bar''})'\n  - is_object(null)\nestarget: es5\nreturns:\n  - 'false'\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - Legaev Andrey\n    - 'Michael White (http://getsprink.com)'\nnotes: []\nlayout: function\ntitle: php'sis_object in JavaScript\nfunction: is_object\ncategory: var\nlanguage: php\npermalink: php/var/is_object/\nalias:\n  - /functions/php/is_object/\n  - /functions/var/is_object/\n  - /php/is_object/\n  - /functions/is_object/\n---\nmodule.exports = function is_object (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_object/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  //   example 1: is_object('23')\n  //   returns 1: false\n  //   example 2: is_object({foo: 'bar'})\n  //   returns 2: true\n  //   example 3: is_object(null)\n  //   returns 3: false\n\n  if (Object.prototype.toString.call(mixedVar) === '[object Array]') {\n    return false\n  }\n  return mixedVar !== null && typeof mixedVar === 'object'\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_object/index.html","comments":1,"_id":"cinoeja2c0091ou9yw1xjgj3t","content":"module.exports = function is_object (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_object/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  //   example 1: is_object('23')\n  //   returns 1: false\n  //   example 2: is_object({foo: 'bar'})\n  //   returns 2: true\n  //   example 3: is_object(null)\n  //   returns 3: false\n\n  if (Object.prototype.toString.call(mixedVar) === '[object Array]') {\n    return false\n  }\n  return mixedVar !== null && typeof mixedVar === 'object'\n}\n","excerpt":"","more":"module.exports = function is_object (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_object/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Legaev Andrey\n  // improved by: Michael White (http://getsprink.com)\n  //   example 1: is_object('23')\n  //   returns 1: false\n  //   example 2: is_object({foo: 'bar'})\n  //   returns 2: true\n  //   example 3: is_object(null)\n  //   returns 3: false\n\n  if (Object.prototype.toString.call(mixedVar) === '[object Array]') {\n    return false\n  }\n  return mixedVar !== null && typeof mixedVar === 'object'\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_real(186.31)"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["1.0 is simplified to 1 before it can be accessed by the function, this makes\nit different from the PHP implementation. We can't fix this unfortunately."],"layout":"function","title":"php'sis_real in JavaScript","function":"is_real","category":"var","language":"php","alias":["/functions/php/is_real/","/functions/var/is_real/","/php/is_real/","/functions/is_real/"],"_content":"module.exports = function is_real (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_real/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_real(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","source":"php/var/is_real.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_real(186.31)\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - |-\n    1.0 is simplified to 1 before it can be accessed by the function, this makes\n    it different from the PHP implementation. We can't fix this unfortunately.\nlayout: function\ntitle: php'sis_real in JavaScript\nfunction: is_real\ncategory: var\nlanguage: php\npermalink: php/var/is_real/\nalias:\n  - /functions/php/is_real/\n  - /functions/var/is_real/\n  - /php/is_real/\n  - /functions/is_real/\n---\nmodule.exports = function is_real (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_real/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_real(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_real/index.html","comments":1,"_id":"cinoeja2c0092ou9yb5fope48","content":"module.exports = function is_real (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_real/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_real(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_real (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_real/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: 1.0 is simplified to 1 before it can be accessed by the function, this makes\n  //      note 1: it different from the PHP implementation. We can't fix this unfortunately.\n  //   example 1: is_real(186.31)\n  //   returns 1: true\n\n  var _isFloat = require('../var/is_float')\n  return _isFloat(mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_scalar(186.31)","is_scalar({0: 'Kevin van Zonneveld'})"],"estarget":"es5","returns":["true","false"],"dependencies":[],"authors":{"original by":["Paulo Freitas"]},"notes":[],"layout":"function","title":"php'sis_scalar in JavaScript","function":"is_scalar","category":"var","language":"php","alias":["/functions/php/is_scalar/","/functions/var/is_scalar/","/php/is_scalar/","/functions/is_scalar/"],"_content":"module.exports = function is_scalar (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_scalar/\n  // original by: Paulo Freitas\n  //   example 1: is_scalar(186.31)\n  //   returns 1: true\n  //   example 2: is_scalar({0: 'Kevin van Zonneveld'})\n  //   returns 2: false\n\n  return (/boolean|number|string/).test(typeof mixedVar)\n}\n","source":"php/var/is_scalar.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_scalar(186.31)\n  - 'is_scalar({0: ''Kevin van Zonneveld''})'\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - Paulo Freitas\nnotes: []\nlayout: function\ntitle: php'sis_scalar in JavaScript\nfunction: is_scalar\ncategory: var\nlanguage: php\npermalink: php/var/is_scalar/\nalias:\n  - /functions/php/is_scalar/\n  - /functions/var/is_scalar/\n  - /php/is_scalar/\n  - /functions/is_scalar/\n---\nmodule.exports = function is_scalar (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_scalar/\n  // original by: Paulo Freitas\n  //   example 1: is_scalar(186.31)\n  //   returns 1: true\n  //   example 2: is_scalar({0: 'Kevin van Zonneveld'})\n  //   returns 2: false\n\n  return (/boolean|number|string/).test(typeof mixedVar)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_scalar/index.html","comments":1,"_id":"cinoeja2d0093ou9ybjqdojqx","content":"module.exports = function is_scalar (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_scalar/\n  // original by: Paulo Freitas\n  //   example 1: is_scalar(186.31)\n  //   returns 1: true\n  //   example 2: is_scalar({0: 'Kevin van Zonneveld'})\n  //   returns 2: false\n\n  return (/boolean|number|string/).test(typeof mixedVar)\n}\n","excerpt":"","more":"module.exports = function is_scalar (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_scalar/\n  // original by: Paulo Freitas\n  //   example 1: is_scalar(186.31)\n  //   returns 1: true\n  //   example 2: is_scalar({0: 'Kevin van Zonneveld'})\n  //   returns 2: false\n\n  return (/boolean|number|string/).test(typeof mixedVar)\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_string('23')","is_string(23.5)"],"estarget":"es5","returns":["true","false"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"]},"notes":[],"layout":"function","title":"php'sis_string in JavaScript","function":"is_string","category":"var","language":"php","alias":["/functions/php/is_string/","/functions/var/is_string/","/php/is_string/","/functions/is_string/"],"_content":"module.exports = function is_string (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_string/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_string('23')\n  //   returns 1: true\n  //   example 2: is_string(23.5)\n  //   returns 2: false\n\n  return (typeof mixedVar === 'string')\n}\n","source":"php/var/is_string.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_string('23')\n  - is_string(23.5)\nestarget: es5\nreturns:\n  - 'true'\n  - 'false'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\nnotes: []\nlayout: function\ntitle: php'sis_string in JavaScript\nfunction: is_string\ncategory: var\nlanguage: php\npermalink: php/var/is_string/\nalias:\n  - /functions/php/is_string/\n  - /functions/var/is_string/\n  - /php/is_string/\n  - /functions/is_string/\n---\nmodule.exports = function is_string (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_string/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_string('23')\n  //   returns 1: true\n  //   example 2: is_string(23.5)\n  //   returns 2: false\n\n  return (typeof mixedVar === 'string')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_string/index.html","comments":1,"_id":"cinoeja2d0094ou9yquf3tvec","content":"module.exports = function is_string (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_string/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_string('23')\n  //   returns 1: true\n  //   example 2: is_string(23.5)\n  //   returns 2: false\n\n  return (typeof mixedVar === 'string')\n}\n","excerpt":"","more":"module.exports = function is_string (mixedVar) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_string/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  //   example 1: is_string('23')\n  //   returns 1: true\n  //   example 2: is_string(23.5)\n  //   returns 2: false\n\n  return (typeof mixedVar === 'string')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["is_unicode('We the peoples of the United Nations...!')"],"estarget":"es5","returns":["true"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"]},"notes":["Almost all strings in JavaScript should be Unicode"],"layout":"function","title":"php'sis_unicode in JavaScript","function":"is_unicode","category":"var","language":"php","alias":["/functions/php/is_unicode/","/functions/var/is_unicode/","/php/is_unicode/","/functions/is_unicode/"],"_content":"module.exports = function is_unicode (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_unicode/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Almost all strings in JavaScript should be Unicode\n  //   example 1: is_unicode('We the peoples of the United Nations...!')\n  //   returns 1: true\n\n  if (typeof vr !== 'string') {\n    return false\n  }\n\n  // If surrogates occur outside of high-low pairs, then this is not Unicode\n  var arr = []\n  var highSurrogate = '[\\uD800-\\uDBFF]'\n  var lowSurrogate = '[\\uDC00-\\uDFFF]'\n  var highSurrogateBeforeAny = new RegExp(highSurrogate + '([\\\\s\\\\S])', 'g')\n  var lowSurrogateAfterAny = new RegExp('([\\\\s\\\\S])' + lowSurrogate, 'g')\n  var singleLowSurrogate = new RegExp('^' + lowSurrogate + '$')\n  var singleHighSurrogate = new RegExp('^' + highSurrogate + '$')\n\n  while ((arr = highSurrogateBeforeAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleLowSurrogate)) {\n      // If high not followed by low surrogate\n      return false\n    }\n  }\n  while ((arr = lowSurrogateAfterAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleHighSurrogate)) {\n      // If low not preceded by high surrogate\n      return false\n    }\n  }\n\n  return true\n}\n","source":"php/var/is_unicode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - is_unicode('We the peoples of the United Nations...!')\nestarget: es5\nreturns:\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - Almost all strings in JavaScript should be Unicode\nlayout: function\ntitle: php'sis_unicode in JavaScript\nfunction: is_unicode\ncategory: var\nlanguage: php\npermalink: php/var/is_unicode/\nalias:\n  - /functions/php/is_unicode/\n  - /functions/var/is_unicode/\n  - /php/is_unicode/\n  - /functions/is_unicode/\n---\nmodule.exports = function is_unicode (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_unicode/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Almost all strings in JavaScript should be Unicode\n  //   example 1: is_unicode('We the peoples of the United Nations...!')\n  //   returns 1: true\n\n  if (typeof vr !== 'string') {\n    return false\n  }\n\n  // If surrogates occur outside of high-low pairs, then this is not Unicode\n  var arr = []\n  var highSurrogate = '[\\uD800-\\uDBFF]'\n  var lowSurrogate = '[\\uDC00-\\uDFFF]'\n  var highSurrogateBeforeAny = new RegExp(highSurrogate + '([\\\\s\\\\S])', 'g')\n  var lowSurrogateAfterAny = new RegExp('([\\\\s\\\\S])' + lowSurrogate, 'g')\n  var singleLowSurrogate = new RegExp('^' + lowSurrogate + '$')\n  var singleHighSurrogate = new RegExp('^' + highSurrogate + '$')\n\n  while ((arr = highSurrogateBeforeAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleLowSurrogate)) {\n      // If high not followed by low surrogate\n      return false\n    }\n  }\n  while ((arr = lowSurrogateAfterAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleHighSurrogate)) {\n      // If low not preceded by high surrogate\n      return false\n    }\n  }\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/is_unicode/index.html","comments":1,"_id":"cinoeja2e0095ou9y0et20jhb","content":"module.exports = function is_unicode (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_unicode/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Almost all strings in JavaScript should be Unicode\n  //   example 1: is_unicode('We the peoples of the United Nations...!')\n  //   returns 1: true\n\n  if (typeof vr !== 'string') {\n    return false\n  }\n\n  // If surrogates occur outside of high-low pairs, then this is not Unicode\n  var arr = []\n  var highSurrogate = '[\\uD800-\\uDBFF]'\n  var lowSurrogate = '[\\uDC00-\\uDFFF]'\n  var highSurrogateBeforeAny = new RegExp(highSurrogate + '([\\\\s\\\\S])', 'g')\n  var lowSurrogateAfterAny = new RegExp('([\\\\s\\\\S])' + lowSurrogate, 'g')\n  var singleLowSurrogate = new RegExp('^' + lowSurrogate + '$')\n  var singleHighSurrogate = new RegExp('^' + highSurrogate + '$')\n\n  while ((arr = highSurrogateBeforeAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleLowSurrogate)) {\n      // If high not followed by low surrogate\n      return false\n    }\n  }\n  while ((arr = lowSurrogateAfterAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleHighSurrogate)) {\n      // If low not preceded by high surrogate\n      return false\n    }\n  }\n\n  return true\n}\n","excerpt":"","more":"module.exports = function is_unicode (vr) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/is_unicode/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: Almost all strings in JavaScript should be Unicode\n  //   example 1: is_unicode('We the peoples of the United Nations...!')\n  //   returns 1: true\n\n  if (typeof vr !== 'string') {\n    return false\n  }\n\n  // If surrogates occur outside of high-low pairs, then this is not Unicode\n  var arr = []\n  var highSurrogate = '[\\uD800-\\uDBFF]'\n  var lowSurrogate = '[\\uDC00-\\uDFFF]'\n  var highSurrogateBeforeAny = new RegExp(highSurrogate + '([\\\\s\\\\S])', 'g')\n  var lowSurrogateAfterAny = new RegExp('([\\\\s\\\\S])' + lowSurrogate, 'g')\n  var singleLowSurrogate = new RegExp('^' + lowSurrogate + '$')\n  var singleHighSurrogate = new RegExp('^' + highSurrogate + '$')\n\n  while ((arr = highSurrogateBeforeAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleLowSurrogate)) {\n      // If high not followed by low surrogate\n      return false\n    }\n  }\n  while ((arr = lowSurrogateAfterAny.exec(vr)) !== null) {\n    if (!arr[1] || !arr[1].match(singleHighSurrogate)) {\n      // If low not preceded by high surrogate\n      return false\n    }\n  }\n\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["isset( undefined, true)","isset( 'Kevin van Zonneveld' )"],"estarget":"es5","returns":["false","true"],"dependencies":[],"authors":{"original by":["Kevin van Zonneveld (http://kvz.io)"],"improved by":["FremyCompany","Onno Marsman (https://twitter.com/onnomarsman)","Rafał Kukawski (http://blog.kukawski.pl)"]},"notes":[],"layout":"function","title":"php'sisset in JavaScript","function":"isset","category":"var","language":"php","alias":["/functions/php/isset/","/functions/var/isset/","/php/isset/","/functions/isset/"],"_content":"module.exports = function isset () {\n  //  discuss at: http://locutusjs.io/php/isset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FremyCompany\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: isset( undefined, true)\n  //   returns 1: false\n  //   example 2: isset( 'Kevin van Zonneveld' )\n  //   returns 2: true\n\n  var a = arguments\n  var l = a.length\n  var i = 0\n  var undef\n\n  if (l === 0) {\n    throw new Error('Empty isset')\n  }\n\n  while (i !== l) {\n    if (a[i] === undef || a[i] === null) {\n      return false\n    }\n    i++\n  }\n\n  return true\n}\n","source":"php/var/isset.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'isset( undefined, true)'\n  - isset( 'Kevin van Zonneveld' )\nestarget: es5\nreturns:\n  - 'false'\n  - 'true'\ndependencies: []\nauthors:\n  original by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  improved by:\n    - FremyCompany\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\nnotes: []\nlayout: function\ntitle: php'sisset in JavaScript\nfunction: isset\ncategory: var\nlanguage: php\npermalink: php/var/isset/\nalias:\n  - /functions/php/isset/\n  - /functions/var/isset/\n  - /php/isset/\n  - /functions/isset/\n---\nmodule.exports = function isset () {\n  //  discuss at: http://locutusjs.io/php/isset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FremyCompany\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: isset( undefined, true)\n  //   returns 1: false\n  //   example 2: isset( 'Kevin van Zonneveld' )\n  //   returns 2: true\n\n  var a = arguments\n  var l = a.length\n  var i = 0\n  var undef\n\n  if (l === 0) {\n    throw new Error('Empty isset')\n  }\n\n  while (i !== l) {\n    if (a[i] === undef || a[i] === null) {\n      return false\n    }\n    i++\n  }\n\n  return true\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/isset/index.html","comments":1,"_id":"cinoeja2e0096ou9yzq4hg274","content":"module.exports = function isset () {\n  //  discuss at: http://locutusjs.io/php/isset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FremyCompany\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: isset( undefined, true)\n  //   returns 1: false\n  //   example 2: isset( 'Kevin van Zonneveld' )\n  //   returns 2: true\n\n  var a = arguments\n  var l = a.length\n  var i = 0\n  var undef\n\n  if (l === 0) {\n    throw new Error('Empty isset')\n  }\n\n  while (i !== l) {\n    if (a[i] === undef || a[i] === null) {\n      return false\n    }\n    i++\n  }\n\n  return true\n}\n","excerpt":"","more":"module.exports = function isset () {\n  //  discuss at: http://locutusjs.io/php/isset/\n  // original by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: FremyCompany\n  // improved by: Onno Marsman (https://twitter.com/onnomarsman)\n  // improved by: Rafał Kukawski (http://blog.kukawski.pl)\n  //   example 1: isset( undefined, true)\n  //   returns 1: false\n  //   example 2: isset( 'Kevin van Zonneveld' )\n  //   returns 2: true\n\n  var a = arguments\n  var l = a.length\n  var i = 0\n  var undef\n\n  if (l === 0) {\n    throw new Error('Empty isset')\n  }\n\n  while (i !== l) {\n    if (a[i] === undef || a[i] === null) {\n      return false\n    }\n    i++\n  }\n\n  return true\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["print_r(1, true)"],"estarget":"es5","returns":["'1'"],"dependencies":[],"authors":{"original by":["Michael White (http://getsprink.com)"],"improved by":["Ben Bryan","Brett Zamir (http://brett-zamir.me)","Kevin van Zonneveld (http://kvz.io)"],"input by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sprint_r in JavaScript","function":"print_r","category":"var","language":"php","alias":["/functions/php/print_r/","/functions/var/print_r/","/php/print_r/","/functions/print_r/"],"_content":"module.exports = function print_r (array, returnVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/print_r/\n  // original by: Michael White (http://getsprink.com)\n  // improved by: Ben Bryan\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: print_r(1, true)\n  //   returns 1: '1'\n\n  var echo = require('../strings/echo')\n\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * curDepth, padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n\n    if (typeof obj === 'object' &&\n      obj !== null &&\n      obj.constructor) {\n      str += 'Array\\n' + basePad + '(\\n'\n      for (var key in obj) {\n        if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += _formatArray(obj[key], curDepth + 1, padVal, padChar)\n        } else {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += obj[key]\n          str += '\\n'\n        }\n      }\n      str += basePad + ')\\n'\n    } else if (obj === null || obj === undefined) {\n      str = ''\n    } else {\n      // for our \"resource\" class\n      str = obj.toString()\n    }\n\n    return str\n  }\n\n  output = _formatArray(array, 0, padVal, padChar)\n\n  if (returnVal !== true) {\n    echo(output)\n    return true\n  }\n  return output\n}\n","source":"php/var/print_r.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'print_r(1, true)'\nestarget: es5\nreturns:\n  - '''1'''\ndependencies: []\nauthors:\n  original by:\n    - 'Michael White (http://getsprink.com)'\n  improved by:\n    - Ben Bryan\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sprint_r in JavaScript\nfunction: print_r\ncategory: var\nlanguage: php\npermalink: php/var/print_r/\nalias:\n  - /functions/php/print_r/\n  - /functions/var/print_r/\n  - /php/print_r/\n  - /functions/print_r/\n---\nmodule.exports = function print_r (array, returnVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/print_r/\n  // original by: Michael White (http://getsprink.com)\n  // improved by: Ben Bryan\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: print_r(1, true)\n  //   returns 1: '1'\n\n  var echo = require('../strings/echo')\n\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * curDepth, padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n\n    if (typeof obj === 'object' &&\n      obj !== null &&\n      obj.constructor) {\n      str += 'Array\\n' + basePad + '(\\n'\n      for (var key in obj) {\n        if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += _formatArray(obj[key], curDepth + 1, padVal, padChar)\n        } else {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += obj[key]\n          str += '\\n'\n        }\n      }\n      str += basePad + ')\\n'\n    } else if (obj === null || obj === undefined) {\n      str = ''\n    } else {\n      // for our \"resource\" class\n      str = obj.toString()\n    }\n\n    return str\n  }\n\n  output = _formatArray(array, 0, padVal, padChar)\n\n  if (returnVal !== true) {\n    echo(output)\n    return true\n  }\n  return output\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/print_r/index.html","comments":1,"_id":"cinoeja2e0097ou9y43ap6pnr","content":"module.exports = function print_r (array, returnVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/print_r/\n  // original by: Michael White (http://getsprink.com)\n  // improved by: Ben Bryan\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: print_r(1, true)\n  //   returns 1: '1'\n\n  var echo = require('../strings/echo')\n\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * curDepth, padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n\n    if (typeof obj === 'object' &&\n      obj !== null &&\n      obj.constructor) {\n      str += 'Array\\n' + basePad + '(\\n'\n      for (var key in obj) {\n        if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += _formatArray(obj[key], curDepth + 1, padVal, padChar)\n        } else {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += obj[key]\n          str += '\\n'\n        }\n      }\n      str += basePad + ')\\n'\n    } else if (obj === null || obj === undefined) {\n      str = ''\n    } else {\n      // for our \"resource\" class\n      str = obj.toString()\n    }\n\n    return str\n  }\n\n  output = _formatArray(array, 0, padVal, padChar)\n\n  if (returnVal !== true) {\n    echo(output)\n    return true\n  }\n  return output\n}\n","excerpt":"","more":"module.exports = function print_r (array, returnVal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/print_r/\n  // original by: Michael White (http://getsprink.com)\n  // improved by: Ben Bryan\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: print_r(1, true)\n  //   returns 1: '1'\n\n  var echo = require('../strings/echo')\n\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * curDepth, padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n\n    if (typeof obj === 'object' &&\n      obj !== null &&\n      obj.constructor) {\n      str += 'Array\\n' + basePad + '(\\n'\n      for (var key in obj) {\n        if (Object.prototype.toString.call(obj[key]) === '[object Array]') {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += _formatArray(obj[key], curDepth + 1, padVal, padChar)\n        } else {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] => '\n          str += obj[key]\n          str += '\\n'\n        }\n      }\n      str += basePad + ')\\n'\n    } else if (obj === null || obj === undefined) {\n      str = ''\n    } else {\n      // for our \"resource\" class\n      str = obj.toString()\n    }\n\n    return str\n  }\n\n  output = _formatArray(array, 0, padVal, padChar)\n\n  if (returnVal !== true) {\n    echo(output)\n    return true\n  }\n  return output\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["serialize(['Kevin', 'van', 'Zonneveld'])","serialize({firstName: 'Kevin', midName: 'van'})"],"estarget":"es5","returns":["'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'","'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'"],"dependencies":[],"authors":{"original by":["Arpad Ray (mailto:arpad@php.net)"],"improved by":["Dino","Le Torbi (http://www.letorbi.de/)","Kevin van Zonneveld (http://kvz.io/)"],"bugfixed by":["Andrej Pavlovic","Garagoth","Russell Walker (http://www.nbill.co.uk/)","Jamie Beck (http://www.terabit.ca/)","Kevin van Zonneveld (http://kvz.io/)","Ben (http://benblume.co.uk/)","Codestar (http://codestarlive.com/)"],"input by":["DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)","Martin (http://www.erlenwiese.de/)"]},"notes":["We feel the main purpose of this function should be to ease\nthe transport of data between php & js\nAiming for PHP-compatibility, we have to translate objects to arrays"],"layout":"function","title":"php'sserialize in JavaScript","function":"serialize","category":"var","language":"php","alias":["/functions/php/serialize/","/functions/var/serialize/","/php/serialize/","/functions/serialize/"],"_content":"module.exports = function serialize (mixedValue) {\n  //  discuss at: http://locutusjs.io/php/serialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Dino\n  // improved by: Le Torbi (http://www.letorbi.de/)\n  // improved by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Andrej Pavlovic\n  // bugfixed by: Garagoth\n  // bugfixed by: Russell Walker (http://www.nbill.co.uk/)\n  // bugfixed by: Jamie Beck (http://www.terabit.ca/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Ben (http://benblume.co.uk/)\n  // bugfixed by: Codestar (http://codestarlive.com/)\n  //    input by: DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //      note 1: We feel the main purpose of this function should be to ease\n  //      note 1: the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: serialize(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'\n  //   example 2: serialize({firstName: 'Kevin', midName: 'van'})\n  //   returns 2: 'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'\n\n  var val, key, okey\n  var ktype = ''\n  var vals = ''\n  var count = 0\n\n  var _utf8Size = function (str) {\n    var size = 0\n    var i = 0\n    var l = str.length\n    var code = ''\n    for (i = 0; i < l; i++) {\n      code = str.charCodeAt(i)\n      if (code < 0x0080) {\n        size += 1\n      } else if (code < 0x0800) {\n        size += 2\n      } else {\n        size += 3\n      }\n    }\n    return size\n  }\n\n  var _getType = function (inp) {\n    var match\n    var key\n    var cons\n    var types\n    var type = typeof inp\n\n    if (type === 'object' && !inp) {\n      return 'null'\n    }\n\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (key in types) {\n        if (cons === types[key]) {\n          type = types[key]\n          break\n        }\n      }\n    }\n    return type\n  }\n\n  var type = _getType(mixedValue)\n\n  switch (type) {\n    case 'function':\n      val = ''\n      break\n    case 'boolean':\n      val = 'b:' + (mixedValue ? '1' : '0')\n      break\n    case 'number':\n      val = (Math.round(mixedValue) === mixedValue ? 'i' : 'd') + ':' + mixedValue\n      break\n    case 'string':\n      val = 's:' + _utf8Size(mixedValue) + ':\"' + mixedValue + '\"'\n      break\n    case 'array':\n    case 'object':\n      val = 'a'\n      /*\n      if (type === 'object') {\n        var objname = mixedValue.constructor.toString().match(/(\\w+)\\(\\)/);\n        if (objname === undefined) {\n          return;\n        }\n        objname[1] = serialize(objname[1]);\n        val = 'O' + objname[1].substring(1, objname[1].length - 1);\n      }\n      */\n\n      for (key in mixedValue) {\n        if (mixedValue.hasOwnProperty(key)) {\n          ktype = _getType(mixedValue[key])\n          if (ktype === 'function') {\n            continue\n          }\n\n          okey = (key.match(/^[0-9]+$/) ? parseInt(key, 10) : key)\n          vals += serialize(okey) + serialize(mixedValue[key])\n          count++\n        }\n      }\n      val += ':' + count + ':{' + vals + '}'\n      break\n    case 'undefined':\n    default:\n      // Fall-through\n      // if the JS object has a property which contains a null value,\n      // the string cannot be unserialized by PHP\n      val = 'N'\n      break\n  }\n  if (type !== 'object' && type !== 'array') {\n    val += ';'\n  }\n\n  return val\n}\n","source":"php/var/serialize.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'serialize([''Kevin'', ''van'', ''Zonneveld''])'\n  - 'serialize({firstName: ''Kevin'', midName: ''van''})'\nestarget: es5\nreturns:\n  - '''a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'''\n  - '''a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'''\ndependencies: []\nauthors:\n  original by:\n    - 'Arpad Ray (mailto:arpad@php.net)'\n  improved by:\n    - Dino\n    - 'Le Torbi (http://www.letorbi.de/)'\n    - 'Kevin van Zonneveld (http://kvz.io/)'\n  bugfixed by:\n    - Andrej Pavlovic\n    - Garagoth\n    - 'Russell Walker (http://www.nbill.co.uk/)'\n    - 'Jamie Beck (http://www.terabit.ca/)'\n    - 'Kevin van Zonneveld (http://kvz.io/)'\n    - 'Ben (http://benblume.co.uk/)'\n    - 'Codestar (http://codestarlive.com/)'\n  input by:\n    - 'DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)'\n    - 'Martin (http://www.erlenwiese.de/)'\nnotes:\n  - |-\n    We feel the main purpose of this function should be to ease\n    the transport of data between php & js\n    Aiming for PHP-compatibility, we have to translate objects to arrays\nlayout: function\ntitle: php'sserialize in JavaScript\nfunction: serialize\ncategory: var\nlanguage: php\npermalink: php/var/serialize/\nalias:\n  - /functions/php/serialize/\n  - /functions/var/serialize/\n  - /php/serialize/\n  - /functions/serialize/\n---\nmodule.exports = function serialize (mixedValue) {\n  //  discuss at: http://locutusjs.io/php/serialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Dino\n  // improved by: Le Torbi (http://www.letorbi.de/)\n  // improved by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Andrej Pavlovic\n  // bugfixed by: Garagoth\n  // bugfixed by: Russell Walker (http://www.nbill.co.uk/)\n  // bugfixed by: Jamie Beck (http://www.terabit.ca/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Ben (http://benblume.co.uk/)\n  // bugfixed by: Codestar (http://codestarlive.com/)\n  //    input by: DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //      note 1: We feel the main purpose of this function should be to ease\n  //      note 1: the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: serialize(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'\n  //   example 2: serialize({firstName: 'Kevin', midName: 'van'})\n  //   returns 2: 'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'\n\n  var val, key, okey\n  var ktype = ''\n  var vals = ''\n  var count = 0\n\n  var _utf8Size = function (str) {\n    var size = 0\n    var i = 0\n    var l = str.length\n    var code = ''\n    for (i = 0; i < l; i++) {\n      code = str.charCodeAt(i)\n      if (code < 0x0080) {\n        size += 1\n      } else if (code < 0x0800) {\n        size += 2\n      } else {\n        size += 3\n      }\n    }\n    return size\n  }\n\n  var _getType = function (inp) {\n    var match\n    var key\n    var cons\n    var types\n    var type = typeof inp\n\n    if (type === 'object' && !inp) {\n      return 'null'\n    }\n\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (key in types) {\n        if (cons === types[key]) {\n          type = types[key]\n          break\n        }\n      }\n    }\n    return type\n  }\n\n  var type = _getType(mixedValue)\n\n  switch (type) {\n    case 'function':\n      val = ''\n      break\n    case 'boolean':\n      val = 'b:' + (mixedValue ? '1' : '0')\n      break\n    case 'number':\n      val = (Math.round(mixedValue) === mixedValue ? 'i' : 'd') + ':' + mixedValue\n      break\n    case 'string':\n      val = 's:' + _utf8Size(mixedValue) + ':\"' + mixedValue + '\"'\n      break\n    case 'array':\n    case 'object':\n      val = 'a'\n      /*\n      if (type === 'object') {\n        var objname = mixedValue.constructor.toString().match(/(\\w+)\\(\\)/);\n        if (objname === undefined) {\n          return;\n        }\n        objname[1] = serialize(objname[1]);\n        val = 'O' + objname[1].substring(1, objname[1].length - 1);\n      }\n      */\n\n      for (key in mixedValue) {\n        if (mixedValue.hasOwnProperty(key)) {\n          ktype = _getType(mixedValue[key])\n          if (ktype === 'function') {\n            continue\n          }\n\n          okey = (key.match(/^[0-9]+$/) ? parseInt(key, 10) : key)\n          vals += serialize(okey) + serialize(mixedValue[key])\n          count++\n        }\n      }\n      val += ':' + count + ':{' + vals + '}'\n      break\n    case 'undefined':\n    default:\n      // Fall-through\n      // if the JS object has a property which contains a null value,\n      // the string cannot be unserialized by PHP\n      val = 'N'\n      break\n  }\n  if (type !== 'object' && type !== 'array') {\n    val += ';'\n  }\n\n  return val\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/serialize/index.html","comments":1,"_id":"cinoeja2f0098ou9yy53xc0tt","content":"module.exports = function serialize (mixedValue) {\n  //  discuss at: http://locutusjs.io/php/serialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Dino\n  // improved by: Le Torbi (http://www.letorbi.de/)\n  // improved by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Andrej Pavlovic\n  // bugfixed by: Garagoth\n  // bugfixed by: Russell Walker (http://www.nbill.co.uk/)\n  // bugfixed by: Jamie Beck (http://www.terabit.ca/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Ben (http://benblume.co.uk/)\n  // bugfixed by: Codestar (http://codestarlive.com/)\n  //    input by: DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //      note 1: We feel the main purpose of this function should be to ease\n  //      note 1: the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: serialize(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'\n  //   example 2: serialize({firstName: 'Kevin', midName: 'van'})\n  //   returns 2: 'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'\n\n  var val, key, okey\n  var ktype = ''\n  var vals = ''\n  var count = 0\n\n  var _utf8Size = function (str) {\n    var size = 0\n    var i = 0\n    var l = str.length\n    var code = ''\n    for (i = 0; i < l; i++) {\n      code = str.charCodeAt(i)\n      if (code < 0x0080) {\n        size += 1\n      } else if (code < 0x0800) {\n        size += 2\n      } else {\n        size += 3\n      }\n    }\n    return size\n  }\n\n  var _getType = function (inp) {\n    var match\n    var key\n    var cons\n    var types\n    var type = typeof inp\n\n    if (type === 'object' && !inp) {\n      return 'null'\n    }\n\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (key in types) {\n        if (cons === types[key]) {\n          type = types[key]\n          break\n        }\n      }\n    }\n    return type\n  }\n\n  var type = _getType(mixedValue)\n\n  switch (type) {\n    case 'function':\n      val = ''\n      break\n    case 'boolean':\n      val = 'b:' + (mixedValue ? '1' : '0')\n      break\n    case 'number':\n      val = (Math.round(mixedValue) === mixedValue ? 'i' : 'd') + ':' + mixedValue\n      break\n    case 'string':\n      val = 's:' + _utf8Size(mixedValue) + ':\"' + mixedValue + '\"'\n      break\n    case 'array':\n    case 'object':\n      val = 'a'\n      /*\n      if (type === 'object') {\n        var objname = mixedValue.constructor.toString().match(/(\\w+)\\(\\)/);\n        if (objname === undefined) {\n          return;\n        }\n        objname[1] = serialize(objname[1]);\n        val = 'O' + objname[1].substring(1, objname[1].length - 1);\n      }\n      */\n\n      for (key in mixedValue) {\n        if (mixedValue.hasOwnProperty(key)) {\n          ktype = _getType(mixedValue[key])\n          if (ktype === 'function') {\n            continue\n          }\n\n          okey = (key.match(/^[0-9]+$/) ? parseInt(key, 10) : key)\n          vals += serialize(okey) + serialize(mixedValue[key])\n          count++\n        }\n      }\n      val += ':' + count + ':{' + vals + '}'\n      break\n    case 'undefined':\n    default:\n      // Fall-through\n      // if the JS object has a property which contains a null value,\n      // the string cannot be unserialized by PHP\n      val = 'N'\n      break\n  }\n  if (type !== 'object' && type !== 'array') {\n    val += ';'\n  }\n\n  return val\n}\n","excerpt":"","more":"module.exports = function serialize (mixedValue) {\n  //  discuss at: http://locutusjs.io/php/serialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Dino\n  // improved by: Le Torbi (http://www.letorbi.de/)\n  // improved by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Andrej Pavlovic\n  // bugfixed by: Garagoth\n  // bugfixed by: Russell Walker (http://www.nbill.co.uk/)\n  // bugfixed by: Jamie Beck (http://www.terabit.ca/)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io/)\n  // bugfixed by: Ben (http://benblume.co.uk/)\n  // bugfixed by: Codestar (http://codestarlive.com/)\n  //    input by: DtTvB (http://dt.in.th/2008-09-16.string-length-in-bytes.html)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //      note 1: We feel the main purpose of this function should be to ease\n  //      note 1: the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: serialize(['Kevin', 'van', 'Zonneveld'])\n  //   returns 1: 'a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'\n  //   example 2: serialize({firstName: 'Kevin', midName: 'van'})\n  //   returns 2: 'a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'\n\n  var val, key, okey\n  var ktype = ''\n  var vals = ''\n  var count = 0\n\n  var _utf8Size = function (str) {\n    var size = 0\n    var i = 0\n    var l = str.length\n    var code = ''\n    for (i = 0; i < l; i++) {\n      code = str.charCodeAt(i)\n      if (code < 0x0080) {\n        size += 1\n      } else if (code < 0x0800) {\n        size += 2\n      } else {\n        size += 3\n      }\n    }\n    return size\n  }\n\n  var _getType = function (inp) {\n    var match\n    var key\n    var cons\n    var types\n    var type = typeof inp\n\n    if (type === 'object' && !inp) {\n      return 'null'\n    }\n\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (key in types) {\n        if (cons === types[key]) {\n          type = types[key]\n          break\n        }\n      }\n    }\n    return type\n  }\n\n  var type = _getType(mixedValue)\n\n  switch (type) {\n    case 'function':\n      val = ''\n      break\n    case 'boolean':\n      val = 'b:' + (mixedValue ? '1' : '0')\n      break\n    case 'number':\n      val = (Math.round(mixedValue) === mixedValue ? 'i' : 'd') + ':' + mixedValue\n      break\n    case 'string':\n      val = 's:' + _utf8Size(mixedValue) + ':\"' + mixedValue + '\"'\n      break\n    case 'array':\n    case 'object':\n      val = 'a'\n      /*\n      if (type === 'object') {\n        var objname = mixedValue.constructor.toString().match(/(\\w+)\\(\\)/);\n        if (objname === undefined) {\n          return;\n        }\n        objname[1] = serialize(objname[1]);\n        val = 'O' + objname[1].substring(1, objname[1].length - 1);\n      }\n      */\n\n      for (key in mixedValue) {\n        if (mixedValue.hasOwnProperty(key)) {\n          ktype = _getType(mixedValue[key])\n          if (ktype === 'function') {\n            continue\n          }\n\n          okey = (key.match(/^[0-9]+$/) ? parseInt(key, 10) : key)\n          vals += serialize(okey) + serialize(mixedValue[key])\n          count++\n        }\n      }\n      val += ':' + count + ':{' + vals + '}'\n      break\n    case 'undefined':\n    default:\n      // Fall-through\n      // if the JS object has a property which contains a null value,\n      // the string cannot be unserialized by PHP\n      val = 'N'\n      break\n  }\n  if (type !== 'object' && type !== 'array') {\n    val += ';'\n  }\n\n  return val\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["strval({red: 1, green: 2, blue: 3, white: 4})"],"estarget":"es5","returns":["'Object'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sstrval in JavaScript","function":"strval","category":"var","language":"php","alias":["/functions/php/strval/","/functions/var/strval/","/php/strval/","/functions/strval/"],"_content":"module.exports = function strval (str) {\n  //  discuss at: http://locutusjs.io/php/strval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strval({red: 1, green: 2, blue: 3, white: 4})\n  //   returns 1: 'Object'\n\n  var gettype = require('../var/gettype')\n  var type = ''\n\n  if (str === null) {\n    return ''\n  }\n\n  type = gettype(str)\n\n  // Comment out the entire switch if you want JS-like\n  // behavior instead of PHP behavior\n  switch (type) {\n    case 'boolean':\n      if (str === true) {\n        return '1'\n      }\n      return ''\n    case 'array':\n      return 'Array'\n    case 'object':\n      return 'Object'\n  }\n\n  return str\n}\n","source":"php/var/strval.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'strval({red: 1, green: 2, blue: 3, white: 4})'\nestarget: es5\nreturns:\n  - '''Object'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sstrval in JavaScript\nfunction: strval\ncategory: var\nlanguage: php\npermalink: php/var/strval/\nalias:\n  - /functions/php/strval/\n  - /functions/var/strval/\n  - /php/strval/\n  - /functions/strval/\n---\nmodule.exports = function strval (str) {\n  //  discuss at: http://locutusjs.io/php/strval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strval({red: 1, green: 2, blue: 3, white: 4})\n  //   returns 1: 'Object'\n\n  var gettype = require('../var/gettype')\n  var type = ''\n\n  if (str === null) {\n    return ''\n  }\n\n  type = gettype(str)\n\n  // Comment out the entire switch if you want JS-like\n  // behavior instead of PHP behavior\n  switch (type) {\n    case 'boolean':\n      if (str === true) {\n        return '1'\n      }\n      return ''\n    case 'array':\n      return 'Array'\n    case 'object':\n      return 'Object'\n  }\n\n  return str\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/strval/index.html","comments":1,"_id":"cinoeja2f0099ou9yq2eo644h","content":"module.exports = function strval (str) {\n  //  discuss at: http://locutusjs.io/php/strval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strval({red: 1, green: 2, blue: 3, white: 4})\n  //   returns 1: 'Object'\n\n  var gettype = require('../var/gettype')\n  var type = ''\n\n  if (str === null) {\n    return ''\n  }\n\n  type = gettype(str)\n\n  // Comment out the entire switch if you want JS-like\n  // behavior instead of PHP behavior\n  switch (type) {\n    case 'boolean':\n      if (str === true) {\n        return '1'\n      }\n      return ''\n    case 'array':\n      return 'Array'\n    case 'object':\n      return 'Object'\n  }\n\n  return str\n}\n","excerpt":"","more":"module.exports = function strval (str) {\n  //  discuss at: http://locutusjs.io/php/strval/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: strval({red: 1, green: 2, blue: 3, white: 4})\n  //   returns 1: 'Object'\n\n  var gettype = require('../var/gettype')\n  var type = ''\n\n  if (str === null) {\n    return ''\n  }\n\n  type = gettype(str)\n\n  // Comment out the entire switch if you want JS-like\n  // behavior instead of PHP behavior\n  switch (type) {\n    case 'boolean':\n      if (str === true) {\n        return '1'\n      }\n      return ''\n    case 'array':\n      return 'Array'\n    case 'object':\n      return 'Object'\n  }\n\n  return str\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')","unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')"],"estarget":"es5","returns":["['Kevin', 'van', 'Zonneveld']","{firstName: 'Kevin', midName: 'van'}"],"dependencies":[],"authors":{"original by":["Arpad Ray (mailto:arpad@php.net)"],"improved by":["Pedro Tainha (http://www.pedrotainha.com)","Kevin van Zonneveld (http://kvz.io)","Kevin van Zonneveld (http://kvz.io)","Chris","James","Le Torbi","Eli Skeggs"],"bugfixed by":["dptr1988","Kevin van Zonneveld (http://kvz.io)","Brett Zamir (http://brett-zamir.me)"],"revised by":["d3x"],"input by":["Brett Zamir (http://brett-zamir.me)","Martin (http://www.erlenwiese.de/)","kilops","Jaroslaw Czarniak"]},"notes":["We feel the main purpose of this function should be\nto ease the transport of data between php & js\nAiming for PHP-compatibility, we have to translate objects to arrays"],"layout":"function","title":"php'sunserialize in JavaScript","function":"unserialize","category":"var","language":"php","alias":["/functions/php/unserialize/","/functions/var/unserialize/","/php/unserialize/","/functions/unserialize/"],"_content":"module.exports = function unserialize (data) {\n  //  discuss at: http://locutusjs.io/php/unserialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Pedro Tainha (http://www.pedrotainha.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Chris\n  // improved by: James\n  // improved by: Le Torbi\n  // improved by: Eli Skeggs\n  // bugfixed by: dptr1988\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: d3x\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //    input by: kilops\n  //    input by: Jaroslaw Czarniak\n  //      note 1: We feel the main purpose of this function should be\n  //      note 1: to ease the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n  //   example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //   returns 2: {firstName: 'Kevin', midName: 'van'}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var utf8Overhead = function (chr) {\n    // http://locutusjs.io/php/unserialize:571#comment_95906\n    var code = chr.charCodeAt(0)\n    var zeroCodes = [\n      338,\n      339,\n      352,\n      353,\n      376,\n      402,\n      8211,\n      8212,\n      8216,\n      8217,\n      8218,\n      8220,\n      8221,\n      8222,\n      8224,\n      8225,\n      8226,\n      8230,\n      8240,\n      8364,\n      8482\n    ]\n    if (code < 0x0080 || code >= 0x00A0 && code <= 0x00FF || zeroCodes.indexOf(code) !== -1) {\n      return 0\n    }\n    if (code < 0x0800) {\n      return 1\n    }\n    return 2\n  }\n  var error = function (type,\n    msg, filename, line) {\n    throw new $global[type](msg, filename, line)\n  }\n  var readUntil = function (data, offset, stopchr) {\n    var i = 2\n    var buf = []\n    var chr = data.slice(offset, offset + 1)\n\n    while (chr !== stopchr) {\n      if ((i + offset) > data.length) {\n        error('Error', 'Invalid')\n      }\n      buf.push(chr)\n      chr = data.slice(offset + (i - 1), offset + i)\n      i += 1\n    }\n    return [buf.length, buf.join('')]\n  }\n  var readChrs = function (data, offset, length) {\n    var i, chr, buf\n\n    buf = []\n    for (i = 0; i < length; i++) {\n      chr = data.slice(offset + (i - 1), offset + i)\n      buf.push(chr)\n      length -= utf8Overhead(chr)\n    }\n    return [buf.length, buf.join('')]\n  }\n  var _unserialize = function (data, offset) {\n    var dtype\n    var dataoffset\n    var keyandchrs\n    var keys\n    var contig\n    var length\n    var array\n    var readdata\n    var readData\n    var ccount\n    var stringlength\n    var i\n    var key\n    var kprops\n    var kchrs\n    var vprops\n    var vchrs\n    var value\n    var chrs = 0\n    var typeconvert = function (x) {\n      return x\n    }\n\n    if (!offset) {\n      offset = 0\n    }\n    dtype = (data.slice(offset, offset + 1)).toLowerCase()\n\n    dataoffset = offset + 2\n\n    switch (dtype) {\n      case 'i':\n        typeconvert = function (x) {\n          return parseInt(x, 10)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'b':\n        typeconvert = function (x) {\n          return parseInt(x, 10) !== 0\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'd':\n        typeconvert = function (x) {\n          return parseFloat(x)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'n':\n        readdata = null\n        break\n      case 's':\n        ccount = readUntil(data, dataoffset, ':')\n        chrs = ccount[0]\n        stringlength = ccount[1]\n        dataoffset += chrs + 2\n\n        readData = readChrs(data, dataoffset + 1, parseInt(stringlength, 10))\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 2\n        if (chrs !== parseInt(stringlength, 10) && chrs !== readdata.length) {\n          error('SyntaxError', 'String length mismatch')\n        }\n        break\n      case 'a':\n        readdata = {}\n\n        keyandchrs = readUntil(data, dataoffset, ':')\n        chrs = keyandchrs[0]\n        keys = keyandchrs[1]\n        dataoffset += chrs + 2\n\n        length = parseInt(keys, 10)\n        contig = true\n\n        for (i = 0; i < length; i++) {\n          kprops = _unserialize(data, dataoffset)\n          kchrs = kprops[1]\n          key = kprops[2]\n          dataoffset += kchrs\n\n          vprops = _unserialize(data, dataoffset)\n          vchrs = vprops[1]\n          value = vprops[2]\n          dataoffset += vchrs\n\n          if (key !== i) {\n            contig = false\n          }\n\n          readdata[key] = value\n        }\n\n        if (contig) {\n          array = new Array(length)\n          for (i = 0; i < length; i++) {\n            array[i] = readdata[i]\n          }\n          readdata = array\n        }\n\n        dataoffset += 1\n        break\n      default:\n        error('SyntaxError', 'Unknown / Unhandled data type(s): ' + dtype)\n        break\n    }\n    return [dtype, dataoffset - offset, typeconvert(readdata)]\n  }\n\n  return _unserialize((data + ''), 0)[2]\n}\n","source":"php/var/unserialize.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'unserialize(''a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}'')'\n  - 'unserialize(''a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}'')'\nestarget: es5\nreturns:\n  - '[''Kevin'', ''van'', ''Zonneveld'']'\n  - '{firstName: ''Kevin'', midName: ''van''}'\ndependencies: []\nauthors:\n  original by:\n    - 'Arpad Ray (mailto:arpad@php.net)'\n  improved by:\n    - 'Pedro Tainha (http://www.pedrotainha.com)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Chris\n    - James\n    - Le Torbi\n    - Eli Skeggs\n  bugfixed by:\n    - dptr1988\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  revised by:\n    - d3x\n  input by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Martin (http://www.erlenwiese.de/)'\n    - kilops\n    - Jaroslaw Czarniak\nnotes:\n  - |-\n    We feel the main purpose of this function should be\n    to ease the transport of data between php & js\n    Aiming for PHP-compatibility, we have to translate objects to arrays\nlayout: function\ntitle: php'sunserialize in JavaScript\nfunction: unserialize\ncategory: var\nlanguage: php\npermalink: php/var/unserialize/\nalias:\n  - /functions/php/unserialize/\n  - /functions/var/unserialize/\n  - /php/unserialize/\n  - /functions/unserialize/\n---\nmodule.exports = function unserialize (data) {\n  //  discuss at: http://locutusjs.io/php/unserialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Pedro Tainha (http://www.pedrotainha.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Chris\n  // improved by: James\n  // improved by: Le Torbi\n  // improved by: Eli Skeggs\n  // bugfixed by: dptr1988\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: d3x\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //    input by: kilops\n  //    input by: Jaroslaw Czarniak\n  //      note 1: We feel the main purpose of this function should be\n  //      note 1: to ease the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n  //   example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //   returns 2: {firstName: 'Kevin', midName: 'van'}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var utf8Overhead = function (chr) {\n    // http://locutusjs.io/php/unserialize:571#comment_95906\n    var code = chr.charCodeAt(0)\n    var zeroCodes = [\n      338,\n      339,\n      352,\n      353,\n      376,\n      402,\n      8211,\n      8212,\n      8216,\n      8217,\n      8218,\n      8220,\n      8221,\n      8222,\n      8224,\n      8225,\n      8226,\n      8230,\n      8240,\n      8364,\n      8482\n    ]\n    if (code < 0x0080 || code >= 0x00A0 && code <= 0x00FF || zeroCodes.indexOf(code) !== -1) {\n      return 0\n    }\n    if (code < 0x0800) {\n      return 1\n    }\n    return 2\n  }\n  var error = function (type,\n    msg, filename, line) {\n    throw new $global[type](msg, filename, line)\n  }\n  var readUntil = function (data, offset, stopchr) {\n    var i = 2\n    var buf = []\n    var chr = data.slice(offset, offset + 1)\n\n    while (chr !== stopchr) {\n      if ((i + offset) > data.length) {\n        error('Error', 'Invalid')\n      }\n      buf.push(chr)\n      chr = data.slice(offset + (i - 1), offset + i)\n      i += 1\n    }\n    return [buf.length, buf.join('')]\n  }\n  var readChrs = function (data, offset, length) {\n    var i, chr, buf\n\n    buf = []\n    for (i = 0; i < length; i++) {\n      chr = data.slice(offset + (i - 1), offset + i)\n      buf.push(chr)\n      length -= utf8Overhead(chr)\n    }\n    return [buf.length, buf.join('')]\n  }\n  var _unserialize = function (data, offset) {\n    var dtype\n    var dataoffset\n    var keyandchrs\n    var keys\n    var contig\n    var length\n    var array\n    var readdata\n    var readData\n    var ccount\n    var stringlength\n    var i\n    var key\n    var kprops\n    var kchrs\n    var vprops\n    var vchrs\n    var value\n    var chrs = 0\n    var typeconvert = function (x) {\n      return x\n    }\n\n    if (!offset) {\n      offset = 0\n    }\n    dtype = (data.slice(offset, offset + 1)).toLowerCase()\n\n    dataoffset = offset + 2\n\n    switch (dtype) {\n      case 'i':\n        typeconvert = function (x) {\n          return parseInt(x, 10)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'b':\n        typeconvert = function (x) {\n          return parseInt(x, 10) !== 0\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'd':\n        typeconvert = function (x) {\n          return parseFloat(x)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'n':\n        readdata = null\n        break\n      case 's':\n        ccount = readUntil(data, dataoffset, ':')\n        chrs = ccount[0]\n        stringlength = ccount[1]\n        dataoffset += chrs + 2\n\n        readData = readChrs(data, dataoffset + 1, parseInt(stringlength, 10))\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 2\n        if (chrs !== parseInt(stringlength, 10) && chrs !== readdata.length) {\n          error('SyntaxError', 'String length mismatch')\n        }\n        break\n      case 'a':\n        readdata = {}\n\n        keyandchrs = readUntil(data, dataoffset, ':')\n        chrs = keyandchrs[0]\n        keys = keyandchrs[1]\n        dataoffset += chrs + 2\n\n        length = parseInt(keys, 10)\n        contig = true\n\n        for (i = 0; i < length; i++) {\n          kprops = _unserialize(data, dataoffset)\n          kchrs = kprops[1]\n          key = kprops[2]\n          dataoffset += kchrs\n\n          vprops = _unserialize(data, dataoffset)\n          vchrs = vprops[1]\n          value = vprops[2]\n          dataoffset += vchrs\n\n          if (key !== i) {\n            contig = false\n          }\n\n          readdata[key] = value\n        }\n\n        if (contig) {\n          array = new Array(length)\n          for (i = 0; i < length; i++) {\n            array[i] = readdata[i]\n          }\n          readdata = array\n        }\n\n        dataoffset += 1\n        break\n      default:\n        error('SyntaxError', 'Unknown / Unhandled data type(s): ' + dtype)\n        break\n    }\n    return [dtype, dataoffset - offset, typeconvert(readdata)]\n  }\n\n  return _unserialize((data + ''), 0)[2]\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/unserialize/index.html","comments":1,"_id":"cinoeja2f009aou9yijhf1alo","content":"module.exports = function unserialize (data) {\n  //  discuss at: http://locutusjs.io/php/unserialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Pedro Tainha (http://www.pedrotainha.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Chris\n  // improved by: James\n  // improved by: Le Torbi\n  // improved by: Eli Skeggs\n  // bugfixed by: dptr1988\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: d3x\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //    input by: kilops\n  //    input by: Jaroslaw Czarniak\n  //      note 1: We feel the main purpose of this function should be\n  //      note 1: to ease the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n  //   example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //   returns 2: {firstName: 'Kevin', midName: 'van'}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var utf8Overhead = function (chr) {\n    // http://locutusjs.io/php/unserialize:571#comment_95906\n    var code = chr.charCodeAt(0)\n    var zeroCodes = [\n      338,\n      339,\n      352,\n      353,\n      376,\n      402,\n      8211,\n      8212,\n      8216,\n      8217,\n      8218,\n      8220,\n      8221,\n      8222,\n      8224,\n      8225,\n      8226,\n      8230,\n      8240,\n      8364,\n      8482\n    ]\n    if (code < 0x0080 || code >= 0x00A0 && code <= 0=\"\" 1=\"\" 2=\"\" 0x00ff=\"\" ||=\"\" zerocodes.indexof(code)=\"\" !=\"=\" -1)=\"\" {=\"\" return=\"\" }=\"\" if=\"\" (code=\"\" <=\"\" 0x0800)=\"\" var=\"\" error=\"function\" (type,=\"\" msg,=\"\" filename,=\"\" line)=\"\" throw=\"\" new=\"\" $global[type](msg,=\"\" readuntil=\"function\" (data,=\"\" offset,=\"\" stopchr)=\"\" i=\"2\" buf=\"[]\" chr=\"data.slice(offset,\" offset=\"\" +=\"\" 1)=\"\" while=\"\" (chr=\"\" ((i=\"\" offset)=\"\"> data.length) {\n        error('Error', 'Invalid')\n      }\n      buf.push(chr)\n      chr = data.slice(offset + (i - 1), offset + i)\n      i += 1\n    }\n    return [buf.length, buf.join('')]\n  }\n  var readChrs = function (data, offset, length) {\n    var i, chr, buf\n\n    buf = []\n    for (i = 0; i < length; i++) {\n      chr = data.slice(offset + (i - 1), offset + i)\n      buf.push(chr)\n      length -= utf8Overhead(chr)\n    }\n    return [buf.length, buf.join('')]\n  }\n  var _unserialize = function (data, offset) {\n    var dtype\n    var dataoffset\n    var keyandchrs\n    var keys\n    var contig\n    var length\n    var array\n    var readdata\n    var readData\n    var ccount\n    var stringlength\n    var i\n    var key\n    var kprops\n    var kchrs\n    var vprops\n    var vchrs\n    var value\n    var chrs = 0\n    var typeconvert = function (x) {\n      return x\n    }\n\n    if (!offset) {\n      offset = 0\n    }\n    dtype = (data.slice(offset, offset + 1)).toLowerCase()\n\n    dataoffset = offset + 2\n\n    switch (dtype) {\n      case 'i':\n        typeconvert = function (x) {\n          return parseInt(x, 10)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'b':\n        typeconvert = function (x) {\n          return parseInt(x, 10) !== 0\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'd':\n        typeconvert = function (x) {\n          return parseFloat(x)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'n':\n        readdata = null\n        break\n      case 's':\n        ccount = readUntil(data, dataoffset, ':')\n        chrs = ccount[0]\n        stringlength = ccount[1]\n        dataoffset += chrs + 2\n\n        readData = readChrs(data, dataoffset + 1, parseInt(stringlength, 10))\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 2\n        if (chrs !== parseInt(stringlength, 10) && chrs !== readdata.length) {\n          error('SyntaxError', 'String length mismatch')\n        }\n        break\n      case 'a':\n        readdata = {}\n\n        keyandchrs = readUntil(data, dataoffset, ':')\n        chrs = keyandchrs[0]\n        keys = keyandchrs[1]\n        dataoffset += chrs + 2\n\n        length = parseInt(keys, 10)\n        contig = true\n\n        for (i = 0; i < length; i++) {\n          kprops = _unserialize(data, dataoffset)\n          kchrs = kprops[1]\n          key = kprops[2]\n          dataoffset += kchrs\n\n          vprops = _unserialize(data, dataoffset)\n          vchrs = vprops[1]\n          value = vprops[2]\n          dataoffset += vchrs\n\n          if (key !== i) {\n            contig = false\n          }\n\n          readdata[key] = value\n        }\n\n        if (contig) {\n          array = new Array(length)\n          for (i = 0; i < length; i++) {\n            array[i] = readdata[i]\n          }\n          readdata = array\n        }\n\n        dataoffset += 1\n        break\n      default:\n        error('SyntaxError', 'Unknown / Unhandled data type(s): ' + dtype)\n        break\n    }\n    return [dtype, dataoffset - offset, typeconvert(readdata)]\n  }\n\n  return _unserialize((data + ''), 0)[2]\n}\n</=>","excerpt":"","more":"module.exports = function unserialize (data) {\n  //  discuss at: http://locutusjs.io/php/unserialize/\n  // original by: Arpad Ray (mailto:arpad@php.net)\n  // improved by: Pedro Tainha (http://www.pedrotainha.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Chris\n  // improved by: James\n  // improved by: Le Torbi\n  // improved by: Eli Skeggs\n  // bugfixed by: dptr1988\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: d3x\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Martin (http://www.erlenwiese.de/)\n  //    input by: kilops\n  //    input by: Jaroslaw Czarniak\n  //      note 1: We feel the main purpose of this function should be\n  //      note 1: to ease the transport of data between php & js\n  //      note 1: Aiming for PHP-compatibility, we have to translate objects to arrays\n  //   example 1: unserialize('a:3:{i:0;s:5:\"Kevin\";i:1;s:3:\"van\";i:2;s:9:\"Zonneveld\";}')\n  //   returns 1: ['Kevin', 'van', 'Zonneveld']\n  //   example 2: unserialize('a:2:{s:9:\"firstName\";s:5:\"Kevin\";s:7:\"midName\";s:3:\"van\";}')\n  //   returns 2: {firstName: 'Kevin', midName: 'van'}\n\n  var $global = (typeof window !== 'undefined' ? window : GLOBAL)\n\n  var utf8Overhead = function (chr) {\n    // http://locutusjs.io/php/unserialize:571#comment_95906\n    var code = chr.charCodeAt(0)\n    var zeroCodes = [\n      338,\n      339,\n      352,\n      353,\n      376,\n      402,\n      8211,\n      8212,\n      8216,\n      8217,\n      8218,\n      8220,\n      8221,\n      8222,\n      8224,\n      8225,\n      8226,\n      8230,\n      8240,\n      8364,\n      8482\n    ]\n    if (code < 0x0080 || code >= 0x00A0 && code <= 0x00FF || zeroCodes.indexOf(code) !== -1) {\n      return 0\n    }\n    if (code < 0x0800) {\n      return 1\n    }\n    return 2\n  }\n  var error = function (type,\n    msg, filename, line) {\n    throw new $global[type](msg, filename, line)\n  }\n  var readUntil = function (data, offset, stopchr) {\n    var i = 2\n    var buf = []\n    var chr = data.slice(offset, offset + 1)\n\n    while (chr !== stopchr) {\n      if ((i + offset) > data.length) {\n        error('Error', 'Invalid')\n      }\n      buf.push(chr)\n      chr = data.slice(offset + (i - 1), offset + i)\n      i += 1\n    }\n    return [buf.length, buf.join('')]\n  }\n  var readChrs = function (data, offset, length) {\n    var i, chr, buf\n\n    buf = []\n    for (i = 0; i < length; i++) {\n      chr = data.slice(offset + (i - 1), offset + i)\n      buf.push(chr)\n      length -= utf8Overhead(chr)\n    }\n    return [buf.length, buf.join('')]\n  }\n  var _unserialize = function (data, offset) {\n    var dtype\n    var dataoffset\n    var keyandchrs\n    var keys\n    var contig\n    var length\n    var array\n    var readdata\n    var readData\n    var ccount\n    var stringlength\n    var i\n    var key\n    var kprops\n    var kchrs\n    var vprops\n    var vchrs\n    var value\n    var chrs = 0\n    var typeconvert = function (x) {\n      return x\n    }\n\n    if (!offset) {\n      offset = 0\n    }\n    dtype = (data.slice(offset, offset + 1)).toLowerCase()\n\n    dataoffset = offset + 2\n\n    switch (dtype) {\n      case 'i':\n        typeconvert = function (x) {\n          return parseInt(x, 10)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'b':\n        typeconvert = function (x) {\n          return parseInt(x, 10) !== 0\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'd':\n        typeconvert = function (x) {\n          return parseFloat(x)\n        }\n        readData = readUntil(data, dataoffset, ';')\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 1\n        break\n      case 'n':\n        readdata = null\n        break\n      case 's':\n        ccount = readUntil(data, dataoffset, ':')\n        chrs = ccount[0]\n        stringlength = ccount[1]\n        dataoffset += chrs + 2\n\n        readData = readChrs(data, dataoffset + 1, parseInt(stringlength, 10))\n        chrs = readData[0]\n        readdata = readData[1]\n        dataoffset += chrs + 2\n        if (chrs !== parseInt(stringlength, 10) && chrs !== readdata.length) {\n          error('SyntaxError', 'String length mismatch')\n        }\n        break\n      case 'a':\n        readdata = {}\n\n        keyandchrs = readUntil(data, dataoffset, ':')\n        chrs = keyandchrs[0]\n        keys = keyandchrs[1]\n        dataoffset += chrs + 2\n\n        length = parseInt(keys, 10)\n        contig = true\n\n        for (i = 0; i < length; i++) {\n          kprops = _unserialize(data, dataoffset)\n          kchrs = kprops[1]\n          key = kprops[2]\n          dataoffset += kchrs\n\n          vprops = _unserialize(data, dataoffset)\n          vchrs = vprops[1]\n          value = vprops[2]\n          dataoffset += vchrs\n\n          if (key !== i) {\n            contig = false\n          }\n\n          readdata[key] = value\n        }\n\n        if (contig) {\n          array = new Array(length)\n          for (i = 0; i < length; i++) {\n            array[i] = readdata[i]\n          }\n          readdata = array\n        }\n\n        dataoffset += 1\n        break\n      default:\n        error('SyntaxError', 'Unknown / Unhandled data type(s): ' + dtype)\n        break\n    }\n    return [dtype, dataoffset - offset, typeconvert(readdata)]\n  }\n\n  return _unserialize((data + ''), 0)[2]\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var_dump(1)"],"estarget":"es5","returns":["'int(1)'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Zahlii","Brett Zamir (http://brett-zamir.me)"]},"notes":["For returning a string, use var_export() with the second argument set to true"],"layout":"function","title":"php'svar_dump in JavaScript","function":"var_dump","category":"var","language":"php","alias":["/functions/php/var_dump/","/functions/var/var_dump/","/php/var_dump/","/functions/var_dump/"],"_content":"module.exports = function var_dump () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_dump/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Zahlii\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: For returning a string, use var_export() with the second argument set to true\n  //        test: skip-all\n  //   example 1: var_dump(1)\n  //   returns 1: 'int(1)'\n\n  var echo = require('../strings/echo')\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n  var lgth = 0\n  var i = 0\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/)\n      .exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _getInnerVal = function (val, thickPad) {\n    var ret = ''\n    if (val === null) {\n      ret = 'NULL'\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')'\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"'\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) === parseInt(val, 10)) {\n        ret = 'int(' + val + ')'\n      } else {\n        ret = 'float(' + val + ')'\n      }\n    } else if (typeof val === 'undefined') {\n      // The remaining are not PHP behavior because these values\n      // only exist in this exact form in JavaScript\n      ret = 'undefined'\n    } else if (typeof val === 'function') {\n      var funcLines = val.toString()\n        .split('\\n')\n      ret = ''\n      for (var i = 0, fll = funcLines.length; i < fll; i++) {\n        ret += (i !== 0 ? '\\n' + thickPad : '') + funcLines[i]\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')'\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')'\n    } else if (val.nodeName) {\n      // Different than PHP's DOMElement\n      switch (val.nodeType) {\n        case 1:\n          if (typeof val.namespaceURI === 'undefined' ||\n            val.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n          // Undefined namespace could be plain XML, but namespaceURI not widely supported\n            ret = 'HTMLElement(\"' + val.nodeName + '\")'\n          } else {\n            ret = 'XML Element(\"' + val.nodeName + '\")'\n          }\n          break\n        case 2:\n          ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')'\n          break\n        case 3:\n          ret = 'TEXT_NODE(' + val.nodeValue + ')'\n          break\n        case 4:\n          ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')'\n          break\n        case 5:\n          ret = 'ENTITY_REFERENCE_NODE'\n          break\n        case 6:\n          ret = 'ENTITY_NODE'\n          break\n        case 7:\n          ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')'\n          break\n        case 8:\n          ret = 'COMMENT_NODE(' + val.nodeValue + ')'\n          break\n        case 9:\n          ret = 'DOCUMENT_NODE'\n          break\n        case 10:\n          ret = 'DOCUMENT_TYPE_NODE'\n          break\n        case 11:\n          ret = 'DOCUMENT_FRAGMENT_NODE'\n          break\n        case 12:\n          ret = 'NOTATION_NODE'\n          break\n      }\n    }\n    return ret\n  }\n\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * (curDepth - 1), padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n    var val = ''\n\n    if (typeof obj === 'object' && obj !== null) {\n      if (obj.constructor && _getFuncName(obj.constructor) === 'LOCUTUS_Resource') {\n        return obj.var_dump()\n      }\n      lgth = 0\n      for (var someProp in obj) {\n        if (obj.hasOwnProperty(someProp)) {\n          lgth++\n        }\n      }\n      str += 'array(' + lgth + ') {\\n'\n      for (var key in obj) {\n        var objVal = obj[key]\n        if (typeof objVal === 'object' &&\n          objVal !== null &&\n          !(objVal instanceof Date) &&\n          !(objVal instanceof RegExp) &&\n          !objVal.nodeName) {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += _formatArray(objVal, curDepth + 1, padVal, padChar)\n        } else {\n          val = _getInnerVal(objVal, thickPad)\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += val\n          str += '\\n'\n        }\n      }\n      str += basePad + '}\\n'\n    } else {\n      str = _getInnerVal(obj, thickPad)\n    }\n    return str\n  }\n\n  output = _formatArray(arguments[0], 0, padVal, padChar)\n  for (i = 1; i < arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, padVal, padChar)\n  }\n\n  echo(output)\n\n  // Not how PHP does it, but helps us test:\n  return output\n}\n","source":"php/var/var_dump.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - var_dump(1)\nestarget: es5\nreturns:\n  - '''int(1)'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - Zahlii\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes:\n  - >-\n    For returning a string, use var_export() with the second argument set to\n    true\nlayout: function\ntitle: php'svar_dump in JavaScript\nfunction: var_dump\ncategory: var\nlanguage: php\npermalink: php/var/var_dump/\nalias:\n  - /functions/php/var_dump/\n  - /functions/var/var_dump/\n  - /php/var_dump/\n  - /functions/var_dump/\n---\nmodule.exports = function var_dump () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_dump/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Zahlii\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: For returning a string, use var_export() with the second argument set to true\n  //        test: skip-all\n  //   example 1: var_dump(1)\n  //   returns 1: 'int(1)'\n\n  var echo = require('../strings/echo')\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n  var lgth = 0\n  var i = 0\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/)\n      .exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _getInnerVal = function (val, thickPad) {\n    var ret = ''\n    if (val === null) {\n      ret = 'NULL'\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')'\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"'\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) === parseInt(val, 10)) {\n        ret = 'int(' + val + ')'\n      } else {\n        ret = 'float(' + val + ')'\n      }\n    } else if (typeof val === 'undefined') {\n      // The remaining are not PHP behavior because these values\n      // only exist in this exact form in JavaScript\n      ret = 'undefined'\n    } else if (typeof val === 'function') {\n      var funcLines = val.toString()\n        .split('\\n')\n      ret = ''\n      for (var i = 0, fll = funcLines.length; i < fll; i++) {\n        ret += (i !== 0 ? '\\n' + thickPad : '') + funcLines[i]\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')'\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')'\n    } else if (val.nodeName) {\n      // Different than PHP's DOMElement\n      switch (val.nodeType) {\n        case 1:\n          if (typeof val.namespaceURI === 'undefined' ||\n            val.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n          // Undefined namespace could be plain XML, but namespaceURI not widely supported\n            ret = 'HTMLElement(\"' + val.nodeName + '\")'\n          } else {\n            ret = 'XML Element(\"' + val.nodeName + '\")'\n          }\n          break\n        case 2:\n          ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')'\n          break\n        case 3:\n          ret = 'TEXT_NODE(' + val.nodeValue + ')'\n          break\n        case 4:\n          ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')'\n          break\n        case 5:\n          ret = 'ENTITY_REFERENCE_NODE'\n          break\n        case 6:\n          ret = 'ENTITY_NODE'\n          break\n        case 7:\n          ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')'\n          break\n        case 8:\n          ret = 'COMMENT_NODE(' + val.nodeValue + ')'\n          break\n        case 9:\n          ret = 'DOCUMENT_NODE'\n          break\n        case 10:\n          ret = 'DOCUMENT_TYPE_NODE'\n          break\n        case 11:\n          ret = 'DOCUMENT_FRAGMENT_NODE'\n          break\n        case 12:\n          ret = 'NOTATION_NODE'\n          break\n      }\n    }\n    return ret\n  }\n\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * (curDepth - 1), padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n    var val = ''\n\n    if (typeof obj === 'object' && obj !== null) {\n      if (obj.constructor && _getFuncName(obj.constructor) === 'LOCUTUS_Resource') {\n        return obj.var_dump()\n      }\n      lgth = 0\n      for (var someProp in obj) {\n        if (obj.hasOwnProperty(someProp)) {\n          lgth++\n        }\n      }\n      str += 'array(' + lgth + ') {\\n'\n      for (var key in obj) {\n        var objVal = obj[key]\n        if (typeof objVal === 'object' &&\n          objVal !== null &&\n          !(objVal instanceof Date) &&\n          !(objVal instanceof RegExp) &&\n          !objVal.nodeName) {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += _formatArray(objVal, curDepth + 1, padVal, padChar)\n        } else {\n          val = _getInnerVal(objVal, thickPad)\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += val\n          str += '\\n'\n        }\n      }\n      str += basePad + '}\\n'\n    } else {\n      str = _getInnerVal(obj, thickPad)\n    }\n    return str\n  }\n\n  output = _formatArray(arguments[0], 0, padVal, padChar)\n  for (i = 1; i < arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, padVal, padChar)\n  }\n\n  echo(output)\n\n  // Not how PHP does it, but helps us test:\n  return output\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/var_dump/index.html","comments":1,"_id":"cinoeja2g009bou9ybc4puprx","content":"module.exports = function var_dump () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_dump/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Zahlii\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: For returning a string, use var_export() with the second argument set to true\n  //        test: skip-all\n  //   example 1: var_dump(1)\n  //   returns 1: 'int(1)'\n\n  var echo = require('../strings/echo')\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n  var lgth = 0\n  var i = 0\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/)\n      .exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _getInnerVal = function (val, thickPad) {\n    var ret = ''\n    if (val === null) {\n      ret = 'NULL'\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')'\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"'\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) === parseInt(val, 10)) {\n        ret = 'int(' + val + ')'\n      } else {\n        ret = 'float(' + val + ')'\n      }\n    } else if (typeof val === 'undefined') {\n      // The remaining are not PHP behavior because these values\n      // only exist in this exact form in JavaScript\n      ret = 'undefined'\n    } else if (typeof val === 'function') {\n      var funcLines = val.toString()\n        .split('\\n')\n      ret = ''\n      for (var i = 0, fll = funcLines.length; i < fll; i++) {\n        ret += (i !== 0 ? '\\n' + thickPad : '') + funcLines[i]\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')'\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')'\n    } else if (val.nodeName) {\n      // Different than PHP's DOMElement\n      switch (val.nodeType) {\n        case 1:\n          if (typeof val.namespaceURI === 'undefined' ||\n            val.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n          // Undefined namespace could be plain XML, but namespaceURI not widely supported\n            ret = 'HTMLElement(\"' + val.nodeName + '\")'\n          } else {\n            ret = 'XML Element(\"' + val.nodeName + '\")'\n          }\n          break\n        case 2:\n          ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')'\n          break\n        case 3:\n          ret = 'TEXT_NODE(' + val.nodeValue + ')'\n          break\n        case 4:\n          ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')'\n          break\n        case 5:\n          ret = 'ENTITY_REFERENCE_NODE'\n          break\n        case 6:\n          ret = 'ENTITY_NODE'\n          break\n        case 7:\n          ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')'\n          break\n        case 8:\n          ret = 'COMMENT_NODE(' + val.nodeValue + ')'\n          break\n        case 9:\n          ret = 'DOCUMENT_NODE'\n          break\n        case 10:\n          ret = 'DOCUMENT_TYPE_NODE'\n          break\n        case 11:\n          ret = 'DOCUMENT_FRAGMENT_NODE'\n          break\n        case 12:\n          ret = 'NOTATION_NODE'\n          break\n      }\n    }\n    return ret\n  }\n\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * (curDepth - 1), padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n    var val = ''\n\n    if (typeof obj === 'object' && obj !== null) {\n      if (obj.constructor && _getFuncName(obj.constructor) === 'LOCUTUS_Resource') {\n        return obj.var_dump()\n      }\n      lgth = 0\n      for (var someProp in obj) {\n        if (obj.hasOwnProperty(someProp)) {\n          lgth++\n        }\n      }\n      str += 'array(' + lgth + ') {\\n'\n      for (var key in obj) {\n        var objVal = obj[key]\n        if (typeof objVal === 'object' &&\n          objVal !== null &&\n          !(objVal instanceof Date) &&\n          !(objVal instanceof RegExp) &&\n          !objVal.nodeName) {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += _formatArray(objVal, curDepth + 1, padVal, padChar)\n        } else {\n          val = _getInnerVal(objVal, thickPad)\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += val\n          str += '\\n'\n        }\n      }\n      str += basePad + '}\\n'\n    } else {\n      str = _getInnerVal(obj, thickPad)\n    }\n    return str\n  }\n\n  output = _formatArray(arguments[0], 0, padVal, padChar)\n  for (i = 1; i < arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, padVal, padChar)\n  }\n\n  echo(output)\n\n  // Not how PHP does it, but helps us test:\n  return output\n}\n","excerpt":"","more":"module.exports = function var_dump () { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_dump/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Zahlii\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: For returning a string, use var_export() with the second argument set to true\n  //        test: skip-all\n  //   example 1: var_dump(1)\n  //   returns 1: 'int(1)'\n\n  var echo = require('../strings/echo')\n  var output = ''\n  var padChar = ' '\n  var padVal = 4\n  var lgth = 0\n  var i = 0\n\n  var _getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/)\n      .exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _repeatChar = function (len, padChar) {\n    var str = ''\n    for (var i = 0; i < len; i++) {\n      str += padChar\n    }\n    return str\n  }\n  var _getInnerVal = function (val, thickPad) {\n    var ret = ''\n    if (val === null) {\n      ret = 'NULL'\n    } else if (typeof val === 'boolean') {\n      ret = 'bool(' + val + ')'\n    } else if (typeof val === 'string') {\n      ret = 'string(' + val.length + ') \"' + val + '\"'\n    } else if (typeof val === 'number') {\n      if (parseFloat(val) === parseInt(val, 10)) {\n        ret = 'int(' + val + ')'\n      } else {\n        ret = 'float(' + val + ')'\n      }\n    } else if (typeof val === 'undefined') {\n      // The remaining are not PHP behavior because these values\n      // only exist in this exact form in JavaScript\n      ret = 'undefined'\n    } else if (typeof val === 'function') {\n      var funcLines = val.toString()\n        .split('\\n')\n      ret = ''\n      for (var i = 0, fll = funcLines.length; i < fll; i++) {\n        ret += (i !== 0 ? '\\n' + thickPad : '') + funcLines[i]\n      }\n    } else if (val instanceof Date) {\n      ret = 'Date(' + val + ')'\n    } else if (val instanceof RegExp) {\n      ret = 'RegExp(' + val + ')'\n    } else if (val.nodeName) {\n      // Different than PHP's DOMElement\n      switch (val.nodeType) {\n        case 1:\n          if (typeof val.namespaceURI === 'undefined' ||\n            val.namespaceURI === 'http://www.w3.org/1999/xhtml') {\n          // Undefined namespace could be plain XML, but namespaceURI not widely supported\n            ret = 'HTMLElement(\"' + val.nodeName + '\")'\n          } else {\n            ret = 'XML Element(\"' + val.nodeName + '\")'\n          }\n          break\n        case 2:\n          ret = 'ATTRIBUTE_NODE(' + val.nodeName + ')'\n          break\n        case 3:\n          ret = 'TEXT_NODE(' + val.nodeValue + ')'\n          break\n        case 4:\n          ret = 'CDATA_SECTION_NODE(' + val.nodeValue + ')'\n          break\n        case 5:\n          ret = 'ENTITY_REFERENCE_NODE'\n          break\n        case 6:\n          ret = 'ENTITY_NODE'\n          break\n        case 7:\n          ret = 'PROCESSING_INSTRUCTION_NODE(' + val.nodeName + ':' + val.nodeValue + ')'\n          break\n        case 8:\n          ret = 'COMMENT_NODE(' + val.nodeValue + ')'\n          break\n        case 9:\n          ret = 'DOCUMENT_NODE'\n          break\n        case 10:\n          ret = 'DOCUMENT_TYPE_NODE'\n          break\n        case 11:\n          ret = 'DOCUMENT_FRAGMENT_NODE'\n          break\n        case 12:\n          ret = 'NOTATION_NODE'\n          break\n      }\n    }\n    return ret\n  }\n\n  var _formatArray = function (obj, curDepth, padVal, padChar) {\n    if (curDepth > 0) {\n      curDepth++\n    }\n\n    var basePad = _repeatChar(padVal * (curDepth - 1), padChar)\n    var thickPad = _repeatChar(padVal * (curDepth + 1), padChar)\n    var str = ''\n    var val = ''\n\n    if (typeof obj === 'object' && obj !== null) {\n      if (obj.constructor && _getFuncName(obj.constructor) === 'LOCUTUS_Resource') {\n        return obj.var_dump()\n      }\n      lgth = 0\n      for (var someProp in obj) {\n        if (obj.hasOwnProperty(someProp)) {\n          lgth++\n        }\n      }\n      str += 'array(' + lgth + ') {\\n'\n      for (var key in obj) {\n        var objVal = obj[key]\n        if (typeof objVal === 'object' &&\n          objVal !== null &&\n          !(objVal instanceof Date) &&\n          !(objVal instanceof RegExp) &&\n          !objVal.nodeName) {\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += _formatArray(objVal, curDepth + 1, padVal, padChar)\n        } else {\n          val = _getInnerVal(objVal, thickPad)\n          str += thickPad\n          str += '['\n          str += key\n          str += '] =>\\n'\n          str += thickPad\n          str += val\n          str += '\\n'\n        }\n      }\n      str += basePad + '}\\n'\n    } else {\n      str = _getInnerVal(obj, thickPad)\n    }\n    return str\n  }\n\n  output = _formatArray(arguments[0], 0, padVal, padChar)\n  for (i = 1; i < arguments.length; i++) {\n    output += '\\n' + _formatArray(arguments[i], 0, padVal, padChar)\n  }\n\n  echo(output)\n\n  // Not how PHP does it, but helps us test:\n  return output\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["var_export(null)","var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)","var data = 'Kevin'\nvar_export(data, true)"],"estarget":"es5","returns":["null","\"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"","\"'Kevin'\""],"dependencies":[],"authors":{"original by":["Philip Peterson"],"improved by":["johnrembo","Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Brett Zamir (http://brett-zamir.me)","Brett Zamir (http://brett-zamir.me)"],"input by":["Brian Tafoya (http://www.premasolutions.com/)","Hans Henrik (http://hanshenrik.tk/)"]},"notes":[],"layout":"function","title":"php'svar_export in JavaScript","function":"var_export","category":"var","language":"php","alias":["/functions/php/var_export/","/functions/var/var_export/","/php/var_export/","/functions/var_export/"],"_content":"module.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brian Tafoya (http://www.premasolutions.com/)\n  //    input by: Hans Henrik (http://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n\n  var echo = require('../strings/echo')\n  var retstr = ''\n  var iret = ''\n  var value\n  var cnt = 0\n  var x = []\n  var i = 0\n  var funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  var idtLevel = arguments[2] || 2\n  var innerIndent = ''\n  var outerIndent = ''\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  var __getType = function (inp) {\n    var i = 0\n    var match\n    var types\n    var cons\n    var type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  var type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = var_export(mixedExpression[i], 1, idtLevel + 2)\n      value = typeof value === 'string' ? value.replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;') : value\n      x[cnt++] = innerIndent + i + ' => ' +\n        (__getType(mixedExpression[i]) === 'array' ? '\\n' : '') + value\n    }\n    iret = x.join(',\\n')\n    retstr = outerIndent + 'array (\\n' + iret + '\\n' + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n","source":"php/var/var_export.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - var_export(null)\n  - 'var_export({0: ''Kevin'', 1: ''van'', 2: ''Zonneveld''}, true)'\n  - |-\n    var data = 'Kevin'\n    var_export(data, true)\nestarget: es5\nreturns:\n  - 'null'\n  - '\"array (\\n  0 => ''Kevin'',\\n  1 => ''van'',\\n  2 => ''Zonneveld''\\n)\"'\n  - '\"''Kevin''\"'\ndependencies: []\nauthors:\n  original by:\n    - Philip Peterson\n  improved by:\n    - johnrembo\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n    - 'Brett Zamir (http://brett-zamir.me)'\n  input by:\n    - 'Brian Tafoya (http://www.premasolutions.com/)'\n    - 'Hans Henrik (http://hanshenrik.tk/)'\nnotes: []\nlayout: function\ntitle: php'svar_export in JavaScript\nfunction: var_export\ncategory: var\nlanguage: php\npermalink: php/var/var_export/\nalias:\n  - /functions/php/var_export/\n  - /functions/var/var_export/\n  - /php/var_export/\n  - /functions/var_export/\n---\nmodule.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brian Tafoya (http://www.premasolutions.com/)\n  //    input by: Hans Henrik (http://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n\n  var echo = require('../strings/echo')\n  var retstr = ''\n  var iret = ''\n  var value\n  var cnt = 0\n  var x = []\n  var i = 0\n  var funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  var idtLevel = arguments[2] || 2\n  var innerIndent = ''\n  var outerIndent = ''\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  var __getType = function (inp) {\n    var i = 0\n    var match\n    var types\n    var cons\n    var type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  var type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = var_export(mixedExpression[i], 1, idtLevel + 2)\n      value = typeof value === 'string' ? value.replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;') : value\n      x[cnt++] = innerIndent + i + ' => ' +\n        (__getType(mixedExpression[i]) === 'array' ? '\\n' : '') + value\n    }\n    iret = x.join(',\\n')\n    retstr = outerIndent + 'array (\\n' + iret + '\\n' + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/var/var_export/index.html","comments":1,"_id":"cinoeja2g009cou9ygygasf7k","content":"module.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brian Tafoya (http://www.premasolutions.com/)\n  //    input by: Hans Henrik (http://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n\n  var echo = require('../strings/echo')\n  var retstr = ''\n  var iret = ''\n  var value\n  var cnt = 0\n  var x = []\n  var i = 0\n  var funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  var idtLevel = arguments[2] || 2\n  var innerIndent = ''\n  var outerIndent = ''\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  var __getType = function (inp) {\n    var i = 0\n    var match\n    var types\n    var cons\n    var type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  var type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = var_export(mixedExpression[i], 1, idtLevel + 2)\n      value = typeof value === 'string' ? value.replace(//g, '&gt;') : value\n      x[cnt++] = innerIndent + i + ' => ' +\n        (__getType(mixedExpression[i]) === 'array' ? '\\n' : '') + value\n    }\n    iret = x.join(',\\n')\n    retstr = outerIndent + 'array (\\n' + iret + '\\n' + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n","excerpt":"","more":"module.exports = function var_export (mixedExpression, boolReturn) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/var_export/\n  // original by: Philip Peterson\n  // improved by: johnrembo\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //    input by: Brian Tafoya (http://www.premasolutions.com/)\n  //    input by: Hans Henrik (http://hanshenrik.tk/)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //   example 1: var_export(null)\n  //   returns 1: null\n  //   example 2: var_export({0: 'Kevin', 1: 'van', 2: 'Zonneveld'}, true)\n  //   returns 2: \"array (\\n  0 => 'Kevin',\\n  1 => 'van',\\n  2 => 'Zonneveld'\\n)\"\n  //   example 3: var data = 'Kevin'\n  //   example 3: var_export(data, true)\n  //   returns 3: \"'Kevin'\"\n\n  var echo = require('../strings/echo')\n  var retstr = ''\n  var iret = ''\n  var value\n  var cnt = 0\n  var x = []\n  var i = 0\n  var funcParts = []\n  // We use the last argument (not part of PHP) to pass in\n  // our indentation level\n  var idtLevel = arguments[2] || 2\n  var innerIndent = ''\n  var outerIndent = ''\n  var getFuncName = function (fn) {\n    var name = (/\\W*function\\s+([\\w\\$]+)\\s*\\(/).exec(fn)\n    if (!name) {\n      return '(Anonymous)'\n    }\n    return name[1]\n  }\n\n  var _makeIndent = function (idtLevel) {\n    return (new Array(idtLevel + 1))\n      .join(' ')\n  }\n  var __getType = function (inp) {\n    var i = 0\n    var match\n    var types\n    var cons\n    var type = typeof inp\n    if (type === 'object' && (inp && inp.constructor) &&\n      getFuncName(inp.constructor) === 'LOCUTUS_Resource') {\n      return 'resource'\n    }\n    if (type === 'function') {\n      return 'function'\n    }\n    if (type === 'object' && !inp) {\n      // Should this be just null?\n      return 'null'\n    }\n    if (type === 'object') {\n      if (!inp.constructor) {\n        return 'object'\n      }\n      cons = inp.constructor.toString()\n      match = cons.match(/(\\w+)\\(/)\n      if (match) {\n        cons = match[1].toLowerCase()\n      }\n      types = ['boolean', 'number', 'string', 'array']\n      for (i = 0; i < types.length; i++) {\n        if (cons === types[i]) {\n          type = types[i]\n          break\n        }\n      }\n    }\n    return type\n  }\n  var type = __getType(mixedExpression)\n\n  if (type === null) {\n    retstr = 'NULL'\n  } else if (type === 'array' || type === 'object') {\n    outerIndent = _makeIndent(idtLevel - 2)\n    innerIndent = _makeIndent(idtLevel)\n    for (i in mixedExpression) {\n      value = var_export(mixedExpression[i], 1, idtLevel + 2)\n      value = typeof value === 'string' ? value.replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;') : value\n      x[cnt++] = innerIndent + i + ' => ' +\n        (__getType(mixedExpression[i]) === 'array' ? '\\n' : '') + value\n    }\n    iret = x.join(',\\n')\n    retstr = outerIndent + 'array (\\n' + iret + '\\n' + outerIndent + ')'\n  } else if (type === 'function') {\n    funcParts = mixedExpression.toString().match(/function .*?\\((.*?)\\) \\{([\\s\\S]*)\\}/)\n\n    // For lambda functions, var_export() outputs such as the following:\n    // '\\000lambda_1'. Since it will probably not be a common use to\n    // expect this (unhelpful) form, we'll use another PHP-exportable\n    // construct, create_function() (though dollar signs must be on the\n    // variables in JavaScript); if using instead in JavaScript and you\n    // are using the namespaced version, note that create_function() will\n    // not be available as a global\n    retstr = \"create_function ('\" + funcParts[1] + \"', '\" +\n      funcParts[2].replace(new RegExp(\"'\", 'g'), \"\\\\'\") + \"')\"\n  } else if (type === 'resource') {\n    // Resources treated as null for var_export\n    retstr = 'NULL'\n  } else {\n    retstr = typeof mixedExpression !== 'string' ? mixedExpression\n      : \"'\" + mixedExpression.replace(/([\"'])/g, '\\\\$1').replace(/\\0/g, '\\\\0') + \"'\"\n  }\n\n  if (!boolReturn) {\n    echo(retstr)\n    return null\n  }\n\n  return retstr\n}\n"},{"type":"category","language":"php","category":"xdiff","title":"xdiff","_content":"","source":"php/xdiff/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: xdiff\ntitle: xdiff\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xdiff/index.html","comments":1,"layout":"page","_id":"cinoeja2g009dou9ywknd1krw","content":"","excerpt":"","more":""},{"type":"category","language":"php","category":"xml","title":"xml","_content":"","source":"php/xml/index.html","raw":"---\ntype: category\nlanguage: php\ncategory: xml\ntitle: xml\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xml/index.html","comments":1,"layout":"page","_id":"cinoeja2h009eou9ytxz1l030","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["utf8_decode('Kevin van Zonneveld')"],"estarget":"es5","returns":["'Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Webtoolkit.info (http://www.webtoolkit.info/)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","Norman \"zEh\" Fuchs"],"bugfixed by":["hitwork","Onno Marsman (https://twitter.com/onnomarsman)","Kevin van Zonneveld (http://kvz.io)","kirilloid","w35l3y (http://www.wesley.eti.br)"],"input by":["Aman Gupta","Brett Zamir (http://brett-zamir.me)"]},"notes":[],"layout":"function","title":"php'sutf8_decode in JavaScript","function":"utf8_decode","category":"xml","language":"php","alias":["/functions/php/utf8_decode/","/functions/xml/utf8_decode/","/php/utf8_decode/","/functions/utf8_decode/"],"_content":"module.exports = function utf8_decode (strData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_decode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Norman \"zEh\" Fuchs\n  // bugfixed by: hitwork\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: kirilloid\n  // bugfixed by: w35l3y (http://www.wesley.eti.br)\n  //   example 1: utf8_decode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var tmpArr = []\n  var i = 0\n  var c1 = 0\n  var seqlen = 0\n\n  strData += ''\n\n  while (i < strData.length) {\n    c1 = strData.charCodeAt(i) & 0xFF\n    seqlen = 0\n\n    // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n    if (c1 <= 0xBF) {\n      c1 = (c1 & 0x7F)\n      seqlen = 1\n    } else if (c1 <= 0xDF) {\n      c1 = (c1 & 0x1F)\n      seqlen = 2\n    } else if (c1 <= 0xEF) {\n      c1 = (c1 & 0x0F)\n      seqlen = 3\n    } else {\n      c1 = (c1 & 0x07)\n      seqlen = 4\n    }\n\n    for (var ai = 1; ai < seqlen; ++ai) {\n      c1 = ((c1 << 0x06) | (strData.charCodeAt(ai + i) & 0x3F))\n    }\n\n    if (seqlen === 4) {\n      c1 -= 0x10000\n      tmpArr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)))\n      tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)))\n    } else {\n      tmpArr.push(String.fromCharCode(c1))\n    }\n\n    i += seqlen\n  }\n\n  return tmpArr.join('')\n}\n","source":"php/xml/utf8_decode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - utf8_decode('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Webtoolkit.info (http://www.webtoolkit.info/)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - Norman \"zEh\" Fuchs\n  bugfixed by:\n    - hitwork\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - kirilloid\n    - 'w35l3y (http://www.wesley.eti.br)'\n  input by:\n    - Aman Gupta\n    - 'Brett Zamir (http://brett-zamir.me)'\nnotes: []\nlayout: function\ntitle: php'sutf8_decode in JavaScript\nfunction: utf8_decode\ncategory: xml\nlanguage: php\npermalink: php/xml/utf8_decode/\nalias:\n  - /functions/php/utf8_decode/\n  - /functions/xml/utf8_decode/\n  - /php/utf8_decode/\n  - /functions/utf8_decode/\n---\nmodule.exports = function utf8_decode (strData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_decode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Norman \"zEh\" Fuchs\n  // bugfixed by: hitwork\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: kirilloid\n  // bugfixed by: w35l3y (http://www.wesley.eti.br)\n  //   example 1: utf8_decode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var tmpArr = []\n  var i = 0\n  var c1 = 0\n  var seqlen = 0\n\n  strData += ''\n\n  while (i < strData.length) {\n    c1 = strData.charCodeAt(i) & 0xFF\n    seqlen = 0\n\n    // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n    if (c1 <= 0xBF) {\n      c1 = (c1 & 0x7F)\n      seqlen = 1\n    } else if (c1 <= 0xDF) {\n      c1 = (c1 & 0x1F)\n      seqlen = 2\n    } else if (c1 <= 0xEF) {\n      c1 = (c1 & 0x0F)\n      seqlen = 3\n    } else {\n      c1 = (c1 & 0x07)\n      seqlen = 4\n    }\n\n    for (var ai = 1; ai < seqlen; ++ai) {\n      c1 = ((c1 << 0x06) | (strData.charCodeAt(ai + i) & 0x3F))\n    }\n\n    if (seqlen === 4) {\n      c1 -= 0x10000\n      tmpArr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)))\n      tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)))\n    } else {\n      tmpArr.push(String.fromCharCode(c1))\n    }\n\n    i += seqlen\n  }\n\n  return tmpArr.join('')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xml/utf8_decode/index.html","comments":1,"_id":"cinoeja2h009fou9yqjwyps2q","content":"module.exports = function utf8_decode (strData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_decode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Norman \"zEh\" Fuchs\n  // bugfixed by: hitwork\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: kirilloid\n  // bugfixed by: w35l3y (http://www.wesley.eti.br)\n  //   example 1: utf8_decode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var tmpArr = []\n  var i = 0\n  var c1 = 0\n  var seqlen = 0\n\n  strData += ''\n\n  while (i < strData.length) {\n    c1 = strData.charCodeAt(i) & 0xFF\n    seqlen = 0\n\n    // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n    if (c1 <= 0xbf)=\"\" {=\"\" c1=\"(c1\" &=\"\" 0x7f)=\"\" seqlen=\"1\" }=\"\" else=\"\" if=\"\" (c1=\"\" <=\"0xDF)\" 0x1f)=\"\" 0x0f)=\"\" 0x07)=\"\" for=\"\" (var=\"\" ai=\"1;\" seqlen;=\"\" ++ai)=\"\" <<=\"\" 0x06)=\"\" |=\"\" (strdata.charcodeat(ai=\"\" +=\"\" i)=\"\" 0x3f))=\"\" (seqlen=\"==\" 4)=\"\" -=\"0x10000\" tmparr.push(string.fromcharcode(0xd800=\"\" ((c1=\"\">> 10) & 0x3FF)))\n      tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)))\n    } else {\n      tmpArr.push(String.fromCharCode(c1))\n    }\n\n    i += seqlen\n  }\n\n  return tmpArr.join('')\n}\n</=>","excerpt":"","more":"module.exports = function utf8_decode (strData) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_decode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: Norman \"zEh\" Fuchs\n  // bugfixed by: hitwork\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: kirilloid\n  // bugfixed by: w35l3y (http://www.wesley.eti.br)\n  //   example 1: utf8_decode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  var tmpArr = []\n  var i = 0\n  var c1 = 0\n  var seqlen = 0\n\n  strData += ''\n\n  while (i < strData.length) {\n    c1 = strData.charCodeAt(i) & 0xFF\n    seqlen = 0\n\n    // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n    if (c1 <= 0xBF) {\n      c1 = (c1 & 0x7F)\n      seqlen = 1\n    } else if (c1 <= 0xDF) {\n      c1 = (c1 & 0x1F)\n      seqlen = 2\n    } else if (c1 <= 0xEF) {\n      c1 = (c1 & 0x0F)\n      seqlen = 3\n    } else {\n      c1 = (c1 & 0x07)\n      seqlen = 4\n    }\n\n    for (var ai = 1; ai < seqlen; ++ai) {\n      c1 = ((c1 << 0x06) | (strData.charCodeAt(ai + i) & 0x3F))\n    }\n\n    if (seqlen === 4) {\n      c1 -= 0x10000\n      tmpArr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)))\n      tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)))\n    } else {\n      tmpArr.push(String.fromCharCode(c1))\n    }\n\n    i += seqlen\n  }\n\n  return tmpArr.join('')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["xdiff_string_patch('', '@@ -0,0 +1,1 @@\\n+Hello world!')"],"estarget":"es5","returns":["'Hello world!'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Steven Levithan (stevenlevithan.com)"]},"notes":["The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\ncurrently supported.","This has not been tested exhaustively yet.","The errorObj parameter (optional) if used must be passed in as a\nobject. The errors will then be written by reference into it's `value` property"],"layout":"function","title":"php'sxdiff_string_patch in JavaScript","function":"xdiff_string_patch","category":"xdiff","language":"php","alias":["/functions/php/xdiff_string_patch/","/functions/xdiff/xdiff_string_patch/","/php/xdiff_string_patch/","/functions/xdiff_string_patch/"],"_content":"module.exports = function xdiff_string_patch (originalStr, patch, flags, errorObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_patch/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Steven Levithan (stevenlevithan.com)\n  //      note 1: The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\n  //      note 1: currently supported.\n  //      note 2: This has not been tested exhaustively yet.\n  //      note 3: The errorObj parameter (optional) if used must be passed in as a\n  //      note 3: object. The errors will then be written by reference into it's `value` property\n  //   example 1: xdiff_string_patch('', '@@ -0,0 +1,1 @@\\n+Hello world!')\n  //   returns 1: 'Hello world!'\n\n  // First two functions were adapted from Steven Levithan, also under an MIT license\n  // Adapted from XRegExp 1.5.0\n  // (c) 2007-2010 Steven Levithan\n  // MIT License\n  // <http://xregexp.com>\n\n  var _getNativeFlags = function (regex) {\n    // Proposed for ES4; included in AS3\n    return [\n      (regex.global ? 'g' : ''),\n      (regex.ignoreCase ? 'i' : ''),\n      (regex.multiline ? 'm' : ''),\n      (regex.extended ? 'x' : ''),\n      (regex.sticky ? 'y' : '')\n    ].join('')\n  }\n\n  var _cbSplit = function (string, sep) {\n    // If separator `s` is not a regex, use the native `split`\n    if (!(sep instanceof RegExp)) {\n      // Had problems to get it to work here using prototype test\n      return String.prototype.split.apply(string, arguments)\n    }\n    var str = String(string)\n    var output = []\n    var lastLastIndex = 0\n    var match\n    var lastLength\n    var limit = Infinity\n    var x = sep._xregexp\n    // This is required if not `s.global`, and it avoids needing to set `s.lastIndex` to zero\n    // and restore it to its original value when we're done using the regex\n    // Brett paring down\n    var s = new RegExp(sep.source, _getNativeFlags(sep) + 'g')\n    if (x) {\n      s._xregexp = {\n        source: x.source,\n        captureNames: x.captureNames ? x.captureNames.slice(0) : null\n      }\n    }\n\n    while ((match = s.exec(str))) {\n      // Run the altered `exec` (required for `lastIndex` fix, etc.)\n      if (s.lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index))\n\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1))\n        }\n\n        lastLength = match[0].length\n        lastLastIndex = s.lastIndex\n\n        if (output.length >= limit) {\n          break\n        }\n      }\n\n      if (s.lastIndex === match.index) {\n        s.lastIndex++\n      }\n    }\n\n    if (lastLastIndex === str.length) {\n      if (!s.test('') || lastLength) {\n        output.push('')\n      }\n    } else {\n      output.push(str.slice(lastLastIndex))\n    }\n\n    return output.length > limit ? output.slice(0, limit) : output\n  }\n\n  var i = 0\n  var ll = 0\n  var ranges = []\n  var lastLinePos = 0\n  var firstChar = ''\n  var rangeExp = /^@@\\s+-(\\d+),(\\d+)\\s+\\+(\\d+),(\\d+)\\s+@@$/\n  var lineBreaks = /\\r?\\n/\n  var lines = _cbSplit(patch.replace(/(\\r?\\n)+$/, ''), lineBreaks)\n  var origLines = _cbSplit(originalStr, lineBreaks)\n  var newStrArr = []\n  var linePos = 0\n  var errors = ''\n  var optTemp = 0 // Both string & integer (constant) input is allowed\n  var OPTS = {\n    // Unsure of actual PHP values, so better to rely on string\n    'XDIFF_PATCH_NORMAL': 1,\n    'XDIFF_PATCH_REVERSE': 2,\n    'XDIFF_PATCH_IGNORESPACE': 4\n  }\n\n  // Input defaulting & sanitation\n  if (typeof originalStr !== 'string' || !patch) {\n    return false\n  }\n  if (!flags) {\n    flags = 'XDIFF_PATCH_NORMAL'\n  }\n\n  if (typeof flags !== 'number') {\n    // Allow for a single string or an array of string flags\n    flags = [].concat(flags)\n    for (i = 0; i < flags.length; i++) {\n      // Resolve string input to bitwise e.g. 'XDIFF_PATCH_NORMAL' becomes 1\n      if (OPTS[flags[i]]) {\n        optTemp = optTemp | OPTS[flags[i]]\n      }\n    }\n    flags = optTemp\n  }\n\n  if (flags & OPTS.XDIFF_PATCH_NORMAL) {\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[1] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n            // Skip including that line\n              ++linePos\n              break\n            case '+':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  } else if (flags & OPTS.XDIFF_PATCH_REVERSE) {\n    // Only differs from above by a few lines\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[3] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case '+':\n            // Skip including that line\n              ++linePos\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  }\n\n  if (errorObj) {\n    errorObj.value = errors\n  }\n\n  return newStrArr.join('\\n')\n}\n","source":"php/xdiff/xdiff_string_patch.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'xdiff_string_patch('''', ''@@ -0,0 +1,1 @@\\n+Hello world!'')'\nestarget: es5\nreturns:\n  - '''Hello world!'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - Steven Levithan (stevenlevithan.com)\nnotes:\n  - |-\n    The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\n    currently supported.\n  - This has not been tested exhaustively yet.\n  - >-\n    The errorObj parameter (optional) if used must be passed in as a\n\n    object. The errors will then be written by reference into it's `value`\n    property\nlayout: function\ntitle: php'sxdiff_string_patch in JavaScript\nfunction: xdiff_string_patch\ncategory: xdiff\nlanguage: php\npermalink: php/xdiff/xdiff_string_patch/\nalias:\n  - /functions/php/xdiff_string_patch/\n  - /functions/xdiff/xdiff_string_patch/\n  - /php/xdiff_string_patch/\n  - /functions/xdiff_string_patch/\n---\nmodule.exports = function xdiff_string_patch (originalStr, patch, flags, errorObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_patch/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Steven Levithan (stevenlevithan.com)\n  //      note 1: The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\n  //      note 1: currently supported.\n  //      note 2: This has not been tested exhaustively yet.\n  //      note 3: The errorObj parameter (optional) if used must be passed in as a\n  //      note 3: object. The errors will then be written by reference into it's `value` property\n  //   example 1: xdiff_string_patch('', '@@ -0,0 +1,1 @@\\n+Hello world!')\n  //   returns 1: 'Hello world!'\n\n  // First two functions were adapted from Steven Levithan, also under an MIT license\n  // Adapted from XRegExp 1.5.0\n  // (c) 2007-2010 Steven Levithan\n  // MIT License\n  // <http://xregexp.com>\n\n  var _getNativeFlags = function (regex) {\n    // Proposed for ES4; included in AS3\n    return [\n      (regex.global ? 'g' : ''),\n      (regex.ignoreCase ? 'i' : ''),\n      (regex.multiline ? 'm' : ''),\n      (regex.extended ? 'x' : ''),\n      (regex.sticky ? 'y' : '')\n    ].join('')\n  }\n\n  var _cbSplit = function (string, sep) {\n    // If separator `s` is not a regex, use the native `split`\n    if (!(sep instanceof RegExp)) {\n      // Had problems to get it to work here using prototype test\n      return String.prototype.split.apply(string, arguments)\n    }\n    var str = String(string)\n    var output = []\n    var lastLastIndex = 0\n    var match\n    var lastLength\n    var limit = Infinity\n    var x = sep._xregexp\n    // This is required if not `s.global`, and it avoids needing to set `s.lastIndex` to zero\n    // and restore it to its original value when we're done using the regex\n    // Brett paring down\n    var s = new RegExp(sep.source, _getNativeFlags(sep) + 'g')\n    if (x) {\n      s._xregexp = {\n        source: x.source,\n        captureNames: x.captureNames ? x.captureNames.slice(0) : null\n      }\n    }\n\n    while ((match = s.exec(str))) {\n      // Run the altered `exec` (required for `lastIndex` fix, etc.)\n      if (s.lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index))\n\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1))\n        }\n\n        lastLength = match[0].length\n        lastLastIndex = s.lastIndex\n\n        if (output.length >= limit) {\n          break\n        }\n      }\n\n      if (s.lastIndex === match.index) {\n        s.lastIndex++\n      }\n    }\n\n    if (lastLastIndex === str.length) {\n      if (!s.test('') || lastLength) {\n        output.push('')\n      }\n    } else {\n      output.push(str.slice(lastLastIndex))\n    }\n\n    return output.length > limit ? output.slice(0, limit) : output\n  }\n\n  var i = 0\n  var ll = 0\n  var ranges = []\n  var lastLinePos = 0\n  var firstChar = ''\n  var rangeExp = /^@@\\s+-(\\d+),(\\d+)\\s+\\+(\\d+),(\\d+)\\s+@@$/\n  var lineBreaks = /\\r?\\n/\n  var lines = _cbSplit(patch.replace(/(\\r?\\n)+$/, ''), lineBreaks)\n  var origLines = _cbSplit(originalStr, lineBreaks)\n  var newStrArr = []\n  var linePos = 0\n  var errors = ''\n  var optTemp = 0 // Both string & integer (constant) input is allowed\n  var OPTS = {\n    // Unsure of actual PHP values, so better to rely on string\n    'XDIFF_PATCH_NORMAL': 1,\n    'XDIFF_PATCH_REVERSE': 2,\n    'XDIFF_PATCH_IGNORESPACE': 4\n  }\n\n  // Input defaulting & sanitation\n  if (typeof originalStr !== 'string' || !patch) {\n    return false\n  }\n  if (!flags) {\n    flags = 'XDIFF_PATCH_NORMAL'\n  }\n\n  if (typeof flags !== 'number') {\n    // Allow for a single string or an array of string flags\n    flags = [].concat(flags)\n    for (i = 0; i < flags.length; i++) {\n      // Resolve string input to bitwise e.g. 'XDIFF_PATCH_NORMAL' becomes 1\n      if (OPTS[flags[i]]) {\n        optTemp = optTemp | OPTS[flags[i]]\n      }\n    }\n    flags = optTemp\n  }\n\n  if (flags & OPTS.XDIFF_PATCH_NORMAL) {\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[1] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n            // Skip including that line\n              ++linePos\n              break\n            case '+':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  } else if (flags & OPTS.XDIFF_PATCH_REVERSE) {\n    // Only differs from above by a few lines\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[3] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case '+':\n            // Skip including that line\n              ++linePos\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  }\n\n  if (errorObj) {\n    errorObj.value = errors\n  }\n\n  return newStrArr.join('\\n')\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xdiff/xdiff_string_patch/index.html","comments":1,"_id":"cinoeja2h009gou9ye88a910w","content":"module.exports = function xdiff_string_patch (originalStr, patch, flags, errorObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_patch/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Steven Levithan (stevenlevithan.com)\n  //      note 1: The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\n  //      note 1: currently supported.\n  //      note 2: This has not been tested exhaustively yet.\n  //      note 3: The errorObj parameter (optional) if used must be passed in as a\n  //      note 3: object. The errors will then be written by reference into it's `value` property\n  //   example 1: xdiff_string_patch('', '@@ -0,0 +1,1 @@\\n+Hello world!')\n  //   returns 1: 'Hello world!'\n\n  // First two functions were adapted from Steven Levithan, also under an MIT license\n  // Adapted from XRegExp 1.5.0\n  // (c) 2007-2010 Steven Levithan\n  // MIT License\n  // <http: xregexp.com=\"\">\n\n  var _getNativeFlags = function (regex) {\n    // Proposed for ES4; included in AS3\n    return [\n      (regex.global ? 'g' : ''),\n      (regex.ignoreCase ? 'i' : ''),\n      (regex.multiline ? 'm' : ''),\n      (regex.extended ? 'x' : ''),\n      (regex.sticky ? 'y' : '')\n    ].join('')\n  }\n\n  var _cbSplit = function (string, sep) {\n    // If separator `s` is not a regex, use the native `split`\n    if (!(sep instanceof RegExp)) {\n      // Had problems to get it to work here using prototype test\n      return String.prototype.split.apply(string, arguments)\n    }\n    var str = String(string)\n    var output = []\n    var lastLastIndex = 0\n    var match\n    var lastLength\n    var limit = Infinity\n    var x = sep._xregexp\n    // This is required if not `s.global`, and it avoids needing to set `s.lastIndex` to zero\n    // and restore it to its original value when we're done using the regex\n    // Brett paring down\n    var s = new RegExp(sep.source, _getNativeFlags(sep) + 'g')\n    if (x) {\n      s._xregexp = {\n        source: x.source,\n        captureNames: x.captureNames ? x.captureNames.slice(0) : null\n      }\n    }\n\n    while ((match = s.exec(str))) {\n      // Run the altered `exec` (required for `lastIndex` fix, etc.)\n      if (s.lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index))\n\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1))\n        }\n\n        lastLength = match[0].length\n        lastLastIndex = s.lastIndex\n\n        if (output.length >= limit) {\n          break\n        }\n      }\n\n      if (s.lastIndex === match.index) {\n        s.lastIndex++\n      }\n    }\n\n    if (lastLastIndex === str.length) {\n      if (!s.test('') || lastLength) {\n        output.push('')\n      }\n    } else {\n      output.push(str.slice(lastLastIndex))\n    }\n\n    return output.length > limit ? output.slice(0, limit) : output\n  }\n\n  var i = 0\n  var ll = 0\n  var ranges = []\n  var lastLinePos = 0\n  var firstChar = ''\n  var rangeExp = /^@@\\s+-(\\d+),(\\d+)\\s+\\+(\\d+),(\\d+)\\s+@@$/\n  var lineBreaks = /\\r?\\n/\n  var lines = _cbSplit(patch.replace(/(\\r?\\n)+$/, ''), lineBreaks)\n  var origLines = _cbSplit(originalStr, lineBreaks)\n  var newStrArr = []\n  var linePos = 0\n  var errors = ''\n  var optTemp = 0 // Both string & integer (constant) input is allowed\n  var OPTS = {\n    // Unsure of actual PHP values, so better to rely on string\n    'XDIFF_PATCH_NORMAL': 1,\n    'XDIFF_PATCH_REVERSE': 2,\n    'XDIFF_PATCH_IGNORESPACE': 4\n  }\n\n  // Input defaulting & sanitation\n  if (typeof originalStr !== 'string' || !patch) {\n    return false\n  }\n  if (!flags) {\n    flags = 'XDIFF_PATCH_NORMAL'\n  }\n\n  if (typeof flags !== 'number') {\n    // Allow for a single string or an array of string flags\n    flags = [].concat(flags)\n    for (i = 0; i < flags.length; i++) {\n      // Resolve string input to bitwise e.g. 'XDIFF_PATCH_NORMAL' becomes 1\n      if (OPTS[flags[i]]) {\n        optTemp = optTemp | OPTS[flags[i]]\n      }\n    }\n    flags = optTemp\n  }\n\n  if (flags & OPTS.XDIFF_PATCH_NORMAL) {\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[1] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n            // Skip including that line\n              ++linePos\n              break\n            case '+':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  } else if (flags & OPTS.XDIFF_PATCH_REVERSE) {\n    // Only differs from above by a few lines\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[3] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case '+':\n            // Skip including that line\n              ++linePos\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  }\n\n  if (errorObj) {\n    errorObj.value = errors\n  }\n\n  return newStrArr.join('\\n')\n}\n</http:>","excerpt":"","more":"module.exports = function xdiff_string_patch (originalStr, patch, flags, errorObj) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_patch/\n  // original by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Steven Levithan (stevenlevithan.com)\n  //      note 1: The XDIFF_PATCH_IGNORESPACE flag and the error argument are not\n  //      note 1: currently supported.\n  //      note 2: This has not been tested exhaustively yet.\n  //      note 3: The errorObj parameter (optional) if used must be passed in as a\n  //      note 3: object. The errors will then be written by reference into it's `value` property\n  //   example 1: xdiff_string_patch('', '@@ -0,0 +1,1 @@\\n+Hello world!')\n  //   returns 1: 'Hello world!'\n\n  // First two functions were adapted from Steven Levithan, also under an MIT license\n  // Adapted from XRegExp 1.5.0\n  // (c) 2007-2010 Steven Levithan\n  // MIT License\n  // <http://xregexp.com>\n\n  var _getNativeFlags = function (regex) {\n    // Proposed for ES4; included in AS3\n    return [\n      (regex.global ? 'g' : ''),\n      (regex.ignoreCase ? 'i' : ''),\n      (regex.multiline ? 'm' : ''),\n      (regex.extended ? 'x' : ''),\n      (regex.sticky ? 'y' : '')\n    ].join('')\n  }\n\n  var _cbSplit = function (string, sep) {\n    // If separator `s` is not a regex, use the native `split`\n    if (!(sep instanceof RegExp)) {\n      // Had problems to get it to work here using prototype test\n      return String.prototype.split.apply(string, arguments)\n    }\n    var str = String(string)\n    var output = []\n    var lastLastIndex = 0\n    var match\n    var lastLength\n    var limit = Infinity\n    var x = sep._xregexp\n    // This is required if not `s.global`, and it avoids needing to set `s.lastIndex` to zero\n    // and restore it to its original value when we're done using the regex\n    // Brett paring down\n    var s = new RegExp(sep.source, _getNativeFlags(sep) + 'g')\n    if (x) {\n      s._xregexp = {\n        source: x.source,\n        captureNames: x.captureNames ? x.captureNames.slice(0) : null\n      }\n    }\n\n    while ((match = s.exec(str))) {\n      // Run the altered `exec` (required for `lastIndex` fix, etc.)\n      if (s.lastIndex > lastLastIndex) {\n        output.push(str.slice(lastLastIndex, match.index))\n\n        if (match.length > 1 && match.index < str.length) {\n          Array.prototype.push.apply(output, match.slice(1))\n        }\n\n        lastLength = match[0].length\n        lastLastIndex = s.lastIndex\n\n        if (output.length >= limit) {\n          break\n        }\n      }\n\n      if (s.lastIndex === match.index) {\n        s.lastIndex++\n      }\n    }\n\n    if (lastLastIndex === str.length) {\n      if (!s.test('') || lastLength) {\n        output.push('')\n      }\n    } else {\n      output.push(str.slice(lastLastIndex))\n    }\n\n    return output.length > limit ? output.slice(0, limit) : output\n  }\n\n  var i = 0\n  var ll = 0\n  var ranges = []\n  var lastLinePos = 0\n  var firstChar = ''\n  var rangeExp = /^@@\\s+-(\\d+),(\\d+)\\s+\\+(\\d+),(\\d+)\\s+@@$/\n  var lineBreaks = /\\r?\\n/\n  var lines = _cbSplit(patch.replace(/(\\r?\\n)+$/, ''), lineBreaks)\n  var origLines = _cbSplit(originalStr, lineBreaks)\n  var newStrArr = []\n  var linePos = 0\n  var errors = ''\n  var optTemp = 0 // Both string & integer (constant) input is allowed\n  var OPTS = {\n    // Unsure of actual PHP values, so better to rely on string\n    'XDIFF_PATCH_NORMAL': 1,\n    'XDIFF_PATCH_REVERSE': 2,\n    'XDIFF_PATCH_IGNORESPACE': 4\n  }\n\n  // Input defaulting & sanitation\n  if (typeof originalStr !== 'string' || !patch) {\n    return false\n  }\n  if (!flags) {\n    flags = 'XDIFF_PATCH_NORMAL'\n  }\n\n  if (typeof flags !== 'number') {\n    // Allow for a single string or an array of string flags\n    flags = [].concat(flags)\n    for (i = 0; i < flags.length; i++) {\n      // Resolve string input to bitwise e.g. 'XDIFF_PATCH_NORMAL' becomes 1\n      if (OPTS[flags[i]]) {\n        optTemp = optTemp | OPTS[flags[i]]\n      }\n    }\n    flags = optTemp\n  }\n\n  if (flags & OPTS.XDIFF_PATCH_NORMAL) {\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[1] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n            // Skip including that line\n              ++linePos\n              break\n            case '+':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  } else if (flags & OPTS.XDIFF_PATCH_REVERSE) {\n    // Only differs from above by a few lines\n    for (i = 0, ll = lines.length; i < ll; i++) {\n      ranges = lines[i].match(rangeExp)\n      if (ranges) {\n        lastLinePos = linePos\n        linePos = ranges[3] - 1\n        while (lastLinePos < linePos) {\n          newStrArr[newStrArr.length] = origLines[lastLinePos++]\n        }\n        while (lines[++i] && (rangeExp.exec(lines[i])) === null) {\n          firstChar = lines[i].charAt(0)\n          switch (firstChar) {\n            case '-':\n              newStrArr[newStrArr.length] = lines[i].slice(1)\n              break\n            case '+':\n            // Skip including that line\n              ++linePos\n              break\n            case ' ':\n              newStrArr[newStrArr.length] = origLines[linePos++]\n              break\n            default:\n            // Reconcile with returning errrors arg?\n              throw new Error('Unrecognized initial character in unidiff line')\n          }\n        }\n        if (lines[i]) {\n          i--\n        }\n      }\n    }\n    while (linePos > 0 && linePos < origLines.length) {\n      newStrArr[newStrArr.length] = origLines[linePos++]\n    }\n  }\n\n  if (errorObj) {\n    errorObj.value = errors\n  }\n\n  return newStrArr.join('\\n')\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["xdiff_string_diff('', 'Hello world!')"],"estarget":"es5","returns":["'@@ -0,0 +1,1 @@\\n+Hello world!'"],"dependencies":[],"authors":{"original by":["Brett Zamir (http://brett-zamir.me)"],"improved by":["Brett Zamir (http://brett-zamir.me)"],"bugfixed by":["Imgen Tata (http://www.myipdf.com/)"]},"notes":["The minimal argument is not currently supported"],"layout":"function","title":"php'sxdiff_string_diff in JavaScript","function":"xdiff_string_diff","category":"xdiff","language":"php","alias":["/functions/php/xdiff_string_diff/","/functions/xdiff/xdiff_string_diff/","/php/xdiff_string_diff/","/functions/xdiff_string_diff/"],"_content":"module.exports = function xdiff_string_diff (oldData, newData, contextLines, minimal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_diff\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    based on: Imgen Tata (http://www.myipdf.com/)\n  // bugfixed by: Imgen Tata (http://www.myipdf.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The minimal argument is not currently supported\n  //   example 1: xdiff_string_diff('', 'Hello world!')\n  //   returns 1: '@@ -0,0 +1,1 @@\\n+Hello world!'\n\n  // (This code was done by Imgen Tata; I have only reformatted for use in Locutus)\n\n  // See http://en.wikipedia.org/wiki/Diff#Unified_format\n  var i = 0\n  var j = 0\n  var k = 0\n  var oriHunkStart\n  var newHunkStart\n  var oriHunkEnd\n  var newHunkEnd\n  var oriHunkLineNo\n  var newHunkLineNo\n  var oriHunkSize\n  var newHunkSize\n  var MAX_CONTEXT_LINES = Number.POSITIVE_INFINITY // Potential configuration\n  var MIN_CONTEXT_LINES = 0\n  var DEFAULT_CONTEXT_LINES = 3\n  var HEADER_PREFIX = '@@ ' //\n  var HEADER_SUFFIX = ' @@'\n  var ORIGINAL_INDICATOR = '-'\n  var NEW_INDICATOR = '+'\n  var RANGE_SEPARATOR = ','\n  var CONTEXT_INDICATOR = ' '\n  var DELETION_INDICATOR = '-'\n  var ADDITION_INDICATOR = '+'\n  var oriLines\n  var newLines\n  var NEW_LINE = '\\n'\n\n  var _trim = function (text) {\n    if (typeof text !== 'string') {\n      throw new Error('String parameter required')\n    }\n\n    return text.replace(/(^\\s*)|(\\s*$)/g, '')\n  }\n\n  var _verifyType = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        throw new Error('Bad type parameter')\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              throw new Error('Bad type')\n            }\n          }\n\n          return\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        throw new Error('Bad type')\n      }\n    }\n  }\n\n  var _hasValue = function (array, value) {\n    var i\n    _verifyType(Array, array)\n\n    for (i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  var _areTypeOf = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        return false\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              return false\n            }\n          }\n\n          return true\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  var _getInitializedArray = function (arraySize, initValue) {\n    var array = []\n    var i\n    _verifyType('number', arraySize)\n\n    for (i = 0; i < arraySize; i++) {\n      array.push(initValue)\n    }\n\n    return array\n  }\n\n  var _splitIntoLines = function (text) {\n    _verifyType('string', text)\n\n    if (text === '') {\n      return []\n    }\n    return text.split('\\n')\n  }\n\n  var _isEmptyArray = function (obj) {\n    return _areTypeOf(Array, obj) && obj.length === 0\n  }\n\n  /**\n   * Finds longest common sequence between two sequences\n   * @see {@link http://wordaligned.org/articles/longest-common-subsequence}\n   */\n  var _findLongestCommonSequence = function (seq1, seq2, seq1IsInLcs, seq2IsInLcs) {\n    if (!_areTypeOf(Array, seq1, seq2)) {\n      throw new Error('Array parameters are required')\n    }\n\n    // Deal with edge case\n    if (_isEmptyArray(seq1) || _isEmptyArray(seq2)) {\n      return []\n    }\n\n    // Function to calculate lcs lengths\n    var lcsLens = function (xs, ys) {\n      var i\n      var j\n      var prev\n      var curr = _getInitializedArray(ys.length + 1, 0)\n\n      for (i = 0; i < xs.length; i++) {\n        prev = curr.slice(0)\n        for (j = 0; j < ys.length; j++) {\n          if (xs[i] === ys[j]) {\n            curr[j + 1] = prev[j] + 1\n          } else {\n            curr[j + 1] = Math.max(curr[j], prev[j + 1])\n          }\n        }\n      }\n\n      return curr\n    }\n\n    // Function to find lcs and fill in the array to indicate the optimal longest common sequence\n    var _findLcs = function (xs, xidx, xIsIn, ys) {\n      var i\n      var xb\n      var xe\n      var llB\n      var llE\n      var pivot\n      var max\n      var yb\n      var ye\n      var nx = xs.length\n      var ny = ys.length\n\n      if (nx === 0) {\n        return []\n      }\n      if (nx === 1) {\n        if (_hasValue(ys, xs[0])) {\n          xIsIn[xidx] = true\n          return [xs[0]]\n        }\n        return []\n      }\n      i = Math.floor(nx / 2)\n      xb = xs.slice(0, i)\n      xe = xs.slice(i)\n      llB = lcsLens(xb, ys)\n      llE = lcsLens(xe.slice(0)\n        .reverse(), ys.slice(0)\n        .reverse())\n\n      pivot = 0\n      max = 0\n      for (j = 0; j <= ny; j++) {\n        if (llB[j] + llE[ny - j] > max) {\n          pivot = j\n          max = llB[j] + llE[ny - j]\n        }\n      }\n      yb = ys.slice(0, pivot)\n      ye = ys.slice(pivot)\n      return _findLcs(xb, xidx, xIsIn, yb).concat(_findLcs(xe, xidx + i, xIsIn, ye))\n    }\n\n    // Fill in seq1IsInLcs to find the optimal longest common subsequence of first sequence\n    _findLcs(seq1, 0, seq1IsInLcs, seq2)\n    // Fill in seq2IsInLcs to find the optimal longest common subsequence\n    // of second sequence and return the result\n    return _findLcs(seq2, 0, seq2IsInLcs, seq1)\n  }\n\n  // First, check the parameters\n  if (_areTypeOf('string', oldData, newData) === false) {\n    return false\n  }\n\n  if (oldData === newData) {\n    return ''\n  }\n\n  if (typeof contextLines !== 'number' ||\n    contextLines > MAX_CONTEXT_LINES ||\n    contextLines < MIN_CONTEXT_LINES) {\n    contextLines = DEFAULT_CONTEXT_LINES\n  }\n\n  oriLines = _splitIntoLines(oldData)\n  newLines = _splitIntoLines(newData)\n  var oriLen = oriLines.length\n  var newLen = newLines.length\n  var oriIsInLcs = _getInitializedArray(oriLen, false)\n  var newIsInLcs = _getInitializedArray(newLen, false)\n  var lcsLen = _findLongestCommonSequence(oriLines, newLines, oriIsInLcs, newIsInLcs).length\n  var unidiff = ''\n\n  if (lcsLen === 0) {\n    // No common sequence\n    unidiff = [\n      HEADER_PREFIX,\n      ORIGINAL_INDICATOR,\n      (oriLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      oriLen,\n      ' ',\n      NEW_INDICATOR,\n      (newLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      newLen,\n      HEADER_SUFFIX\n    ].join('')\n\n    for (i = 0; i < oriLen; i++) {\n      unidiff += NEW_LINE + DELETION_INDICATOR + oriLines[i]\n    }\n\n    for (j = 0; j < newLen; j++) {\n      unidiff += NEW_LINE + ADDITION_INDICATOR + newLines[j]\n    }\n\n    return unidiff\n  }\n\n  var leadingContext = []\n  var trailingContext = []\n  var actualLeadingContext = []\n  var actualTrailingContext = []\n\n  // Regularize leading context by the contextLines parameter\n  var regularizeLeadingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    var contextStartPos = Math.max(context.length - contextLines, 0)\n\n    return context.slice(contextStartPos)\n  }\n\n  // Regularize trailing context by the contextLines parameter\n  var regularizeTrailingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    return context.slice(0, Math.min(contextLines, context.length))\n  }\n\n  // Skip common lines in the beginning\n  while (i < oriLen && oriIsInLcs[i] === true && newIsInLcs[i] === true) {\n    leadingContext.push(oriLines[i])\n    i++\n  }\n\n  j = i\n  // The index in the longest common sequence\n  k = i\n  oriHunkStart = i\n  newHunkStart = j\n  oriHunkEnd = i\n  newHunkEnd = j\n\n  while (i < oriLen || j < newLen) {\n    while (i < oriLen && oriIsInLcs[i] === false) {\n      i++\n    }\n    oriHunkEnd = i\n\n    while (j < newLen && newIsInLcs[j] === false) {\n      j++\n    }\n    newHunkEnd = j\n\n    // Find the trailing context\n    trailingContext = []\n    while (i < oriLen && oriIsInLcs[i] === true && j < newLen && newIsInLcs[j] === true) {\n      trailingContext.push(oriLines[i])\n      k++\n      i++\n      j++\n    }\n\n    if (k >= lcsLen || // No more in longest common lines\n      trailingContext.length >= 2 * contextLines) {\n      // Context break found\n      if (trailingContext.length < 2 * contextLines) {\n        // It must be last block of common lines but not a context break\n        trailingContext = []\n\n        // Force break out\n        i = oriLen\n        j = newLen\n\n        // Update hunk ends to force output to the end\n        oriHunkEnd = oriLen\n        newHunkEnd = newLen\n      }\n\n      // Output the diff hunk\n\n      // Trim the leading and trailing context block\n      actualLeadingContext = regularizeLeadingContext(leadingContext)\n      actualTrailingContext = regularizeTrailingContext(trailingContext)\n\n      oriHunkStart -= actualLeadingContext.length\n      newHunkStart -= actualLeadingContext.length\n      oriHunkEnd += actualTrailingContext.length\n      newHunkEnd += actualTrailingContext.length\n\n      oriHunkLineNo = oriHunkStart + 1\n      newHunkLineNo = newHunkStart + 1\n      oriHunkSize = oriHunkEnd - oriHunkStart\n      newHunkSize = newHunkEnd - newHunkStart\n\n      // Build header\n      unidiff += [\n        HEADER_PREFIX,\n        ORIGINAL_INDICATOR,\n        oriHunkLineNo,\n        RANGE_SEPARATOR,\n        oriHunkSize,\n        ' ',\n        NEW_INDICATOR,\n        newHunkLineNo,\n        RANGE_SEPARATOR,\n        newHunkSize,\n        HEADER_SUFFIX,\n        NEW_LINE\n      ].join('')\n\n      // Build the diff hunk content\n      while (oriHunkStart < oriHunkEnd || newHunkStart < newHunkEnd) {\n        if (oriHunkStart < oriHunkEnd &&\n          oriIsInLcs[oriHunkStart] === true &&\n          newIsInLcs[newHunkStart] === true) {\n          // The context line\n          unidiff += CONTEXT_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n          newHunkStart++\n        } else if (oriHunkStart < oriHunkEnd && oriIsInLcs[oriHunkStart] === false) {\n          // The deletion line\n          unidiff += DELETION_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n        } else if (newHunkStart < newHunkEnd && newIsInLcs[newHunkStart] === false) {\n          // The additional line\n          unidiff += ADDITION_INDICATOR + newLines[newHunkStart] + NEW_LINE\n          newHunkStart++\n        }\n      }\n\n      // Update hunk position and leading context\n      oriHunkStart = i\n      newHunkStart = j\n      leadingContext = trailingContext\n    }\n  }\n\n  // Trim the trailing new line if it exists\n  if (unidiff.length > 0 && unidiff.charAt(unidiff.length) === NEW_LINE) {\n    unidiff = unidiff.slice(0, -1)\n  }\n\n  return unidiff\n}\n","source":"php/xdiff/xdiff_string_diff.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - 'xdiff_string_diff('''', ''Hello world!'')'\nestarget: es5\nreturns:\n  - '''@@ -0,0 +1,1 @@\\n+Hello world!'''\ndependencies: []\nauthors:\n  original by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  improved by:\n    - 'Brett Zamir (http://brett-zamir.me)'\n  bugfixed by:\n    - 'Imgen Tata (http://www.myipdf.com/)'\nnotes:\n  - The minimal argument is not currently supported\nlayout: function\ntitle: php'sxdiff_string_diff in JavaScript\nfunction: xdiff_string_diff\ncategory: xdiff\nlanguage: php\npermalink: php/xdiff/xdiff_string_diff/\nalias:\n  - /functions/php/xdiff_string_diff/\n  - /functions/xdiff/xdiff_string_diff/\n  - /php/xdiff_string_diff/\n  - /functions/xdiff_string_diff/\n---\nmodule.exports = function xdiff_string_diff (oldData, newData, contextLines, minimal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_diff\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    based on: Imgen Tata (http://www.myipdf.com/)\n  // bugfixed by: Imgen Tata (http://www.myipdf.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The minimal argument is not currently supported\n  //   example 1: xdiff_string_diff('', 'Hello world!')\n  //   returns 1: '@@ -0,0 +1,1 @@\\n+Hello world!'\n\n  // (This code was done by Imgen Tata; I have only reformatted for use in Locutus)\n\n  // See http://en.wikipedia.org/wiki/Diff#Unified_format\n  var i = 0\n  var j = 0\n  var k = 0\n  var oriHunkStart\n  var newHunkStart\n  var oriHunkEnd\n  var newHunkEnd\n  var oriHunkLineNo\n  var newHunkLineNo\n  var oriHunkSize\n  var newHunkSize\n  var MAX_CONTEXT_LINES = Number.POSITIVE_INFINITY // Potential configuration\n  var MIN_CONTEXT_LINES = 0\n  var DEFAULT_CONTEXT_LINES = 3\n  var HEADER_PREFIX = '@@ ' //\n  var HEADER_SUFFIX = ' @@'\n  var ORIGINAL_INDICATOR = '-'\n  var NEW_INDICATOR = '+'\n  var RANGE_SEPARATOR = ','\n  var CONTEXT_INDICATOR = ' '\n  var DELETION_INDICATOR = '-'\n  var ADDITION_INDICATOR = '+'\n  var oriLines\n  var newLines\n  var NEW_LINE = '\\n'\n\n  var _trim = function (text) {\n    if (typeof text !== 'string') {\n      throw new Error('String parameter required')\n    }\n\n    return text.replace(/(^\\s*)|(\\s*$)/g, '')\n  }\n\n  var _verifyType = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        throw new Error('Bad type parameter')\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              throw new Error('Bad type')\n            }\n          }\n\n          return\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        throw new Error('Bad type')\n      }\n    }\n  }\n\n  var _hasValue = function (array, value) {\n    var i\n    _verifyType(Array, array)\n\n    for (i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  var _areTypeOf = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        return false\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              return false\n            }\n          }\n\n          return true\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  var _getInitializedArray = function (arraySize, initValue) {\n    var array = []\n    var i\n    _verifyType('number', arraySize)\n\n    for (i = 0; i < arraySize; i++) {\n      array.push(initValue)\n    }\n\n    return array\n  }\n\n  var _splitIntoLines = function (text) {\n    _verifyType('string', text)\n\n    if (text === '') {\n      return []\n    }\n    return text.split('\\n')\n  }\n\n  var _isEmptyArray = function (obj) {\n    return _areTypeOf(Array, obj) && obj.length === 0\n  }\n\n  /**\n   * Finds longest common sequence between two sequences\n   * @see {@link http://wordaligned.org/articles/longest-common-subsequence}\n   */\n  var _findLongestCommonSequence = function (seq1, seq2, seq1IsInLcs, seq2IsInLcs) {\n    if (!_areTypeOf(Array, seq1, seq2)) {\n      throw new Error('Array parameters are required')\n    }\n\n    // Deal with edge case\n    if (_isEmptyArray(seq1) || _isEmptyArray(seq2)) {\n      return []\n    }\n\n    // Function to calculate lcs lengths\n    var lcsLens = function (xs, ys) {\n      var i\n      var j\n      var prev\n      var curr = _getInitializedArray(ys.length + 1, 0)\n\n      for (i = 0; i < xs.length; i++) {\n        prev = curr.slice(0)\n        for (j = 0; j < ys.length; j++) {\n          if (xs[i] === ys[j]) {\n            curr[j + 1] = prev[j] + 1\n          } else {\n            curr[j + 1] = Math.max(curr[j], prev[j + 1])\n          }\n        }\n      }\n\n      return curr\n    }\n\n    // Function to find lcs and fill in the array to indicate the optimal longest common sequence\n    var _findLcs = function (xs, xidx, xIsIn, ys) {\n      var i\n      var xb\n      var xe\n      var llB\n      var llE\n      var pivot\n      var max\n      var yb\n      var ye\n      var nx = xs.length\n      var ny = ys.length\n\n      if (nx === 0) {\n        return []\n      }\n      if (nx === 1) {\n        if (_hasValue(ys, xs[0])) {\n          xIsIn[xidx] = true\n          return [xs[0]]\n        }\n        return []\n      }\n      i = Math.floor(nx / 2)\n      xb = xs.slice(0, i)\n      xe = xs.slice(i)\n      llB = lcsLens(xb, ys)\n      llE = lcsLens(xe.slice(0)\n        .reverse(), ys.slice(0)\n        .reverse())\n\n      pivot = 0\n      max = 0\n      for (j = 0; j <= ny; j++) {\n        if (llB[j] + llE[ny - j] > max) {\n          pivot = j\n          max = llB[j] + llE[ny - j]\n        }\n      }\n      yb = ys.slice(0, pivot)\n      ye = ys.slice(pivot)\n      return _findLcs(xb, xidx, xIsIn, yb).concat(_findLcs(xe, xidx + i, xIsIn, ye))\n    }\n\n    // Fill in seq1IsInLcs to find the optimal longest common subsequence of first sequence\n    _findLcs(seq1, 0, seq1IsInLcs, seq2)\n    // Fill in seq2IsInLcs to find the optimal longest common subsequence\n    // of second sequence and return the result\n    return _findLcs(seq2, 0, seq2IsInLcs, seq1)\n  }\n\n  // First, check the parameters\n  if (_areTypeOf('string', oldData, newData) === false) {\n    return false\n  }\n\n  if (oldData === newData) {\n    return ''\n  }\n\n  if (typeof contextLines !== 'number' ||\n    contextLines > MAX_CONTEXT_LINES ||\n    contextLines < MIN_CONTEXT_LINES) {\n    contextLines = DEFAULT_CONTEXT_LINES\n  }\n\n  oriLines = _splitIntoLines(oldData)\n  newLines = _splitIntoLines(newData)\n  var oriLen = oriLines.length\n  var newLen = newLines.length\n  var oriIsInLcs = _getInitializedArray(oriLen, false)\n  var newIsInLcs = _getInitializedArray(newLen, false)\n  var lcsLen = _findLongestCommonSequence(oriLines, newLines, oriIsInLcs, newIsInLcs).length\n  var unidiff = ''\n\n  if (lcsLen === 0) {\n    // No common sequence\n    unidiff = [\n      HEADER_PREFIX,\n      ORIGINAL_INDICATOR,\n      (oriLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      oriLen,\n      ' ',\n      NEW_INDICATOR,\n      (newLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      newLen,\n      HEADER_SUFFIX\n    ].join('')\n\n    for (i = 0; i < oriLen; i++) {\n      unidiff += NEW_LINE + DELETION_INDICATOR + oriLines[i]\n    }\n\n    for (j = 0; j < newLen; j++) {\n      unidiff += NEW_LINE + ADDITION_INDICATOR + newLines[j]\n    }\n\n    return unidiff\n  }\n\n  var leadingContext = []\n  var trailingContext = []\n  var actualLeadingContext = []\n  var actualTrailingContext = []\n\n  // Regularize leading context by the contextLines parameter\n  var regularizeLeadingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    var contextStartPos = Math.max(context.length - contextLines, 0)\n\n    return context.slice(contextStartPos)\n  }\n\n  // Regularize trailing context by the contextLines parameter\n  var regularizeTrailingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    return context.slice(0, Math.min(contextLines, context.length))\n  }\n\n  // Skip common lines in the beginning\n  while (i < oriLen && oriIsInLcs[i] === true && newIsInLcs[i] === true) {\n    leadingContext.push(oriLines[i])\n    i++\n  }\n\n  j = i\n  // The index in the longest common sequence\n  k = i\n  oriHunkStart = i\n  newHunkStart = j\n  oriHunkEnd = i\n  newHunkEnd = j\n\n  while (i < oriLen || j < newLen) {\n    while (i < oriLen && oriIsInLcs[i] === false) {\n      i++\n    }\n    oriHunkEnd = i\n\n    while (j < newLen && newIsInLcs[j] === false) {\n      j++\n    }\n    newHunkEnd = j\n\n    // Find the trailing context\n    trailingContext = []\n    while (i < oriLen && oriIsInLcs[i] === true && j < newLen && newIsInLcs[j] === true) {\n      trailingContext.push(oriLines[i])\n      k++\n      i++\n      j++\n    }\n\n    if (k >= lcsLen || // No more in longest common lines\n      trailingContext.length >= 2 * contextLines) {\n      // Context break found\n      if (trailingContext.length < 2 * contextLines) {\n        // It must be last block of common lines but not a context break\n        trailingContext = []\n\n        // Force break out\n        i = oriLen\n        j = newLen\n\n        // Update hunk ends to force output to the end\n        oriHunkEnd = oriLen\n        newHunkEnd = newLen\n      }\n\n      // Output the diff hunk\n\n      // Trim the leading and trailing context block\n      actualLeadingContext = regularizeLeadingContext(leadingContext)\n      actualTrailingContext = regularizeTrailingContext(trailingContext)\n\n      oriHunkStart -= actualLeadingContext.length\n      newHunkStart -= actualLeadingContext.length\n      oriHunkEnd += actualTrailingContext.length\n      newHunkEnd += actualTrailingContext.length\n\n      oriHunkLineNo = oriHunkStart + 1\n      newHunkLineNo = newHunkStart + 1\n      oriHunkSize = oriHunkEnd - oriHunkStart\n      newHunkSize = newHunkEnd - newHunkStart\n\n      // Build header\n      unidiff += [\n        HEADER_PREFIX,\n        ORIGINAL_INDICATOR,\n        oriHunkLineNo,\n        RANGE_SEPARATOR,\n        oriHunkSize,\n        ' ',\n        NEW_INDICATOR,\n        newHunkLineNo,\n        RANGE_SEPARATOR,\n        newHunkSize,\n        HEADER_SUFFIX,\n        NEW_LINE\n      ].join('')\n\n      // Build the diff hunk content\n      while (oriHunkStart < oriHunkEnd || newHunkStart < newHunkEnd) {\n        if (oriHunkStart < oriHunkEnd &&\n          oriIsInLcs[oriHunkStart] === true &&\n          newIsInLcs[newHunkStart] === true) {\n          // The context line\n          unidiff += CONTEXT_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n          newHunkStart++\n        } else if (oriHunkStart < oriHunkEnd && oriIsInLcs[oriHunkStart] === false) {\n          // The deletion line\n          unidiff += DELETION_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n        } else if (newHunkStart < newHunkEnd && newIsInLcs[newHunkStart] === false) {\n          // The additional line\n          unidiff += ADDITION_INDICATOR + newLines[newHunkStart] + NEW_LINE\n          newHunkStart++\n        }\n      }\n\n      // Update hunk position and leading context\n      oriHunkStart = i\n      newHunkStart = j\n      leadingContext = trailingContext\n    }\n  }\n\n  // Trim the trailing new line if it exists\n  if (unidiff.length > 0 && unidiff.charAt(unidiff.length) === NEW_LINE) {\n    unidiff = unidiff.slice(0, -1)\n  }\n\n  return unidiff\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xdiff/xdiff_string_diff/index.html","comments":1,"_id":"cinoeja2h009hou9yn0zzxhpc","content":"module.exports = function xdiff_string_diff (oldData, newData, contextLines, minimal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_diff\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    based on: Imgen Tata (http://www.myipdf.com/)\n  // bugfixed by: Imgen Tata (http://www.myipdf.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The minimal argument is not currently supported\n  //   example 1: xdiff_string_diff('', 'Hello world!')\n  //   returns 1: '@@ -0,0 +1,1 @@\\n+Hello world!'\n\n  // (This code was done by Imgen Tata; I have only reformatted for use in Locutus)\n\n  // See http://en.wikipedia.org/wiki/Diff#Unified_format\n  var i = 0\n  var j = 0\n  var k = 0\n  var oriHunkStart\n  var newHunkStart\n  var oriHunkEnd\n  var newHunkEnd\n  var oriHunkLineNo\n  var newHunkLineNo\n  var oriHunkSize\n  var newHunkSize\n  var MAX_CONTEXT_LINES = Number.POSITIVE_INFINITY // Potential configuration\n  var MIN_CONTEXT_LINES = 0\n  var DEFAULT_CONTEXT_LINES = 3\n  var HEADER_PREFIX = '@@ ' //\n  var HEADER_SUFFIX = ' @@'\n  var ORIGINAL_INDICATOR = '-'\n  var NEW_INDICATOR = '+'\n  var RANGE_SEPARATOR = ','\n  var CONTEXT_INDICATOR = ' '\n  var DELETION_INDICATOR = '-'\n  var ADDITION_INDICATOR = '+'\n  var oriLines\n  var newLines\n  var NEW_LINE = '\\n'\n\n  var _trim = function (text) {\n    if (typeof text !== 'string') {\n      throw new Error('String parameter required')\n    }\n\n    return text.replace(/(^\\s*)|(\\s*$)/g, '')\n  }\n\n  var _verifyType = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        throw new Error('Bad type parameter')\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              throw new Error('Bad type')\n            }\n          }\n\n          return\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        throw new Error('Bad type')\n      }\n    }\n  }\n\n  var _hasValue = function (array, value) {\n    var i\n    _verifyType(Array, array)\n\n    for (i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  var _areTypeOf = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        return false\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              return false\n            }\n          }\n\n          return true\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  var _getInitializedArray = function (arraySize, initValue) {\n    var array = []\n    var i\n    _verifyType('number', arraySize)\n\n    for (i = 0; i < arraySize; i++) {\n      array.push(initValue)\n    }\n\n    return array\n  }\n\n  var _splitIntoLines = function (text) {\n    _verifyType('string', text)\n\n    if (text === '') {\n      return []\n    }\n    return text.split('\\n')\n  }\n\n  var _isEmptyArray = function (obj) {\n    return _areTypeOf(Array, obj) && obj.length === 0\n  }\n\n  /**\n   * Finds longest common sequence between two sequences\n   * @see {@link http://wordaligned.org/articles/longest-common-subsequence}\n   */\n  var _findLongestCommonSequence = function (seq1, seq2, seq1IsInLcs, seq2IsInLcs) {\n    if (!_areTypeOf(Array, seq1, seq2)) {\n      throw new Error('Array parameters are required')\n    }\n\n    // Deal with edge case\n    if (_isEmptyArray(seq1) || _isEmptyArray(seq2)) {\n      return []\n    }\n\n    // Function to calculate lcs lengths\n    var lcsLens = function (xs, ys) {\n      var i\n      var j\n      var prev\n      var curr = _getInitializedArray(ys.length + 1, 0)\n\n      for (i = 0; i < xs.length; i++) {\n        prev = curr.slice(0)\n        for (j = 0; j < ys.length; j++) {\n          if (xs[i] === ys[j]) {\n            curr[j + 1] = prev[j] + 1\n          } else {\n            curr[j + 1] = Math.max(curr[j], prev[j + 1])\n          }\n        }\n      }\n\n      return curr\n    }\n\n    // Function to find lcs and fill in the array to indicate the optimal longest common sequence\n    var _findLcs = function (xs, xidx, xIsIn, ys) {\n      var i\n      var xb\n      var xe\n      var llB\n      var llE\n      var pivot\n      var max\n      var yb\n      var ye\n      var nx = xs.length\n      var ny = ys.length\n\n      if (nx === 0) {\n        return []\n      }\n      if (nx === 1) {\n        if (_hasValue(ys, xs[0])) {\n          xIsIn[xidx] = true\n          return [xs[0]]\n        }\n        return []\n      }\n      i = Math.floor(nx / 2)\n      xb = xs.slice(0, i)\n      xe = xs.slice(i)\n      llB = lcsLens(xb, ys)\n      llE = lcsLens(xe.slice(0)\n        .reverse(), ys.slice(0)\n        .reverse())\n\n      pivot = 0\n      max = 0\n      for (j = 0; j <= ny;=\"\" j++)=\"\" {=\"\" if=\"\" (llb[j]=\"\" +=\"\" lle[ny=\"\" -=\"\" j]=\"\"> max) {\n          pivot = j\n          max = llB[j] + llE[ny - j]\n        }\n      }\n      yb = ys.slice(0, pivot)\n      ye = ys.slice(pivot)\n      return _findLcs(xb, xidx, xIsIn, yb).concat(_findLcs(xe, xidx + i, xIsIn, ye))\n    }\n\n    // Fill in seq1IsInLcs to find the optimal longest common subsequence of first sequence\n    _findLcs(seq1, 0, seq1IsInLcs, seq2)\n    // Fill in seq2IsInLcs to find the optimal longest common subsequence\n    // of second sequence and return the result\n    return _findLcs(seq2, 0, seq2IsInLcs, seq1)\n  }\n\n  // First, check the parameters\n  if (_areTypeOf('string', oldData, newData) === false) {\n    return false\n  }\n\n  if (oldData === newData) {\n    return ''\n  }\n\n  if (typeof contextLines !== 'number' ||\n    contextLines > MAX_CONTEXT_LINES ||\n    contextLines < MIN_CONTEXT_LINES) {\n    contextLines = DEFAULT_CONTEXT_LINES\n  }\n\n  oriLines = _splitIntoLines(oldData)\n  newLines = _splitIntoLines(newData)\n  var oriLen = oriLines.length\n  var newLen = newLines.length\n  var oriIsInLcs = _getInitializedArray(oriLen, false)\n  var newIsInLcs = _getInitializedArray(newLen, false)\n  var lcsLen = _findLongestCommonSequence(oriLines, newLines, oriIsInLcs, newIsInLcs).length\n  var unidiff = ''\n\n  if (lcsLen === 0) {\n    // No common sequence\n    unidiff = [\n      HEADER_PREFIX,\n      ORIGINAL_INDICATOR,\n      (oriLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      oriLen,\n      ' ',\n      NEW_INDICATOR,\n      (newLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      newLen,\n      HEADER_SUFFIX\n    ].join('')\n\n    for (i = 0; i < oriLen; i++) {\n      unidiff += NEW_LINE + DELETION_INDICATOR + oriLines[i]\n    }\n\n    for (j = 0; j < newLen; j++) {\n      unidiff += NEW_LINE + ADDITION_INDICATOR + newLines[j]\n    }\n\n    return unidiff\n  }\n\n  var leadingContext = []\n  var trailingContext = []\n  var actualLeadingContext = []\n  var actualTrailingContext = []\n\n  // Regularize leading context by the contextLines parameter\n  var regularizeLeadingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    var contextStartPos = Math.max(context.length - contextLines, 0)\n\n    return context.slice(contextStartPos)\n  }\n\n  // Regularize trailing context by the contextLines parameter\n  var regularizeTrailingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    return context.slice(0, Math.min(contextLines, context.length))\n  }\n\n  // Skip common lines in the beginning\n  while (i < oriLen && oriIsInLcs[i] === true && newIsInLcs[i] === true) {\n    leadingContext.push(oriLines[i])\n    i++\n  }\n\n  j = i\n  // The index in the longest common sequence\n  k = i\n  oriHunkStart = i\n  newHunkStart = j\n  oriHunkEnd = i\n  newHunkEnd = j\n\n  while (i < oriLen || j < newLen) {\n    while (i < oriLen && oriIsInLcs[i] === false) {\n      i++\n    }\n    oriHunkEnd = i\n\n    while (j < newLen && newIsInLcs[j] === false) {\n      j++\n    }\n    newHunkEnd = j\n\n    // Find the trailing context\n    trailingContext = []\n    while (i < oriLen && oriIsInLcs[i] === true && j < newLen && newIsInLcs[j] === true) {\n      trailingContext.push(oriLines[i])\n      k++\n      i++\n      j++\n    }\n\n    if (k >= lcsLen || // No more in longest common lines\n      trailingContext.length >= 2 * contextLines) {\n      // Context break found\n      if (trailingContext.length < 2 * contextLines) {\n        // It must be last block of common lines but not a context break\n        trailingContext = []\n\n        // Force break out\n        i = oriLen\n        j = newLen\n\n        // Update hunk ends to force output to the end\n        oriHunkEnd = oriLen\n        newHunkEnd = newLen\n      }\n\n      // Output the diff hunk\n\n      // Trim the leading and trailing context block\n      actualLeadingContext = regularizeLeadingContext(leadingContext)\n      actualTrailingContext = regularizeTrailingContext(trailingContext)\n\n      oriHunkStart -= actualLeadingContext.length\n      newHunkStart -= actualLeadingContext.length\n      oriHunkEnd += actualTrailingContext.length\n      newHunkEnd += actualTrailingContext.length\n\n      oriHunkLineNo = oriHunkStart + 1\n      newHunkLineNo = newHunkStart + 1\n      oriHunkSize = oriHunkEnd - oriHunkStart\n      newHunkSize = newHunkEnd - newHunkStart\n\n      // Build header\n      unidiff += [\n        HEADER_PREFIX,\n        ORIGINAL_INDICATOR,\n        oriHunkLineNo,\n        RANGE_SEPARATOR,\n        oriHunkSize,\n        ' ',\n        NEW_INDICATOR,\n        newHunkLineNo,\n        RANGE_SEPARATOR,\n        newHunkSize,\n        HEADER_SUFFIX,\n        NEW_LINE\n      ].join('')\n\n      // Build the diff hunk content\n      while (oriHunkStart < oriHunkEnd || newHunkStart < newHunkEnd) {\n        if (oriHunkStart < oriHunkEnd &&\n          oriIsInLcs[oriHunkStart] === true &&\n          newIsInLcs[newHunkStart] === true) {\n          // The context line\n          unidiff += CONTEXT_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n          newHunkStart++\n        } else if (oriHunkStart < oriHunkEnd && oriIsInLcs[oriHunkStart] === false) {\n          // The deletion line\n          unidiff += DELETION_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n        } else if (newHunkStart < newHunkEnd && newIsInLcs[newHunkStart] === false) {\n          // The additional line\n          unidiff += ADDITION_INDICATOR + newLines[newHunkStart] + NEW_LINE\n          newHunkStart++\n        }\n      }\n\n      // Update hunk position and leading context\n      oriHunkStart = i\n      newHunkStart = j\n      leadingContext = trailingContext\n    }\n  }\n\n  // Trim the trailing new line if it exists\n  if (unidiff.length > 0 && unidiff.charAt(unidiff.length) === NEW_LINE) {\n    unidiff = unidiff.slice(0, -1)\n  }\n\n  return unidiff\n}\n</=>","excerpt":"","more":"module.exports = function xdiff_string_diff (oldData, newData, contextLines, minimal) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/xdiff_string_diff\n  // original by: Brett Zamir (http://brett-zamir.me)\n  //    based on: Imgen Tata (http://www.myipdf.com/)\n  // bugfixed by: Imgen Tata (http://www.myipdf.com/)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  //      note 1: The minimal argument is not currently supported\n  //   example 1: xdiff_string_diff('', 'Hello world!')\n  //   returns 1: '@@ -0,0 +1,1 @@\\n+Hello world!'\n\n  // (This code was done by Imgen Tata; I have only reformatted for use in Locutus)\n\n  // See http://en.wikipedia.org/wiki/Diff#Unified_format\n  var i = 0\n  var j = 0\n  var k = 0\n  var oriHunkStart\n  var newHunkStart\n  var oriHunkEnd\n  var newHunkEnd\n  var oriHunkLineNo\n  var newHunkLineNo\n  var oriHunkSize\n  var newHunkSize\n  var MAX_CONTEXT_LINES = Number.POSITIVE_INFINITY // Potential configuration\n  var MIN_CONTEXT_LINES = 0\n  var DEFAULT_CONTEXT_LINES = 3\n  var HEADER_PREFIX = '@@ ' //\n  var HEADER_SUFFIX = ' @@'\n  var ORIGINAL_INDICATOR = '-'\n  var NEW_INDICATOR = '+'\n  var RANGE_SEPARATOR = ','\n  var CONTEXT_INDICATOR = ' '\n  var DELETION_INDICATOR = '-'\n  var ADDITION_INDICATOR = '+'\n  var oriLines\n  var newLines\n  var NEW_LINE = '\\n'\n\n  var _trim = function (text) {\n    if (typeof text !== 'string') {\n      throw new Error('String parameter required')\n    }\n\n    return text.replace(/(^\\s*)|(\\s*$)/g, '')\n  }\n\n  var _verifyType = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        throw new Error('Bad type parameter')\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              throw new Error('Bad type')\n            }\n          }\n\n          return\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        throw new Error('Bad type')\n      }\n    }\n  }\n\n  var _hasValue = function (array, value) {\n    var i\n    _verifyType(Array, array)\n\n    for (i = 0; i < array.length; i++) {\n      if (array[i] === value) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  var _areTypeOf = function (type) {\n    var args = arguments\n    var argsLen = arguments.length\n    var basicTypes = ['number', 'boolean', 'string', 'function', 'object', 'undefined']\n    var basicType\n    var i\n    var j\n    var typeOfType = typeof type\n\n    if (typeOfType !== 'string' && typeOfType !== 'function') {\n      throw new Error('Bad type parameter')\n    }\n\n    if (argsLen < 2) {\n      throw new Error('Too few arguments')\n    }\n\n    if (typeOfType === 'string') {\n      type = _trim(type)\n\n      if (type === '') {\n        return false\n      }\n\n      for (j = 0; j < basicTypes.length; j++) {\n        basicType = basicTypes[j]\n\n        if (basicType === type) {\n          for (i = 1; i < argsLen; i++) {\n            if (typeof args[i] !== type) {\n              return false\n            }\n          }\n\n          return true\n        }\n      }\n\n      throw new Error('Bad type parameter')\n    }\n\n    // Not basic type. we need to use instanceof operator\n    for (i = 1; i < argsLen; i++) {\n      if (!(args[i] instanceof type)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  var _getInitializedArray = function (arraySize, initValue) {\n    var array = []\n    var i\n    _verifyType('number', arraySize)\n\n    for (i = 0; i < arraySize; i++) {\n      array.push(initValue)\n    }\n\n    return array\n  }\n\n  var _splitIntoLines = function (text) {\n    _verifyType('string', text)\n\n    if (text === '') {\n      return []\n    }\n    return text.split('\\n')\n  }\n\n  var _isEmptyArray = function (obj) {\n    return _areTypeOf(Array, obj) && obj.length === 0\n  }\n\n  /**\n   * Finds longest common sequence between two sequences\n   * @see {@link http://wordaligned.org/articles/longest-common-subsequence}\n   */\n  var _findLongestCommonSequence = function (seq1, seq2, seq1IsInLcs, seq2IsInLcs) {\n    if (!_areTypeOf(Array, seq1, seq2)) {\n      throw new Error('Array parameters are required')\n    }\n\n    // Deal with edge case\n    if (_isEmptyArray(seq1) || _isEmptyArray(seq2)) {\n      return []\n    }\n\n    // Function to calculate lcs lengths\n    var lcsLens = function (xs, ys) {\n      var i\n      var j\n      var prev\n      var curr = _getInitializedArray(ys.length + 1, 0)\n\n      for (i = 0; i < xs.length; i++) {\n        prev = curr.slice(0)\n        for (j = 0; j < ys.length; j++) {\n          if (xs[i] === ys[j]) {\n            curr[j + 1] = prev[j] + 1\n          } else {\n            curr[j + 1] = Math.max(curr[j], prev[j + 1])\n          }\n        }\n      }\n\n      return curr\n    }\n\n    // Function to find lcs and fill in the array to indicate the optimal longest common sequence\n    var _findLcs = function (xs, xidx, xIsIn, ys) {\n      var i\n      var xb\n      var xe\n      var llB\n      var llE\n      var pivot\n      var max\n      var yb\n      var ye\n      var nx = xs.length\n      var ny = ys.length\n\n      if (nx === 0) {\n        return []\n      }\n      if (nx === 1) {\n        if (_hasValue(ys, xs[0])) {\n          xIsIn[xidx] = true\n          return [xs[0]]\n        }\n        return []\n      }\n      i = Math.floor(nx / 2)\n      xb = xs.slice(0, i)\n      xe = xs.slice(i)\n      llB = lcsLens(xb, ys)\n      llE = lcsLens(xe.slice(0)\n        .reverse(), ys.slice(0)\n        .reverse())\n\n      pivot = 0\n      max = 0\n      for (j = 0; j <= ny; j++) {\n        if (llB[j] + llE[ny - j] > max) {\n          pivot = j\n          max = llB[j] + llE[ny - j]\n        }\n      }\n      yb = ys.slice(0, pivot)\n      ye = ys.slice(pivot)\n      return _findLcs(xb, xidx, xIsIn, yb).concat(_findLcs(xe, xidx + i, xIsIn, ye))\n    }\n\n    // Fill in seq1IsInLcs to find the optimal longest common subsequence of first sequence\n    _findLcs(seq1, 0, seq1IsInLcs, seq2)\n    // Fill in seq2IsInLcs to find the optimal longest common subsequence\n    // of second sequence and return the result\n    return _findLcs(seq2, 0, seq2IsInLcs, seq1)\n  }\n\n  // First, check the parameters\n  if (_areTypeOf('string', oldData, newData) === false) {\n    return false\n  }\n\n  if (oldData === newData) {\n    return ''\n  }\n\n  if (typeof contextLines !== 'number' ||\n    contextLines > MAX_CONTEXT_LINES ||\n    contextLines < MIN_CONTEXT_LINES) {\n    contextLines = DEFAULT_CONTEXT_LINES\n  }\n\n  oriLines = _splitIntoLines(oldData)\n  newLines = _splitIntoLines(newData)\n  var oriLen = oriLines.length\n  var newLen = newLines.length\n  var oriIsInLcs = _getInitializedArray(oriLen, false)\n  var newIsInLcs = _getInitializedArray(newLen, false)\n  var lcsLen = _findLongestCommonSequence(oriLines, newLines, oriIsInLcs, newIsInLcs).length\n  var unidiff = ''\n\n  if (lcsLen === 0) {\n    // No common sequence\n    unidiff = [\n      HEADER_PREFIX,\n      ORIGINAL_INDICATOR,\n      (oriLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      oriLen,\n      ' ',\n      NEW_INDICATOR,\n      (newLen > 0 ? '1' : '0'),\n      RANGE_SEPARATOR,\n      newLen,\n      HEADER_SUFFIX\n    ].join('')\n\n    for (i = 0; i < oriLen; i++) {\n      unidiff += NEW_LINE + DELETION_INDICATOR + oriLines[i]\n    }\n\n    for (j = 0; j < newLen; j++) {\n      unidiff += NEW_LINE + ADDITION_INDICATOR + newLines[j]\n    }\n\n    return unidiff\n  }\n\n  var leadingContext = []\n  var trailingContext = []\n  var actualLeadingContext = []\n  var actualTrailingContext = []\n\n  // Regularize leading context by the contextLines parameter\n  var regularizeLeadingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    var contextStartPos = Math.max(context.length - contextLines, 0)\n\n    return context.slice(contextStartPos)\n  }\n\n  // Regularize trailing context by the contextLines parameter\n  var regularizeTrailingContext = function (context) {\n    if (context.length === 0 || contextLines === 0) {\n      return []\n    }\n\n    return context.slice(0, Math.min(contextLines, context.length))\n  }\n\n  // Skip common lines in the beginning\n  while (i < oriLen && oriIsInLcs[i] === true && newIsInLcs[i] === true) {\n    leadingContext.push(oriLines[i])\n    i++\n  }\n\n  j = i\n  // The index in the longest common sequence\n  k = i\n  oriHunkStart = i\n  newHunkStart = j\n  oriHunkEnd = i\n  newHunkEnd = j\n\n  while (i < oriLen || j < newLen) {\n    while (i < oriLen && oriIsInLcs[i] === false) {\n      i++\n    }\n    oriHunkEnd = i\n\n    while (j < newLen && newIsInLcs[j] === false) {\n      j++\n    }\n    newHunkEnd = j\n\n    // Find the trailing context\n    trailingContext = []\n    while (i < oriLen && oriIsInLcs[i] === true && j < newLen && newIsInLcs[j] === true) {\n      trailingContext.push(oriLines[i])\n      k++\n      i++\n      j++\n    }\n\n    if (k >= lcsLen || // No more in longest common lines\n      trailingContext.length >= 2 * contextLines) {\n      // Context break found\n      if (trailingContext.length < 2 * contextLines) {\n        // It must be last block of common lines but not a context break\n        trailingContext = []\n\n        // Force break out\n        i = oriLen\n        j = newLen\n\n        // Update hunk ends to force output to the end\n        oriHunkEnd = oriLen\n        newHunkEnd = newLen\n      }\n\n      // Output the diff hunk\n\n      // Trim the leading and trailing context block\n      actualLeadingContext = regularizeLeadingContext(leadingContext)\n      actualTrailingContext = regularizeTrailingContext(trailingContext)\n\n      oriHunkStart -= actualLeadingContext.length\n      newHunkStart -= actualLeadingContext.length\n      oriHunkEnd += actualTrailingContext.length\n      newHunkEnd += actualTrailingContext.length\n\n      oriHunkLineNo = oriHunkStart + 1\n      newHunkLineNo = newHunkStart + 1\n      oriHunkSize = oriHunkEnd - oriHunkStart\n      newHunkSize = newHunkEnd - newHunkStart\n\n      // Build header\n      unidiff += [\n        HEADER_PREFIX,\n        ORIGINAL_INDICATOR,\n        oriHunkLineNo,\n        RANGE_SEPARATOR,\n        oriHunkSize,\n        ' ',\n        NEW_INDICATOR,\n        newHunkLineNo,\n        RANGE_SEPARATOR,\n        newHunkSize,\n        HEADER_SUFFIX,\n        NEW_LINE\n      ].join('')\n\n      // Build the diff hunk content\n      while (oriHunkStart < oriHunkEnd || newHunkStart < newHunkEnd) {\n        if (oriHunkStart < oriHunkEnd &&\n          oriIsInLcs[oriHunkStart] === true &&\n          newIsInLcs[newHunkStart] === true) {\n          // The context line\n          unidiff += CONTEXT_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n          newHunkStart++\n        } else if (oriHunkStart < oriHunkEnd && oriIsInLcs[oriHunkStart] === false) {\n          // The deletion line\n          unidiff += DELETION_INDICATOR + oriLines[oriHunkStart] + NEW_LINE\n          oriHunkStart++\n        } else if (newHunkStart < newHunkEnd && newIsInLcs[newHunkStart] === false) {\n          // The additional line\n          unidiff += ADDITION_INDICATOR + newLines[newHunkStart] + NEW_LINE\n          newHunkStart++\n        }\n      }\n\n      // Update hunk position and leading context\n      oriHunkStart = i\n      newHunkStart = j\n      leadingContext = trailingContext\n    }\n  }\n\n  // Trim the trailing new line if it exists\n  if (unidiff.length > 0 && unidiff.charAt(unidiff.length) === NEW_LINE) {\n    unidiff = unidiff.slice(0, -1)\n  }\n\n  return unidiff\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["utf8_encode('Kevin van Zonneveld')"],"estarget":"es5","returns":["'Kevin van Zonneveld'"],"dependencies":[],"authors":{"original by":["Webtoolkit.info (http://www.webtoolkit.info/)"],"improved by":["Kevin van Zonneveld (http://kvz.io)","sowberry","Jack","Yves Sucaet","kirilloid"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)","Onno Marsman (https://twitter.com/onnomarsman)","Ulrich","Rafał Kukawski (http://blog.kukawski.pl)","kirilloid"]},"notes":[],"layout":"function","title":"php'sutf8_encode in JavaScript","function":"utf8_encode","category":"xml","language":"php","alias":["/functions/php/utf8_encode/","/functions/xml/utf8_encode/","/php/utf8_encode/","/functions/utf8_encode/"],"_content":"module.exports = function utf8_encode (argString) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_encode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: sowberry\n  // improved by: Jack\n  // improved by: Yves Sucaet\n  // improved by: kirilloid\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Ulrich\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: kirilloid\n  //   example 1: utf8_encode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  if (argString === null || typeof argString === 'undefined') {\n    return ''\n  }\n\n  // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  var string = (argString + '')\n  var utftext = ''\n  var start\n  var end\n  var stringl = 0\n\n  start = end = 0\n  stringl = string.length\n  for (var n = 0; n < stringl; n++) {\n    var c1 = string.charCodeAt(n)\n    var enc = null\n\n    if (c1 < 128) {\n      end++\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(\n        (c1 >> 6) | 192, (c1 & 63) | 128\n      )\n    } else if ((c1 & 0xF800) !== 0xD800) {\n      enc = String.fromCharCode(\n        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    } else {\n      // surrogate pairs\n      if ((c1 & 0xFC00) !== 0xD800) {\n        throw new RangeError('Unmatched trail surrogate at ' + n)\n      }\n      var c2 = string.charCodeAt(++n)\n      if ((c2 & 0xFC00) !== 0xDC00) {\n        throw new RangeError('Unmatched lead surrogate at ' + (n - 1))\n      }\n      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000\n      enc = String.fromCharCode(\n        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end)\n      }\n      utftext += enc\n      start = end = n + 1\n    }\n  }\n\n  if (end > start) {\n    utftext += string.slice(start, stringl)\n  }\n\n  return utftext\n}\n","source":"php/xml/utf8_encode.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - utf8_encode('Kevin van Zonneveld')\nestarget: es5\nreturns:\n  - '''Kevin van Zonneveld'''\ndependencies: []\nauthors:\n  original by:\n    - 'Webtoolkit.info (http://www.webtoolkit.info/)'\n  improved by:\n    - 'Kevin van Zonneveld (http://kvz.io)'\n    - sowberry\n    - Jack\n    - Yves Sucaet\n    - kirilloid\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n    - Ulrich\n    - 'Rafał Kukawski (http://blog.kukawski.pl)'\n    - kirilloid\nnotes: []\nlayout: function\ntitle: php'sutf8_encode in JavaScript\nfunction: utf8_encode\ncategory: xml\nlanguage: php\npermalink: php/xml/utf8_encode/\nalias:\n  - /functions/php/utf8_encode/\n  - /functions/xml/utf8_encode/\n  - /php/utf8_encode/\n  - /functions/utf8_encode/\n---\nmodule.exports = function utf8_encode (argString) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_encode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: sowberry\n  // improved by: Jack\n  // improved by: Yves Sucaet\n  // improved by: kirilloid\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Ulrich\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: kirilloid\n  //   example 1: utf8_encode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  if (argString === null || typeof argString === 'undefined') {\n    return ''\n  }\n\n  // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  var string = (argString + '')\n  var utftext = ''\n  var start\n  var end\n  var stringl = 0\n\n  start = end = 0\n  stringl = string.length\n  for (var n = 0; n < stringl; n++) {\n    var c1 = string.charCodeAt(n)\n    var enc = null\n\n    if (c1 < 128) {\n      end++\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(\n        (c1 >> 6) | 192, (c1 & 63) | 128\n      )\n    } else if ((c1 & 0xF800) !== 0xD800) {\n      enc = String.fromCharCode(\n        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    } else {\n      // surrogate pairs\n      if ((c1 & 0xFC00) !== 0xD800) {\n        throw new RangeError('Unmatched trail surrogate at ' + n)\n      }\n      var c2 = string.charCodeAt(++n)\n      if ((c2 & 0xFC00) !== 0xDC00) {\n        throw new RangeError('Unmatched lead surrogate at ' + (n - 1))\n      }\n      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000\n      enc = String.fromCharCode(\n        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end)\n      }\n      utftext += enc\n      start = end = n + 1\n    }\n  }\n\n  if (end > start) {\n    utftext += string.slice(start, stringl)\n  }\n\n  return utftext\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"php/xml/utf8_encode/index.html","comments":1,"_id":"cinoeja2i009iou9ypyvf3691","content":"module.exports = function utf8_encode (argString) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_encode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: sowberry\n  // improved by: Jack\n  // improved by: Yves Sucaet\n  // improved by: kirilloid\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Ulrich\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: kirilloid\n  //   example 1: utf8_encode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  if (argString === null || typeof argString === 'undefined') {\n    return ''\n  }\n\n  // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  var string = (argString + '')\n  var utftext = ''\n  var start\n  var end\n  var stringl = 0\n\n  start = end = 0\n  stringl = string.length\n  for (var n = 0; n < stringl; n++) {\n    var c1 = string.charCodeAt(n)\n    var enc = null\n\n    if (c1 < 128) {\n      end++\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(\n        (c1 >> 6) | 192, (c1 & 63) | 128\n      )\n    } else if ((c1 & 0xF800) !== 0xD800) {\n      enc = String.fromCharCode(\n        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    } else {\n      // surrogate pairs\n      if ((c1 & 0xFC00) !== 0xD800) {\n        throw new RangeError('Unmatched trail surrogate at ' + n)\n      }\n      var c2 = string.charCodeAt(++n)\n      if ((c2 & 0xFC00) !== 0xDC00) {\n        throw new RangeError('Unmatched lead surrogate at ' + (n - 1))\n      }\n      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000\n      enc = String.fromCharCode(\n        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end)\n      }\n      utftext += enc\n      start = end = n + 1\n    }\n  }\n\n  if (end > start) {\n    utftext += string.slice(start, stringl)\n  }\n\n  return utftext\n}\n","excerpt":"","more":"module.exports = function utf8_encode (argString) { // eslint-disable-line camelcase\n  //  discuss at: http://locutusjs.io/php/utf8_encode/\n  // original by: Webtoolkit.info (http://www.webtoolkit.info/)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: sowberry\n  // improved by: Jack\n  // improved by: Yves Sucaet\n  // improved by: kirilloid\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Ulrich\n  // bugfixed by: Rafał Kukawski (http://blog.kukawski.pl)\n  // bugfixed by: kirilloid\n  //   example 1: utf8_encode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n\n  if (argString === null || typeof argString === 'undefined') {\n    return ''\n  }\n\n  // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  var string = (argString + '')\n  var utftext = ''\n  var start\n  var end\n  var stringl = 0\n\n  start = end = 0\n  stringl = string.length\n  for (var n = 0; n < stringl; n++) {\n    var c1 = string.charCodeAt(n)\n    var enc = null\n\n    if (c1 < 128) {\n      end++\n    } else if (c1 > 127 && c1 < 2048) {\n      enc = String.fromCharCode(\n        (c1 >> 6) | 192, (c1 & 63) | 128\n      )\n    } else if ((c1 & 0xF800) !== 0xD800) {\n      enc = String.fromCharCode(\n        (c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    } else {\n      // surrogate pairs\n      if ((c1 & 0xFC00) !== 0xD800) {\n        throw new RangeError('Unmatched trail surrogate at ' + n)\n      }\n      var c2 = string.charCodeAt(++n)\n      if ((c2 & 0xFC00) !== 0xDC00) {\n        throw new RangeError('Unmatched lead surrogate at ' + (n - 1))\n      }\n      c1 = ((c1 & 0x3FF) << 10) + (c2 & 0x3FF) + 0x10000\n      enc = String.fromCharCode(\n        (c1 >> 18) | 240, ((c1 >> 12) & 63) | 128, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128\n      )\n    }\n    if (enc !== null) {\n      if (end > start) {\n        utftext += string.slice(start, end)\n      }\n      utftext += enc\n      start = end = n + 1\n    }\n  }\n\n  if (end > start) {\n    utftext += string.slice(start, stringl)\n  }\n\n  return utftext\n}\n"},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["capwords('kevin van  zonneveld')","capwords('HELLO WORLD')"],"estarget":"es5","returns":["'Kevin Van  Zonneveld'","'HELLO WORLD'"],"dependencies":[],"authors":{"original by":["Jonas Raoni Soares Silva (http://www.jsfromhell.com)"],"improved by":["Waldo Malqui Silva (http://waldo.malqui.info)","Robin","Kevin van Zonneveld (http://kvz.io)"],"bugfixed by":["Onno Marsman (https://twitter.com/onnomarsman)"],"input by":["James (http://www.james-bell.co.uk/)"]},"notes":[],"layout":"function","title":"python'sstring.capwords in JavaScript","function":"capwords","category":"string","language":"python","alias":["/functions/python/capwords/","/functions/string/capwords/","/python/capwords/"],"_content":"module.exports = function capwords (str) {\n  //  discuss at: http://locutusjs.io/python/capwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: capwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: capwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  var pattern = /^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g\n  str = (str + '')\n  str = str.replace(pattern, function ($1) {\n    return $1.toUpperCase()\n  })\n\n  return str\n}\n","source":"python/string/capwords.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - capwords('kevin van  zonneveld')\n  - capwords('HELLO WORLD')\nestarget: es5\nreturns:\n  - '''Kevin Van  Zonneveld'''\n  - '''HELLO WORLD'''\ndependencies: []\nauthors:\n  original by:\n    - 'Jonas Raoni Soares Silva (http://www.jsfromhell.com)'\n  improved by:\n    - 'Waldo Malqui Silva (http://waldo.malqui.info)'\n    - Robin\n    - 'Kevin van Zonneveld (http://kvz.io)'\n  bugfixed by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\n  input by:\n    - 'James (http://www.james-bell.co.uk/)'\nnotes: []\nlayout: function\ntitle: python'sstring.capwords in JavaScript\nfunction: capwords\ncategory: string\nlanguage: python\npermalink: python/string/capwords/\nalias:\n  - /functions/python/capwords/\n  - /functions/string/capwords/\n  - /python/capwords/\n---\nmodule.exports = function capwords (str) {\n  //  discuss at: http://locutusjs.io/python/capwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: capwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: capwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  var pattern = /^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g\n  str = (str + '')\n  str = str.replace(pattern, function ($1) {\n    return $1.toUpperCase()\n  })\n\n  return str\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"python/string/capwords/index.html","comments":1,"_id":"cinoeja2i009jou9yjk8vgch1","content":"module.exports = function capwords (str) {\n  //  discuss at: http://locutusjs.io/python/capwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: capwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: capwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  var pattern = /^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g\n  str = (str + '')\n  str = str.replace(pattern, function ($1) {\n    return $1.toUpperCase()\n  })\n\n  return str\n}\n","excerpt":"","more":"module.exports = function capwords (str) {\n  //  discuss at: http://locutusjs.io/python/capwords/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Waldo Malqui Silva (http://waldo.malqui.info)\n  // improved by: Robin\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  //    input by: James (http://www.james-bell.co.uk/)\n  //   example 1: capwords('kevin van  zonneveld')\n  //   returns 1: 'Kevin Van  Zonneveld'\n  //   example 2: capwords('HELLO WORLD')\n  //   returns 2: 'HELLO WORLD'\n\n  var pattern = /^([a-z\\u00E0-\\u00FC])|\\s+([a-z\\u00E0-\\u00FC])/g\n  str = (str + '')\n  str = str.replace(pattern, function ($1) {\n    return $1.toUpperCase()\n  })\n\n  return str\n}\n"},{"type":"category","language":"python","category":"string","title":"string","_content":"","source":"python/string/index.html","raw":"---\ntype: category\nlanguage: python\ncategory: string\ntitle: string\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"python/string/index.html","comments":1,"layout":"page","_id":"cinoeja2j009kou9yrwtq1iu2","content":"","excerpt":"","more":""},{"warning":"This file is auto generated by `npm run web:inject`, do not edit by hand","examples":["(acos(0.3) + '').substr(0, 17)"],"estarget":"es5","returns":["'1.266103672779499'"],"dependencies":[],"authors":{"original by":["Onno Marsman (https://twitter.com/onnomarsman)"]},"notes":["Sorry about the crippled test.\nNeeded because precision differs accross platforms."],"layout":"function","title":"ruby'sMath.acos in JavaScript","function":"acos","category":"Math","language":"ruby","alias":["/functions/ruby/acos/","/functions/Math/acos/","/ruby/acos/"],"_content":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/ruby/Math/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test.\n  //      note 1: Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: '1.266103672779499'\n\n  return Math.acos(arg)\n}\n","source":"ruby/Math/acos.html","raw":"---\nwarning: 'This file is auto generated by `npm run web:inject`, do not edit by hand'\nexamples:\n  - '(acos(0.3) + '''').substr(0, 17)'\nestarget: es5\nreturns:\n  - '''1.266103672779499'''\ndependencies: []\nauthors:\n  original by:\n    - 'Onno Marsman (https://twitter.com/onnomarsman)'\nnotes:\n  - |-\n    Sorry about the crippled test.\n    Needed because precision differs accross platforms.\nlayout: function\ntitle: ruby'sMath.acos in JavaScript\nfunction: acos\ncategory: Math\nlanguage: ruby\npermalink: ruby/Math/acos/\nalias:\n  - /functions/ruby/acos/\n  - /functions/Math/acos/\n  - /ruby/acos/\n---\nmodule.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/ruby/Math/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test.\n  //      note 1: Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: '1.266103672779499'\n\n  return Math.acos(arg)\n}\n","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"ruby/Math/acos/index.html","comments":1,"_id":"cinoeja2j009lou9yu1v8s3yf","content":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/ruby/Math/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test.\n  //      note 1: Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: '1.266103672779499'\n\n  return Math.acos(arg)\n}\n","excerpt":"","more":"module.exports = function acos (arg) {\n  //  discuss at: http://locutusjs.io/ruby/Math/acos/\n  // original by: Onno Marsman (https://twitter.com/onnomarsman)\n  //      note 1: Sorry about the crippled test.\n  //      note 1: Needed because precision differs accross platforms.\n  //   example 1: (acos(0.3) + '').substr(0, 17)\n  //   returns 1: '1.266103672779499'\n\n  return Math.acos(arg)\n}\n"},{"type":"category","language":"ruby","category":"Math","title":"Math","_content":"","source":"ruby/Math/index.html","raw":"---\ntype: category\nlanguage: ruby\ncategory: Math\ntitle: Math\n---","date":"2016-05-01T09:55:37.000Z","updated":"2016-05-01T09:55:37.000Z","path":"ruby/Math/index.html","comments":1,"layout":"page","_id":"cinoeja2j009mou9ygp81agem","content":"","excerpt":"","more":""}],"Post":[{"layout":"post","title":"New Site","comments":1,"alias":"/blog/2012/09/26/new-site/","_content":"\nHi everybody,\n\nWelcome to our new site.\nThe old one had a lot of dead weight that nobody used and was basically unmaintained.\n\nThis one is generated by Octopress as plain html, and then stored on Github pages.\n\nThe source to do that is inside the Locutus directory in the `_octopress` dir,\nand freely available.\n\nFor instance, you can now very easily:\n\n - [edit the about page](https://github.com/kvz/locutus/edit/master/_octopress/source/about/index.markdown)\n - [change this blog post](https://github.com/kvz/locutus/edit/master/_octopress/source/_posts/2012-09-26-new-site.markdown)\n - [checkout the navigation](https://github.com/kvz/locutus/blob/master/_octopress/source/_includes/custom/navigation.html)\n - [improve the way function pages are built](https://github.com/kvz/locutus/blob/master/_octopress/Rakefile#L30)\n\nNext, any [Locutus contributor](https://github.com/kvz/locutus/graphs/contributors)\nwho has [Octopress set up](http://kvz.io/blog/2012/09/25/blog-with-octopress/)\n(this mostly involves having the right ruby & gem versions) can then run\n`make site MSG=\"describe what you did\"` in the\nproject's root dir to deploy the changes.\n\nThis should make it easy for [Locutus contributors](https://github.com/kvz/locutus/graphs/contributors)\n(or any Github user really, using pull requests)\nto update the site, making it less dependent on few core members, and more a\ncommunity effort.\n\nThis is also the way I want to do regular Locutus development. Less via comments,\nmore via the power of Github.\n\nTo people wondering where the compiler has gone to, I'm discontinuing that feature.\nIt was more often broken then working, and I think this site should focus on\nbeing a simple resource and discussion platform, and not much else.\n\nNow that everything is open sourced more I think there's room for anyone to build\na better alternative.\n\nWhile I'm not actively involved with Locutus anymore, I hope taking this step will\nmake the project ready for the future.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2012-09-26-new-site.md","raw":"---\nlayout: post\ntitle: \"New Site\"\ncomments: true\ntags: [ website, octopress, future ]\nalias: /blog/2012/09/26/new-site/\n---\n\nHi everybody,\n\nWelcome to our new site.\nThe old one had a lot of dead weight that nobody used and was basically unmaintained.\n\nThis one is generated by Octopress as plain html, and then stored on Github pages.\n\nThe source to do that is inside the Locutus directory in the `_octopress` dir,\nand freely available.\n\nFor instance, you can now very easily:\n\n - [edit the about page](https://github.com/kvz/locutus/edit/master/_octopress/source/about/index.markdown)\n - [change this blog post](https://github.com/kvz/locutus/edit/master/_octopress/source/_posts/2012-09-26-new-site.markdown)\n - [checkout the navigation](https://github.com/kvz/locutus/blob/master/_octopress/source/_includes/custom/navigation.html)\n - [improve the way function pages are built](https://github.com/kvz/locutus/blob/master/_octopress/Rakefile#L30)\n\nNext, any [Locutus contributor](https://github.com/kvz/locutus/graphs/contributors)\nwho has [Octopress set up](http://kvz.io/blog/2012/09/25/blog-with-octopress/)\n(this mostly involves having the right ruby & gem versions) can then run\n`make site MSG=\"describe what you did\"` in the\nproject's root dir to deploy the changes.\n\nThis should make it easy for [Locutus contributors](https://github.com/kvz/locutus/graphs/contributors)\n(or any Github user really, using pull requests)\nto update the site, making it less dependent on few core members, and more a\ncommunity effort.\n\nThis is also the way I want to do regular Locutus development. Less via comments,\nmore via the power of Github.\n\nTo people wondering where the compiler has gone to, I'm discontinuing that feature.\nIt was more often broken then working, and I think this site should focus on\nbeing a simple resource and discussion platform, and not much else.\n\nNow that everything is open sourced more I think there's room for anyone to build\na better alternative.\n\nWhile I'm not actively involved with Locutus anymore, I hope taking this step will\nmake the project ready for the future.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"new-site","published":1,"date":"2012-09-26T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5h0001h39y5cdebcjm","photos":[],"link":"","content":"<p>Hi everybody,</p>\n<p>Welcome to our new site.<br>The old one had a lot of dead weight that nobody used and was basically unmaintained.</p>\n<p>This one is generated by Octopress as plain html, and then stored on Github pages.</p>\n<p>The source to do that is inside the Locutus directory in the <code>_octopress</code> dir,<br>and freely available.</p>\n<p>For instance, you can now very easily:</p>\n<ul>\n<li><a href=\"https://github.com/kvz/locutus/edit/master/_octopress/source/about/index.markdown\" target=\"_blank\" rel=\"external\">edit the about page</a></li>\n<li><a href=\"https://github.com/kvz/locutus/edit/master/_octopress/source/_posts/2012-09-26-new-site.markdown\" target=\"_blank\" rel=\"external\">change this blog post</a></li>\n<li><a href=\"https://github.com/kvz/locutus/blob/master/_octopress/source/_includes/custom/navigation.html\" target=\"_blank\" rel=\"external\">checkout the navigation</a></li>\n<li><a href=\"https://github.com/kvz/locutus/blob/master/_octopress/Rakefile#L30\" target=\"_blank\" rel=\"external\">improve the way function pages are built</a></li>\n</ul>\n<p>Next, any <a href=\"https://github.com/kvz/locutus/graphs/contributors\" target=\"_blank\" rel=\"external\">Locutus contributor</a><br>who has <a href=\"http://kvz.io/blog/2012/09/25/blog-with-octopress/\" target=\"_blank\" rel=\"external\">Octopress set up</a><br>(this mostly involves having the right ruby &amp; gem versions) can then run<br><code>make site MSG=&quot;describe what you did&quot;</code> in the<br>project’s root dir to deploy the changes.</p>\n<p>This should make it easy for <a href=\"https://github.com/kvz/locutus/graphs/contributors\" target=\"_blank\" rel=\"external\">Locutus contributors</a><br>(or any Github user really, using pull requests)<br>to update the site, making it less dependent on few core members, and more a<br>community effort.</p>\n<p>This is also the way I want to do regular Locutus development. Less via comments,<br>more via the power of Github.</p>\n<p>To people wondering where the compiler has gone to, I’m discontinuing that feature.<br>It was more often broken then working, and I think this site should focus on<br>being a simple resource and discussion platform, and not much else.</p>\n<p>Now that everything is open sourced more I think there’s room for anyone to build<br>a better alternative.</p>\n<p>While I’m not actively involved with Locutus anymore, I hope taking this step will<br>make the project ready for the future.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Hi everybody,</p>\n<p>Welcome to our new site.<br>The old one had a lot of dead weight that nobody used and was basically unmaintained.</p>\n<p>This one is generated by Octopress as plain html, and then stored on Github pages.</p>\n<p>The source to do that is inside the Locutus directory in the <code>_octopress</code> dir,<br>and freely available.</p>\n<p>For instance, you can now very easily:</p>\n<ul>\n<li><a href=\"https://github.com/kvz/locutus/edit/master/_octopress/source/about/index.markdown\">edit the about page</a></li>\n<li><a href=\"https://github.com/kvz/locutus/edit/master/_octopress/source/_posts/2012-09-26-new-site.markdown\">change this blog post</a></li>\n<li><a href=\"https://github.com/kvz/locutus/blob/master/_octopress/source/_includes/custom/navigation.html\">checkout the navigation</a></li>\n<li><a href=\"https://github.com/kvz/locutus/blob/master/_octopress/Rakefile#L30\">improve the way function pages are built</a></li>\n</ul>\n<p>Next, any <a href=\"https://github.com/kvz/locutus/graphs/contributors\">Locutus contributor</a><br>who has <a href=\"http://kvz.io/blog/2012/09/25/blog-with-octopress/\">Octopress set up</a><br>(this mostly involves having the right ruby &amp; gem versions) can then run<br><code>make site MSG=&quot;describe what you did&quot;</code> in the<br>project’s root dir to deploy the changes.</p>\n<p>This should make it easy for <a href=\"https://github.com/kvz/locutus/graphs/contributors\">Locutus contributors</a><br>(or any Github user really, using pull requests)<br>to update the site, making it less dependent on few core members, and more a<br>community effort.</p>\n<p>This is also the way I want to do regular Locutus development. Less via comments,<br>more via the power of Github.</p>\n<p>To people wondering where the compiler has gone to, I’m discontinuing that feature.<br>It was more often broken then working, and I think this site should focus on<br>being a simple resource and discussion platform, and not much else.</p>\n<p>Now that everything is open sourced more I think there’s room for anyone to build<br>a better alternative.</p>\n<p>While I’m not actively involved with Locutus anymore, I hope taking this step will<br>make the project ready for the future.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"A Word on the Focus of php.js","comments":1,"alias":"/blog/2013/05/03/a-word-on-the-focus-of-php-dot-js/","_content":"\nHi everybody,\n\nThe [new site](/blog/2012/09/26/new-site/) has no server-side code. Instead\nwe generate HTML [using Octopress](http://kvz.io/blog/2012/09/25/blog-with-octopress/)\nand push to GitHub Pages, all from one [repository](https://github.com/kvz/locutus).\n\nThis saves hosting costs/overhead and makes it really easy for people to submit\npull requests and for [contributors](https://github.com/kvz/locutus/contributors)\nto make changes that I don't always have time\nfor. It makes the project less dependent on me and more a community effort.\n\nTo move forward, sometimes you have to cut features.\nIn this case I had to lose our compiler, a webtool that relied on server-side code\nto generate minified packages from php.js functions.\n\nUnderstandibly this has [raised](https://github.com/kvz/locutus/issues/75)\n[questions](http://locutusjs.io/about/index.html#comment-861825612).\nIt is still possible to bundle 4 useful functions:\n\n```bash\n# - Note that this combined 4 php.js functions into a file called: myLocutus\n# and minified version: myphp.min.js in the current directory.\n# - Note that this throws all functions into the\n# global scope. It would be better to put them in a dedicated locutus object.\ncurl -sk https://raw.github.com/kvz/locutus/31bf3129f08672f8c1d6d0dcad2368ebc4ac57f2/functions/\\\n{datetime/date\\\n,datetime/strtotime\\\n,strings/md5\\\n,strings/vsprintf\\\n}.js |tee ./myLocutus && \\\ncurl -vo ./myphp.min.js \\\n    -X POST \\\n    -H 'Expect: ' \\\n    --data-urlencode compilation_level=\"SIMPLE_OPTIMIZATIONS\" \\\n    --data-urlencode output_format=\"text\" \\\n    --data-urlencode output_info=\"compiled_code\" \\\n    --data-urlencode js_code@myLocutus \\\n    http://closure-compiler.appspot.com/compile\n```\n\nbut some people think php.js should bundle all of it's functions into one big file:\n\n> Not providing an all-in-one, downloadable, minified, ready-to-use\n> .js file is going to kill php.js.\n> You've abandoned windows users, and really any non-CLI junkie.\n> While I am capable of compiling this myself, what a headache.\n> You've introduced a barrier-to-entry that didn't exist before,\n> and by not existing, allowed for the following you now have.\n> I *highly* suggest that you have this available for download,\n> either here or on github, such that you can keep (and maintain)\n> the momentum you worked so hard for.\n\nI'd like to comment on that here. While I appreciate the sentiment, wether the\nproject is being killed by these changes depends on how you look at php.js.\nTo me, php.js is a resource:\n\n - For PHP developers that want see how it's done in JavaScript\n - That enables fun experiments\n - With a few higher level functions that are incredibly useful, and missing in JavaScript\n\nThis is what I feel php.js should focus on. Making functions. Making them better.\n\nIf - on the other hand - you think of php.js as a\n\n - 2.1MB, 451-function, ready-to-rock spaceship that you can plug into your website so you can keep typing PHP client-side, not caring about learning JavaScript or how that extra weight might impact the user experience\n\n..then yes, *these changes are going to kill php.js*.\n\nI have limited time to spend on open source, and I want to spend it on things I enjoy and can believe in.\nNot on working to support use-cases that keep new developers from learning, or make the web slower.\nI'm sorry if this upsets folks but it really is my free time.\n\nLuckily though for people with different views, I released php.js under MIT so\nit's cool for anybody to fork this project and run with it.\n\nIf anything, knowing that the php.js repository will focus on the raw `./functions`\nmakes this easier.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2013-05-03-a-word-on-the-focus-of-php-dot-js.md","raw":"---\nlayout: post\ntitle: \"A Word on the Focus of php.js\"\ncomments: true\ntags: [ focus ]\nalias: /blog/2013/05/03/a-word-on-the-focus-of-php-dot-js/\n---\n\nHi everybody,\n\nThe [new site](/blog/2012/09/26/new-site/) has no server-side code. Instead\nwe generate HTML [using Octopress](http://kvz.io/blog/2012/09/25/blog-with-octopress/)\nand push to GitHub Pages, all from one [repository](https://github.com/kvz/locutus).\n\nThis saves hosting costs/overhead and makes it really easy for people to submit\npull requests and for [contributors](https://github.com/kvz/locutus/contributors)\nto make changes that I don't always have time\nfor. It makes the project less dependent on me and more a community effort.\n\nTo move forward, sometimes you have to cut features.\nIn this case I had to lose our compiler, a webtool that relied on server-side code\nto generate minified packages from php.js functions.\n\nUnderstandibly this has [raised](https://github.com/kvz/locutus/issues/75)\n[questions](http://locutusjs.io/about/index.html#comment-861825612).\nIt is still possible to bundle 4 useful functions:\n\n```bash\n# - Note that this combined 4 php.js functions into a file called: myLocutus\n# and minified version: myphp.min.js in the current directory.\n# - Note that this throws all functions into the\n# global scope. It would be better to put them in a dedicated locutus object.\ncurl -sk https://raw.github.com/kvz/locutus/31bf3129f08672f8c1d6d0dcad2368ebc4ac57f2/functions/\\\n{datetime/date\\\n,datetime/strtotime\\\n,strings/md5\\\n,strings/vsprintf\\\n}.js |tee ./myLocutus && \\\ncurl -vo ./myphp.min.js \\\n    -X POST \\\n    -H 'Expect: ' \\\n    --data-urlencode compilation_level=\"SIMPLE_OPTIMIZATIONS\" \\\n    --data-urlencode output_format=\"text\" \\\n    --data-urlencode output_info=\"compiled_code\" \\\n    --data-urlencode js_code@myLocutus \\\n    http://closure-compiler.appspot.com/compile\n```\n\nbut some people think php.js should bundle all of it's functions into one big file:\n\n> Not providing an all-in-one, downloadable, minified, ready-to-use\n> .js file is going to kill php.js.\n> You've abandoned windows users, and really any non-CLI junkie.\n> While I am capable of compiling this myself, what a headache.\n> You've introduced a barrier-to-entry that didn't exist before,\n> and by not existing, allowed for the following you now have.\n> I *highly* suggest that you have this available for download,\n> either here or on github, such that you can keep (and maintain)\n> the momentum you worked so hard for.\n\nI'd like to comment on that here. While I appreciate the sentiment, wether the\nproject is being killed by these changes depends on how you look at php.js.\nTo me, php.js is a resource:\n\n - For PHP developers that want see how it's done in JavaScript\n - That enables fun experiments\n - With a few higher level functions that are incredibly useful, and missing in JavaScript\n\nThis is what I feel php.js should focus on. Making functions. Making them better.\n\nIf - on the other hand - you think of php.js as a\n\n - 2.1MB, 451-function, ready-to-rock spaceship that you can plug into your website so you can keep typing PHP client-side, not caring about learning JavaScript or how that extra weight might impact the user experience\n\n..then yes, *these changes are going to kill php.js*.\n\nI have limited time to spend on open source, and I want to spend it on things I enjoy and can believe in.\nNot on working to support use-cases that keep new developers from learning, or make the web slower.\nI'm sorry if this upsets folks but it really is my free time.\n\nLuckily though for people with different views, I released php.js under MIT so\nit's cool for anybody to fork this project and run with it.\n\nIf anything, knowing that the php.js repository will focus on the raw `./functions`\nmakes this easier.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"a-word-on-the-focus-of-php-dot-js","published":1,"date":"2013-05-03T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5l0002h39yntfnkc03","photos":[],"link":"","content":"<p>Hi everybody,</p>\n<p>The <a href=\"/blog/2012/09/26/new-site/\">new site</a> has no server-side code. Instead<br>we generate HTML <a href=\"http://kvz.io/blog/2012/09/25/blog-with-octopress/\" target=\"_blank\" rel=\"external\">using Octopress</a><br>and push to GitHub Pages, all from one <a href=\"https://github.com/kvz/locutus\" target=\"_blank\" rel=\"external\">repository</a>.</p>\n<p>This saves hosting costs/overhead and makes it really easy for people to submit<br>pull requests and for <a href=\"https://github.com/kvz/locutus/contributors\" target=\"_blank\" rel=\"external\">contributors</a><br>to make changes that I don’t always have time<br>for. It makes the project less dependent on me and more a community effort.</p>\n<p>To move forward, sometimes you have to cut features.<br>In this case I had to lose our compiler, a webtool that relied on server-side code<br>to generate minified packages from php.js functions.</p>\n<p>Understandibly this has <a href=\"https://github.com/kvz/locutus/issues/75\" target=\"_blank\" rel=\"external\">raised</a><br><a href=\"http://locutusjs.io/about/index.html#comment-861825612\">questions</a>.<br>It is still possible to bundle 4 useful functions:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - Note that this combined 4 php.js functions into a file called: myLocutus</span></span><br><span class=\"line\"><span class=\"comment\"># and minified version: myphp.min.js in the current directory.</span></span><br><span class=\"line\"><span class=\"comment\"># - Note that this throws all functions into the</span></span><br><span class=\"line\"><span class=\"comment\"># global scope. It would be better to put them in a dedicated locutus object.</span></span><br><span class=\"line\">curl -sk https://raw.github.com/kvz/locutus/31bf3129f08672f8c1d6d0dcad2368ebc4ac57f2/<span class=\"built_in\">functions</span>/\\</span><br><span class=\"line\">&#123;datetime/date\\</span><br><span class=\"line\">,datetime/strtotime\\</span><br><span class=\"line\">,strings/md5\\</span><br><span class=\"line\">,strings/vsprintf\\</span><br><span class=\"line\">&#125;.js |tee ./myLocutus &amp;&amp; \\</span><br><span class=\"line\">curl -vo ./myphp.min.js \\</span><br><span class=\"line\">    -X POST \\</span><br><span class=\"line\">    -H <span class=\"string\">'Expect: '</span> \\</span><br><span class=\"line\">    --data-urlencode compilation_level=<span class=\"string\">\"SIMPLE_OPTIMIZATIONS\"</span> \\</span><br><span class=\"line\">    --data-urlencode output_format=<span class=\"string\">\"text\"</span> \\</span><br><span class=\"line\">    --data-urlencode output_info=<span class=\"string\">\"compiled_code\"</span> \\</span><br><span class=\"line\">    --data-urlencode js_code@myLocutus \\</span><br><span class=\"line\">    http://closure-compiler.appspot.com/compile</span><br></pre></td></tr></table></figure>\n<p>but some people think php.js should bundle all of it’s functions into one big file:</p>\n<blockquote>\n<p>Not providing an all-in-one, downloadable, minified, ready-to-use<br>.js file is going to kill php.js.<br>You’ve abandoned windows users, and really any non-CLI junkie.<br>While I am capable of compiling this myself, what a headache.<br>You’ve introduced a barrier-to-entry that didn’t exist before,<br>and by not existing, allowed for the following you now have.<br>I <em>highly</em> suggest that you have this available for download,<br>either here or on github, such that you can keep (and maintain)<br>the momentum you worked so hard for.</p>\n</blockquote>\n<p>I’d like to comment on that here. While I appreciate the sentiment, wether the<br>project is being killed by these changes depends on how you look at php.js.<br>To me, php.js is a resource:</p>\n<ul>\n<li>For PHP developers that want see how it’s done in JavaScript</li>\n<li>That enables fun experiments</li>\n<li>With a few higher level functions that are incredibly useful, and missing in JavaScript</li>\n</ul>\n<p>This is what I feel php.js should focus on. Making functions. Making them better.</p>\n<p>If - on the other hand - you think of php.js as a</p>\n<ul>\n<li>2.1MB, 451-function, ready-to-rock spaceship that you can plug into your website so you can keep typing PHP client-side, not caring about learning JavaScript or how that extra weight might impact the user experience</li>\n</ul>\n<p>..then yes, <em>these changes are going to kill php.js</em>.</p>\n<p>I have limited time to spend on open source, and I want to spend it on things I enjoy and can believe in.<br>Not on working to support use-cases that keep new developers from learning, or make the web slower.<br>I’m sorry if this upsets folks but it really is my free time.</p>\n<p>Luckily though for people with different views, I released php.js under MIT so<br>it’s cool for anybody to fork this project and run with it.</p>\n<p>If anything, knowing that the php.js repository will focus on the raw <code>./functions</code><br>makes this easier.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Hi everybody,</p>\n<p>The <a href=\"/blog/2012/09/26/new-site/\">new site</a> has no server-side code. Instead<br>we generate HTML <a href=\"http://kvz.io/blog/2012/09/25/blog-with-octopress/\">using Octopress</a><br>and push to GitHub Pages, all from one <a href=\"https://github.com/kvz/locutus\">repository</a>.</p>\n<p>This saves hosting costs/overhead and makes it really easy for people to submit<br>pull requests and for <a href=\"https://github.com/kvz/locutus/contributors\">contributors</a><br>to make changes that I don’t always have time<br>for. It makes the project less dependent on me and more a community effort.</p>\n<p>To move forward, sometimes you have to cut features.<br>In this case I had to lose our compiler, a webtool that relied on server-side code<br>to generate minified packages from php.js functions.</p>\n<p>Understandibly this has <a href=\"https://github.com/kvz/locutus/issues/75\">raised</a><br><a href=\"http://locutusjs.io/about/index.html#comment-861825612\">questions</a>.<br>It is still possible to bundle 4 useful functions:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - Note that this combined 4 php.js functions into a file called: myLocutus</span></span><br><span class=\"line\"><span class=\"comment\"># and minified version: myphp.min.js in the current directory.</span></span><br><span class=\"line\"><span class=\"comment\"># - Note that this throws all functions into the</span></span><br><span class=\"line\"><span class=\"comment\"># global scope. It would be better to put them in a dedicated locutus object.</span></span><br><span class=\"line\">curl -sk https://raw.github.com/kvz/locutus/31bf3129f08672f8c1d6d0dcad2368ebc4ac57f2/<span class=\"built_in\">functions</span>/\\</span><br><span class=\"line\">&#123;datetime/date\\</span><br><span class=\"line\">,datetime/strtotime\\</span><br><span class=\"line\">,strings/md5\\</span><br><span class=\"line\">,strings/vsprintf\\</span><br><span class=\"line\">&#125;.js |tee ./myLocutus &amp;&amp; \\</span><br><span class=\"line\">curl -vo ./myphp.min.js \\</span><br><span class=\"line\">    -X POST \\</span><br><span class=\"line\">    -H <span class=\"string\">'Expect: '</span> \\</span><br><span class=\"line\">    --data-urlencode compilation_level=<span class=\"string\">\"SIMPLE_OPTIMIZATIONS\"</span> \\</span><br><span class=\"line\">    --data-urlencode output_format=<span class=\"string\">\"text\"</span> \\</span><br><span class=\"line\">    --data-urlencode output_info=<span class=\"string\">\"compiled_code\"</span> \\</span><br><span class=\"line\">    --data-urlencode js_code@myLocutus \\</span><br><span class=\"line\">    http://closure-compiler.appspot.com/compile</span><br></pre></td></tr></table></figure>\n<p>but some people think php.js should bundle all of it’s functions into one big file:</p>\n<blockquote>\n<p>Not providing an all-in-one, downloadable, minified, ready-to-use<br>.js file is going to kill php.js.<br>You’ve abandoned windows users, and really any non-CLI junkie.<br>While I am capable of compiling this myself, what a headache.<br>You’ve introduced a barrier-to-entry that didn’t exist before,<br>and by not existing, allowed for the following you now have.<br>I <em>highly</em> suggest that you have this available for download,<br>either here or on github, such that you can keep (and maintain)<br>the momentum you worked so hard for.</p>\n</blockquote>\n<p>I’d like to comment on that here. While I appreciate the sentiment, wether the<br>project is being killed by these changes depends on how you look at php.js.<br>To me, php.js is a resource:</p>\n<ul>\n<li>For PHP developers that want see how it’s done in JavaScript</li>\n<li>That enables fun experiments</li>\n<li>With a few higher level functions that are incredibly useful, and missing in JavaScript</li>\n</ul>\n<p>This is what I feel php.js should focus on. Making functions. Making them better.</p>\n<p>If - on the other hand - you think of php.js as a</p>\n<ul>\n<li>2.1MB, 451-function, ready-to-rock spaceship that you can plug into your website so you can keep typing PHP client-side, not caring about learning JavaScript or how that extra weight might impact the user experience</li>\n</ul>\n<p>..then yes, <em>these changes are going to kill php.js</em>.</p>\n<p>I have limited time to spend on open source, and I want to spend it on things I enjoy and can believe in.<br>Not on working to support use-cases that keep new developers from learning, or make the web slower.<br>I’m sorry if this upsets folks but it really is my free time.</p>\n<p>Luckily though for people with different views, I released php.js under MIT so<br>it’s cool for anybody to fork this project and run with it.</p>\n<p>If anything, knowing that the php.js repository will focus on the raw <code>./functions</code><br>makes this easier.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"Coding Style","comments":1,"alias":"/blog/2013/05/04/coding-style/","_content":"\nGiven [the focus of Locutus](/blog/2013/05/a-word-on-the-focus-of-php-dot-js/) I think\nwe should re-invent as few wheels as possible and make use of sensible tools\nand standards that are other people have already invested a great deal of time\nin to get right.\n\nIn this light, I've decided to adopt [Felix' Node.js Style Guide](http://nodeguide.com/style.html)\nfor coding standards, instead of running our own.\n\nIt saves us time maintaining and it becomes easier for people to contribute because\nthey don't have to memorize where Locutus diverges.\n\nFor the big parts our codebase is already compatible with it, so\nwe won't get any weird [space + tab](http://www.emacswiki.org/pics/static/TabsSpacesBoth.png) indentations as a result, as we start adding code that follows the guide.\n\nGoing forward, contributions should comply with these conventions before being\nmerged in.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2013-05-04-coding-style.md","raw":"---\nlayout: post\ntitle: \"Coding Style\"\ncomments: true\ntags: [ coding style, convention ]\nalias: /blog/2013/05/04/coding-style/ \n---\n\nGiven [the focus of Locutus](/blog/2013/05/a-word-on-the-focus-of-php-dot-js/) I think\nwe should re-invent as few wheels as possible and make use of sensible tools\nand standards that are other people have already invested a great deal of time\nin to get right.\n\nIn this light, I've decided to adopt [Felix' Node.js Style Guide](http://nodeguide.com/style.html)\nfor coding standards, instead of running our own.\n\nIt saves us time maintaining and it becomes easier for people to contribute because\nthey don't have to memorize where Locutus diverges.\n\nFor the big parts our codebase is already compatible with it, so\nwe won't get any weird [space + tab](http://www.emacswiki.org/pics/static/TabsSpacesBoth.png) indentations as a result, as we start adding code that follows the guide.\n\nGoing forward, contributions should comply with these conventions before being\nmerged in.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"coding-style","published":1,"date":"2013-05-04T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5o0004h39ywd2nl14r","photos":[],"link":"","content":"<p>Given <a href=\"/blog/2013/05/a-word-on-the-focus-of-php-dot-js/\">the focus of Locutus</a> I think<br>we should re-invent as few wheels as possible and make use of sensible tools<br>and standards that are other people have already invested a great deal of time<br>in to get right.</p>\n<p>In this light, I’ve decided to adopt <a href=\"http://nodeguide.com/style.html\" target=\"_blank\" rel=\"external\">Felix’ Node.js Style Guide</a><br>for coding standards, instead of running our own.</p>\n<p>It saves us time maintaining and it becomes easier for people to contribute because<br>they don’t have to memorize where Locutus diverges.</p>\n<p>For the big parts our codebase is already compatible with it, so<br>we won’t get any weird <a href=\"http://www.emacswiki.org/pics/static/TabsSpacesBoth.png\" target=\"_blank\" rel=\"external\">space + tab</a> indentations as a result, as we start adding code that follows the guide.</p>\n<p>Going forward, contributions should comply with these conventions before being<br>merged in.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Given <a href=\"/blog/2013/05/a-word-on-the-focus-of-php-dot-js/\">the focus of Locutus</a> I think<br>we should re-invent as few wheels as possible and make use of sensible tools<br>and standards that are other people have already invested a great deal of time<br>in to get right.</p>\n<p>In this light, I’ve decided to adopt <a href=\"http://nodeguide.com/style.html\">Felix’ Node.js Style Guide</a><br>for coding standards, instead of running our own.</p>\n<p>It saves us time maintaining and it becomes easier for people to contribute because<br>they don’t have to memorize where Locutus diverges.</p>\n<p>For the big parts our codebase is already compatible with it, so<br>we won’t get any weird <a href=\"http://www.emacswiki.org/pics/static/TabsSpacesBoth.png\">space + tab</a> indentations as a result, as we start adding code that follows the guide.</p>\n<p>Going forward, contributions should comply with these conventions before being<br>merged in.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"Standard Coding Style","comments":1,"alias":"/blog/2016/04/01/standard-coding-style/","_content":"\nThree years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide, \nfor reasons outlined in the introductory post: [Coding Style](/blog/2013/05/coding-style/).\n\nThe reasoning behind adopting such a widely supported coding style, has not changed. Locutus should be\nfocused on its added value, and less so arguing about, and inventing custom conventions around coding style.\n\nWhat has changed a great deal though, is the JavaScript landscape. A large part of the community is gathering behind [Feross Aboukhadijeh's JavaScript Standard Style](http://standardjs.com/) and [ESLint](http://eslint.org/).\n\nStandard offers sensible defaults (no semicolons might take some getting used to but it's really [ok](http://mislav.net/2010/05/semicolons/) and after two weeks you won't look back). ESLint offers powerful ways to enforce the standard.\n\nESLint for instance, offers a `--fix` command-line argument flag, that converts non-conforming codebases to whichever coding style convention was selected.\n\nThe auto-fixing does not cover all rules yet, but it's getting better every month. As we upgrade these modules and fix our codebase, more and more legacy will conform.\n\nAdditionally, I've added non-fatal linting to our Travis CI builds, so you can see which functions don't comply, and make them.\n\nLocutus does few naughty tricks to bend the laws of physics and overcome a few obstacles in porting programming languages. For this reason, Locutus a few exceptions listed in `.eslintrc`. As a goal for the future, it would be interesting to see if we could lose these exceptions.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2016-04-01-standard-coding-style.md","raw":"---\nlayout: post\ntitle: \"Standard Coding Style\"\ncomments: true\ntags: [ coding style, convention ]\nalias: /blog/2016/04/01/standard-coding-style/\n---\n\nThree years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide, \nfor reasons outlined in the introductory post: [Coding Style](/blog/2013/05/coding-style/).\n\nThe reasoning behind adopting such a widely supported coding style, has not changed. Locutus should be\nfocused on its added value, and less so arguing about, and inventing custom conventions around coding style.\n\nWhat has changed a great deal though, is the JavaScript landscape. A large part of the community is gathering behind [Feross Aboukhadijeh's JavaScript Standard Style](http://standardjs.com/) and [ESLint](http://eslint.org/).\n\nStandard offers sensible defaults (no semicolons might take some getting used to but it's really [ok](http://mislav.net/2010/05/semicolons/) and after two weeks you won't look back). ESLint offers powerful ways to enforce the standard.\n\nESLint for instance, offers a `--fix` command-line argument flag, that converts non-conforming codebases to whichever coding style convention was selected.\n\nThe auto-fixing does not cover all rules yet, but it's getting better every month. As we upgrade these modules and fix our codebase, more and more legacy will conform.\n\nAdditionally, I've added non-fatal linting to our Travis CI builds, so you can see which functions don't comply, and make them.\n\nLocutus does few naughty tricks to bend the laws of physics and overcome a few obstacles in porting programming languages. For this reason, Locutus a few exceptions listed in `.eslintrc`. As a goal for the future, it would be interesting to see if we could lose these exceptions.\n\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"standard-coding-style","published":1,"date":"2016-04-01T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5p0005h39yc51k81rv","photos":[],"link":"","content":"<p>Three years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide,<br>for reasons outlined in the introductory post: <a href=\"/blog/2013/05/coding-style/\">Coding Style</a>.</p>\n<p>The reasoning behind adopting such a widely supported coding style, has not changed. Locutus should be<br>focused on its added value, and less so arguing about, and inventing custom conventions around coding style.</p>\n<p>What has changed a great deal though, is the JavaScript landscape. A large part of the community is gathering behind <a href=\"http://standardjs.com/\" target=\"_blank\" rel=\"external\">Feross Aboukhadijeh’s JavaScript Standard Style</a> and <a href=\"http://eslint.org/\" target=\"_blank\" rel=\"external\">ESLint</a>.</p>\n<p>Standard offers sensible defaults (no semicolons might take some getting used to but it’s really <a href=\"http://mislav.net/2010/05/semicolons/\" target=\"_blank\" rel=\"external\">ok</a> and after two weeks you won’t look back). ESLint offers powerful ways to enforce the standard.</p>\n<p>ESLint for instance, offers a <code>--fix</code> command-line argument flag, that converts non-conforming codebases to whichever coding style convention was selected.</p>\n<p>The auto-fixing does not cover all rules yet, but it’s getting better every month. As we upgrade these modules and fix our codebase, more and more legacy will conform.</p>\n<p>Additionally, I’ve added non-fatal linting to our Travis CI builds, so you can see which functions don’t comply, and make them.</p>\n<p>Locutus does few naughty tricks to bend the laws of physics and overcome a few obstacles in porting programming languages. For this reason, Locutus a few exceptions listed in <code>.eslintrc</code>. As a goal for the future, it would be interesting to see if we could lose these exceptions.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Three years ago we switched from our own home-brown coding style convention to Felix’ Node.js Style Guide,<br>for reasons outlined in the introductory post: <a href=\"/blog/2013/05/coding-style/\">Coding Style</a>.</p>\n<p>The reasoning behind adopting such a widely supported coding style, has not changed. Locutus should be<br>focused on its added value, and less so arguing about, and inventing custom conventions around coding style.</p>\n<p>What has changed a great deal though, is the JavaScript landscape. A large part of the community is gathering behind <a href=\"http://standardjs.com/\">Feross Aboukhadijeh’s JavaScript Standard Style</a> and <a href=\"http://eslint.org/\">ESLint</a>.</p>\n<p>Standard offers sensible defaults (no semicolons might take some getting used to but it’s really <a href=\"http://mislav.net/2010/05/semicolons/\">ok</a> and after two weeks you won’t look back). ESLint offers powerful ways to enforce the standard.</p>\n<p>ESLint for instance, offers a <code>--fix</code> command-line argument flag, that converts non-conforming codebases to whichever coding style convention was selected.</p>\n<p>The auto-fixing does not cover all rules yet, but it’s getting better every month. As we upgrade these modules and fix our codebase, more and more legacy will conform.</p>\n<p>Additionally, I’ve added non-fatal linting to our Travis CI builds, so you can see which functions don’t comply, and make them.</p>\n<p>Locutus does few naughty tricks to bend the laws of physics and overcome a few obstacles in porting programming languages. For this reason, Locutus a few exceptions listed in <code>.eslintrc</code>. As a goal for the future, it would be interesting to see if we could lose these exceptions.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"Switching to Jekyll","comments":1,"alias":"/blog/2016/04/02/jekyll/","_content":"\nHi all,\n\n[Four years ago](http://locutusjs.io/blog/2012/09/new-site/) we switched from a PHP generated site to \none built in Octopress, so it would be easier for people to contribute, and we would not have to worry\nabout keeping servers online.\n\nThings have changed since then. The Octopress version we used is no longer supported, and the new\n3.0 is leans heavily on Jekyll.\n\nWith the backing of GitHub for GitHub Pages, Jekyll itself has improved tremendously. \n\nCombined, I felt we reached the tipping point where it made more sense to port things to Jekyll\nso we can profit from their speed of development, ecosystem, and the fact that many developers\nare already familiar with it.\n\nLong story short, I just [completed](https://github.com/kvz/locutus/pull/284) the migration, and if you want to work on the website, here's\nwhat you'd do.\n\nJekyll runs on Ruby, so make sure you have that installed, preferably with a working version of bundler. The rest of the site-building dependencies are node-based, so make sure you have a working `npm` as well.\n\nTo install the dependencies:\n\n```bash\nnpm install\nnpm run website:install\n```\n\nTo start a local version of the website and open a browser that will auto-refresh on changes, type:\n\n```bash\nnpm run website:start\n```\n\nNow hack on the files in the `./website` folder, until you're happy with the local results. Commit the changes to Git or send in a PR if you don't have write access to the repository. This means the sources are saved, but someone with write access still needs to deploy.\n\nTo do that, type:\n\n```bash\nnpm run website:deploy\n```\n\nThat's it : )\n\nP.S. We have a few custom build steps such as rendering the functions, that make it hard for us to only use the GitHub Pages provided Jekyll, this means for the time being we'll be relying on our own scripts and Jekyll version. That said, it's still possible to orchestrate auto-deploys whenever there's a change to `master`, by using Travis CI and encrypted environment keys. If I have time, I'd like to set this up too. This way people could propose changes, and merging them would be enough to see them go live.\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2016-04-02-jekyll.md","raw":"---\nlayout: post\ntitle: \"Switching to Jekyll\"\ncomments: true\ntags: [ website, octopress, jekyll, future ]\nalias: /blog/2016/04/02/jekyll/\n---\n\nHi all,\n\n[Four years ago](http://locutusjs.io/blog/2012/09/new-site/) we switched from a PHP generated site to \none built in Octopress, so it would be easier for people to contribute, and we would not have to worry\nabout keeping servers online.\n\nThings have changed since then. The Octopress version we used is no longer supported, and the new\n3.0 is leans heavily on Jekyll.\n\nWith the backing of GitHub for GitHub Pages, Jekyll itself has improved tremendously. \n\nCombined, I felt we reached the tipping point where it made more sense to port things to Jekyll\nso we can profit from their speed of development, ecosystem, and the fact that many developers\nare already familiar with it.\n\nLong story short, I just [completed](https://github.com/kvz/locutus/pull/284) the migration, and if you want to work on the website, here's\nwhat you'd do.\n\nJekyll runs on Ruby, so make sure you have that installed, preferably with a working version of bundler. The rest of the site-building dependencies are node-based, so make sure you have a working `npm` as well.\n\nTo install the dependencies:\n\n```bash\nnpm install\nnpm run website:install\n```\n\nTo start a local version of the website and open a browser that will auto-refresh on changes, type:\n\n```bash\nnpm run website:start\n```\n\nNow hack on the files in the `./website` folder, until you're happy with the local results. Commit the changes to Git or send in a PR if you don't have write access to the repository. This means the sources are saved, but someone with write access still needs to deploy.\n\nTo do that, type:\n\n```bash\nnpm run website:deploy\n```\n\nThat's it : )\n\nP.S. We have a few custom build steps such as rendering the functions, that make it hard for us to only use the GitHub Pages provided Jekyll, this means for the time being we'll be relying on our own scripts and Jekyll version. That said, it's still possible to orchestrate auto-deploys whenever there's a change to `master`, by using Travis CI and encrypted environment keys. If I have time, I'd like to set this up too. This way people could propose changes, and merging them would be enough to see them go live.\n\nBest wishes,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"jekyll","published":1,"date":"2016-04-02T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5r0006h39yd7p0p8ha","photos":[],"link":"","content":"<p>Hi all,</p>\n<p><a href=\"http://locutusjs.io/blog/2012/09/new-site/\">Four years ago</a> we switched from a PHP generated site to<br>one built in Octopress, so it would be easier for people to contribute, and we would not have to worry<br>about keeping servers online.</p>\n<p>Things have changed since then. The Octopress version we used is no longer supported, and the new<br>3.0 is leans heavily on Jekyll.</p>\n<p>With the backing of GitHub for GitHub Pages, Jekyll itself has improved tremendously. </p>\n<p>Combined, I felt we reached the tipping point where it made more sense to port things to Jekyll<br>so we can profit from their speed of development, ecosystem, and the fact that many developers<br>are already familiar with it.</p>\n<p>Long story short, I just <a href=\"https://github.com/kvz/locutus/pull/284\" target=\"_blank\" rel=\"external\">completed</a> the migration, and if you want to work on the website, here’s<br>what you’d do.</p>\n<p>Jekyll runs on Ruby, so make sure you have that installed, preferably with a working version of bundler. The rest of the site-building dependencies are node-based, so make sure you have a working <code>npm</code> as well.</p>\n<p>To install the dependencies:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm run website:install</span><br></pre></td></tr></table></figure>\n<p>To start a local version of the website and open a browser that will auto-refresh on changes, type:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run website:start</span><br></pre></td></tr></table></figure>\n<p>Now hack on the files in the <code>./website</code> folder, until you’re happy with the local results. Commit the changes to Git or send in a PR if you don’t have write access to the repository. This means the sources are saved, but someone with write access still needs to deploy.</p>\n<p>To do that, type:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run website:deploy</span><br></pre></td></tr></table></figure>\n<p>That’s it : )</p>\n<p>P.S. We have a few custom build steps such as rendering the functions, that make it hard for us to only use the GitHub Pages provided Jekyll, this means for the time being we’ll be relying on our own scripts and Jekyll version. That said, it’s still possible to orchestrate auto-deploys whenever there’s a change to <code>master</code>, by using Travis CI and encrypted environment keys. If I have time, I’d like to set this up too. This way people could propose changes, and merging them would be enough to see them go live.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Hi all,</p>\n<p><a href=\"http://locutusjs.io/blog/2012/09/new-site/\">Four years ago</a> we switched from a PHP generated site to<br>one built in Octopress, so it would be easier for people to contribute, and we would not have to worry<br>about keeping servers online.</p>\n<p>Things have changed since then. The Octopress version we used is no longer supported, and the new<br>3.0 is leans heavily on Jekyll.</p>\n<p>With the backing of GitHub for GitHub Pages, Jekyll itself has improved tremendously. </p>\n<p>Combined, I felt we reached the tipping point where it made more sense to port things to Jekyll<br>so we can profit from their speed of development, ecosystem, and the fact that many developers<br>are already familiar with it.</p>\n<p>Long story short, I just <a href=\"https://github.com/kvz/locutus/pull/284\">completed</a> the migration, and if you want to work on the website, here’s<br>what you’d do.</p>\n<p>Jekyll runs on Ruby, so make sure you have that installed, preferably with a working version of bundler. The rest of the site-building dependencies are node-based, so make sure you have a working <code>npm</code> as well.</p>\n<p>To install the dependencies:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br><span class=\"line\">npm run website:install</span><br></pre></td></tr></table></figure>\n<p>To start a local version of the website and open a browser that will auto-refresh on changes, type:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run website:start</span><br></pre></td></tr></table></figure>\n<p>Now hack on the files in the <code>./website</code> folder, until you’re happy with the local results. Commit the changes to Git or send in a PR if you don’t have write access to the repository. This means the sources are saved, but someone with write access still needs to deploy.</p>\n<p>To do that, type:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run website:deploy</span><br></pre></td></tr></table></figure>\n<p>That’s it : )</p>\n<p>P.S. We have a few custom build steps such as rendering the functions, that make it hard for us to only use the GitHub Pages provided Jekyll, this means for the time being we’ll be relying on our own scripts and Jekyll version. That said, it’s still possible to orchestrate auto-deploys whenever there’s a change to <code>master</code>, by using Travis CI and encrypted environment keys. If I have time, I’d like to set this up too. This way people could propose changes, and merging them would be enough to see them go live.</p>\n<p>Best wishes,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"Breaking Backwards Compatibility","comments":1,"alias":"/blog/2016/04/20/breaking-bc/","_content":"\nHi all,\n\nI'm planning to push out a big release soon that will change a lot of things about this project.\n\nAmong things, it will:\n\n- Offer a platform to learn other languages besides PHP\n- Be focussed on npm as the main distribution platform, so you can `var sprintf = require('string/sprintf')` (and use Browserify, Rollup, or Webpack on that if the browser is your target)\n- Deprecate functions that were desperately trying to mimic PHP, yet never really succeeding\n\nThe old version will remain available as `v1.3.2`.\n\nI certainly hope you are not using this project like so:\n\n<https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js>\n\nas that is asking for BC breakage as well as impolite towards GitHub, but if you are, you should change your links to\n\n<https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js>\n\nuntil you can figure out how to vendor in that function and host it yourself.\n\nIf you are using the project via npm, the old version will be available under the `1.3.2` package version.\n\nIf you are using it via Git, use `git checkout v1.3.2`.\n\nThe new version will be available as `v2.0.0`, as well as `master` by the time I launch. I'm not sure yet when that will be, but I thought it might save some headaches to already give the heads up about this.\n\nStay tuned for more,\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2016-04-20-breaking-bc.md","raw":"---\nlayout: post\ntitle: \"Breaking Backwards Compatibility\"\ncomments: true\ntags: [ future ]\nalias: /blog/2016/04/20/breaking-bc/\n---\n\nHi all,\n\nI'm planning to push out a big release soon that will change a lot of things about this project.\n\nAmong things, it will:\n\n- Offer a platform to learn other languages besides PHP\n- Be focussed on npm as the main distribution platform, so you can `var sprintf = require('string/sprintf')` (and use Browserify, Rollup, or Webpack on that if the browser is your target)\n- Deprecate functions that were desperately trying to mimic PHP, yet never really succeeding\n\nThe old version will remain available as `v1.3.2`.\n\nI certainly hope you are not using this project like so:\n\n<https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js>\n\nas that is asking for BC breakage as well as impolite towards GitHub, but if you are, you should change your links to\n\n<https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js>\n\nuntil you can figure out how to vendor in that function and host it yourself.\n\nIf you are using the project via npm, the old version will be available under the `1.3.2` package version.\n\nIf you are using it via Git, use `git checkout v1.3.2`.\n\nThe new version will be available as `v2.0.0`, as well as `master` by the time I launch. I'm not sure yet when that will be, but I thought it might save some headaches to already give the heads up about this.\n\nStay tuned for more,\n\n[Kevin](http://twitter.com/kvz)\n","slug":"breaking-bc","published":1,"date":"2016-04-20T00:00:00.000Z","updated":"2016-05-01T09:28:42.000Z","_id":"cinoaxk5t0008h39yakpvmyyr","photos":[],"link":"","content":"<p>Hi all,</p>\n<p>I’m planning to push out a big release soon that will change a lot of things about this project.</p>\n<p>Among things, it will:</p>\n<ul>\n<li>Offer a platform to learn other languages besides PHP</li>\n<li>Be focussed on npm as the main distribution platform, so you can <code>var sprintf = require(&#39;string/sprintf&#39;)</code> (and use Browserify, Rollup, or Webpack on that if the browser is your target)</li>\n<li>Deprecate functions that were desperately trying to mimic PHP, yet never really succeeding</li>\n</ul>\n<p>The old version will remain available as <code>v1.3.2</code>.</p>\n<p>I certainly hope you are not using this project like so:</p>\n<p><a href=\"https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js</a></p>\n<p>as that is asking for BC breakage as well as impolite towards GitHub, but if you are, you should change your links to</p>\n<p><a href=\"https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js\" target=\"_blank\" rel=\"external\">https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js</a></p>\n<p>until you can figure out how to vendor in that function and host it yourself.</p>\n<p>If you are using the project via npm, the old version will be available under the <code>1.3.2</code> package version.</p>\n<p>If you are using it via Git, use <code>git checkout v1.3.2</code>.</p>\n<p>The new version will be available as <code>v2.0.0</code>, as well as <code>master</code> by the time I launch. I’m not sure yet when that will be, but I thought it might save some headaches to already give the heads up about this.</p>\n<p>Stay tuned for more,</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>Hi all,</p>\n<p>I’m planning to push out a big release soon that will change a lot of things about this project.</p>\n<p>Among things, it will:</p>\n<ul>\n<li>Offer a platform to learn other languages besides PHP</li>\n<li>Be focussed on npm as the main distribution platform, so you can <code>var sprintf = require(&#39;string/sprintf&#39;)</code> (and use Browserify, Rollup, or Webpack on that if the browser is your target)</li>\n<li>Deprecate functions that were desperately trying to mimic PHP, yet never really succeeding</li>\n</ul>\n<p>The old version will remain available as <code>v1.3.2</code>.</p>\n<p>I certainly hope you are not using this project like so:</p>\n<p><a href=\"https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js\">https://raw.githubusercontent.com/kvz/phpjs/master/functions/strings/sprintf.js</a></p>\n<p>as that is asking for BC breakage as well as impolite towards GitHub, but if you are, you should change your links to</p>\n<p><a href=\"https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js\">https://raw.githubusercontent.com/kvz/phpjs/v1.3.2/functions/strings/sprintf.js</a></p>\n<p>until you can figure out how to vendor in that function and host it yourself.</p>\n<p>If you are using the project via npm, the old version will be available under the <code>1.3.2</code> package version.</p>\n<p>If you are using it via Git, use <code>git checkout v1.3.2</code>.</p>\n<p>The new version will be available as <code>v2.0.0</code>, as well as <code>master</code> by the time I launch. I’m not sure yet when that will be, but I thought it might save some headaches to already give the heads up about this.</p>\n<p>Stay tuned for more,</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"},{"layout":"post","title":"php.js is Dead - Long Live Locutus","comments":1,"_content":"\nAs briefly spoiled in [Breaking Backwards Compatibility](/blog/2016/04/20/breaking-bc/), \ntoday I'm launching a big iteration of php.js. It includes so\n[many](https://github.com/kvz/locutus/pull/290) breaking \n[changes](https://github.com/kvz/locutus/blob/master/CHANGELOG.md#v200), that after \n9 years, php.js is dead. Out of its ashes though, rises: **Locutus**\n\nLocutus will have the same mission: \n  \n> Offer a community platform to collaborate on JavaScript counterparts \nto functions from other languages, for fun and educational purposes.\n\nBut Locutus will also be different on key points. Locutus will focus on:\n\n- Expanding to other languages, such as C, Go, Python, Ruby\n- Hack-free porting, meaning we'll just port individual functions from the standard libraries and avoid: language features, environment, data-types, configuration\n- The educational aspect and the intellectual challenge\n- Using npm as the distribution platform of choice, so you can do `var strings = require('golang/strings')`and in case the browser is your target platform, use [Browserify](http://browserify.org/), [rollup.js](http://rollupjs.org/), or [webpack](https://webpack.github.io/).\n- Trying to deliver functions that are interoperable browsers and Node.js, but allowing to target just one platform when that saves us from writing wieldy code, documenting this with a `note`.\n\nWhile still a work in progress, I've already deprecated and updated many functions that do not adhere to this renewed focus. If you spot a function I overlooked, let me know and we'll fix.\n\nI feel these changes were needed to regain the motivation required for leading this project. For a long time I've struggled with it in its old form. I rarely did maintenance runs anymore, and when I did, it was guilt-driven, rather than by curiosity or excitement - the things that got me started.\n\nThere are several reasons why I believe my intrinsic motivation had fled:\n\n- The things that could reasonably be ported, had been ported. The things that probably should not have been ported, had been ported too - and were now mostly good for provoking purists and inducing maintenance load. Not very rewarding.\n- Misuse of the project. I shed approximately 451 tears when people started using our project so they would not have to learn JavaScript and could continue PHP-ing in the browser, using 2.1MB, 451-function, ready-to-rock spaceship bundles in the browser. I made efforts to [stop newcomers from doing that](/blog/2013/05/a-word-on-the-focus-of-php-dot-js/). I shed approximately 2.1 tears from the angry notes they then sent me.\n- I started a new company and protocol which took much time by itself, but also meant writing solely in other programming languages (you'll find no bitterness here, but it did mean I had less time to care about PHP oriented projects)\n- Being a visible project in the broader development community with people coming from many different programming languages, I found myself at the focal point of PHP hate was fashionable for a while.   \n- 9 years is a long time, especially in tech. Node.js did not exist, [everyone was on IE6](https://www.w3counter.com/globalstats.php?date=2007-05-30), and JavaScript was mostly used for raising `alert()`s. Going from age 23 to 32, I have changed my stance on pretty much all things. This includes also that I have abandoned the idea that our project could maybe be used as an interactive debugging tool, or maybe even to run entire scripts from other languages on V8. I pursued goal for some time with the thirst of a youngster, and while we had some success with this, it drove me to me write and accept hacks that have likely secured my special place in hell. Projects like [GopherJS](https://github.com/gopherjs/gopherjs) or [Emscripten](http://kripken.github.io/emscripten-site/) offer viable routes to that end, our approach isn't fit for that purpose.\n\nKnowing I fell short as a project lead, I tried to recruit fresh blood to replace me. However, even though there is an active community of contributors, there were no volunteers for this position. For a while I considered declaring `[UNMAINTAINED]`, but I still feel too great a deal of duty and responsibility towards the contributors.\n\nSo instead I thought what it would take to get my mojo back. Having analyzed \nwhat had crippled it over the past 9 years, I decided to make the changes that allow it to flow \nback again.\n\nIf you are interested in the nuts and bolts, these these are a few things I've been secretly \nworking on to clean up our codebase and breathe new live into it. I have:\n\n- Added (generated) Mocha tests for every functions, instead of our own test framework\n- Added a CONTRIBUTORS guide as well as New Issue and Pull Request templates so we can be more efficient using GitHub\n- Added native JSON, base64, sha1, md5 support when available\n- Asked [Troy Dodd](http://troydodd.deviantart.com/art/Locutus-of-Borg-217586598) if we could use his stunning Locutus artwork to be our avatar (and he said yes : )\n- Assimilated a dozen of example functions that showcase how we could port 4 new languages to JavaScript\n- Changed all functions to make them adhere to the [JavaScript Standard Style](http://standardjs.com/) and have a max line length of 100. Travis CI will fail when new additions do not adhere\n- Deprecated/documented all functions using `eval` or `new Function` and other bad practices\n- Fixed ~50 failed tests that were previously marked as skipped (still a few to go)\n- Made it so that all functions can be required individually via npm\n- Made it so that dependencies between functions are now handled via CommonJS `require`\n- Refactored the utility class\n- Removed `_workbench` and `_experimental` folders. They are available for reference in 1.3.2 but making them harder to find for newcomers should help avoid complaints and confusion. If you want to experiment, we can use local files or branches for that when it's time to collaborate.\n- Use [Jekyll instead of Octopress](/blog/2016/04/jekyll/) to build our website\n- We can use `$global` that works in both Browsers and Node.js\n- We can write any function in ES6 now\n\nI understand this can feel like a very radical shift, especially when there's talk of deprecating functions. Perhaps functions that you wrote with blood sweat and tears. I want to voice a word of appreciation to you as a contributor, for the hard work that went into crafting this project. Rewriting a language in another language is no small task, and folks tend to forget that in order to port a different language to JavaScript, we had to write a lot of JavaScript. \n\nIn trying to port the entire language instead of limiting ourselves to more sensible bits, we may have ventured into some darker areas of engineering. But I for one am very proud that we have built a welcoming and friendly community where over the coarse of 9 years, over hundreds of developers have come together to learn JavaScript and help others learn it. I for one have become much more intimate with JavaScript's delicacies because of it, and I know many contributors commenting on eat-other's work, with me. I will accept both victory and defeat.\n\nAs a contributor of this project, I hope Locutus brings the changes that can re-spark your interest as well as it has mine, and I hope you'll come with me on this new adventure, where standard libraries full of functions are just [screaming to be ported](https://golang.org/pkg/strings/). This time we'll be a little bit older. A little bit wiser, prudent, and steer clear of the darker areas. But we'll have just as much fun challenging ourselves and learning other languages : )\n\nFor all those that can forgive me for my past mistakes, as well as perhaps deprecating some of your work: you can try Locutus right now if you want:\n\n```bash\n$ npm install --save --save-exact locutus\n$ vim index.js\n```\n\n```javascript\nvar echo = require('locutus/php/strings/echo')\nvar capwords = require('locutus/python/string/capwords')\nvar strings = require('locutus/golang/strings')\nvar rubyMath = require('locutus/ruby/Math')\nvar c = require('locutus/c')\n\necho(capwords('locutus'))\necho(strings.Contains('Locutus', 'us'))\necho(rubyMath.acos(0.3))\necho(c.math.abs(-5))\n```\n\n```bash\n$ node index.js\nLocutus\ntrue\n1.266103672779499\n5\n```\n\nIf you want to help Locutus, our newly added languages don't have much meat on the bones yet, so it would be glorious to see you could assimilate more functions.\n\nAlso, there are plenty ideas in our \n[Backlog](https://github.com/kvz/locutus/blob/master/CHANGELOG.md#Backlog)\nthat we'd love help with, so there's just one thing left to say.\n\n[To the GitHubs](https://github.com/kvz/locutus)!\n\n[Kevin](http://twitter.com/kvz)\n","source":"_posts/2016-04-21-announcing-locutus.md","raw":"---\nlayout: post\ntitle: \"php.js is Dead - Long Live Locutus\"\ncomments: true\ntags: [ future, js, golang, python, ruby, php, c ]\n---\n\nAs briefly spoiled in [Breaking Backwards Compatibility](/blog/2016/04/20/breaking-bc/), \ntoday I'm launching a big iteration of php.js. It includes so\n[many](https://github.com/kvz/locutus/pull/290) breaking \n[changes](https://github.com/kvz/locutus/blob/master/CHANGELOG.md#v200), that after \n9 years, php.js is dead. Out of its ashes though, rises: **Locutus**\n\nLocutus will have the same mission: \n  \n> Offer a community platform to collaborate on JavaScript counterparts \nto functions from other languages, for fun and educational purposes.\n\nBut Locutus will also be different on key points. Locutus will focus on:\n\n- Expanding to other languages, such as C, Go, Python, Ruby\n- Hack-free porting, meaning we'll just port individual functions from the standard libraries and avoid: language features, environment, data-types, configuration\n- The educational aspect and the intellectual challenge\n- Using npm as the distribution platform of choice, so you can do `var strings = require('golang/strings')`and in case the browser is your target platform, use [Browserify](http://browserify.org/), [rollup.js](http://rollupjs.org/), or [webpack](https://webpack.github.io/).\n- Trying to deliver functions that are interoperable browsers and Node.js, but allowing to target just one platform when that saves us from writing wieldy code, documenting this with a `note`.\n\nWhile still a work in progress, I've already deprecated and updated many functions that do not adhere to this renewed focus. If you spot a function I overlooked, let me know and we'll fix.\n\nI feel these changes were needed to regain the motivation required for leading this project. For a long time I've struggled with it in its old form. I rarely did maintenance runs anymore, and when I did, it was guilt-driven, rather than by curiosity or excitement - the things that got me started.\n\nThere are several reasons why I believe my intrinsic motivation had fled:\n\n- The things that could reasonably be ported, had been ported. The things that probably should not have been ported, had been ported too - and were now mostly good for provoking purists and inducing maintenance load. Not very rewarding.\n- Misuse of the project. I shed approximately 451 tears when people started using our project so they would not have to learn JavaScript and could continue PHP-ing in the browser, using 2.1MB, 451-function, ready-to-rock spaceship bundles in the browser. I made efforts to [stop newcomers from doing that](/blog/2013/05/a-word-on-the-focus-of-php-dot-js/). I shed approximately 2.1 tears from the angry notes they then sent me.\n- I started a new company and protocol which took much time by itself, but also meant writing solely in other programming languages (you'll find no bitterness here, but it did mean I had less time to care about PHP oriented projects)\n- Being a visible project in the broader development community with people coming from many different programming languages, I found myself at the focal point of PHP hate was fashionable for a while.   \n- 9 years is a long time, especially in tech. Node.js did not exist, [everyone was on IE6](https://www.w3counter.com/globalstats.php?date=2007-05-30), and JavaScript was mostly used for raising `alert()`s. Going from age 23 to 32, I have changed my stance on pretty much all things. This includes also that I have abandoned the idea that our project could maybe be used as an interactive debugging tool, or maybe even to run entire scripts from other languages on V8. I pursued goal for some time with the thirst of a youngster, and while we had some success with this, it drove me to me write and accept hacks that have likely secured my special place in hell. Projects like [GopherJS](https://github.com/gopherjs/gopherjs) or [Emscripten](http://kripken.github.io/emscripten-site/) offer viable routes to that end, our approach isn't fit for that purpose.\n\nKnowing I fell short as a project lead, I tried to recruit fresh blood to replace me. However, even though there is an active community of contributors, there were no volunteers for this position. For a while I considered declaring `[UNMAINTAINED]`, but I still feel too great a deal of duty and responsibility towards the contributors.\n\nSo instead I thought what it would take to get my mojo back. Having analyzed \nwhat had crippled it over the past 9 years, I decided to make the changes that allow it to flow \nback again.\n\nIf you are interested in the nuts and bolts, these these are a few things I've been secretly \nworking on to clean up our codebase and breathe new live into it. I have:\n\n- Added (generated) Mocha tests for every functions, instead of our own test framework\n- Added a CONTRIBUTORS guide as well as New Issue and Pull Request templates so we can be more efficient using GitHub\n- Added native JSON, base64, sha1, md5 support when available\n- Asked [Troy Dodd](http://troydodd.deviantart.com/art/Locutus-of-Borg-217586598) if we could use his stunning Locutus artwork to be our avatar (and he said yes : )\n- Assimilated a dozen of example functions that showcase how we could port 4 new languages to JavaScript\n- Changed all functions to make them adhere to the [JavaScript Standard Style](http://standardjs.com/) and have a max line length of 100. Travis CI will fail when new additions do not adhere\n- Deprecated/documented all functions using `eval` or `new Function` and other bad practices\n- Fixed ~50 failed tests that were previously marked as skipped (still a few to go)\n- Made it so that all functions can be required individually via npm\n- Made it so that dependencies between functions are now handled via CommonJS `require`\n- Refactored the utility class\n- Removed `_workbench` and `_experimental` folders. They are available for reference in 1.3.2 but making them harder to find for newcomers should help avoid complaints and confusion. If you want to experiment, we can use local files or branches for that when it's time to collaborate.\n- Use [Jekyll instead of Octopress](/blog/2016/04/jekyll/) to build our website\n- We can use `$global` that works in both Browsers and Node.js\n- We can write any function in ES6 now\n\nI understand this can feel like a very radical shift, especially when there's talk of deprecating functions. Perhaps functions that you wrote with blood sweat and tears. I want to voice a word of appreciation to you as a contributor, for the hard work that went into crafting this project. Rewriting a language in another language is no small task, and folks tend to forget that in order to port a different language to JavaScript, we had to write a lot of JavaScript. \n\nIn trying to port the entire language instead of limiting ourselves to more sensible bits, we may have ventured into some darker areas of engineering. But I for one am very proud that we have built a welcoming and friendly community where over the coarse of 9 years, over hundreds of developers have come together to learn JavaScript and help others learn it. I for one have become much more intimate with JavaScript's delicacies because of it, and I know many contributors commenting on eat-other's work, with me. I will accept both victory and defeat.\n\nAs a contributor of this project, I hope Locutus brings the changes that can re-spark your interest as well as it has mine, and I hope you'll come with me on this new adventure, where standard libraries full of functions are just [screaming to be ported](https://golang.org/pkg/strings/). This time we'll be a little bit older. A little bit wiser, prudent, and steer clear of the darker areas. But we'll have just as much fun challenging ourselves and learning other languages : )\n\nFor all those that can forgive me for my past mistakes, as well as perhaps deprecating some of your work: you can try Locutus right now if you want:\n\n```bash\n$ npm install --save --save-exact locutus\n$ vim index.js\n```\n\n```javascript\nvar echo = require('locutus/php/strings/echo')\nvar capwords = require('locutus/python/string/capwords')\nvar strings = require('locutus/golang/strings')\nvar rubyMath = require('locutus/ruby/Math')\nvar c = require('locutus/c')\n\necho(capwords('locutus'))\necho(strings.Contains('Locutus', 'us'))\necho(rubyMath.acos(0.3))\necho(c.math.abs(-5))\n```\n\n```bash\n$ node index.js\nLocutus\ntrue\n1.266103672779499\n5\n```\n\nIf you want to help Locutus, our newly added languages don't have much meat on the bones yet, so it would be glorious to see you could assimilate more functions.\n\nAlso, there are plenty ideas in our \n[Backlog](https://github.com/kvz/locutus/blob/master/CHANGELOG.md#Backlog)\nthat we'd love help with, so there's just one thing left to say.\n\n[To the GitHubs](https://github.com/kvz/locutus)!\n\n[Kevin](http://twitter.com/kvz)\n","slug":"announcing-locutus","published":1,"date":"2016-04-21T00:00:00.000Z","updated":"2016-05-01T09:08:22.000Z","_id":"cinoaxk6c000wh39yeodwzeoz","photos":[],"link":"","content":"<p>As briefly spoiled in <a href=\"/blog/2016/04/20/breaking-bc/\">Breaking Backwards Compatibility</a>,<br>today I’m launching a big iteration of php.js. It includes so<br><a href=\"https://github.com/kvz/locutus/pull/290\" target=\"_blank\" rel=\"external\">many</a> breaking<br><a href=\"https://github.com/kvz/locutus/blob/master/CHANGELOG.md#v200\" target=\"_blank\" rel=\"external\">changes</a>, that after<br>9 years, php.js is dead. Out of its ashes though, rises: <strong>Locutus</strong></p>\n<p>Locutus will have the same mission: </p>\n<blockquote>\n<p>Offer a community platform to collaborate on JavaScript counterparts<br>to functions from other languages, for fun and educational purposes.</p>\n</blockquote>\n<p>But Locutus will also be different on key points. Locutus will focus on:</p>\n<ul>\n<li>Expanding to other languages, such as C, Go, Python, Ruby</li>\n<li>Hack-free porting, meaning we’ll just port individual functions from the standard libraries and avoid: language features, environment, data-types, configuration</li>\n<li>The educational aspect and the intellectual challenge</li>\n<li>Using npm as the distribution platform of choice, so you can do <code>var strings = require(&#39;golang/strings&#39;)</code>and in case the browser is your target platform, use <a href=\"http://browserify.org/\" target=\"_blank\" rel=\"external\">Browserify</a>, <a href=\"http://rollupjs.org/\" target=\"_blank\" rel=\"external\">rollup.js</a>, or <a href=\"https://webpack.github.io/\" target=\"_blank\" rel=\"external\">webpack</a>.</li>\n<li>Trying to deliver functions that are interoperable browsers and Node.js, but allowing to target just one platform when that saves us from writing wieldy code, documenting this with a <code>note</code>.</li>\n</ul>\n<p>While still a work in progress, I’ve already deprecated and updated many functions that do not adhere to this renewed focus. If you spot a function I overlooked, let me know and we’ll fix.</p>\n<p>I feel these changes were needed to regain the motivation required for leading this project. For a long time I’ve struggled with it in its old form. I rarely did maintenance runs anymore, and when I did, it was guilt-driven, rather than by curiosity or excitement - the things that got me started.</p>\n<p>There are several reasons why I believe my intrinsic motivation had fled:</p>\n<ul>\n<li>The things that could reasonably be ported, had been ported. The things that probably should not have been ported, had been ported too - and were now mostly good for provoking purists and inducing maintenance load. Not very rewarding.</li>\n<li>Misuse of the project. I shed approximately 451 tears when people started using our project so they would not have to learn JavaScript and could continue PHP-ing in the browser, using 2.1MB, 451-function, ready-to-rock spaceship bundles in the browser. I made efforts to <a href=\"/blog/2013/05/a-word-on-the-focus-of-php-dot-js/\">stop newcomers from doing that</a>. I shed approximately 2.1 tears from the angry notes they then sent me.</li>\n<li>I started a new company and protocol which took much time by itself, but also meant writing solely in other programming languages (you’ll find no bitterness here, but it did mean I had less time to care about PHP oriented projects)</li>\n<li>Being a visible project in the broader development community with people coming from many different programming languages, I found myself at the focal point of PHP hate was fashionable for a while.   </li>\n<li>9 years is a long time, especially in tech. Node.js did not exist, <a href=\"https://www.w3counter.com/globalstats.php?date=2007-05-30\" target=\"_blank\" rel=\"external\">everyone was on IE6</a>, and JavaScript was mostly used for raising <code>alert()</code>s. Going from age 23 to 32, I have changed my stance on pretty much all things. This includes also that I have abandoned the idea that our project could maybe be used as an interactive debugging tool, or maybe even to run entire scripts from other languages on V8. I pursued goal for some time with the thirst of a youngster, and while we had some success with this, it drove me to me write and accept hacks that have likely secured my special place in hell. Projects like <a href=\"https://github.com/gopherjs/gopherjs\" target=\"_blank\" rel=\"external\">GopherJS</a> or <a href=\"http://kripken.github.io/emscripten-site/\" target=\"_blank\" rel=\"external\">Emscripten</a> offer viable routes to that end, our approach isn’t fit for that purpose.</li>\n</ul>\n<p>Knowing I fell short as a project lead, I tried to recruit fresh blood to replace me. However, even though there is an active community of contributors, there were no volunteers for this position. For a while I considered declaring <code>[UNMAINTAINED]</code>, but I still feel too great a deal of duty and responsibility towards the contributors.</p>\n<p>So instead I thought what it would take to get my mojo back. Having analyzed<br>what had crippled it over the past 9 years, I decided to make the changes that allow it to flow<br>back again.</p>\n<p>If you are interested in the nuts and bolts, these these are a few things I’ve been secretly<br>working on to clean up our codebase and breathe new live into it. I have:</p>\n<ul>\n<li>Added (generated) Mocha tests for every functions, instead of our own test framework</li>\n<li>Added a CONTRIBUTORS guide as well as New Issue and Pull Request templates so we can be more efficient using GitHub</li>\n<li>Added native JSON, base64, sha1, md5 support when available</li>\n<li>Asked <a href=\"http://troydodd.deviantart.com/art/Locutus-of-Borg-217586598\" target=\"_blank\" rel=\"external\">Troy Dodd</a> if we could use his stunning Locutus artwork to be our avatar (and he said yes : )</li>\n<li>Assimilated a dozen of example functions that showcase how we could port 4 new languages to JavaScript</li>\n<li>Changed all functions to make them adhere to the <a href=\"http://standardjs.com/\" target=\"_blank\" rel=\"external\">JavaScript Standard Style</a> and have a max line length of 100. Travis CI will fail when new additions do not adhere</li>\n<li>Deprecated/documented all functions using <code>eval</code> or <code>new Function</code> and other bad practices</li>\n<li>Fixed ~50 failed tests that were previously marked as skipped (still a few to go)</li>\n<li>Made it so that all functions can be required individually via npm</li>\n<li>Made it so that dependencies between functions are now handled via CommonJS <code>require</code></li>\n<li>Refactored the utility class</li>\n<li>Removed <code>_workbench</code> and <code>_experimental</code> folders. They are available for reference in 1.3.2 but making them harder to find for newcomers should help avoid complaints and confusion. If you want to experiment, we can use local files or branches for that when it’s time to collaborate.</li>\n<li>Use <a href=\"/blog/2016/04/jekyll/\">Jekyll instead of Octopress</a> to build our website</li>\n<li>We can use <code>$global</code> that works in both Browsers and Node.js</li>\n<li>We can write any function in ES6 now</li>\n</ul>\n<p>I understand this can feel like a very radical shift, especially when there’s talk of deprecating functions. Perhaps functions that you wrote with blood sweat and tears. I want to voice a word of appreciation to you as a contributor, for the hard work that went into crafting this project. Rewriting a language in another language is no small task, and folks tend to forget that in order to port a different language to JavaScript, we had to write a lot of JavaScript. </p>\n<p>In trying to port the entire language instead of limiting ourselves to more sensible bits, we may have ventured into some darker areas of engineering. But I for one am very proud that we have built a welcoming and friendly community where over the coarse of 9 years, over hundreds of developers have come together to learn JavaScript and help others learn it. I for one have become much more intimate with JavaScript’s delicacies because of it, and I know many contributors commenting on eat-other’s work, with me. I will accept both victory and defeat.</p>\n<p>As a contributor of this project, I hope Locutus brings the changes that can re-spark your interest as well as it has mine, and I hope you’ll come with me on this new adventure, where standard libraries full of functions are just <a href=\"https://golang.org/pkg/strings/\" target=\"_blank\" rel=\"external\">screaming to be ported</a>. This time we’ll be a little bit older. A little bit wiser, prudent, and steer clear of the darker areas. But we’ll have just as much fun challenging ourselves and learning other languages : )</p>\n<p>For all those that can forgive me for my past mistakes, as well as perhaps deprecating some of your work: you can try Locutus right now if you want:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save --save-exact locutus</span><br><span class=\"line\">$ vim index.js</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> echo = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/php/strings/echo'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> capwords = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/python/string/capwords'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> strings = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/golang/strings'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> rubyMath = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/ruby/Math'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/c'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">echo(capwords(<span class=\"string\">'locutus'</span>))</span><br><span class=\"line\">echo(strings.Contains(<span class=\"string\">'Locutus'</span>, <span class=\"string\">'us'</span>))</span><br><span class=\"line\">echo(rubyMath.acos(<span class=\"number\">0.3</span>))</span><br><span class=\"line\">echo(c.math.abs(<span class=\"number\">-5</span>))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node index.js</span><br><span class=\"line\">Locutus</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\">1.266103672779499</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<p>If you want to help Locutus, our newly added languages don’t have much meat on the bones yet, so it would be glorious to see you could assimilate more functions.</p>\n<p>Also, there are plenty ideas in our<br><a href=\"https://github.com/kvz/locutus/blob/master/CHANGELOG.md#Backlog\" target=\"_blank\" rel=\"external\">Backlog</a><br>that we’d love help with, so there’s just one thing left to say.</p>\n<p><a href=\"https://github.com/kvz/locutus\" target=\"_blank\" rel=\"external\">To the GitHubs</a>!</p>\n<p><a href=\"http://twitter.com/kvz\" target=\"_blank\" rel=\"external\">Kevin</a></p>\n","excerpt":"","more":"<p>As briefly spoiled in <a href=\"/blog/2016/04/20/breaking-bc/\">Breaking Backwards Compatibility</a>,<br>today I’m launching a big iteration of php.js. It includes so<br><a href=\"https://github.com/kvz/locutus/pull/290\">many</a> breaking<br><a href=\"https://github.com/kvz/locutus/blob/master/CHANGELOG.md#v200\">changes</a>, that after<br>9 years, php.js is dead. Out of its ashes though, rises: <strong>Locutus</strong></p>\n<p>Locutus will have the same mission: </p>\n<blockquote>\n<p>Offer a community platform to collaborate on JavaScript counterparts<br>to functions from other languages, for fun and educational purposes.</p>\n</blockquote>\n<p>But Locutus will also be different on key points. Locutus will focus on:</p>\n<ul>\n<li>Expanding to other languages, such as C, Go, Python, Ruby</li>\n<li>Hack-free porting, meaning we’ll just port individual functions from the standard libraries and avoid: language features, environment, data-types, configuration</li>\n<li>The educational aspect and the intellectual challenge</li>\n<li>Using npm as the distribution platform of choice, so you can do <code>var strings = require(&#39;golang/strings&#39;)</code>and in case the browser is your target platform, use <a href=\"http://browserify.org/\">Browserify</a>, <a href=\"http://rollupjs.org/\">rollup.js</a>, or <a href=\"https://webpack.github.io/\">webpack</a>.</li>\n<li>Trying to deliver functions that are interoperable browsers and Node.js, but allowing to target just one platform when that saves us from writing wieldy code, documenting this with a <code>note</code>.</li>\n</ul>\n<p>While still a work in progress, I’ve already deprecated and updated many functions that do not adhere to this renewed focus. If you spot a function I overlooked, let me know and we’ll fix.</p>\n<p>I feel these changes were needed to regain the motivation required for leading this project. For a long time I’ve struggled with it in its old form. I rarely did maintenance runs anymore, and when I did, it was guilt-driven, rather than by curiosity or excitement - the things that got me started.</p>\n<p>There are several reasons why I believe my intrinsic motivation had fled:</p>\n<ul>\n<li>The things that could reasonably be ported, had been ported. The things that probably should not have been ported, had been ported too - and were now mostly good for provoking purists and inducing maintenance load. Not very rewarding.</li>\n<li>Misuse of the project. I shed approximately 451 tears when people started using our project so they would not have to learn JavaScript and could continue PHP-ing in the browser, using 2.1MB, 451-function, ready-to-rock spaceship bundles in the browser. I made efforts to <a href=\"/blog/2013/05/a-word-on-the-focus-of-php-dot-js/\">stop newcomers from doing that</a>. I shed approximately 2.1 tears from the angry notes they then sent me.</li>\n<li>I started a new company and protocol which took much time by itself, but also meant writing solely in other programming languages (you’ll find no bitterness here, but it did mean I had less time to care about PHP oriented projects)</li>\n<li>Being a visible project in the broader development community with people coming from many different programming languages, I found myself at the focal point of PHP hate was fashionable for a while.   </li>\n<li>9 years is a long time, especially in tech. Node.js did not exist, <a href=\"https://www.w3counter.com/globalstats.php?date=2007-05-30\">everyone was on IE6</a>, and JavaScript was mostly used for raising <code>alert()</code>s. Going from age 23 to 32, I have changed my stance on pretty much all things. This includes also that I have abandoned the idea that our project could maybe be used as an interactive debugging tool, or maybe even to run entire scripts from other languages on V8. I pursued goal for some time with the thirst of a youngster, and while we had some success with this, it drove me to me write and accept hacks that have likely secured my special place in hell. Projects like <a href=\"https://github.com/gopherjs/gopherjs\">GopherJS</a> or <a href=\"http://kripken.github.io/emscripten-site/\">Emscripten</a> offer viable routes to that end, our approach isn’t fit for that purpose.</li>\n</ul>\n<p>Knowing I fell short as a project lead, I tried to recruit fresh blood to replace me. However, even though there is an active community of contributors, there were no volunteers for this position. For a while I considered declaring <code>[UNMAINTAINED]</code>, but I still feel too great a deal of duty and responsibility towards the contributors.</p>\n<p>So instead I thought what it would take to get my mojo back. Having analyzed<br>what had crippled it over the past 9 years, I decided to make the changes that allow it to flow<br>back again.</p>\n<p>If you are interested in the nuts and bolts, these these are a few things I’ve been secretly<br>working on to clean up our codebase and breathe new live into it. I have:</p>\n<ul>\n<li>Added (generated) Mocha tests for every functions, instead of our own test framework</li>\n<li>Added a CONTRIBUTORS guide as well as New Issue and Pull Request templates so we can be more efficient using GitHub</li>\n<li>Added native JSON, base64, sha1, md5 support when available</li>\n<li>Asked <a href=\"http://troydodd.deviantart.com/art/Locutus-of-Borg-217586598\">Troy Dodd</a> if we could use his stunning Locutus artwork to be our avatar (and he said yes : )</li>\n<li>Assimilated a dozen of example functions that showcase how we could port 4 new languages to JavaScript</li>\n<li>Changed all functions to make them adhere to the <a href=\"http://standardjs.com/\">JavaScript Standard Style</a> and have a max line length of 100. Travis CI will fail when new additions do not adhere</li>\n<li>Deprecated/documented all functions using <code>eval</code> or <code>new Function</code> and other bad practices</li>\n<li>Fixed ~50 failed tests that were previously marked as skipped (still a few to go)</li>\n<li>Made it so that all functions can be required individually via npm</li>\n<li>Made it so that dependencies between functions are now handled via CommonJS <code>require</code></li>\n<li>Refactored the utility class</li>\n<li>Removed <code>_workbench</code> and <code>_experimental</code> folders. They are available for reference in 1.3.2 but making them harder to find for newcomers should help avoid complaints and confusion. If you want to experiment, we can use local files or branches for that when it’s time to collaborate.</li>\n<li>Use <a href=\"/blog/2016/04/jekyll/\">Jekyll instead of Octopress</a> to build our website</li>\n<li>We can use <code>$global</code> that works in both Browsers and Node.js</li>\n<li>We can write any function in ES6 now</li>\n</ul>\n<p>I understand this can feel like a very radical shift, especially when there’s talk of deprecating functions. Perhaps functions that you wrote with blood sweat and tears. I want to voice a word of appreciation to you as a contributor, for the hard work that went into crafting this project. Rewriting a language in another language is no small task, and folks tend to forget that in order to port a different language to JavaScript, we had to write a lot of JavaScript. </p>\n<p>In trying to port the entire language instead of limiting ourselves to more sensible bits, we may have ventured into some darker areas of engineering. But I for one am very proud that we have built a welcoming and friendly community where over the coarse of 9 years, over hundreds of developers have come together to learn JavaScript and help others learn it. I for one have become much more intimate with JavaScript’s delicacies because of it, and I know many contributors commenting on eat-other’s work, with me. I will accept both victory and defeat.</p>\n<p>As a contributor of this project, I hope Locutus brings the changes that can re-spark your interest as well as it has mine, and I hope you’ll come with me on this new adventure, where standard libraries full of functions are just <a href=\"https://golang.org/pkg/strings/\">screaming to be ported</a>. This time we’ll be a little bit older. A little bit wiser, prudent, and steer clear of the darker areas. But we’ll have just as much fun challenging ourselves and learning other languages : )</p>\n<p>For all those that can forgive me for my past mistakes, as well as perhaps deprecating some of your work: you can try Locutus right now if you want:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install --save --save-exact locutus</span><br><span class=\"line\">$ vim index.js</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> echo = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/php/strings/echo'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> capwords = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/python/string/capwords'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> strings = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/golang/strings'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> rubyMath = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/ruby/Math'</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">require</span>(<span class=\"string\">'locutus/c'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">echo(capwords(<span class=\"string\">'locutus'</span>))</span><br><span class=\"line\">echo(strings.Contains(<span class=\"string\">'Locutus'</span>, <span class=\"string\">'us'</span>))</span><br><span class=\"line\">echo(rubyMath.acos(<span class=\"number\">0.3</span>))</span><br><span class=\"line\">echo(c.math.abs(<span class=\"number\">-5</span>))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node index.js</span><br><span class=\"line\">Locutus</span><br><span class=\"line\"><span class=\"literal\">true</span></span><br><span class=\"line\">1.266103672779499</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<p>If you want to help Locutus, our newly added languages don’t have much meat on the bones yet, so it would be glorious to see you could assimilate more functions.</p>\n<p>Also, there are plenty ideas in our<br><a href=\"https://github.com/kvz/locutus/blob/master/CHANGELOG.md#Backlog\">Backlog</a><br>that we’d love help with, so there’s just one thing left to say.</p>\n<p><a href=\"https://github.com/kvz/locutus\">To the GitHubs</a>!</p>\n<p><a href=\"http://twitter.com/kvz\">Kevin</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cinoaxk5l0002h39yntfnkc03","tag_id":"cinocu8is0000qi9yeqlcj8ee","_id":"cinocu8iu0001qi9yqxdb21ag"},{"post_id":"cinoaxk5h0001h39y5cdebcjm","tag_id":"cinocu8os0002qi9y1p6030u5","_id":"cinocu8ot0005qi9y3z88eepa"},{"post_id":"cinoaxk5h0001h39y5cdebcjm","tag_id":"cinocu8os0003qi9yz53h0ltu","_id":"cinocu8ot0006qi9y1p1548wu"},{"post_id":"cinoaxk5h0001h39y5cdebcjm","tag_id":"cinocu8ot0004qi9ypz151cyj","_id":"cinocu8ou0007qi9y7jnqatg1"},{"post_id":"cinoaxk5t0008h39yakpvmyyr","tag_id":"cinocu8ot0004qi9ypz151cyj","_id":"cinocu8s40009qi9yv6v3a75s"},{"post_id":"cinoaxk5p0005h39yc51k81rv","tag_id":"cinocu8s00008qi9ywzo4q02j","_id":"cinocu8sm000cqi9yqcyaw6m4"},{"post_id":"cinoaxk5p0005h39yc51k81rv","tag_id":"cinocu8s5000aqi9y1hnhgtyl","_id":"cinocu8sm000dqi9yp1n0lw9c"},{"post_id":"cinoaxk5o0004h39ywd2nl14r","tag_id":"cinocu8s00008qi9ywzo4q02j","_id":"cinocu8t0000fqi9ywxgw8e2h"},{"post_id":"cinoaxk5o0004h39ywd2nl14r","tag_id":"cinocu8s5000aqi9y1hnhgtyl","_id":"cinocu8t0000gqi9ynbv98m1q"},{"post_id":"cinoaxk5r0006h39yd7p0p8ha","tag_id":"cinocu8os0002qi9y1p6030u5","_id":"cinocu8vd000jqi9ypttagf8s"},{"post_id":"cinoaxk5r0006h39yd7p0p8ha","tag_id":"cinocu8os0003qi9yz53h0ltu","_id":"cinocu8vf000kqi9yc7x12vxg"},{"post_id":"cinoaxk5r0006h39yd7p0p8ha","tag_id":"cinocu8v8000hqi9ygt8f0qc3","_id":"cinocu8vg000mqi9yl04g2r03"},{"post_id":"cinoaxk5r0006h39yd7p0p8ha","tag_id":"cinocu8ot0004qi9ypz151cyj","_id":"cinocu8vg000nqi9ye2sbf1lu"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8ot0004qi9ypz151cyj","_id":"cinocu8wf000sqi9yyoecnjqf"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8vb000iqi9yb2yq70v6","_id":"cinocu8wf000tqi9yxpem0qnk"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8vf000lqi9ytstq29z8","_id":"cinocu8wf000uqi9yu72qelh5"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8w7000oqi9ypiaqeees","_id":"cinocu8wf000vqi9ym1gbl7yw"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8w9000pqi9y320skvwp","_id":"cinocu8wf000wqi9yg57dtjae"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8wb000qqi9yhdi42smc","_id":"cinocu8wf000xqi9yk41w1oe8"},{"post_id":"cinoaxk6c000wh39yeodwzeoz","tag_id":"cinocu8wd000rqi9yx7znhgae","_id":"cinocu8wf000yqi9ycvt1b2n9"}],"Tag":[{"name":"focus","_id":"cinocu8is0000qi9yeqlcj8ee"},{"name":"website","_id":"cinocu8os0002qi9y1p6030u5"},{"name":"octopress","_id":"cinocu8os0003qi9yz53h0ltu"},{"name":"future","_id":"cinocu8ot0004qi9ypz151cyj"},{"name":"coding style","_id":"cinocu8s00008qi9ywzo4q02j"},{"name":"convention","_id":"cinocu8s5000aqi9y1hnhgtyl"},{"name":"jekyll","_id":"cinocu8v8000hqi9ygt8f0qc3"},{"name":"js","_id":"cinocu8vb000iqi9yb2yq70v6"},{"name":"golang","_id":"cinocu8vf000lqi9ytstq29z8"},{"name":"python","_id":"cinocu8w7000oqi9ypiaqeees"},{"name":"ruby","_id":"cinocu8w9000pqi9y320skvwp"},{"name":"php","_id":"cinocu8wb000qqi9yhdi42smc"},{"name":"c","_id":"cinocu8wd000rqi9yx7znhgae"}]}}