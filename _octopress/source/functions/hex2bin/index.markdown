---
layout: page
title: "JavaScript hex2bin function"
comments: true
sharing: true
footer: true
alias:
- /functions/view/hex2bin:
- /functions/view/hex2bin
- /functions/view/
- /functions/hex2bin:
- /functions/
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's hex2bin

{% codeblock strings/hex2bin.js lang:js https://raw.github.com/kvz/phpjs/master/functions/strings/hex2bin.js raw on github %}
function hex2bin (s) {
  //  discuss at: http://phpjs.org/functions/hex2bin/
  // original by: Dumitru Uzun (http://duzun.me)
  //   example 1: hex2bin('44696d61');
  //   returns 1: 'Dima'
  //   example 2: hex2bin('00');
  //   returns 2: '\x00'
  //   example 3: hex2bin('2f1q')
  //   returns 3: false

  var ret = [],
    i = 0,
    l

  s += ''

  for (l = s.length; i < l; i += 2) {
    var c = parseInt(s.substr(i, 1), 16)
    var k = parseInt(s.substr(i + 1, 1), 16)
    if (isNaN(c) || isNaN(k)) return false
    ret.push((c << 4) | k)
  }

  return String.fromCharCode.apply(String, ret)
}
{% endcodeblock %}

 - [Raw function on GitHub](https://github.com/kvz/phpjs/blob/master/functions/strings/hex2bin.js)

Please note that php.js uses JavaScript objects as substitutes for PHP arrays, they are 
the closest match to this hashtable-like data structure. 

Please also note that php.js offers community built functions and goes by the 
[McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d). We'll put online 
functions that are far from perfect, in the hopes to spark better contributions. 
Do you have one? Then please just: 

 - [Edit on GitHub](https://github.com/kvz/phpjs/edit/master/functions/strings/hex2bin.js)


### Other PHP functions in the strings extension
{% render_partial _includes/custom/strings.html %}
