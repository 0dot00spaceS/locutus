---
layout: page
title: "JavaScript utf8_decode function"
comments: true
sharing: true
footer: true
alias:
- /functions/view/utf8_decode:576
- /functions/view/utf8_decode
- /functions/view/576
- /functions/utf8_decode:576
- /functions/576
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's utf8_decode

{% codeblock xml/utf8_decode.js lang:js https://raw.github.com/kvz/phpjs/master/functions/xml/utf8_decode.js raw on github %}
function utf8_decode (str_data) {
  //  discuss at: http://phpjs.org/functions/utf8_decode/
  // original by: Webtoolkit.info (http://www.webtoolkit.info/)
  //    input by: Aman Gupta
  //    input by: Brett Zamir (http://brett-zamir.me)
  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // improved by: Norman "zEh" Fuchs
  // bugfixed by: hitwork
  // bugfixed by: Onno Marsman
  // bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // bugfixed by: kirilloid
  // bugfixed by: w35l3y (http://www.wesley.eti.br)
  //   example 1: utf8_decode('Kevin van Zonneveld');
  //   returns 1: 'Kevin van Zonneveld'

  var tmp_arr = [],
    i = 0,
    c1 = 0,
    seqlen = 0

  str_data += ''

  while (i < str_data.length) {
    c1 = str_data.charCodeAt(i) & 0xFF
    seqlen = 0

    // http://en.wikipedia.org/wiki/UTF-8#Codepage_layout
    if (c1 <= 0xBF) {
      c1 = (c1 & 0x7F)
      seqlen = 1
    } else if (c1 <= 0xDF) {
      c1 = (c1 & 0x1F)
      seqlen = 2
    } else if (c1 <= 0xEF) {
      c1 = (c1 & 0x0F)
      seqlen = 3
    } else {
      c1 = (c1 & 0x07)
      seqlen = 4
    }

    for (var ai = 1; ai < seqlen; ++ai) {
      c1 = ((c1 << 0x06) | (str_data.charCodeAt(ai + i) & 0x3F))
    }

    if (seqlen == 4) {
      c1 -= 0x10000
      tmp_arr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)), String.fromCharCode(0xDC00 | (c1 & 0x3FF)))
    } else {
      tmp_arr.push(String.fromCharCode(c1))
    }

    i += seqlen
  }

  return tmp_arr.join('')
}
{% endcodeblock %}

 - [Raw function on GitHub](https://github.com/kvz/phpjs/blob/master/functions/xml/utf8_decode.js)

Please note that php.js uses JavaScript objects as substitutes for PHP arrays, they are 
the closest match to this hashtable-like data structure. 

Please also note that php.js offers community built functions and goes by the 
[McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d). We'll put online 
functions that are far from perfect, in the hopes to spark better contributions. 
Do you have one? Then please just: 

 - [Edit on GitHub](https://github.com/kvz/phpjs/edit/master/functions/xml/utf8_decode.js)


### Other PHP functions in the xml extension
{% render_partial _includes/custom/xml.html %}
