// warning: This file is auto generated by `npm run build:tests`, do not edit by hand
var XMLHttpRequest = {} // eslint-disable-line no-native-reassign
var window = { // eslint-disable-line no-native-reassign
  window: {},
  document: {
    lastModified: 1388954399,
    getElementsByTagName: function () { return [] }
  },
  location: {
    href: ""
  }
}
process.env.TZ = 'UTC'
var expect = require('chai').expect
var ini_set = require('/Users/kvz/code/phpjs/src/php/info/ini_set') // eslint-disable-line no-unused-vars
var ini_get = require('/Users/kvz/code/phpjs/src/php/info/ini_get') // eslint-disable-line no-unused-vars
var array_splice = require('/Users/kvz/code/phpjs/src/php/array/array_splice.js')

describe('src/php/array/array_splice.js', function () {
  it.skip('should pass example 1', function (done) {
    var $input = {4: "red", 'abc': "green", 2: "blue", 'dud': "yellow"}
    array_splice($input, 2)
    var expected = {0: "blue", 'dud': "yellow"}
var $input = {4: "red", 'abc': "green", 2: "blue", 'dud': "yellow"}
    var result = array_splice($input, 2)
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 2', function (done) {
    var $input = ["red", "green", "blue", "yellow"]
    array_splice($input, 3, 0, "purple")
    var expected = []
var $input = ["red", "green", "blue", "yellow"]
    var result = array_splice($input, 3, 0, "purple")
    expect(result).to.deep.equal(expected)
    done()
  })
  it('should pass example 3', function (done) {
    var $input = ["red", "green", "blue", "yellow"]
    array_splice($input, -1, 1, ["black", "maroon"])
    var expected = ["yellow"]
var $input = ["red", "green", "blue", "yellow"]
    var result = array_splice($input, -1, 1, ["black", "maroon"])
    expect(result).to.deep.equal(expected)
    done()
  })
})